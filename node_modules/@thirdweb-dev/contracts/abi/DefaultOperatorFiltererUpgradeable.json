{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "operatorRestriction()": "504c6e01",
    "setOperatorRestriction(bool)": "32f0cd64",
    "subscribeToRegistry(address)": "57fd8455"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":\"DefaultOperatorFiltererUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": "DefaultOperatorFiltererUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
    "id": 34804,
    "exportedSymbols": {
      "DefaultOperatorFiltererUpgradeable": [
        34803
      ],
      "OperatorFiltererUpgradeable": [
        38318
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:672:118",
    "nodes": [
      {
        "id": 34764,
        "nodeType": "PragmaDirective",
        "src": "39:23:118",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 34766,
        "nodeType": "ImportDirective",
        "src": "86:80:118",
        "nodes": [],
        "absolutePath": "contracts/extension/OperatorFiltererUpgradeable.sol",
        "file": "./OperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34804,
        "sourceUnit": 38319,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34765,
              "name": "OperatorFiltererUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38318,
              "src": "95:27:118",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_OperatorFiltererUpgradeable_$38318_$",
                "typeString": "type(contract OperatorFiltererUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34803,
        "nodeType": "ContractDefinition",
        "src": "168:542:118",
        "nodes": [
          {
            "id": 34774,
            "nodeType": "VariableDeclaration",
            "src": "258:91:118",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "DEFAULT_SUBSCRIPTION",
            "nameLocation": "275:20:118",
            "scope": 34803,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34769,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:118",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833636336436464413736306237396241666130386446343145434641323234663831306443654236",
                  "id": 34772,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "306:42:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3cc6CddA760b79bAfa08dF41ECFA224f810dCeB6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 34771,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "298:7:118",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 34770,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:118",
                  "typeDescriptions": {}
                }
              },
              "id": 34773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "298:51:118",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 34785,
            "nodeType": "FunctionDefinition",
            "src": "356:147:118",
            "nodes": [],
            "body": {
              "id": 34784,
              "nodeType": "Block",
              "src": "407:96:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34780,
                        "name": "DEFAULT_SUBSCRIPTION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34774,
                        "src": "469:20:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "491:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34777,
                        "name": "OperatorFiltererUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38318,
                        "src": "417:27:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OperatorFiltererUpgradeable_$38318_$",
                          "typeString": "type(contract OperatorFiltererUpgradeable)"
                        }
                      },
                      "id": 34779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__OperatorFilterer_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38177,
                      "src": "417:51:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 34782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:79:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34783,
                  "nodeType": "ExpressionStatement",
                  "src": "417:79:118"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__DefaultOperatorFilterer_init",
            "nameLocation": "365:30:118",
            "parameters": {
              "id": 34775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:2:118"
            },
            "returnParameters": {
              "id": 34776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:118"
            },
            "scope": 34803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34802,
            "nodeType": "FunctionDefinition",
            "src": "509:199:118",
            "nodes": [],
            "body": {
              "id": 34801,
              "nodeType": "Block",
              "src": "570:138:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34791,
                          "name": "_canSetOperatorRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37993,
                          "src": "588:26:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 34792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "588:28:118",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f2073756273637269626520746f2072656769737472792e",
                        "id": 34793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:42:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7a49c1e01cb376735e79079ae7983cecb8ef639ce93325f4d67eda2b40df06e",
                          "typeString": "literal_string \"Not authorized to subscribe to registry.\""
                        },
                        "value": "Not authorized to subscribe to registry."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7a49c1e01cb376735e79079ae7983cecb8ef639ce93325f4d67eda2b40df06e",
                          "typeString": "literal_string \"Not authorized to subscribe to registry.\""
                        }
                      ],
                      "id": 34790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "580:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:81:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34795,
                  "nodeType": "ExpressionStatement",
                  "src": "580:81:118"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34797,
                        "name": "_subscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34787,
                        "src": "681:13:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 34798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "696:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34796,
                      "name": "_register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38317,
                      "src": "671:9:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 34799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:30:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34800,
                  "nodeType": "ExpressionStatement",
                  "src": "671:30:118"
                }
              ]
            },
            "functionSelector": "57fd8455",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribeToRegistry",
            "nameLocation": "518:19:118",
            "parameters": {
              "id": 34788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34787,
                  "mutability": "mutable",
                  "name": "_subscription",
                  "nameLocation": "546:13:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 34802,
                  "src": "538:21:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:23:118"
            },
            "returnParameters": {
              "id": 34789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:0:118"
            },
            "scope": 34803,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 34767,
              "name": "OperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38318,
              "src": "224:27:118"
            },
            "id": 34768,
            "nodeType": "InheritanceSpecifier",
            "src": "224:27:118"
          }
        ],
        "canonicalName": "DefaultOperatorFiltererUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          34803,
          38318,
          37994,
          50395
        ],
        "name": "DefaultOperatorFiltererUpgradeable",
        "nameLocation": "186:34:118",
        "scope": 34804,
        "usedErrors": [
          38158
        ]
      }
    ],
    "license": "Apache 2.0"
  },
  "id": 118
}