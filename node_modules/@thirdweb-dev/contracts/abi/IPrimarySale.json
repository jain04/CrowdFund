{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "primarySaleRecipient()": "079fe40e",
    "setPrimarySaleRecipient(address)": "6f4f2837"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"}},\"kind\":\"dev\",\"methods\":{\"primarySaleRecipient()\":{\"details\":\"The adress that receives all primary sales value.\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Lets a module admin set the default recipient of all primary sales.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about  primary sales, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IPrimarySale.sol\":\"IPrimarySale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "primarySaleRecipient()": {
            "details": "The adress that receives all primary sales value."
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Lets a module admin set the default recipient of all primary sales."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/extension/interface/IPrimarySale.sol": "IPrimarySale"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/extension/interface/IPrimarySale.sol",
    "id": 50581,
    "exportedSymbols": {
      "IPrimarySale": [
        50580
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:773:192",
    "nodes": [
      {
        "id": 50561,
        "nodeType": "PragmaDirective",
        "src": "39:23:192",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 50580,
        "nodeType": "ContractDefinition",
        "src": "378:433:192",
        "nodes": [
          {
            "id": 50568,
            "nodeType": "FunctionDefinition",
            "src": "470:64:192",
            "nodes": [],
            "documentation": {
              "id": 50563,
              "nodeType": "StructuredDocumentation",
              "src": "407:58:192",
              "text": "@dev The adress that receives all primary sales value."
            },
            "functionSelector": "079fe40e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "primarySaleRecipient",
            "nameLocation": "479:20:192",
            "parameters": {
              "id": 50564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:2:192"
            },
            "returnParameters": {
              "id": 50567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50568,
                  "src": "525:7:192",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:192",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:9:192"
            },
            "scope": 50580,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50574,
            "nodeType": "FunctionDefinition",
            "src": "621:66:192",
            "nodes": [],
            "documentation": {
              "id": 50569,
              "nodeType": "StructuredDocumentation",
              "src": "540:76:192",
              "text": "@dev Lets a module admin set the default recipient of all primary sales."
            },
            "functionSelector": "6f4f2837",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPrimarySaleRecipient",
            "nameLocation": "630:23:192",
            "parameters": {
              "id": 50572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50571,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "662:14:192",
                  "nodeType": "VariableDeclaration",
                  "scope": 50574,
                  "src": "654:22:192",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:192",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:24:192"
            },
            "returnParameters": {
              "id": 50573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:192"
            },
            "scope": 50580,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50579,
            "nodeType": "EventDefinition",
            "src": "748:61:192",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50575,
              "nodeType": "StructuredDocumentation",
              "src": "693:50:192",
              "text": "@dev Emitted when a new sale recipient is set."
            },
            "name": "PrimarySaleRecipientUpdated",
            "nameLocation": "754:27:192",
            "parameters": {
              "id": 50578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50577,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "798:9:192",
                  "nodeType": "VariableDeclaration",
                  "scope": 50579,
                  "src": "782:25:192",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:192",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:27:192"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPrimarySale",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 50562,
          "nodeType": "StructuredDocumentation",
          "src": "86:290:192",
          "text": "  Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n  primary sales, if desired."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          50580
        ],
        "name": "IPrimarySale",
        "nameLocation": "388:12:192",
        "scope": 50581,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 192
}