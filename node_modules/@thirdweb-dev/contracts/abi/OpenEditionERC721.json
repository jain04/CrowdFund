{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadata.SharedMetadataInfo",
          "name": "_metadata",
          "type": "tuple"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharedMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620027db1760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b616029806200015c6000396000f3fe6080604052600436106102965760003560e01c80638462151c116101615780638462151c1461064b57806384bb1e42146106785780638da5cb5b1461068b5780639010d07c146106a957806391d14854146106c9578063938e3d7b146106e957806395d89b411461070957806399a2557a1461071e5780639bcf7a151461073e578063a217fddf1461075e578063a22cb46514610773578063a2309ff814610793578063a32fa5b3146107a8578063a7d27d9d146107c8578063ac9650d8146107e8578063acd083f81461047a578063ad1eefc514610815578063b24f2d3914610857578063b280f70314610882578063b88d4fde146108a7578063c23dc68f146108ba578063c68907de14610926578063c87b56dd1461093b578063ca15c8731461095b578063d547741f1461097b578063d637ed591461099b578063e6798baa146109cb578063e8a3d485146109df578063e985e9c5146109f457600080fd5b806301ffc9a71461029b57806306fdde03146102d0578063079fe40e146102f2578063081812fc14610314578063095ea7b31461033457806313af40351461034957806318160ddd1461036957806323a2902b1461038c57806323b872dd146103ac578063248a9ca3146103bf5780632a55205a146103ec5780632f2ff15d1461041a57806332f0cd641461043a57806336568abe1461045a5780633b1475a71461047a57806342842e0e1461048f57806342966c68146104a257806349c5c5b6146104c25780634cc157df146104e2578063504c6e0114610524578063572b6c051461053e57806357fd84551461055e578063600dd5ea1461057e5780636352211e1461059e5780636f4f2837146105be5780636f8934f4146105de57806370a082311461060b57806374bc7db71461062b575b600080fd5b3480156102a757600080fd5b506102bb6102b6366004614cc1565b610a14565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102e5610a40565b6040516102c79190614d36565b3480156102fe57600080fd5b50610307610adb565b6040516102c79190614d49565b34801561032057600080fd5b5061030761032f366004614d5d565b610aea565b610347610342366004614d96565b610b2e565b005b34801561035557600080fd5b50610347610364366004614dc2565b610bfb565b34801561037557600080fd5b5061037e610c2b565b6040519081526020016102c7565b34801561039857600080fd5b506102bb6103a7366004614df1565b610c4b565b6103476103ba366004614e6e565b61100c565b3480156103cb57600080fd5b5061037e6103da366004614d5d565b6000908152600b602052604090205490565b3480156103f857600080fd5b5061040c610407366004614eaf565b6110f3565b6040516102c7929190614ed1565b34801561042657600080fd5b50610347610435366004614eea565b611130565b34801561044657600080fd5b50610347610455366004614f28565b6111ca565b34801561046657600080fd5b50610347610475366004614eea565b61123b565b34801561048657600080fd5b5061037e61129a565b61034761049d366004614e6e565b6112a9565b3480156104ae57600080fd5b506103476104bd366004614d5d565b611385565b3480156104ce57600080fd5b506103476104dd36600461508e565b611390565b3480156104ee57600080fd5b506105026104fd366004614d5d565b611685565b604080516001600160a01b03909316835261ffff9091166020830152016102c7565b34801561053057600080fd5b506075546102bb9060ff1681565b34801561054a57600080fd5b506102bb610559366004614dc2565b6116f0565b34801561056a57600080fd5b50610347610579366004614dc2565b61170e565b34801561058a57600080fd5b50610347610599366004614d96565b61177e565b3480156105aa57600080fd5b506103076105b9366004614d5d565b6117ac565b3480156105ca57600080fd5b506103476105d9366004614dc2565b6117b7565b3480156105ea57600080fd5b506105fe6105f9366004614d5d565b6117e4565b6040516102c7919061517d565b34801561061757600080fd5b5061037e610626366004614dc2565b611941565b34801561063757600080fd5b50610347610646366004615235565b6119a0565b34801561065757600080fd5b5061066b610666366004614dc2565b611ce4565b6040516102c7919061528b565b6103476106863660046152c3565b611d13565b34801561069757600080fd5b506005546001600160a01b0316610307565b3480156106b557600080fd5b506103076106c4366004614eaf565b611e2b565b3480156106d557600080fd5b506102bb6106e4366004614eea565b611f1a565b3480156106f557600080fd5b50610347610704366004615350565b611f45565b34801561071557600080fd5b506102e5611f72565b34801561072a57600080fd5b5061066b610739366004615384565b611f8a565b34801561074a57600080fd5b506103476107593660046153b9565b611fa1565b34801561076a57600080fd5b5061037e600081565b34801561077f57600080fd5b5061034761078e3660046153e0565b611fd0565b34801561079f57600080fd5b5061037e61208f565b3480156107b457600080fd5b506102bb6107c3366004614eea565b6120a1565b3480156107d457600080fd5b506103476107e336600461540e565b6120f7565b3480156107f457600080fd5b50610808610803366004615442565b612124565b6040516102c79190615483565b34801561082157600080fd5b5061037e610830366004614eea565b60009182526010602090815260408084206001600160a01b03909316845291905290205490565b34801561086357600080fd5b506002546001600160a01b03811690600160a01b900461ffff16610502565b34801561088e57600080fd5b50610897612218565b6040516102c794939291906154e5565b6103476108b5366004615532565b612454565b3480156108c657600080fd5b506108da6108d5366004614d5d565b61253e565b6040516102c7919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b34801561093257600080fd5b5061037e612585565b34801561094757600080fd5b506102e5610956366004614d5d565b612628565b34801561096757600080fd5b5061037e610976366004614d5d565b61266e565b34801561098757600080fd5b50610347610996366004614eea565b6126f7565b3480156109a757600080fd5b50600d54600e546109b6919082565b604080519283526020830191909152016102c7565b3480156109d757600080fd5b50600161037e565b3480156109eb57600080fd5b506102e5612710565b348015610a0057600080fd5b506102bb610a0f36600461559d565b61279e565b6000610a1f826127ea565b80610a3a575063152a902d60e11b6001600160e01b03198316145b92915050565b6060610a4a612838565b6002018054610a58906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a84906155cb565b8015610ad15780601f10610aa657610100808354040283529160200191610ad1565b820191906000526020600020905b815481529060010190602001808311610ab457829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610af58261285c565b610b0957610b096333d1c03960e21b6128b8565b610b11612838565b60009283526006016020525060409020546001600160a01b031690565b607554829060ff1615610bec576daaeb6d7670e522a718067333cd4e3b15610bec57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610b839030908590600401615600565b602060405180830381865afa158015610ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc4919061561a565b610bec5780604051633b79c77360e21b8152600401610be39190614d49565b60405180910390fd5b610bf683836128c2565b505050565b610c036128ce565b610c1f5760405162461bcd60e51b8152600401610be390615637565b610c28816128dc565b50565b60006001610c37612838565b60010154610c43612838565b540303919050565b6000868152600f60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610cca906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf6906155cb565b8015610d435780601f10610d1857610100808354040283529160200191610d43565b820191906000526020600020905b815481529060010190602001808311610d2657829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610e2357610e1f610d7b878061565f565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610dd0908d0160608e01614dc2565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061292e565b5094505b8415610ea8576020860135610e385782610e3e565b85602001355b925060001986604001351415610e545781610e5a565b85604001355b9150600019866040013514158015610e8b57506000610e7f6080880160608901614dc2565b6001600160a01b031614155b610e955780610ea5565b610ea56080870160608801614dc2565b90505b60008b81526010602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610ee05750828814155b15610f205760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610be3565b891580610f35575083610f33828c6156be565b115b15610f6b5760405162461bcd60e51b8152600401610be3906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610f8091906156be565b1115610fbb5760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610be3565b8451421015610ffd5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610be3565b50505050509695505050505050565b607554839060ff16156110e2576daaeb6d7670e522a718067333cd4e3b156110e2576001600160a01b03811633141561104f5761104a8484846129fc565b6110ed565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906110829030903390600401615600565b602060405180830381865afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c3919061561a565b6110e25733604051633b79c77360e21b8152600401610be39190614d49565b6110ed8484846129fc565b50505050565b60008060008061110286611685565b90945084925061ffff16905061271061111b82876156d6565b611125919061570b565b925050509250929050565b6000828152600b60205260409020546111499033612bb5565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16156111bc5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610be3565b6111c68282612c35565b5050565b6111d26128ce565b6112325760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610be3565b610c2881612c49565b336001600160a01b038216146112905760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610be3565b6111c68282612c91565b60006112a4612ce8565b905090565b607554839060ff161561137a576daaeb6d7670e522a718067333cd4e3b1561137a576001600160a01b0381163314156112e75761104a848484612cf8565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061131a9030903390600401615600565b602060405180830381865afa158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b919061561a565b61137a5733604051633b79c77360e21b8152600401610be39190614d49565b6110ed848484612cf8565b610c28816001612d13565b611398612e7c565b54610100900460ff166113b7576113ad612e7c565b5460ff16156113bb565b303b155b6114275760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604482015276081a5cc8185b1c9958591e481a5b9a5d1a585b1a5e9959604a1b6064820152608401610be3565b6000611431612e7c565b54610100900460ff16159050801561147d57600161144d612e7c565b80549115156101000261ff0019909216919091179055600161146d612e7c565b805460ff19169115159190911790555b600054610100900460ff161580801561149d5750600054600160ff909116105b806114be57506114ac306127db565b1580156114be575060005460ff166001145b6115215760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610be3565b6000805460ff191660011790558015611544576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661158f88612ea0565b6115998b8b612ed8565b6115a1612f0f565b6115aa89612f30565b6115b38c6128dc565b6115bd6001612c49565b6115c860008d612c35565b6115d2818d612c35565b6115dc828d612c35565b6115e7826000612c35565b6115fa86866001600160801b0316613012565b61160387613096565b6076919091556077558015611652576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50801561167a576000611663612e7c565b80549115156101000261ff00199092169190911790555b505050505050505050565b6000818152600360209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156116cc57805160208201516116e6565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526043602052604090205460ff1690565b6117166128ce565b6117735760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610be3565b610c288160016130e0565b6117866128ce565b6117a25760405162461bcd60e51b8152600401610be390615637565b6111c68282613012565b6000610a3a826131d8565b6117bf6128ce565b6117db5760405162461bcd60e51b8152600401610be390615637565b610c2881613096565b61183860405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600f6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906118b8906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546118e4906155cb565b80156119315780601f1061190657610100808354040283529160200191611931565b820191906000526020600020905b81548152906001019060200180831161191457829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611961576119616323d3ad8160e21b6128b8565b6001600160401b03611971612838565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6119a86128ce565b6119c45760405162461bcd60e51b8152600401610be390615637565b600d54600e548183156119de576119db82846156be565b90505b600e859055600d8190556000805b86811015611b9157801580611a245750878782818110611a0e57611a0e61571f565b9050602002810190611a209190615735565b3582105b611a555760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610be3565b6000600f81611a6484876156be565b8152602001908152602001600020600201549050888883818110611a8a57611a8a61571f565b9050602002810190611a9c9190615735565b60200135811115611ae45760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610be3565b888883818110611af657611af661571f565b9050602002810190611b089190615735565b600f6000611b1685886156be565b81526020019081526020016000208181611b3091906158a0565b50819050600f6000611b4285886156be565b8152602081019190915260400160002060020155888883818110611b6857611b6861571f565b9050602002810190611b7a9190615735565b359250819050611b898161591e565b9150506119ec565b508415611c1157835b82811015611c0b576000818152600f6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611bf66007830182614bb1565b50508080611c039061591e565b915050611b9a565b50611ca0565b85831115611ca057855b83811015611c9e57600f6000611c3183866156be565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611c896007830182614bb1565b50508080611c969061591e565b915050611c1b565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611cd3939291906159a7565b60405180910390a150505050505050565b606060016000611cf2612ce8565b90506060818314611d0b57611d08858484613296565b90505b949350505050565b6000611d1d612585565b9050611d3481611d2b61339e565b88888888610c4b565b506000818152600f602052604081206002018054889290611d569084906156be565b909155505060008181526010602052604081208791611d7361339e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611da291906156be565b90915550611db5905060008787876133a8565b6000611dc1888861348c565b9050876001600160a01b0316611dd561339e565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611e19929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600c602052604081205481805b82811015611f11576000868152600c602090815260408083208484526001019091529020546001600160a01b031615611eba5784821415611ea8576000868152600c602090815260408083209383526001909301905220546001600160a01b03169250610a3a915050565b611eb36001836156be565b9150611eff565b611ec5866000611f1a565b8015611eec57506000868152600c6020908152604080832083805260020190915290205481145b15611eff57611efc6001836156be565b91505b611f0a6001826156be565b9050611e3d565b50505092915050565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611f4d6128ce565b611f695760405162461bcd60e51b8152600401610be390615637565b610c2881612f30565b6060611f7c612838565b6003018054610a58906155cb565b6060611f97848484613296565b90505b9392505050565b611fa96128ce565b611fc55760405162461bcd60e51b8152600401610be390615637565b610bf68383836134a2565b607554829060ff1615612085576daaeb6d7670e522a718067333cd4e3b1561208557604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906120259030908590600401615600565b602060405180830381865afa158015612042573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612066919061561a565b6120855780604051633b79c77360e21b8152600401610be39190614d49565b610bf68383613549565b6000600161209b612ce8565b03905090565b6000828152600a6020908152604080832083805290915281205460ff166120ee57506000828152600a602090815260408083206001600160a01b038516845290915290205460ff16610a3a565b50600192915050565b6120ff6135eb565b61211b5760405162461bcd60e51b8152600401610be390615637565b610c28816135fb565b6060816001600160401b0381111561213e5761213e614f45565b60405190808252806020026020018201604052801561217157816020015b606081526020019060019003908161215c5790505b50905060005b82811015612211576121e1308585848181106121955761219561571f565b90506020028101906121a79190615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061382992505050565b8282815181106121f3576121f361571f565b602002602001018190525080806122099061591e565b915050612177565b5092915050565b600680548190612227906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612253906155cb565b80156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b5050505050908060010180546122b5906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546122e1906155cb565b801561232e5780601f106123035761010080835404028352916020019161232e565b820191906000526020600020905b81548152906001019060200180831161231157829003601f168201915b505050505090806002018054612343906155cb565b80601f016020809104026020016040519081016040528092919081815260200182805461236f906155cb565b80156123bc5780601f10612391576101008083540402835291602001916123bc565b820191906000526020600020905b81548152906001019060200180831161239f57829003601f168201915b5050505050908060030180546123d1906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546123fd906155cb565b801561244a5780601f1061241f5761010080835404028352916020019161244a565b820191906000526020600020905b81548152906001019060200180831161242d57829003601f168201915b5050505050905084565b607554849060ff161561252b576daaeb6d7670e522a718067333cd4e3b1561252b576001600160a01b038116331415612498576124938585858561384e565b612537565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906124cb9030903390600401615600565b602060405180830381865afa1580156124e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250c919061561a565b61252b5733604051633b79c77360e21b8152600401610be39190614d49565b6125378585858561384e565b5050505050565b612546614beb565b6001821061258057612556612ce8565b821015612580575b61256782613889565b612577576000199091019061255e565b610a3a826138a9565b919050565b600e54600d54600091829161259a91906156be565b90505b600d548111156125f157600f60006125b6600184615a8f565b81526020019081526020016000206000015442106125df576125d9600182615a8f565b91505090565b806125e981615aa6565b91505061259d565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610be3565b60606126338261285c565b6126655760405162461bcd60e51b815260206004820152600360248201526208525160ea1b6044820152606401610be3565b610a3a826138d4565b6000818152600c6020526040812054815b818110156126d2576000848152600c602090815260408083208484526001019091529020546001600160a01b0316156126c0576126bd6001846156be565b92505b6126cb6001826156be565b905061267f565b506126de836000611f1a565b156126f1576126ee6001836156be565b91505b50919050565b6000828152600b60205260409020546112909033612bb5565b6001805461271d906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612749906155cb565b80156127965780601f1061276b57610100808354040283529160200191612796565b820191906000526020600020905b81548152906001019060200180831161277957829003601f168201915b505050505081565b60006127a8612838565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160a01b03163b151590565b60006301ffc9a760e01b6001600160e01b03198316148061281b57506380ac58cd60e01b6001600160e01b03198316145b80610a3a5750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000816001116125805761286e612838565b548210156125805760005b612881612838565b600084815260049190910160205260409020549050806128ab576128a483615aa6565b9250612879565b600160e01b161592915050565b8060005260046000fd5b6111c682826001613b4c565b60006112a4816106e4613c0f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000808281805b87518110156129f0576129496002836156d6565b9150600088828151811061295f5761295f61571f565b602002602001015190508084116129a15760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506129dd565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836129da91906156be565b92505b50806129e88161591e565b915050612935565b50941495939450505050565b6000612a07826131d8565b6001600160a01b039485169490915081168414612a2d57612a2d62a1148160e81b6128b8565b600080612a3984613c19565b91509150612a5f8187612a4a61339e565b6001600160a01b039081169116811491141790565b612a8357612a6f86610a0f61339e565b612a8357612a83632ce44b5f60e11b6128b8565b612a908686866001613c41565b8015612a9b57600082555b612aa3612838565b6001600160a01b0387166000908152600591909101602052604090208054600019019055612acf612838565b6001600160a01b03861660009081526005919091016020526040902080546001019055612b0085600160e11b613cd0565b612b08612838565b60008681526004919091016020526040902055600160e11b8316612b775760018401612b32612838565b60008281526004919091016020526040902054612b7557612b51612838565b548114612b755783612b61612838565b600083815260049190910160205260409020555b505b6001600160a01b038516848188600080516020615fd4833981519152600080a480612bac57612bac633a954ecd60e21b6128b8565b50505050505050565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff166111c657612bf3816001600160a01b03166014613ce5565b612bfe836020613ce5565b604051602001612c0f929190615ad9565b60408051601f198184030181529082905262461bcd60e51b8252610be391600401614d36565b612c3f8282613e80565b6111c68282613edb565b6075805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba78096906020015b60405180910390a150565b612c9b8282613f48565b6000828152600c602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612cf2612838565b54919050565b610bf683838360405180602001604052806000815250612454565b6000612d1e836131d8565b905080600080612d2d86613c19565b915091508415612d6857612d448184612a4a61339e565b612d6857612d5483610a0f61339e565b612d6857612d68632ce44b5f60e11b6128b8565b612d76836000886001613c41565b8015612d8157600082555b6001600160801b03612d91612838565b6001600160a01b0385166000908152600591909101602052604090208054919091019055612dc383600360e01b613cd0565b612dcb612838565b60008881526004919091016020526040902055600160e11b8416612e3a5760018601612df5612838565b60008281526004919091016020526040902054612e3857612e14612838565b548114612e385784612e24612838565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020615fd4833981519152908390a4612e68612838565b600190810180549091019055505050505050565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f90565b600054610100900460ff16612ec75760405162461bcd60e51b8152600401610be390615b46565b612ecf613faa565b610c2881613fd1565b612ee0612e7c565b54610100900460ff16612f055760405162461bcd60e51b8152600401610be390615b91565b6111c68282614060565b612f2e733cc6cdda760b79bafa08df41ecfa224f810dceb660016140dc565b565b600060018054612f3f906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612f6b906155cb565b8015612fb85780601f10612f8d57610100808354040283529160200191612fb8565b820191906000526020600020905b815481529060010190602001808311612f9b57829003601f168201915b50508551939450612fd493600193506020870192509050614c12565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613006929190615be5565b60405180910390a15050565b6127108111156130345760405162461bcd60e51b8152600401610be390615c13565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6daaeb6d7670e522a718067333cd4e3b156111c6576001600160a01b0382163b156131a757801561317457604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe9061313e9030908690600401615600565b600060405180830381600087803b15801561315857600080fd5b505af115801561316c573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af29039061313e9030908690600401615600565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e4869061313e903090600401614d49565b600081600111613286576131ea612838565b600083815260049190910160205260409020549050806132765761320c612838565b54821061322357613223636f96cda160e11b6128b8565b61322b612838565b600019909201600081815260049390930160205260409092205490508061325157613223565b600160e01b811661326157919050565b613271636f96cda160e11b6128b8565b613223565b600160e01b811661328657919050565b612580636f96cda160e11b6128b8565b60608183106132af576132af631960ccad60e11b6128b8565b60018310156132bd57600192505b60006132c7612ce8565b90508083106132d4578092505b606060006132e187611941565b858710908102915081156133925781878703116132fe5786860391505b60405192506001820160051b8301604052600061331a8861253e565b90506000816040015161332b575080515b60005b6133378a6138a9565b925060408301516000811461334f5760009250613374565b83511561335b57835192505b8b831860601b613374576001820191508a8260051b8801525b5060018a019950888a148061338857508481145b1561332e57855250505b50909695505050505050565b60006112a4613c0f565b806133e457341561104a5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610be3565b60006133f082856156d6565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156134225750348114613426565b5034155b806134585760405162461bcd60e51b815260206004820152600260248201526110ab60f11b6044820152606401610be3565b60006001600160a01b0387161561346f5786613477565b613477610adb565b9050612bac85613485613c0f565b83866140e6565b6000613496612ce8565b9050610a3a838361412b565b6127108111156134c45760405162461bcd60e51b8152600401610be390615c13565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b80613552612838565b600701600061355f61339e565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556135a361339e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516135df911515815260200190565b60405180910390a35050565b60006112a46077546106e4613c0f565b6040805160808101909152806136118380615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060209081019061365a90840184615755565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016136a16040840184615755565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016136e86060840184615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051805160069161373491839160200190614c12565b50602082810151805161374d9260018501920190614c12565b5060408201518051613769916002840191602090910190614c12565b5060608201518051613785916003840191602090910190614c12565b5050604080516000815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c92500160405180910390a17f8edd7f36d5f01bd45e59cf55b0a670dcf701fc20f678970a8c243b2346d6acaf6137ee8280615755565b6137fb6020850185615755565b6138086040870187615755565b6138156060890189615755565b604051612c86989796959493929190615c3c565b6060611f9a8383604051806060016040528060278152602001615fad60279139614145565b61385984848461100c565b6001600160a01b0383163b156110ed5761387584848484614220565b6110ed576110ed6368d2bf6b60e11b6128b8565b6000613893612838565b6000928352600401602052506040902054151590565b6138b1614beb565b610a3a6138bc612838565b60008481526004919091016020526040902054614305565b6060600060066040518060800160405290816000820180546138f5906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613921906155cb565b801561396e5780601f106139435761010080835404028352916020019161396e565b820191906000526020600020905b81548152906001019060200180831161395157829003601f168201915b50505050508152602001600182018054613987906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546139b3906155cb565b8015613a005780601f106139d557610100808354040283529160200191613a00565b820191906000526020600020905b8154815290600101906020018083116139e357829003601f168201915b50505050508152602001600282018054613a19906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613a45906155cb565b8015613a925780601f10613a6757610100808354040283529160200191613a92565b820191906000526020600020905b815481529060010190602001808311613a7557829003601f168201915b50505050508152602001600382018054613aab906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613ad7906155cb565b8015613b245780601f10613af957610100808354040283529160200191613b24565b820191906000526020600020905b815481529060010190602001808311613b0757829003601f168201915b50505050508152505090506126ee816000015182602001518360400151846060015187614348565b6000613b57836117ac565b9050818015613b7f5750806001600160a01b0316613b7361339e565b6001600160a01b031614155b15613ba457613b9081610a0f61339e565b613ba457613ba46367d9dca160e11b6128b8565b83613bad612838565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60006112a461437d565b6000806000613c26612838565b60009485526006016020525050604090912080549092909150565b613c4e6076546000611f1a565b158015613c6357506001600160a01b03841615155b8015613c7757506001600160a01b03831615155b156110ed57613c8860765485611f1a565b158015613c9e5750613c9c60765484611f1a565b155b156110ed5760405162461bcd60e51b8152602060048201526002602482015261085560f21b6044820152606401610be3565b4260a01b176001600160a01b03919091161790565b60606000613cf48360026156d6565b613cff9060026156be565b6001600160401b03811115613d1657613d16614f45565b6040519080825280601f01601f191660200182016040528015613d40576020820181803683370190505b509050600360fc1b81600081518110613d5b57613d5b61571f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613d8a57613d8a61571f565b60200101906001600160f81b031916908160001a9053506000613dae8460026156d6565b613db99060016156be565b90505b6001811115613e31576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613ded57613ded61571f565b1a60f81b828281518110613e0357613e0361571f565b60200101906001600160f81b031916908160001a90535060049490941c93613e2a81615aa6565b9050613dbc565b508315611f9a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610be3565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600c6020526040812080549160019190613efa83856156be565b90915550506000928352600c6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613f528282612bb5565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16612f2e5760405162461bcd60e51b8152600401610be390615b46565b600054610100900460ff16613ff85760405162461bcd60e51b8152600401610be390615b46565b60005b81518110156111c65760016043600084848151811061401c5761401c61571f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806140588161591e565b915050613ffb565b614068612e7c565b54610100900460ff1661408d5760405162461bcd60e51b8152600401610be390615b91565b81614096612838565b60020190805190602001906140ac929190614c12565b50806140b6612838565b60030190805190602001906140cc929190614c12565b5060016140d7612838565b555050565b6111c682826130e0565b806140f0576110ed565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561411f5761104a828261439f565b6110ed84848484614441565b6111c682826040518060200160405280600081525061449a565b6060614150846127db565b6141ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610be3565b600080856001600160a01b0316856040516141c69190615c9c565b600060405180830381855af49150503d8060008114614201576040519150601f19603f3d011682016040523d82523d6000602084013e614206565b606091505b509150915061421682828661450c565b9695505050505050565b6000836001600160a01b031663150b7a0261423961339e565b8786866040518563ffffffff1660e01b815260040161425b9493929190615cae565b6020604051808303816000875af1925050508015614296575060408051601f3d908101601f1916820190925261429391810190615ce1565b60015b6142e8573d8080156142c4576040519150601f19603f3d011682016040523d82523d6000602084013e6142c9565b606091505b5080516142e0576142e06368d2bf6b60e11b6128b8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b61430d614beb565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b606060006143568585614545565b90506000614366888884876145d2565b905061437181614618565b98975050505050505050565b6000614388336116f0565b1561439a575060131936013560601c90565b503390565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146143ec576040519150601f19603f3d011682016040523d82523d6000602084013e6143f1565b606091505b5050905080610bf65760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610be3565b816001600160a01b0316836001600160a01b03161415614460576110ed565b6001600160a01b0383163014156144855761104a6001600160a01b0385168383614649565b6110ed6001600160a01b03851684848461469f565b6144a483836146d7565b6001600160a01b0383163b15610bf65760006144be612838565b5490508281035b6144d86000868380600101945086614220565b6144ec576144ec6368d2bf6b60e11b6128b8565b8181106144c557816144fc612838565b54146125375761253760006128b8565b6060831561451b575081611f9a565b82511561452b5782518084602001fd5b8160405162461bcd60e51b8152600401610be39190614d36565b8151815160609115801591151590829061455c5750805b1561458c578484604051602001614574929190615cfe565b60405160208183030381529060405292505050610a3a565b81156145a357846040516020016145749190615d75565b80156145ba57836040516020016145749190615db5565b50506040805160208101909152600081529392505050565b6060846145de836147b6565b85856145e9866147b6565b896040516020016145ff96959493929190615dfd565b6040516020818303038152906040529050949350505050565b6060614623826148b3565b6040516020016146339190615f13565b6040516020818303038152906040529050919050565b610bf68363a9059cbb60e01b8484604051602401614668929190614ed1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614a06565b6040516001600160a01b03808516602483015283166044820152606481018290526110ed9085906323b872dd60e01b90608401614668565b60006146e1612838565b549050816146f9576146f963b562e8dd60e01b6128b8565b6147066000848385613c41565b614716836001841460e11b613cd0565b61471e612838565b600083815260049190910160205260409020556001600160401b018202614743612838565b6001600160a01b0385166000818152600592909201602052604090912080549092019091558061477c5761477c622e076360e81b6128b8565b818301825b80836000600080516020615fd4833981519152600080a46001018082141561478157816147ac612838565b5550610bf6915050565b6060816147da5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561480457806147ee8161591e565b91506147fd9050600a8361570b565b91506147de565b6000816001600160401b0381111561481e5761481e614f45565b6040519080825280601f01601f191660200182016040528015614848576020820181803683370190505b5090505b8415611d0b5761485d600183615a8f565b915061486a600a86615f58565b6148759060306156be565b60f81b81838151811061488a5761488a61571f565b60200101906001600160f81b031916908160001a9053506148ac600a8661570b565b945061484c565b60608151600014156148d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001615f6d604091399050600060038451600261490291906156be565b61490c919061570b565b6149179060046156d6565b6001600160401b0381111561492e5761492e614f45565b6040519080825280601f01601f191660200182016040528015614958576020820181803683370190505b509050600182016020820185865187015b808210156149c4576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250614969565b50506003865106600181146149e057600281146149f3576149fb565b603d6001830353603d60028303536149fb565b603d60018303535b509195945050505050565b6000614a5b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ad89092919063ffffffff16565b805190915015610bf65780806020019051810190614a79919061561a565b610bf65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610be3565b6060611f97848460008585614aec856127db565b614b385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610be3565b600080866001600160a01b03168587604051614b549190615c9c565b60006040518083038185875af1925050503d8060008114614b91576040519150601f19603f3d011682016040523d82523d6000602084013e614b96565b606091505b5091509150614ba682828661450c565b979650505050505050565b508054614bbd906155cb565b6000825580601f10614bcd575050565b601f016020900490600052602060002090810190610c289190614c96565b60408051608081018252600080825260208201819052918101829052606081019190915290565b828054614c1e906155cb565b90600052602060002090601f016020900481019282614c405760008555614c86565b82601f10614c5957805160ff1916838001178555614c86565b82800160010185558215614c86579182015b82811115614c86578251825591602001919060010190614c6b565b50614c92929150614c96565b5090565b5b80821115614c925760008155600101614c97565b6001600160e01b031981168114610c2857600080fd5b600060208284031215614cd357600080fd5b8135611f9a81614cab565b60005b83811015614cf9578181015183820152602001614ce1565b838111156110ed5750506000910152565b60008151808452614d22816020860160208601614cde565b601f01601f19169290920160200192915050565b602081526000611f9a6020830184614d0a565b6001600160a01b0391909116815260200190565b600060208284031215614d6f57600080fd5b5035919050565b6001600160a01b0381168114610c2857600080fd5b803561258081614d76565b60008060408385031215614da957600080fd5b8235614db481614d76565b946020939093013593505050565b600060208284031215614dd457600080fd5b8135611f9a81614d76565b6000608082840312156126f157600080fd5b60008060008060008060c08789031215614e0a57600080fd5b863595506020870135614e1c81614d76565b9450604087013593506060870135614e3381614d76565b92506080870135915060a08701356001600160401b03811115614e5557600080fd5b614e6189828a01614ddf565b9150509295509295509295565b600080600060608486031215614e8357600080fd5b8335614e8e81614d76565b92506020840135614e9e81614d76565b929592945050506040919091013590565b60008060408385031215614ec257600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614efd57600080fd5b823591506020830135614f0f81614d76565b809150509250929050565b8015158114610c2857600080fd5b600060208284031215614f3a57600080fd5b8135611f9a81614f1a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f8357614f83614f45565b604052919050565b600082601f830112614f9c57600080fd5b81356001600160401b03811115614fb557614fb5614f45565b614fc8601f8201601f1916602001614f5b565b818152846020838601011115614fdd57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261500b57600080fd5b813560206001600160401b0382111561502657615026614f45565b8160051b615035828201614f5b565b928352848101820192828101908785111561504f57600080fd5b83870192505b84831015614ba657823561506881614d76565b82529183019190830190615055565b80356001600160801b038116811461258057600080fd5b600080600080600080600080610100898b0312156150ab57600080fd5b6150b489614d8b565b975060208901356001600160401b03808211156150d057600080fd5b6150dc8c838d01614f8b565b985060408b01359150808211156150f257600080fd5b6150fe8c838d01614f8b565b975060608b013591508082111561511457600080fd5b6151208c838d01614f8b565b965060808b013591508082111561513657600080fd5b506151438b828c01614ffa565b94505061515260a08a01614d8b565b925061516060c08a01614d8b565b915061516e60e08a01615077565b90509295985092959890939650565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250611d0b610120840182614d0a565b60008083601f8401126151fc57600080fd5b5081356001600160401b0381111561521357600080fd5b6020830191508360208260051b850101111561522e57600080fd5b9250929050565b60008060006040848603121561524a57600080fd5b83356001600160401b0381111561526057600080fd5b61526c868287016151ea565b909450925050602084013561528081614f1a565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015613392578351835292840192918401916001016152a7565b60008060008060008060c087890312156152dc57600080fd5b86356152e781614d76565b95506020870135945060408701356152fe81614d76565b93506060870135925060808701356001600160401b038082111561532157600080fd5b61532d8a838b01614ddf565b935060a089013591508082111561534357600080fd5b50614e6189828a01614f8b565b60006020828403121561536257600080fd5b81356001600160401b0381111561537857600080fd5b611d0b84828501614f8b565b60008060006060848603121561539957600080fd5b83356153a481614d76565b95602085013595506040909401359392505050565b6000806000606084860312156153ce57600080fd5b833592506020840135614e9e81614d76565b600080604083850312156153f357600080fd5b82356153fe81614d76565b91506020830135614f0f81614f1a565b60006020828403121561542057600080fd5b81356001600160401b0381111561543657600080fd5b611d0b84828501614ddf565b6000806020838503121561545557600080fd5b82356001600160401b0381111561546b57600080fd5b615477858286016151ea565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156154d857603f198886030184526154c6858351614d0a565b945092850192908501906001016154aa565b5092979650505050505050565b6080815260006154f86080830187614d0a565b828103602084015261550a8187614d0a565b9050828103604084015261551e8186614d0a565b90508281036060840152614ba68185614d0a565b6000806000806080858703121561554857600080fd5b843561555381614d76565b9350602085013561556381614d76565b92506040850135915060608501356001600160401b0381111561558557600080fd5b61559187828801614f8b565b91505092959194509250565b600080604083850312156155b057600080fd5b82356155bb81614d76565b91506020830135614f0f81614d76565b600181811c908216806155df57607f821691505b602082108114156126f157634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b60006020828403121561562c57600080fd5b8151611f9a81614f1a565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e1984360301811261567657600080fd5b8301803591506001600160401b0382111561569057600080fd5b6020019150600581901b360382131561522e57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156156d1576156d16156a8565b500190565b60008160001904831182151516156156f0576156f06156a8565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261571a5761571a6156f5565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261574b57600080fd5b9190910192915050565b6000808335601e1984360301811261576c57600080fd5b8301803591506001600160401b0382111561578657600080fd5b60200191503681900382131561522e57600080fd5b601f821115610bf657600081815260208120601f850160051c810160208610156157c25750805b601f850160051c820191505b8181101561316c578281556001016157ce565b6001600160401b038311156157f8576157f8614f45565b61580c8361580683546155cb565b8361579b565b6000601f84116001811461584057600085156158285750838201355b600019600387901b1c1916600186901b178355612537565b600083815260209020601f19861690835b828110156158715786850135825560209485019460019092019101615851565b508682101561588e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356158e881614d76565b81546001600160a01b0319166001600160a01b039190911617905561591060e0830183615755565b6110ed8183600786016157e1565b6000600019821415615932576159326156a8565b5060010190565b6000808335601e1984360301811261595057600080fd5b83016020810192503590506001600160401b0381111561596f57600080fd5b80360383131561522e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015615a7957888403605f190185528235368d900360fe190181126159ec578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135615a3381614d76565b6001600160a01b03169088015260e0615a4e84820185615939565b945083828a0152615a62848a01868361597e565b9983019998505050949094019350506001016159c7565b50505086151560208701529350611d0b92505050565b600082821015615aa157615aa16156a8565b500390565b600081615ab557615ab56156a8565b506000190190565b60008151615acf818560208601614cde565b9290920192915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b09816015850160208801614cde565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615b3a816026840160208801614cde565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b604081526000615bf86040830185614d0a565b8281036020840152615c0a8185614d0a565b95945050505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b608081526000615c50608083018a8c61597e565b8281036020840152615c6381898b61597e565b90508281036040840152615c7881878961597e565b90508281036060840152615c8d81858761597e565b9b9a5050505050505050505050565b6000825161574b818460208701614cde565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061421690830184614d0a565b600060208284031215615cf357600080fd5b8151611f9a81614cab565b6834b6b0b3b2911d101160b91b81528251600090615d23816009850160208801614cde565b741116101130b734b6b0ba34b7b72fbab936111d101160591b6009918401918201528351615d5881601e840160208801614cde565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b81528151600090615d9a816009850160208701614cde565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528151600090615de2816011850160208701614cde565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b81528651600090615e2381600a850160208c01614cde565b600160fd1b600a918401918201528751615e4481600b840160208c01614cde565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f8301528751615e8381601e850160208c01614cde565b601e9201918201528551615e9e816022840160208a01614cde565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b60229290910191820152615f06615ef7615ef1615eda603a850189615abd565b6a1610113730b6b2911d101160a91b8152600b0190565b86615abd565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251615f4b81601d850160208701614cde565b91909101601d0192915050565b600082615f6757615f676156f5565b50069056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c2ce901cf1be759dd854bb641fa91a4f83ee23226fc842ee646daeafc097cc5e64736f6c634300080c0033",
    "sourceMap": "1585:10184:2:-:0;;;2642:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1585:10184:2;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1585:10184:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102965760003560e01c80638462151c116101615780638462151c1461064b57806384bb1e42146106785780638da5cb5b1461068b5780639010d07c146106a957806391d14854146106c9578063938e3d7b146106e957806395d89b411461070957806399a2557a1461071e5780639bcf7a151461073e578063a217fddf1461075e578063a22cb46514610773578063a2309ff814610793578063a32fa5b3146107a8578063a7d27d9d146107c8578063ac9650d8146107e8578063acd083f81461047a578063ad1eefc514610815578063b24f2d3914610857578063b280f70314610882578063b88d4fde146108a7578063c23dc68f146108ba578063c68907de14610926578063c87b56dd1461093b578063ca15c8731461095b578063d547741f1461097b578063d637ed591461099b578063e6798baa146109cb578063e8a3d485146109df578063e985e9c5146109f457600080fd5b806301ffc9a71461029b57806306fdde03146102d0578063079fe40e146102f2578063081812fc14610314578063095ea7b31461033457806313af40351461034957806318160ddd1461036957806323a2902b1461038c57806323b872dd146103ac578063248a9ca3146103bf5780632a55205a146103ec5780632f2ff15d1461041a57806332f0cd641461043a57806336568abe1461045a5780633b1475a71461047a57806342842e0e1461048f57806342966c68146104a257806349c5c5b6146104c25780634cc157df146104e2578063504c6e0114610524578063572b6c051461053e57806357fd84551461055e578063600dd5ea1461057e5780636352211e1461059e5780636f4f2837146105be5780636f8934f4146105de57806370a082311461060b57806374bc7db71461062b575b600080fd5b3480156102a757600080fd5b506102bb6102b6366004614cc1565b610a14565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102e5610a40565b6040516102c79190614d36565b3480156102fe57600080fd5b50610307610adb565b6040516102c79190614d49565b34801561032057600080fd5b5061030761032f366004614d5d565b610aea565b610347610342366004614d96565b610b2e565b005b34801561035557600080fd5b50610347610364366004614dc2565b610bfb565b34801561037557600080fd5b5061037e610c2b565b6040519081526020016102c7565b34801561039857600080fd5b506102bb6103a7366004614df1565b610c4b565b6103476103ba366004614e6e565b61100c565b3480156103cb57600080fd5b5061037e6103da366004614d5d565b6000908152600b602052604090205490565b3480156103f857600080fd5b5061040c610407366004614eaf565b6110f3565b6040516102c7929190614ed1565b34801561042657600080fd5b50610347610435366004614eea565b611130565b34801561044657600080fd5b50610347610455366004614f28565b6111ca565b34801561046657600080fd5b50610347610475366004614eea565b61123b565b34801561048657600080fd5b5061037e61129a565b61034761049d366004614e6e565b6112a9565b3480156104ae57600080fd5b506103476104bd366004614d5d565b611385565b3480156104ce57600080fd5b506103476104dd36600461508e565b611390565b3480156104ee57600080fd5b506105026104fd366004614d5d565b611685565b604080516001600160a01b03909316835261ffff9091166020830152016102c7565b34801561053057600080fd5b506075546102bb9060ff1681565b34801561054a57600080fd5b506102bb610559366004614dc2565b6116f0565b34801561056a57600080fd5b50610347610579366004614dc2565b61170e565b34801561058a57600080fd5b50610347610599366004614d96565b61177e565b3480156105aa57600080fd5b506103076105b9366004614d5d565b6117ac565b3480156105ca57600080fd5b506103476105d9366004614dc2565b6117b7565b3480156105ea57600080fd5b506105fe6105f9366004614d5d565b6117e4565b6040516102c7919061517d565b34801561061757600080fd5b5061037e610626366004614dc2565b611941565b34801561063757600080fd5b50610347610646366004615235565b6119a0565b34801561065757600080fd5b5061066b610666366004614dc2565b611ce4565b6040516102c7919061528b565b6103476106863660046152c3565b611d13565b34801561069757600080fd5b506005546001600160a01b0316610307565b3480156106b557600080fd5b506103076106c4366004614eaf565b611e2b565b3480156106d557600080fd5b506102bb6106e4366004614eea565b611f1a565b3480156106f557600080fd5b50610347610704366004615350565b611f45565b34801561071557600080fd5b506102e5611f72565b34801561072a57600080fd5b5061066b610739366004615384565b611f8a565b34801561074a57600080fd5b506103476107593660046153b9565b611fa1565b34801561076a57600080fd5b5061037e600081565b34801561077f57600080fd5b5061034761078e3660046153e0565b611fd0565b34801561079f57600080fd5b5061037e61208f565b3480156107b457600080fd5b506102bb6107c3366004614eea565b6120a1565b3480156107d457600080fd5b506103476107e336600461540e565b6120f7565b3480156107f457600080fd5b50610808610803366004615442565b612124565b6040516102c79190615483565b34801561082157600080fd5b5061037e610830366004614eea565b60009182526010602090815260408084206001600160a01b03909316845291905290205490565b34801561086357600080fd5b506002546001600160a01b03811690600160a01b900461ffff16610502565b34801561088e57600080fd5b50610897612218565b6040516102c794939291906154e5565b6103476108b5366004615532565b612454565b3480156108c657600080fd5b506108da6108d5366004614d5d565b61253e565b6040516102c7919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b34801561093257600080fd5b5061037e612585565b34801561094757600080fd5b506102e5610956366004614d5d565b612628565b34801561096757600080fd5b5061037e610976366004614d5d565b61266e565b34801561098757600080fd5b50610347610996366004614eea565b6126f7565b3480156109a757600080fd5b50600d54600e546109b6919082565b604080519283526020830191909152016102c7565b3480156109d757600080fd5b50600161037e565b3480156109eb57600080fd5b506102e5612710565b348015610a0057600080fd5b506102bb610a0f36600461559d565b61279e565b6000610a1f826127ea565b80610a3a575063152a902d60e11b6001600160e01b03198316145b92915050565b6060610a4a612838565b6002018054610a58906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a84906155cb565b8015610ad15780601f10610aa657610100808354040283529160200191610ad1565b820191906000526020600020905b815481529060010190602001808311610ab457829003601f168201915b5050505050905090565b6004546001600160a01b031690565b6000610af58261285c565b610b0957610b096333d1c03960e21b6128b8565b610b11612838565b60009283526006016020525060409020546001600160a01b031690565b607554829060ff1615610bec576daaeb6d7670e522a718067333cd4e3b15610bec57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490610b839030908590600401615600565b602060405180830381865afa158015610ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc4919061561a565b610bec5780604051633b79c77360e21b8152600401610be39190614d49565b60405180910390fd5b610bf683836128c2565b505050565b610c036128ce565b610c1f5760405162461bcd60e51b8152600401610be390615637565b610c28816128dc565b50565b60006001610c37612838565b60010154610c43612838565b540303919050565b6000868152600f60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610cca906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf6906155cb565b8015610d435780601f10610d1857610100808354040283529160200191610d43565b820191906000526020600020905b815481529060010190602001808311610d2657829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610e2357610e1f610d7b878061565f565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610dd0908d0160608e01614dc2565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061292e565b5094505b8415610ea8576020860135610e385782610e3e565b85602001355b925060001986604001351415610e545781610e5a565b85604001355b9150600019866040013514158015610e8b57506000610e7f6080880160608901614dc2565b6001600160a01b031614155b610e955780610ea5565b610ea56080870160608801614dc2565b90505b60008b81526010602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610ee05750828814155b15610f205760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610be3565b891580610f35575083610f33828c6156be565b115b15610f6b5760405162461bcd60e51b8152600401610be3906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610f8091906156be565b1115610fbb5760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610be3565b8451421015610ffd5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610be3565b50505050509695505050505050565b607554839060ff16156110e2576daaeb6d7670e522a718067333cd4e3b156110e2576001600160a01b03811633141561104f5761104a8484846129fc565b6110ed565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906110829030903390600401615600565b602060405180830381865afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c3919061561a565b6110e25733604051633b79c77360e21b8152600401610be39190614d49565b6110ed8484846129fc565b50505050565b60008060008061110286611685565b90945084925061ffff16905061271061111b82876156d6565b611125919061570b565b925050509250929050565b6000828152600b60205260409020546111499033612bb5565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff16156111bc5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610be3565b6111c68282612c35565b5050565b6111d26128ce565b6112325760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610be3565b610c2881612c49565b336001600160a01b038216146112905760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610be3565b6111c68282612c91565b60006112a4612ce8565b905090565b607554839060ff161561137a576daaeb6d7670e522a718067333cd4e3b1561137a576001600160a01b0381163314156112e75761104a848484612cf8565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061131a9030903390600401615600565b602060405180830381865afa158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b919061561a565b61137a5733604051633b79c77360e21b8152600401610be39190614d49565b6110ed848484612cf8565b610c28816001612d13565b611398612e7c565b54610100900460ff166113b7576113ad612e7c565b5460ff16156113bb565b303b155b6114275760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604482015276081a5cc8185b1c9958591e481a5b9a5d1a585b1a5e9959604a1b6064820152608401610be3565b6000611431612e7c565b54610100900460ff16159050801561147d57600161144d612e7c565b80549115156101000261ff0019909216919091179055600161146d612e7c565b805460ff19169115159190911790555b600054610100900460ff161580801561149d5750600054600160ff909116105b806114be57506114ac306127db565b1580156114be575060005460ff166001145b6115215760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610be3565b6000805460ff191660011790558015611544576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661158f88612ea0565b6115998b8b612ed8565b6115a1612f0f565b6115aa89612f30565b6115b38c6128dc565b6115bd6001612c49565b6115c860008d612c35565b6115d2818d612c35565b6115dc828d612c35565b6115e7826000612c35565b6115fa86866001600160801b0316613012565b61160387613096565b6076919091556077558015611652576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50801561167a576000611663612e7c565b80549115156101000261ff00199092169190911790555b505050505050505050565b6000818152600360209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156116cc57805160208201516116e6565b6002546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526043602052604090205460ff1690565b6117166128ce565b6117735760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610be3565b610c288160016130e0565b6117866128ce565b6117a25760405162461bcd60e51b8152600401610be390615637565b6111c68282613012565b6000610a3a826131d8565b6117bf6128ce565b6117db5760405162461bcd60e51b8152600401610be390615637565b610c2881613096565b61183860405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600f6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e0840191906118b8906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546118e4906155cb565b80156119315780601f1061190657610100808354040283529160200191611931565b820191906000526020600020905b81548152906001019060200180831161191457829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611961576119616323d3ad8160e21b6128b8565b6001600160401b03611971612838565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6119a86128ce565b6119c45760405162461bcd60e51b8152600401610be390615637565b600d54600e548183156119de576119db82846156be565b90505b600e859055600d8190556000805b86811015611b9157801580611a245750878782818110611a0e57611a0e61571f565b9050602002810190611a209190615735565b3582105b611a555760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610be3565b6000600f81611a6484876156be565b8152602001908152602001600020600201549050888883818110611a8a57611a8a61571f565b9050602002810190611a9c9190615735565b60200135811115611ae45760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610be3565b888883818110611af657611af661571f565b9050602002810190611b089190615735565b600f6000611b1685886156be565b81526020019081526020016000208181611b3091906158a0565b50819050600f6000611b4285886156be565b8152602081019190915260400160002060020155888883818110611b6857611b6861571f565b9050602002810190611b7a9190615735565b359250819050611b898161591e565b9150506119ec565b508415611c1157835b82811015611c0b576000818152600f6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611bf66007830182614bb1565b50508080611c039061591e565b915050611b9a565b50611ca0565b85831115611ca057855b83811015611c9e57600f6000611c3183866156be565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590611c896007830182614bb1565b50508080611c969061591e565b915050611c1b565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098878787604051611cd3939291906159a7565b60405180910390a150505050505050565b606060016000611cf2612ce8565b90506060818314611d0b57611d08858484613296565b90505b949350505050565b6000611d1d612585565b9050611d3481611d2b61339e565b88888888610c4b565b506000818152600f602052604081206002018054889290611d569084906156be565b909155505060008181526010602052604081208791611d7361339e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611da291906156be565b90915550611db5905060008787876133a8565b6000611dc1888861348c565b9050876001600160a01b0316611dd561339e565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611e19929190918252602082015260400190565b60405180910390a45050505050505050565b6000828152600c602052604081205481805b82811015611f11576000868152600c602090815260408083208484526001019091529020546001600160a01b031615611eba5784821415611ea8576000868152600c602090815260408083209383526001909301905220546001600160a01b03169250610a3a915050565b611eb36001836156be565b9150611eff565b611ec5866000611f1a565b8015611eec57506000868152600c6020908152604080832083805260020190915290205481145b15611eff57611efc6001836156be565b91505b611f0a6001826156be565b9050611e3d565b50505092915050565b6000918252600a602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611f4d6128ce565b611f695760405162461bcd60e51b8152600401610be390615637565b610c2881612f30565b6060611f7c612838565b6003018054610a58906155cb565b6060611f97848484613296565b90505b9392505050565b611fa96128ce565b611fc55760405162461bcd60e51b8152600401610be390615637565b610bf68383836134a2565b607554829060ff1615612085576daaeb6d7670e522a718067333cd4e3b1561208557604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906120259030908590600401615600565b602060405180830381865afa158015612042573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612066919061561a565b6120855780604051633b79c77360e21b8152600401610be39190614d49565b610bf68383613549565b6000600161209b612ce8565b03905090565b6000828152600a6020908152604080832083805290915281205460ff166120ee57506000828152600a602090815260408083206001600160a01b038516845290915290205460ff16610a3a565b50600192915050565b6120ff6135eb565b61211b5760405162461bcd60e51b8152600401610be390615637565b610c28816135fb565b6060816001600160401b0381111561213e5761213e614f45565b60405190808252806020026020018201604052801561217157816020015b606081526020019060019003908161215c5790505b50905060005b82811015612211576121e1308585848181106121955761219561571f565b90506020028101906121a79190615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061382992505050565b8282815181106121f3576121f361571f565b602002602001018190525080806122099061591e565b915050612177565b5092915050565b600680548190612227906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612253906155cb565b80156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b5050505050908060010180546122b5906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546122e1906155cb565b801561232e5780601f106123035761010080835404028352916020019161232e565b820191906000526020600020905b81548152906001019060200180831161231157829003601f168201915b505050505090806002018054612343906155cb565b80601f016020809104026020016040519081016040528092919081815260200182805461236f906155cb565b80156123bc5780601f10612391576101008083540402835291602001916123bc565b820191906000526020600020905b81548152906001019060200180831161239f57829003601f168201915b5050505050908060030180546123d1906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546123fd906155cb565b801561244a5780601f1061241f5761010080835404028352916020019161244a565b820191906000526020600020905b81548152906001019060200180831161242d57829003601f168201915b5050505050905084565b607554849060ff161561252b576daaeb6d7670e522a718067333cd4e3b1561252b576001600160a01b038116331415612498576124938585858561384e565b612537565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906124cb9030903390600401615600565b602060405180830381865afa1580156124e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250c919061561a565b61252b5733604051633b79c77360e21b8152600401610be39190614d49565b6125378585858561384e565b5050505050565b612546614beb565b6001821061258057612556612ce8565b821015612580575b61256782613889565b612577576000199091019061255e565b610a3a826138a9565b919050565b600e54600d54600091829161259a91906156be565b90505b600d548111156125f157600f60006125b6600184615a8f565b81526020019081526020016000206000015442106125df576125d9600182615a8f565b91505090565b806125e981615aa6565b91505061259d565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610be3565b60606126338261285c565b6126655760405162461bcd60e51b815260206004820152600360248201526208525160ea1b6044820152606401610be3565b610a3a826138d4565b6000818152600c6020526040812054815b818110156126d2576000848152600c602090815260408083208484526001019091529020546001600160a01b0316156126c0576126bd6001846156be565b92505b6126cb6001826156be565b905061267f565b506126de836000611f1a565b156126f1576126ee6001836156be565b91505b50919050565b6000828152600b60205260409020546112909033612bb5565b6001805461271d906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612749906155cb565b80156127965780601f1061276b57610100808354040283529160200191612796565b820191906000526020600020905b81548152906001019060200180831161277957829003601f168201915b505050505081565b60006127a8612838565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160a01b03163b151590565b60006301ffc9a760e01b6001600160e01b03198316148061281b57506380ac58cd60e01b6001600160e01b03198316145b80610a3a5750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000816001116125805761286e612838565b548210156125805760005b612881612838565b600084815260049190910160205260409020549050806128ab576128a483615aa6565b9250612879565b600160e01b161592915050565b8060005260046000fd5b6111c682826001613b4c565b60006112a4816106e4613c0f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000808281805b87518110156129f0576129496002836156d6565b9150600088828151811061295f5761295f61571f565b602002602001015190508084116129a15760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506129dd565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836129da91906156be565b92505b50806129e88161591e565b915050612935565b50941495939450505050565b6000612a07826131d8565b6001600160a01b039485169490915081168414612a2d57612a2d62a1148160e81b6128b8565b600080612a3984613c19565b91509150612a5f8187612a4a61339e565b6001600160a01b039081169116811491141790565b612a8357612a6f86610a0f61339e565b612a8357612a83632ce44b5f60e11b6128b8565b612a908686866001613c41565b8015612a9b57600082555b612aa3612838565b6001600160a01b0387166000908152600591909101602052604090208054600019019055612acf612838565b6001600160a01b03861660009081526005919091016020526040902080546001019055612b0085600160e11b613cd0565b612b08612838565b60008681526004919091016020526040902055600160e11b8316612b775760018401612b32612838565b60008281526004919091016020526040902054612b7557612b51612838565b548114612b755783612b61612838565b600083815260049190910160205260409020555b505b6001600160a01b038516848188600080516020615fd4833981519152600080a480612bac57612bac633a954ecd60e21b6128b8565b50505050505050565b6000828152600a602090815260408083206001600160a01b038516845290915290205460ff166111c657612bf3816001600160a01b03166014613ce5565b612bfe836020613ce5565b604051602001612c0f929190615ad9565b60408051601f198184030181529082905262461bcd60e51b8252610be391600401614d36565b612c3f8282613e80565b6111c68282613edb565b6075805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba78096906020015b60405180910390a150565b612c9b8282613f48565b6000828152600c602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6000612cf2612838565b54919050565b610bf683838360405180602001604052806000815250612454565b6000612d1e836131d8565b905080600080612d2d86613c19565b915091508415612d6857612d448184612a4a61339e565b612d6857612d5483610a0f61339e565b612d6857612d68632ce44b5f60e11b6128b8565b612d76836000886001613c41565b8015612d8157600082555b6001600160801b03612d91612838565b6001600160a01b0385166000908152600591909101602052604090208054919091019055612dc383600360e01b613cd0565b612dcb612838565b60008881526004919091016020526040902055600160e11b8416612e3a5760018601612df5612838565b60008281526004919091016020526040902054612e3857612e14612838565b548114612e385784612e24612838565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020615fd4833981519152908390a4612e68612838565b600190810180549091019055505050505050565b7fee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85f90565b600054610100900460ff16612ec75760405162461bcd60e51b8152600401610be390615b46565b612ecf613faa565b610c2881613fd1565b612ee0612e7c565b54610100900460ff16612f055760405162461bcd60e51b8152600401610be390615b91565b6111c68282614060565b612f2e733cc6cdda760b79bafa08df41ecfa224f810dceb660016140dc565b565b600060018054612f3f906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612f6b906155cb565b8015612fb85780601f10612f8d57610100808354040283529160200191612fb8565b820191906000526020600020905b815481529060010190602001808311612f9b57829003601f168201915b50508551939450612fd493600193506020870192509050614c12565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613006929190615be5565b60405180910390a15050565b6127108111156130345760405162461bcd60e51b8152600401610be390615c13565b600280546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6daaeb6d7670e522a718067333cd4e3b156111c6576001600160a01b0382163b156131a757801561317457604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe9061313e9030908690600401615600565b600060405180830381600087803b15801561315857600080fd5b505af115801561316c573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af29039061313e9030908690600401615600565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e4869061313e903090600401614d49565b600081600111613286576131ea612838565b600083815260049190910160205260409020549050806132765761320c612838565b54821061322357613223636f96cda160e11b6128b8565b61322b612838565b600019909201600081815260049390930160205260409092205490508061325157613223565b600160e01b811661326157919050565b613271636f96cda160e11b6128b8565b613223565b600160e01b811661328657919050565b612580636f96cda160e11b6128b8565b60608183106132af576132af631960ccad60e11b6128b8565b60018310156132bd57600192505b60006132c7612ce8565b90508083106132d4578092505b606060006132e187611941565b858710908102915081156133925781878703116132fe5786860391505b60405192506001820160051b8301604052600061331a8861253e565b90506000816040015161332b575080515b60005b6133378a6138a9565b925060408301516000811461334f5760009250613374565b83511561335b57835192505b8b831860601b613374576001820191508a8260051b8801525b5060018a019950888a148061338857508481145b1561332e57855250505b50909695505050505050565b60006112a4613c0f565b806133e457341561104a5760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610be3565b60006133f082856156d6565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156134225750348114613426565b5034155b806134585760405162461bcd60e51b815260206004820152600260248201526110ab60f11b6044820152606401610be3565b60006001600160a01b0387161561346f5786613477565b613477610adb565b9050612bac85613485613c0f565b83866140e6565b6000613496612ce8565b9050610a3a838361412b565b6127108111156134c45760405162461bcd60e51b8152600401610be390615c13565b6040805180820182526001600160a01b038481168083526020808401868152600089815260038352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b80613552612838565b600701600061355f61339e565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556135a361339e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516135df911515815260200190565b60405180910390a35050565b60006112a46077546106e4613c0f565b6040805160808101909152806136118380615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060209081019061365a90840184615755565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016136a16040840184615755565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016136e86060840184615755565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051805160069161373491839160200190614c12565b50602082810151805161374d9260018501920190614c12565b5060408201518051613769916002840191602090910190614c12565b5060608201518051613785916003840191602090910190614c12565b5050604080516000815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c92500160405180910390a17f8edd7f36d5f01bd45e59cf55b0a670dcf701fc20f678970a8c243b2346d6acaf6137ee8280615755565b6137fb6020850185615755565b6138086040870187615755565b6138156060890189615755565b604051612c86989796959493929190615c3c565b6060611f9a8383604051806060016040528060278152602001615fad60279139614145565b61385984848461100c565b6001600160a01b0383163b156110ed5761387584848484614220565b6110ed576110ed6368d2bf6b60e11b6128b8565b6000613893612838565b6000928352600401602052506040902054151590565b6138b1614beb565b610a3a6138bc612838565b60008481526004919091016020526040902054614305565b6060600060066040518060800160405290816000820180546138f5906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613921906155cb565b801561396e5780601f106139435761010080835404028352916020019161396e565b820191906000526020600020905b81548152906001019060200180831161395157829003601f168201915b50505050508152602001600182018054613987906155cb565b80601f01602080910402602001604051908101604052809291908181526020018280546139b3906155cb565b8015613a005780601f106139d557610100808354040283529160200191613a00565b820191906000526020600020905b8154815290600101906020018083116139e357829003601f168201915b50505050508152602001600282018054613a19906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613a45906155cb565b8015613a925780601f10613a6757610100808354040283529160200191613a92565b820191906000526020600020905b815481529060010190602001808311613a7557829003601f168201915b50505050508152602001600382018054613aab906155cb565b80601f0160208091040260200160405190810160405280929190818152602001828054613ad7906155cb565b8015613b245780601f10613af957610100808354040283529160200191613b24565b820191906000526020600020905b815481529060010190602001808311613b0757829003601f168201915b50505050508152505090506126ee816000015182602001518360400151846060015187614348565b6000613b57836117ac565b9050818015613b7f5750806001600160a01b0316613b7361339e565b6001600160a01b031614155b15613ba457613b9081610a0f61339e565b613ba457613ba46367d9dca160e11b6128b8565b83613bad612838565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60006112a461437d565b6000806000613c26612838565b60009485526006016020525050604090912080549092909150565b613c4e6076546000611f1a565b158015613c6357506001600160a01b03841615155b8015613c7757506001600160a01b03831615155b156110ed57613c8860765485611f1a565b158015613c9e5750613c9c60765484611f1a565b155b156110ed5760405162461bcd60e51b8152602060048201526002602482015261085560f21b6044820152606401610be3565b4260a01b176001600160a01b03919091161790565b60606000613cf48360026156d6565b613cff9060026156be565b6001600160401b03811115613d1657613d16614f45565b6040519080825280601f01601f191660200182016040528015613d40576020820181803683370190505b509050600360fc1b81600081518110613d5b57613d5b61571f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613d8a57613d8a61571f565b60200101906001600160f81b031916908160001a9053506000613dae8460026156d6565b613db99060016156be565b90505b6001811115613e31576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613ded57613ded61571f565b1a60f81b828281518110613e0357613e0361571f565b60200101906001600160f81b031916908160001a90535060049490941c93613e2a81615aa6565b9050613dbc565b508315611f9a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610be3565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600c6020526040812080549160019190613efa83856156be565b90915550506000928352600c6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613f528282612bb5565b6000828152600a602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16612f2e5760405162461bcd60e51b8152600401610be390615b46565b600054610100900460ff16613ff85760405162461bcd60e51b8152600401610be390615b46565b60005b81518110156111c65760016043600084848151811061401c5761401c61571f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806140588161591e565b915050613ffb565b614068612e7c565b54610100900460ff1661408d5760405162461bcd60e51b8152600401610be390615b91565b81614096612838565b60020190805190602001906140ac929190614c12565b50806140b6612838565b60030190805190602001906140cc929190614c12565b5060016140d7612838565b555050565b6111c682826130e0565b806140f0576110ed565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561411f5761104a828261439f565b6110ed84848484614441565b6111c682826040518060200160405280600081525061449a565b6060614150846127db565b6141ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610be3565b600080856001600160a01b0316856040516141c69190615c9c565b600060405180830381855af49150503d8060008114614201576040519150601f19603f3d011682016040523d82523d6000602084013e614206565b606091505b509150915061421682828661450c565b9695505050505050565b6000836001600160a01b031663150b7a0261423961339e565b8786866040518563ffffffff1660e01b815260040161425b9493929190615cae565b6020604051808303816000875af1925050508015614296575060408051601f3d908101601f1916820190925261429391810190615ce1565b60015b6142e8573d8080156142c4576040519150601f19603f3d011682016040523d82523d6000602084013e6142c9565b606091505b5080516142e0576142e06368d2bf6b60e11b6128b8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b61430d614beb565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b606060006143568585614545565b90506000614366888884876145d2565b905061437181614618565b98975050505050505050565b6000614388336116f0565b1561439a575060131936013560601c90565b503390565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146143ec576040519150601f19603f3d011682016040523d82523d6000602084013e6143f1565b606091505b5050905080610bf65760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610be3565b816001600160a01b0316836001600160a01b03161415614460576110ed565b6001600160a01b0383163014156144855761104a6001600160a01b0385168383614649565b6110ed6001600160a01b03851684848461469f565b6144a483836146d7565b6001600160a01b0383163b15610bf65760006144be612838565b5490508281035b6144d86000868380600101945086614220565b6144ec576144ec6368d2bf6b60e11b6128b8565b8181106144c557816144fc612838565b54146125375761253760006128b8565b6060831561451b575081611f9a565b82511561452b5782518084602001fd5b8160405162461bcd60e51b8152600401610be39190614d36565b8151815160609115801591151590829061455c5750805b1561458c578484604051602001614574929190615cfe565b60405160208183030381529060405292505050610a3a565b81156145a357846040516020016145749190615d75565b80156145ba57836040516020016145749190615db5565b50506040805160208101909152600081529392505050565b6060846145de836147b6565b85856145e9866147b6565b896040516020016145ff96959493929190615dfd565b6040516020818303038152906040529050949350505050565b6060614623826148b3565b6040516020016146339190615f13565b6040516020818303038152906040529050919050565b610bf68363a9059cbb60e01b8484604051602401614668929190614ed1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614a06565b6040516001600160a01b03808516602483015283166044820152606481018290526110ed9085906323b872dd60e01b90608401614668565b60006146e1612838565b549050816146f9576146f963b562e8dd60e01b6128b8565b6147066000848385613c41565b614716836001841460e11b613cd0565b61471e612838565b600083815260049190910160205260409020556001600160401b018202614743612838565b6001600160a01b0385166000818152600592909201602052604090912080549092019091558061477c5761477c622e076360e81b6128b8565b818301825b80836000600080516020615fd4833981519152600080a46001018082141561478157816147ac612838565b5550610bf6915050565b6060816147da5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561480457806147ee8161591e565b91506147fd9050600a8361570b565b91506147de565b6000816001600160401b0381111561481e5761481e614f45565b6040519080825280601f01601f191660200182016040528015614848576020820181803683370190505b5090505b8415611d0b5761485d600183615a8f565b915061486a600a86615f58565b6148759060306156be565b60f81b81838151811061488a5761488a61571f565b60200101906001600160f81b031916908160001a9053506148ac600a8661570b565b945061484c565b60608151600014156148d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001615f6d604091399050600060038451600261490291906156be565b61490c919061570b565b6149179060046156d6565b6001600160401b0381111561492e5761492e614f45565b6040519080825280601f01601f191660200182016040528015614958576020820181803683370190505b509050600182016020820185865187015b808210156149c4576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250614969565b50506003865106600181146149e057600281146149f3576149fb565b603d6001830353603d60028303536149fb565b603d60018303535b509195945050505050565b6000614a5b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ad89092919063ffffffff16565b805190915015610bf65780806020019051810190614a79919061561a565b610bf65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610be3565b6060611f97848460008585614aec856127db565b614b385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610be3565b600080866001600160a01b03168587604051614b549190615c9c565b60006040518083038185875af1925050503d8060008114614b91576040519150601f19603f3d011682016040523d82523d6000602084013e614b96565b606091505b5091509150614ba682828661450c565b979650505050505050565b508054614bbd906155cb565b6000825580601f10614bcd575050565b601f016020900490600052602060002090810190610c289190614c96565b60408051608081018252600080825260208201819052918101829052606081019190915290565b828054614c1e906155cb565b90600052602060002090601f016020900481019282614c405760008555614c86565b82601f10614c5957805160ff1916838001178555614c86565b82800160010185558215614c86579182015b82811115614c86578251825591602001919060010190614c6b565b50614c92929150614c96565b5090565b5b80821115614c925760008155600101614c97565b6001600160e01b031981168114610c2857600080fd5b600060208284031215614cd357600080fd5b8135611f9a81614cab565b60005b83811015614cf9578181015183820152602001614ce1565b838111156110ed5750506000910152565b60008151808452614d22816020860160208601614cde565b601f01601f19169290920160200192915050565b602081526000611f9a6020830184614d0a565b6001600160a01b0391909116815260200190565b600060208284031215614d6f57600080fd5b5035919050565b6001600160a01b0381168114610c2857600080fd5b803561258081614d76565b60008060408385031215614da957600080fd5b8235614db481614d76565b946020939093013593505050565b600060208284031215614dd457600080fd5b8135611f9a81614d76565b6000608082840312156126f157600080fd5b60008060008060008060c08789031215614e0a57600080fd5b863595506020870135614e1c81614d76565b9450604087013593506060870135614e3381614d76565b92506080870135915060a08701356001600160401b03811115614e5557600080fd5b614e6189828a01614ddf565b9150509295509295509295565b600080600060608486031215614e8357600080fd5b8335614e8e81614d76565b92506020840135614e9e81614d76565b929592945050506040919091013590565b60008060408385031215614ec257600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614efd57600080fd5b823591506020830135614f0f81614d76565b809150509250929050565b8015158114610c2857600080fd5b600060208284031215614f3a57600080fd5b8135611f9a81614f1a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f8357614f83614f45565b604052919050565b600082601f830112614f9c57600080fd5b81356001600160401b03811115614fb557614fb5614f45565b614fc8601f8201601f1916602001614f5b565b818152846020838601011115614fdd57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261500b57600080fd5b813560206001600160401b0382111561502657615026614f45565b8160051b615035828201614f5b565b928352848101820192828101908785111561504f57600080fd5b83870192505b84831015614ba657823561506881614d76565b82529183019190830190615055565b80356001600160801b038116811461258057600080fd5b600080600080600080600080610100898b0312156150ab57600080fd5b6150b489614d8b565b975060208901356001600160401b03808211156150d057600080fd5b6150dc8c838d01614f8b565b985060408b01359150808211156150f257600080fd5b6150fe8c838d01614f8b565b975060608b013591508082111561511457600080fd5b6151208c838d01614f8b565b965060808b013591508082111561513657600080fd5b506151438b828c01614ffa565b94505061515260a08a01614d8b565b925061516060c08a01614d8b565b915061516e60e08a01615077565b90509295985092959890939650565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e0830151610100808185015250611d0b610120840182614d0a565b60008083601f8401126151fc57600080fd5b5081356001600160401b0381111561521357600080fd5b6020830191508360208260051b850101111561522e57600080fd5b9250929050565b60008060006040848603121561524a57600080fd5b83356001600160401b0381111561526057600080fd5b61526c868287016151ea565b909450925050602084013561528081614f1a565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015613392578351835292840192918401916001016152a7565b60008060008060008060c087890312156152dc57600080fd5b86356152e781614d76565b95506020870135945060408701356152fe81614d76565b93506060870135925060808701356001600160401b038082111561532157600080fd5b61532d8a838b01614ddf565b935060a089013591508082111561534357600080fd5b50614e6189828a01614f8b565b60006020828403121561536257600080fd5b81356001600160401b0381111561537857600080fd5b611d0b84828501614f8b565b60008060006060848603121561539957600080fd5b83356153a481614d76565b95602085013595506040909401359392505050565b6000806000606084860312156153ce57600080fd5b833592506020840135614e9e81614d76565b600080604083850312156153f357600080fd5b82356153fe81614d76565b91506020830135614f0f81614f1a565b60006020828403121561542057600080fd5b81356001600160401b0381111561543657600080fd5b611d0b84828501614ddf565b6000806020838503121561545557600080fd5b82356001600160401b0381111561546b57600080fd5b615477858286016151ea565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156154d857603f198886030184526154c6858351614d0a565b945092850192908501906001016154aa565b5092979650505050505050565b6080815260006154f86080830187614d0a565b828103602084015261550a8187614d0a565b9050828103604084015261551e8186614d0a565b90508281036060840152614ba68185614d0a565b6000806000806080858703121561554857600080fd5b843561555381614d76565b9350602085013561556381614d76565b92506040850135915060608501356001600160401b0381111561558557600080fd5b61559187828801614f8b565b91505092959194509250565b600080604083850312156155b057600080fd5b82356155bb81614d76565b91506020830135614f0f81614d76565b600181811c908216806155df57607f821691505b602082108114156126f157634e487b7160e01b600052602260045260246000fd5b6001600160a01b0392831681529116602082015260400190565b60006020828403121561562c57600080fd5b8151611f9a81614f1a565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e1984360301811261567657600080fd5b8301803591506001600160401b0382111561569057600080fd5b6020019150600581901b360382131561522e57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156156d1576156d16156a8565b500190565b60008160001904831182151516156156f0576156f06156a8565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261571a5761571a6156f5565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261574b57600080fd5b9190910192915050565b6000808335601e1984360301811261576c57600080fd5b8301803591506001600160401b0382111561578657600080fd5b60200191503681900382131561522e57600080fd5b601f821115610bf657600081815260208120601f850160051c810160208610156157c25750805b601f850160051c820191505b8181101561316c578281556001016157ce565b6001600160401b038311156157f8576157f8614f45565b61580c8361580683546155cb565b8361579b565b6000601f84116001811461584057600085156158285750838201355b600019600387901b1c1916600186901b178355612537565b600083815260209020601f19861690835b828110156158715786850135825560209485019460019092019101615851565b508682101561588e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356158e881614d76565b81546001600160a01b0319166001600160a01b039190911617905561591060e0830183615755565b6110ed8183600786016157e1565b6000600019821415615932576159326156a8565b5060010190565b6000808335601e1984360301811261595057600080fd5b83016020810192503590506001600160401b0381111561596f57600080fd5b80360383131561522e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015615a7957888403605f190185528235368d900360fe190181126159ec578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135615a3381614d76565b6001600160a01b03169088015260e0615a4e84820185615939565b945083828a0152615a62848a01868361597e565b9983019998505050949094019350506001016159c7565b50505086151560208701529350611d0b92505050565b600082821015615aa157615aa16156a8565b500390565b600081615ab557615ab56156a8565b506000190190565b60008151615acf818560208601614cde565b9290920192915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b09816015850160208801614cde565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615b3a816026840160208801614cde565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b604081526000615bf86040830185614d0a565b8281036020840152615c0a8185614d0a565b95945050505050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b608081526000615c50608083018a8c61597e565b8281036020840152615c6381898b61597e565b90508281036040840152615c7881878961597e565b90508281036060840152615c8d81858761597e565b9b9a5050505050505050505050565b6000825161574b818460208701614cde565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061421690830184614d0a565b600060208284031215615cf357600080fd5b8151611f9a81614cab565b6834b6b0b3b2911d101160b91b81528251600090615d23816009850160208801614cde565b741116101130b734b6b0ba34b7b72fbab936111d101160591b6009918401918201528351615d5881601e840160208801614cde565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b81528151600090615d9a816009850160208701614cde565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528151600090615de2816011850160208701614cde565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b81528651600090615e2381600a850160208c01614cde565b600160fd1b600a918401918201528751615e4481600b840160208c01614cde565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f8301528751615e8381601e850160208c01614cde565b601e9201918201528551615e9e816022840160208a01614cde565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b60229290910191820152615f06615ef7615ef1615eda603a850189615abd565b6a1610113730b6b2911d101160a91b8152600b0190565b86615abd565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251615f4b81601d850160208701614cde565b91909101601d0192915050565b600082615f6757615f676156f5565b50069056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c2ce901cf1be759dd854bb641fa91a4f83ee23226fc842ee646daeafc097cc5e64736f6c634300080c0033",
    "sourceMap": "1585:10184:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4494:301;;;;;;;;;;-1:-1:-1;4494:301:2;;;;;:::i;:::-;;:::i;:::-;;;661:14:641;;654:22;636:41;;624:2;609:18;4494:301:2;;;;;;;;9336:122:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:136:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16415:247:108:-;;;;;;;;;;-1:-1:-1;16415:247:108;;;;;:::i;:::-;;:::i;10030:240:2:-;;;;;;:::i;:::-;;:::i;:::-;;1133:173:132;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;4918:365:108:-;;;;;;;;;;;;;:::i;:::-;;;2847:25:641;;;2835:2;2820:18;4918:365:108;2701:177:641;4806:2222:120;;;;;;;;;;-1:-1:-1;4806:2222:120;;;;;:::i;:::-;;:::i;10317:240:2:-;;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1421:347:139;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:133:-;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;4466:217:133:-;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;8570:99:2:-;;;;;;;;;;;;;:::i;10608:248::-;;;;;;:::i;:::-;;:::i;8894:184::-;;;;;;;;;;-1:-1:-1;8894:184:2;;;;;:::i;:::-;;:::i;2735:1176::-;;;;;;;;;;-1:-1:-1;2735:1176:2;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9342:32:641;;;9324:51;;9423:6;9411:19;;;9406:2;9391:18;;9384:47;9297:18;2008:381:139;9152:285:641;205:31:129;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;918:134:304;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;509:199:118:-;;;;;;;;;;-1:-1:-1;509:199:118;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;10745:150:108:-;;;;;;;;;;-1:-1:-1;10745:150:108;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;7548:177:120:-;;;;;;;;;;-1:-1:-1;7548:177:120;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:108:-;;;;;;;;;;-1:-1:-1;6165:263:108;;;;;:::i;:::-;;:::i;1949:2760:120:-;;;;;;;;;;-1:-1:-1;1949:2760:120;;;;;:::i;:::-;;:::i;3016:319:106:-;;;;;;;;;;-1:-1:-1;3016:319:106;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;699:1187:120:-;;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;-1:-1:-1;944:6:132;;-1:-1:-1;;;;;944:6:132;871:86;;1643:633:134;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;9529:126:108:-;;;;;;;;;;;;;:::i;2364:217:106:-;;;;;;;;;;-1:-1:-1;2364:217:106;;;;;:::i;:::-;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;742:49:133:-;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;9746:243:2;;;;;;;;;;-1:-1:-1;9746:243:2;;;;;:::i;:::-;;:::i;8343:145::-;;;;;;;;;;;;;:::i;2206:211:133:-;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;417:217:140:-;;;;;;;;;;-1:-1:-1;417:217:140;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7807:255:120:-;;;;;;;;;;-1:-1:-1;7807:255:120;;;;;:::i;:::-;7926:29;7995:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;7995:60:120;;;;;;;;;;;;7807:255;2499:144:139;;;;;;;;;;-1:-1:-1;2599:16:139;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;325:40:140;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;10907:281:2:-;;;;;;:::i;:::-;;:::i;1411:579:106:-;;;;;;;;;;-1:-1:-1;1411:579:106;;;;;:::i;:::-;;:::i;:::-;;;;;;18358:13:641;;-1:-1:-1;;;;;18354:39:641;18336:58;;18454:4;18442:17;;;18436:24;-1:-1:-1;;;;;18432:49:641;18410:20;;;18403:79;18552:4;18540:17;;;18534:24;18527:32;18520:40;18498:20;;;18491:70;18621:4;18609:17;;;18603:24;18629:8;18599:39;18577:20;;;18570:69;;;;18323:3;18308:19;;18123:522;7116:367:120;;;;;;;;;;;;;:::i;4158:305:2:-;;;;;;;;;;-1:-1:-1;4158:305:2;;;;;:::i;:::-;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;3897:171:133:-;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;430:40:120:-;;;;;;;;;;-1:-1:-1;430:40:120;;;;;;;;;;;;;18824:25:641;;;18880:2;18865:18;;18858:34;;;;18797:18;430:40:120;18650:248:641;4948:93:2;;;;;;;;;;-1:-1:-1;4934:1:2;4948:93;8570:99;565:34:116;;;;;;;;;;;;;:::i;17394:186:108:-;;;;;;;;;;-1:-1:-1;17394:186:108;;;;;:::i;:::-;;:::i;4494:301:2:-;4669:4;4696:36;4720:11;4696:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4736:52:2;;;4696:92;4689:99;4494:301;-1:-1:-1;;4494:301:2:o;9336:122:108:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;16415:247:108:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:108;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:108;;;:54;-1:-1:-1;;;;;16601:54:108;;16415:247::o;10030:240:2:-;1886:19:131;;10207:8:2;;1886:19:131;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:131;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:131;;;;;;;;:::i;:::-;;;;;;;;1994:150;10231:32:2::1;10245:8;10255:7;10231:13;:32::i;:::-;10030:240:::0;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;4918:365:108:-;4979:7;4934:1:2;5212:23:108;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:108:o;4806:2222:120:-;5045:15;5114:39;;;:25;:39;;;;;;;;5072:81;;;;;;;;;;;;;;;;;;;;;;5114:25;5072:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5072:81:120;;;;;;;;;;5045:15;;5072:81;5114:39;5072:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5072:81:120;;;;-1:-1:-1;;;5184:40:120;;;;5255:31;;;;5320:26;;;;5361:28;;;;5072:81;;-1:-1:-1;5184:40:120;;5255:31;;5320:26;5361:42;5357:515;;5436:425;5472:21;:15;;:21;:::i;:::-;5436:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5511:28:120;;;;;;-1:-1:-1;5630:8:120;;5664:38;;;;;5728:29;;;;;5783:24;;;;;;;;:::i;:::-;5588:241;;-1:-1:-1;;;;;;21368:2:641;21404:15;;;21400:24;;5588:241:120;;;21388:37:641;21441:12;;;21434:28;;;;21478:12;;;21471:28;;;;21533:15;;;21529:24;21515:12;;;21508:46;21570:13;;5588:241:120;;;;;;;;;;;;5557:290;;;;;;5436:18;:425::i;:::-;-1:-1:-1;5419:442:120;-1:-1:-1;5357:515:120;5886:10;5882:534;;;5925:38;;;;:129;;6044:10;5925:129;;;5987:15;:38;;;5925:129;5912:142;;-1:-1:-1;;6081:15:120;:29;;;:50;;:127;;6198:10;6081:127;;;6150:15;:29;;;6081:127;6068:140;;-1:-1:-1;;6238:15:120;:29;;;:50;;:92;;;;-1:-1:-1;6328:1:120;6292:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6292:38:120;;;6238:92;:167;;6392:13;6238:167;;;6349:24;;;;;;;;:::i;:::-;6222:183;;5882:534;6426:29;6458:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6458:60:120;;;;;;;;;;;;6533:26;;;;;;;;;:58;;;6581:10;6563:14;:28;;6533:58;6529:115;;;6607:26;;-1:-1:-1;;;6607:26:120;;21796:2:641;6607:26:120;;;21778:21:641;21835:2;21815:18;;;21808:30;-1:-1:-1;;;21854:18:641;;;21847:46;21910:18;;6607:26:120;21594:340:641;6529:115:120;6658:14;;;:66;;-1:-1:-1;6713:10:120;6677:33;6689:21;6677:9;:33;:::i;:::-;:46;6658:66;6654:111;;;6740:14;;-1:-1:-1;;;6740:14:120;;;;;;22406:2:641;22388:21;;;22445:1;22425:18;;;22418:29;-1:-1:-1;;;22478:2:641;22463:18;;22456:34;22522:2;22507:18;;22204:327;6654:111:120;6824:17;:36;;;6812:9;6778:17;:31;;;:43;;;;:::i;:::-;:82;6774:133;;;6876:20;;-1:-1:-1;;;6876:20:120;;22738:2:641;6876:20:120;;;22720:21:641;22777:2;22757:18;;;22750:30;-1:-1:-1;;;22796:18:641;;;22789:40;22846:18;;6876:20:120;22536:334:641;6774:133:120;6921:32;;6956:15;-1:-1:-1;6917:105:120;;;6987:24;;-1:-1:-1;;;6987:24:120;;23077:2:641;6987:24:120;;;23059:21:641;23116:2;23096:18;;;23089:30;-1:-1:-1;;;23135:18:641;;;23128:44;23189:18;;6987:24:120;22875:338:641;6917:105:120;5062:1966;;;;;4806:2222;;;;;;;;:::o;10317:240:2:-;1064:19:131;;10497:4:2;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;10513:37:2::1;10532:4;10538:2;10542:7;10513:18;:37::i;:::-;1461:7:131::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;10513:37:2::1;10532:4;10538:2;10542:7;10513:18;:37::i;:::-;10317:240:::0;;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;23850:2:641;3435:39:133;;;23832:21:641;23889:2;23869:18;;;23862:30;23928:31;23908:18;;;23901:59;23977:18;;3435:39:133;23648:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;24208:2:641;313:84:129;;;24190:21:641;24247:2;24227:18;;;24220:30;24286:34;24266:18;;;24259:62;-1:-1:-1;;;24337:18:641;;;24330:41;24388:19;;313:84:129;24006:407:641;313:84:129;407:37;431:12;407:23;:37::i;4466:217:133:-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;24620:2:641;4594:36:133;;;24602:21:641;24659:2;24639:18;;;24632:30;-1:-1:-1;;;24678:18:641;;;24671:56;24744:18;;4594:36:133;24418:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;8570:99:2:-;8622:7;8648:14;:12;:14::i;:::-;8641:21;;8570:99;:::o;10608:248::-;1064:19:131;;10792:4:2;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;10808:41:2::1;10831:4;10837:2;10841:7;10808:22;:41::i;1392:94:131:-:0;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;10808:41:2::1;10831:4;10837:2;10841:7;10808:22;:41::i;8894:184::-:0;9051:20;9057:7;9066:4;9051:5;:20::i;2735:1176::-;1660:38:109;:36;:38::i;:::-;:52;;;;;;:158;;1767:38;:36;:38::i;:::-;:51;;;1766:52;1660:158;;;3233:4;3297:17;3340:7;1731:16;1639:260;;;;-1:-1:-1;;;1639:260:109;;24975:2:641;1639:260:109;;;24957:21:641;25014:2;24994:18;;;24987:30;25053:34;25033:18;;;25026:62;-1:-1:-1;;;25104:18:641;;;25097:53;25167:19;;1639:260:109;24773:419:641;1639:260:109;1910:19;1933:38;:36;:38::i;:::-;:52;;;;;;1932:53;;-1:-1:-1;1995:176:109;;;;2084:4;2029:38;:36;:38::i;:::-;:59;;;;;;;-1:-1:-1;;2029:59:109;;;;;;;;;:52;2102:38;:36;:38::i;:::-;:58;;-1:-1:-1;;2102:58:109;;;;;;;;;;1995:176;3111:19:436::1;3134:13:::0;::::1;::::0;::::1;;;3133:14;::::0;3179:34;::::1;;;-1:-1:-1::0;3197:12:436::1;::::0;3212:1:::1;3197:12;::::0;;::::1;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1::0;3268:12:436::1;::::0;::::1;;::::0;:17:::1;3219:66;3157:201;;;::::0;-1:-1:-1;;;3157:201:436;;25399:2:641;3157:201:436::1;::::0;::::1;25381:21:641::0;25438:2;25418:18;;;25411:30;25477:34;25457:18;;;25450:62;-1:-1:-1;;;25528:18:641;;;25521:44;25582:19;;3157:201:436::1;25197:410:641::0;3157:201:436::1;3368:12;:16:::0;;-1:-1:-1;;3368:16:436::1;3383:1;3368:16;::::0;;3394:65;::::1;;;3428:13;:20:::0;;-1:-1:-1;;3428:20:436::1;;;::::0;;3394:65:::1;3103:26:2::2;3161:24;3271:41;3293:18:::0;3271:21:::2;:41::i;:::-;3322:30;3337:5;3344:7;3322:14;:30::i;:::-;3362:32;:30;:32::i;:::-;3405:31;3423:12;3405:17;:31::i;:::-;3446:26;3458:13;3446:11;:26::i;:::-;3482:29;3506:4;3482:23;:29::i;:::-;3522:45;787:4:133;3553:13:2::0;3522:10:::2;:45::i;:::-;3577:38;3588:11;3601:13;3577:10;:38::i;:::-;3625:40;3636:13;3651;3625:10;:40::i;:::-;3675:37;3686:13;3709:1;3675:10;:37::i;:::-;3723:56;3748:17;3767:11;-1:-1:-1::0;;;;;3723:56:2::2;:24;:56::i;:::-;3789:42;3816:14;3789:26;:42::i;:::-;3842:12;:28:::0;;;;3880:10:::2;:24:::0;3479:99:436;::::1;;;3529:5;3513:21:::0;;-1:-1:-1;;3513:21:436::1;::::0;;3553:14:::1;::::0;-1:-1:-1;25764:36:641;;3553:14:436::1;::::0;25752:2:641;25737:18;3553:14:436::1;;;;;;;3479:99;3101:483;2197:14:109::0;2193:105;;;2282:5;2227:38;:36;:38::i;:::-;:60;;;;;;;-1:-1:-1;;2227:60:109;;;;;;;;;2193:105;1358:946;2735:1176:2;;;;;;;;:::o;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:118:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:118;;26013:2:641;580:81:118;;;25995:21:641;26052:2;26032:18;;;26025:30;26091:34;26071:18;;;26064:62;-1:-1:-1;;;26142:18:641;;;26135:38;26190:19;;580:81:118;25811:404:641;580:81:118;671:30;681:13;696:4;671:9;:30::i;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;10745:150:108:-;10817:7;10859:27;10878:7;10859:18;:27::i;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7548:177:120:-;7624:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:31:120;7679:39;;;;:25;:39;;;;;;;;;7667:51;;;;;;;;;;;;;;;;;;;;;;7679:25;7667:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7667:51:120;;;;;;;;;;;;7679:39;7667:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7548:177;;;:::o;6165:263:108:-;6237:7;-1:-1:-1;;;;;6260:19:108;;6256:69;;6281:44;-1:-1:-1;;;6281:7:108;:44::i;:::-;-1:-1:-1;;;;;6342:23:108;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:108;-1:-1:-1;;;;;6342:49:108;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;1949:2760:120:-;2114:24;:22;:24::i;:::-;2109:80;;2154:24;;-1:-1:-1;;;2154:24:120;;;;;;;:::i;2109:80::-;2228:14;:29;2296:20;;2228:29;2733:108;;;;2791:39;2812:18;2791;:39;:::i;:::-;2775:55;;2733:108;2851:20;:41;;;:14;2902:45;;;:29;;3003:643;3023:22;;;3003:643;;;3074:6;;;:69;;;3114:11;;3126:1;3114:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3084:59;;3074:69;3066:84;;;;-1:-1:-1;;;3066:84:120;;26892:2:641;3066:84:120;;;26874:21:641;26931:1;26911:18;;;26904:29;-1:-1:-1;;;26949:18:641;;;26942:32;26991:18;;3066:84:120;26690:325:641;3066:84:120;3165:28;3196:25;3165:28;3222:17;3238:1;3222:13;:17;:::i;:::-;3196:44;;;;;;;;;;;:58;;;3165:89;;3295:11;;3307:1;3295:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3272:20;:56;3268:123;;;3348:28;;-1:-1:-1;;;3348:28:120;;27222:2:641;3348:28:120;;;27204:21:641;27261:2;27241:18;;;27234:30;-1:-1:-1;;;27280:18:641;;;27273:48;27338:18;;3348:28:120;27020:342:641;3268:123:120;3452:11;;3464:1;3452:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3405:25;:44;3431:17;3447:1;3431:13;:17;:::i;:::-;3405:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3541:20:120;;-1:-1:-1;3480:25:120;:44;3506:17;3522:1;3506:13;:17;:::i;:::-;3480:44;;;;;;;;;;;-1:-1:-1;3480:44:120;:58;;:81;3606:11;;3618:1;3606:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3047:3:120;;-1:-1:-1;3047:3:120;;;:::i;:::-;;;;3003:643;;;;4186:22;4182:446;;;4241:18;4224:129;4265:13;4261:1;:17;4224:129;;;4310:28;;;;:25;:28;;;;;4303:35;;;;;;;;;4310:25;4303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4303:35:120;;;4310:28;4303:35;;;;4310:28;4303:35;:::i;:::-;;;4280:3;;;;;:::i;:::-;;;;4224:129;;;;4182:446;;;4387:39;;;4383:235;;;4463:11;4446:158;4487:18;4483:1;:22;4446:158;;;4541:25;:44;4567:17;4583:1;4567:13;:17;:::i;:::-;4541:44;;;;;;;;;;;-1:-1:-1;4541:44:120;;;4534:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4534:51:120;;;4541:44;4534:51;;;;-1:-1:-1;4534:51:120;:::i;:::-;;;4507:3;;;;;:::i;:::-;;;;4446:158;;;;4383:235;4643:59;4666:11;;4679:22;4643:59;;;;;;;;:::i;:::-;;;;;;;;2099:2610;;;;1949:2760;;;:::o;3016:319:106:-;3094:16;4934:1:2;3122:13:106;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:106:o;699:1187:120:-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:120;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:120;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:120;-1:-1:-1;;;;;1343:73:120;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:120;;-1:-1:-1;1515:1:120;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:120;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:120;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;18824:25:641;;;18880:2;18865:18;;18858:34;18812:2;18797:18;;18650:248;1698:86:120;;;;;;;;942:944;;699:1187;;;;;;:::o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;9529:126:108:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:106:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;9746:243:2:-;1886:19:131;;9915:8:2;;1886:19:131;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:131;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:131;;;;;;;;:::i;1994:150::-;9939:43:2::1;9963:8;9973;9939:23;:43::i;8343:145::-:0;8389:7;4934:1;8439:14;:12;:14::i;:::-;:32;8432:39;;8343:145;:::o;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;417:217:140:-;515:23;:21;:23::i;:::-;510:79;;554:24;;-1:-1:-1;;;554:24:140;;;;;;;:::i;510:79::-;598:29;617:9;598:18;:29::i;698:319:127:-;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;325:40:140:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10907:281:2:-;1064:19:131;;11118:4:2;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;11134:47:2::1;11157:4;11163:2;11167:7;11176:4;11134:22;:47::i;:::-;1461:7:131::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;11134:47:2::1;11157:4;11163:2;11167:7;11176:4;11134:22;:47::i;:::-;10907:281:::0;;;;;:::o;1411:579:106:-;1535:31;;:::i;:::-;4934:1:2;1610:7:106;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:106;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7116:367:120:-;7242:20;;:14;7210:29;7174:7;;;;7210:52;;7242:20;7210:52;:::i;:::-;7198:64;;7193:252;7268:14;:29;7264:33;;7193:252;;;7341:25;:32;7367:5;7371:1;7367;:5;:::i;:::-;7341:32;;;;;;;;;;;:47;;;7322:15;:66;7318:117;;7415:5;7419:1;7415;:5;:::i;:::-;7408:12;;;7116:367;:::o;7318:117::-;7299:3;;;;:::i;:::-;;;;7193:252;;;-1:-1:-1;7455:21:120;;-1:-1:-1;;;7455:21:120;;34873:2:641;7455:21:120;;;34855::641;34912:2;34892:18;;;34885:30;-1:-1:-1;;;34931:18:641;;;34924:41;34982:18;;7455:21:120;34671:335:641;4158:305:2;4313:13;4347:17;4355:8;4347:7;:17::i;:::-;4342:62;;4380:13;;-1:-1:-1;;;4380:13:2;;35213:2:641;4380:13:2;;;35195:21:641;35252:1;35232:18;;;35225:29;-1:-1:-1;;;35270:18:641;;;35263:33;35313:18;;4380:13:2;35011:326:641;4342:62:2;4421:35;4447:8;4421:25;:35::i;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17394:186:108:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:108;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:108;;;;;17394:186::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;8452:630:108:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:108;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:108;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:108;-1:-1:-1;;;9007:25:108;;8452:630::o;1793:159:107:-;1740:46;;1793:159::o;17829:408:108:-;17894:11;17940:7;4934:1:2;17921:26:108;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:108;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:108;:29;;17829:408;-1:-1:-1;;17829:408:108:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;16143:122;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;6780:127:2:-;6836:4;6859:41;6836:4;6887:12;:10;:12::i;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;35499:19:641;;;35534:12;;;35527:28;;;35571:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;35499:19:641;;;35534:12;;;35527:28;;;35571:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;20209:3591:108:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:108;;;;20346:57;;-1:-1:-1;20586:45:108;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:108;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;:17;:19::i;:::-;-1:-1:-1;;;;;18791:32:108;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;20987:19;:17;:19::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:108;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:108;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:108;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:108;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:108;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:108;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:108;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:108;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:108;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;5557:495:133:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;636:41:641;;;577:33:129;;624:2:641;609:18;577:33:129;;;;;;;;457:160;:::o;3205:157:134:-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;3255:271:133;;:::o;4590:125:108:-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:108:o;23891:187::-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:108;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;36616:19;:17;:19::i;36568:68::-;36563:192;;36659:43;36676:4;36682:19;:17;:19::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:108;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:108;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:108;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:108;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:108;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:108;;;-1:-1:-1;;;;;;;;;;;39027:35:108;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:108:o;590:159:110:-;525:58;;590:159::o;470:194:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;3655:158:108:-:0;2559:38:109;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:109;;;;;;;:::i;:::-;3766:40:108::1;3791:5;3798:7;3766:24;:40::i;356:147:118:-:0;417:79;306:42;491:4;417:51;:79::i;:::-;356:147::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;2847:25:641;;;3711:46:139;;2835:2:641;2820:18;3711:46:139;;;;;;;3430:334;;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;2191:783:131:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:131;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:131;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3255:271:133;;:::o;2568:289:131:-;2744:94;;-1:-1:-1;;;2744:94:131;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:131;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;12282:2050:108:-;12349:14;12398:7;4934:1:2;12379:26:108;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:108;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:108;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:108;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:108;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:108;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:108;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:108;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:108;:47::i;3583:4263:106:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:106;:35::i;:::-;4934:1:2;3887:5:106;:23;3883:85;;;4934:1:2;3930:23:106;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:106;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:106;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:106;-1:-1:-1;7821:8:106;;3583:4263;-1:-1:-1;;;;;;3583:4263:106:o;11194:111:2:-;11260:7;11286:12;:10;:12::i;5314:840::-;5514:19;5510:103;;5557:9;:14;5549:33;;;;-1:-1:-1;;;5549:33:2;;38362:2:641;5549:33:2;;;38344:21:641;38401:1;38381:18;;;38374:29;-1:-1:-1;;;38419:18:641;;;38412:36;38465:18;;5549:33:2;38160:329:641;5510:103:2;5623:18;5644:33;5663:14;5644:16;:33;:::i;:::-;5623:54;-1:-1:-1;5688:18:2;-1:-1:-1;;;;;5720:45:2;;397:42:277;5720:45:2;5716:176;;;-1:-1:-1;5797:9:2;:23;;5716:176;;;-1:-1:-1;5867:9:2;:14;5716:176;5909:13;5901:28;;;;-1:-1:-1;;;5901:28:2;;38696:2:641;5901:28:2;;;38678:21:641;38735:1;38715:18;;;38708:29;-1:-1:-1;;;38753:18:641;;;38746:32;38795:18;;5901:28:2;38494:325:641;5901:28:2;5940:21;-1:-1:-1;;;;;5964:35:2;;;:84;;6027:21;5964:84;;;6002:22;:20;:22::i;:::-;5940:108;;6059:88;6096:9;6107:12;:10;:12::i;:::-;6121:13;6136:10;6059:36;:88::i;6207:248::-;6334:21;6387:14;:12;:14::i;:::-;6371:30;;6411:37;6421:3;6426:21;6411:9;:37::i;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;2847:25:641;;;4918:49:139;;4886:29;;4983:43;;2820:18:641;4983:43:139;;;;;;;4671:362;;;:::o;16989:255:108:-;17159:8;17083:23;:21;:23::i;:::-;:42;;:63;17126:19;:17;:19::i;:::-;-1:-1:-1;;;;;17083:63:108;;;;;;;;;;;;;;;;;-1:-1:-1;17083:63:108;;;:73;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:108;;;;;;;;;;;17197:19;:17;:19::i;:::-;-1:-1:-1;;;;;17182:55:108;;17228:8;17182:55;;;;661:14:641;654:22;636:41;;624:2;609:18;;496:187;17182:55:108;;;;;;;;16989:255;;:::o;7698:136:2:-;7771:4;7794:33;7802:10;;7814:12;:10;:12::i;756:594:140:-;859:204;;;;;;;;;;898:14;:9;;:14;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:140;;;-1:-1:-1;859:204:140;;;;;939:21;;;;:9;:21;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:140;;;-1:-1:-1;859:204:140;;984:18;;;;:9;:18;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:140;;;-1:-1:-1;859:204:140;;1030:22;;;;:9;:22;:::i;:::-;859:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;859:204:140;;-1:-1:-1;842:221:140;;;;:14;;:221;;:14;;:221;;;;:::i;:::-;-1:-1:-1;842:221:140;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;842:221:140;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;842:221:140;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1079:41:140;;;1099:1;18824:25:641;;-1:-1:-1;;18880:2:641;18865:18;;18858:34;1079:41:140;;-1:-1:-1;18797:18:641;1079:41:140;;;;;;;1136:207;1178:14;:9;;:14;:::i;:::-;1219:21;;;;:9;:21;:::i;:::-;1264:18;;;;:9;:18;:::i;:::-;1310:22;;;;:9;:22;:::i;:::-;1136:207;;;;;;;;;;;;;:::i;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;24659:405:108:-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:108;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:108;:56::i;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:108;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;1461:452:140:-;1536:13;1561:30;1594:14;1561:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:268;1704:4;:9;;;1744:4;:16;;;1788:4;:13;;;1833:4;:17;;;1884:7;1638:41;:268::i;35086:484:108:-;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;;35297:5;-1:-1:-1;;;;;35274:28:108;:19;:17;:19::i;:::-;-1:-1:-1;;;;;35274:28:108;;;35257:45;35253:198;;;35321:44;35338:5;35345:19;:17;:19::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:108;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:108;-1:-1:-1;;;;;35461:59:108;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;11431:167:2:-;11520:14;11553:38;:36;:38::i;19095:513:108:-;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:108;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:108:o;9132:563:2:-;9479:33;9487:12;;9509:1;9479:7;:33::i;:::-;9478:34;:56;;;;-1:-1:-1;;;;;;9516:18:2;;;;9478:56;:76;;;;-1:-1:-1;;;;;;9538:16:2;;;;9478:76;9474:215;;;9575:27;9583:12;;9597:4;9575:7;:27::i;:::-;9574:28;:58;;;;;9607:25;9615:12;;9629:2;9607:7;:25::i;:::-;9606:26;9574:58;9570:109;;;9652:12;;-1:-1:-1;;;9652:12:2;;40111:2:641;9652:12:2;;;40093:21:641;40150:1;40130:18;;;40123:29;-1:-1:-1;;;40168:18:641;;;40161:32;40210:18;;9652:12:2;39909:325:641;14865:443:108;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:108;;;;15229:63;;14865:443::o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;40441:2:641;1913:55:285;;;40423:21:641;;;40460:18;;;40453:30;40519:34;40499:18;;;40492:62;40571:18;;1913:55:285;40239:356:641;5036:168:133;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;3819:281:108::0;2559:38:109;:36;:38::i;:::-;:52;;;;;;2538:151;;;;-1:-1:-1;;;2538:151:109;;;;;;;:::i;:::-;3972:5:108::1;3940:23;:21;:23::i;:::-;:29;;:37;;;;;;;;;;;;:::i;:::-;;4021:7;3987:23;:21;:23::i;:::-;:31;;:41;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4934:1:2;4038:23:108::1;:21;:23::i;:::-;:55:::0;-1:-1:-1;;3819:281:108:o;441:447:131:-;829:52;839:30;871:9;829;:52::i;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;34196:110:108:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;40802:2:641;7087:69:281;;;40784:21:641;40841:2;40821:18;;;40814:30;40880:34;40860:18;;;40853:62;-1:-1:-1;;;40931:18:641;;;40924:36;40977:19;;7087:69:281;40600:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;27090:693:108:-;27248:4;27316:2;-1:-1:-1;;;;;27280:56:108;;27337:19;:17;:19::i;:::-;27358:4;27364:7;27373:5;27280:99;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:108;;;;;;;;-1:-1:-1;;27280:99:108;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:108;;27562:113;;27604:56;-1:-1:-1;;;27604:7:108;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:108;-1:-1:-1;;;27433:75:108;;-1:-1:-1;27090:693:108;;;;;;:::o;14426:361::-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:108;;;;-1:-1:-1;;;;;2074:3:108;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:108;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;754:466:280:-;977:13;1002:29;1034:38;1049:8;1059:12;1034:14;:38::i;:::-;1002:70;;1082:17;1102:70;1121:4;1127:11;1140:15;1157:14;1102:18;:70::i;:::-;1082:90;;1189:24;1208:4;1189:18;:24::i;:::-;1182:31;754:466;-1:-1:-1;;;;;;;;754:466:280:o;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;8570:99:2:o;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;42457:2:641;2758:48:277;;;42439:21:641;42496:2;42476:18;;;42469:30;-1:-1:-1;;;42515:18:641;;;42508:58;42583:18;;2758:48:277;42255:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;33381:736:108:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:108;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:108;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:108;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;7529:692:281:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;2747:654:280:-;2887:22;;2943:26;;2846:13;;2887:26;;;;2943:30;;;2887:26;;2987:24;;;2999:12;2987:24;2983:156;;;3071:8;3106:12;3041:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3027:101;;;;;;2983:156;3152:8;3148:101;;;3220:8;3190:47;;;;;;;;:::i;3148:101::-;3262:12;3258:117;;;3342:12;3304:59;;;;;;;;:::i;3258:117::-;-1:-1:-1;;3385:9:280;;;;;;;;;-1:-1:-1;3385:9:280;;;2747:654;-1:-1:-1;;;2747:654:280:o;1464:701::-;1649:12;1756:4;1799:34;1818:14;1799:18;:34::i;:::-;1910:11;1963:9;2034:34;2053:14;2034:18;:34::i;:::-;2117:4;1692:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1673:485;;1464:701;;;;;;:::o;2303:187::-;2373:13;2462:19;2476:4;2462:13;:19::i;:::-;2412:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2398:85;;2303:187;;;:::o;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;48142:15:641;;;1105:68:321;;;48124:34:641;48194:15;;48174:18;;;48167:43;48226:18;;;48219:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;48059:18:641;;1105:68:321;47884:375:641;28229:2347:108;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:108;28371:53;;28390:34;-1:-1:-1;;;28390:7:108;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:108;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:108;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:108;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:108;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:108;;-1:-1:-1;;10317:240:2;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:324;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:324;;;;;;;;;-1:-1:-1;813:9:324;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:324;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:324;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:324;;505:3026;-1:-1:-1;;;;;505:3026:324:o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;48583:2:641;3839:85:321;;;48565:21:641;48622:2;48602:18;;;48595:30;48661:34;48641:18;;;48634:62;-1:-1:-1;;;48712:18:641;;;48705:40;48762:19;;3839:85:321;48381:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;49401:2:641;5194:60:281;;;49383:21:641;49440:2;49420:18;;;49413:30;49479:31;49459:18;;;49452:59;49528:18;;5194:60:281;49199:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;;88:32:641;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:641;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:641;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:641:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1461:203::-;-1:-1:-1;;;;;1625:32:641;;;;1607:51;;1595:2;1580:18;;1461:203::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:641;;1669:180;-1:-1:-1;1669:180:641:o;1854:131::-;-1:-1:-1;;;;;1929:31:641;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:134;2058:20;;2087:31;2058:20;2087:31;:::i;2129:315::-;2197:6;2205;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;2313:9;2300:23;2332:31;2357:5;2332:31;:::i;:::-;2382:5;2434:2;2419:18;;;;2406:32;;-1:-1:-1;;;2129:315:641:o;2449:247::-;2508:6;2561:2;2549:9;2540:7;2536:23;2532:32;2529:52;;;2577:1;2574;2567:12;2529:52;2616:9;2603:23;2635:31;2660:5;2635:31;:::i;2883:163::-;2950:5;2995:3;2986:6;2981:3;2977:16;2973:26;2970:46;;;3012:1;3009;3002:12;3051:854;3190:6;3198;3206;3214;3222;3230;3283:3;3271:9;3262:7;3258:23;3254:33;3251:53;;;3300:1;3297;3290:12;3251:53;3336:9;3323:23;3313:33;;3396:2;3385:9;3381:18;3368:32;3409:31;3434:5;3409:31;:::i;:::-;3459:5;-1:-1:-1;3511:2:641;3496:18;;3483:32;;-1:-1:-1;3567:2:641;3552:18;;3539:32;3580:33;3539:32;3580:33;:::i;:::-;3632:7;-1:-1:-1;3686:3:641;3671:19;;3658:33;;-1:-1:-1;3742:3:641;3727:19;;3714:33;-1:-1:-1;;;;;3759:30:641;;3756:50;;;3802:1;3799;3792:12;3756:50;3825:74;3891:7;3882:6;3871:9;3867:22;3825:74;:::i;:::-;3815:84;;;3051:854;;;;;;;;:::o;3910:456::-;3987:6;3995;4003;4056:2;4044:9;4035:7;4031:23;4027:32;4024:52;;;4072:1;4069;4062:12;4024:52;4111:9;4098:23;4130:31;4155:5;4130:31;:::i;:::-;4180:5;-1:-1:-1;4237:2:641;4222:18;;4209:32;4250:33;4209:32;4250:33;:::i;:::-;3910:456;;4302:7;;-1:-1:-1;;;4356:2:641;4341:18;;;;4328:32;;3910:456::o;4738:248::-;4806:6;4814;4867:2;4855:9;4846:7;4842:23;4838:32;4835:52;;;4883:1;4880;4873:12;4835:52;-1:-1:-1;;4906:23:641;;;4976:2;4961:18;;;4948:32;;-1:-1:-1;4738:248:641:o;4991:274::-;-1:-1:-1;;;;;5183:32:641;;;;5165:51;;5247:2;5232:18;;5225:34;5153:2;5138:18;;4991:274::o;5270:315::-;5338:6;5346;5399:2;5387:9;5378:7;5374:23;5370:32;5367:52;;;5415:1;5412;5405:12;5367:52;5451:9;5438:23;5428:33;;5511:2;5500:9;5496:18;5483:32;5524:31;5549:5;5524:31;:::i;:::-;5574:5;5564:15;;;5270:315;;;;;:::o;5590:118::-;5676:5;5669:13;5662:21;5655:5;5652:32;5642:60;;5698:1;5695;5688:12;5713:241;5769:6;5822:2;5810:9;5801:7;5797:23;5793:32;5790:52;;;5838:1;5835;5828:12;5790:52;5877:9;5864:23;5896:28;5918:5;5896:28;:::i;5959:127::-;6020:10;6015:3;6011:20;6008:1;6001:31;6051:4;6048:1;6041:15;6075:4;6072:1;6065:15;6091:275;6162:2;6156:9;6227:2;6208:13;;-1:-1:-1;;6204:27:641;6192:40;;-1:-1:-1;;;;;6247:34:641;;6283:22;;;6244:62;6241:88;;;6309:18;;:::i;:::-;6345:2;6338:22;6091:275;;-1:-1:-1;6091:275:641:o;6371:531::-;6414:5;6467:3;6460:4;6452:6;6448:17;6444:27;6434:55;;6485:1;6482;6475:12;6434:55;6521:6;6508:20;-1:-1:-1;;;;;6543:2:641;6540:26;6537:52;;;6569:18;;:::i;:::-;6613:55;6656:2;6637:13;;-1:-1:-1;;6633:27:641;6662:4;6629:38;6613:55;:::i;:::-;6693:2;6684:7;6677:19;6739:3;6732:4;6727:2;6719:6;6715:15;6711:26;6708:35;6705:55;;;6756:1;6753;6746:12;6705:55;6821:2;6814:4;6806:6;6802:17;6795:4;6786:7;6782:18;6769:55;6869:1;6844:16;;;6862:4;6840:27;6833:38;;;;6848:7;6371:531;-1:-1:-1;;;6371:531:641:o;6907:787::-;6961:5;7014:3;7007:4;6999:6;6995:17;6991:27;6981:55;;7032:1;7029;7022:12;6981:55;7068:6;7055:20;7094:4;-1:-1:-1;;;;;7113:2:641;7110:26;7107:52;;;7139:18;;:::i;:::-;7185:2;7182:1;7178:10;7208:28;7232:2;7228;7224:11;7208:28;:::i;:::-;7270:15;;;7340;;;7336:24;;;7301:12;;;;7372:15;;;7369:35;;;7400:1;7397;7390:12;7369:35;7436:2;7428:6;7424:15;7413:26;;7448:217;7464:6;7459:3;7456:15;7448:217;;;7544:3;7531:17;7561:31;7586:5;7561:31;:::i;:::-;7605:18;;7481:12;;;;7643;;;;7448:217;;7699:173;7767:20;;-1:-1:-1;;;;;7816:31:641;;7806:42;;7796:70;;7862:1;7859;7852:12;7877:1270;8054:6;8062;8070;8078;8086;8094;8102;8110;8163:3;8151:9;8142:7;8138:23;8134:33;8131:53;;;8180:1;8177;8170:12;8131:53;8203:29;8222:9;8203:29;:::i;:::-;8193:39;;8283:2;8272:9;8268:18;8255:32;-1:-1:-1;;;;;8347:2:641;8339:6;8336:14;8333:34;;;8363:1;8360;8353:12;8333:34;8386:50;8428:7;8419:6;8408:9;8404:22;8386:50;:::i;:::-;8376:60;;8489:2;8478:9;8474:18;8461:32;8445:48;;8518:2;8508:8;8505:16;8502:36;;;8534:1;8531;8524:12;8502:36;8557:52;8601:7;8590:8;8579:9;8575:24;8557:52;:::i;:::-;8547:62;;8662:2;8651:9;8647:18;8634:32;8618:48;;8691:2;8681:8;8678:16;8675:36;;;8707:1;8704;8697:12;8675:36;8730:52;8774:7;8763:8;8752:9;8748:24;8730:52;:::i;:::-;8720:62;;8835:3;8824:9;8820:19;8807:33;8791:49;;8865:2;8855:8;8852:16;8849:36;;;8881:1;8878;8871:12;8849:36;;8904:63;8959:7;8948:8;8937:9;8933:24;8904:63;:::i;:::-;8894:73;;;8986:39;9020:3;9009:9;9005:19;8986:39;:::i;:::-;8976:49;;9044:39;9078:3;9067:9;9063:19;9044:39;:::i;:::-;9034:49;;9102:39;9136:3;9125:9;9121:19;9102:39;:::i;:::-;9092:49;;7877:1270;;;;;;;;;;;:::o;9442:837::-;9637:2;9626:9;9619:21;9682:6;9676:13;9671:2;9660:9;9656:18;9649:41;9744:2;9736:6;9732:15;9726:22;9721:2;9710:9;9706:18;9699:50;9803:2;9795:6;9791:15;9785:22;9780:2;9769:9;9765:18;9758:50;9863:2;9855:6;9851:15;9845:22;9839:3;9828:9;9824:19;9817:51;9923:3;9915:6;9911:16;9905:23;9899:3;9888:9;9884:19;9877:52;9984:3;9976:6;9972:16;9966:23;9960:3;9949:9;9945:19;9938:52;10073:1;10069;10064:3;10060:11;10056:19;10049:3;10041:6;10037:16;10031:23;10027:49;10021:3;10010:9;10006:19;9999:78;9600:4;10124:3;10116:6;10112:16;10106:23;10148:6;10190:2;10185;10174:9;10170:18;10163:30;;10210:63;10268:3;10257:9;10253:19;10239:12;10210:63;:::i;10284:390::-;10370:8;10380:6;10434:3;10427:4;10419:6;10415:17;10411:27;10401:55;;10452:1;10449;10442:12;10401:55;-1:-1:-1;10475:20:641;;-1:-1:-1;;;;;10507:30:641;;10504:50;;;10550:1;10547;10540:12;10504:50;10587:4;10579:6;10575:17;10563:29;;10647:3;10640:4;10630:6;10627:1;10623:14;10615:6;10611:27;10607:38;10604:47;10601:67;;;10664:1;10661;10654:12;10601:67;10284:390;;;;;:::o;10679:624::-;10806:6;10814;10822;10875:2;10863:9;10854:7;10850:23;10846:32;10843:52;;;10891:1;10888;10881:12;10843:52;10931:9;10918:23;-1:-1:-1;;;;;10956:6:641;10953:30;10950:50;;;10996:1;10993;10986:12;10950:50;11035:93;11120:7;11111:6;11100:9;11096:22;11035:93;:::i;:::-;11147:8;;-1:-1:-1;11009:119:641;-1:-1:-1;;11232:2:641;11217:18;;11204:32;11245:28;11204:32;11245:28;:::i;:::-;11292:5;11282:15;;;10679:624;;;;;:::o;11308:632::-;11479:2;11531:21;;;11601:13;;11504:18;;;11623:22;;;11450:4;;11479:2;11702:15;;;;11676:2;11661:18;;;11450:4;11745:169;11759:6;11756:1;11753:13;11745:169;;;11820:13;;11808:26;;11889:15;;;;11854:12;;;;11781:1;11774:9;11745:169;;11945:1006;12093:6;12101;12109;12117;12125;12133;12186:3;12174:9;12165:7;12161:23;12157:33;12154:53;;;12203:1;12200;12193:12;12154:53;12242:9;12229:23;12261:31;12286:5;12261:31;:::i;:::-;12311:5;-1:-1:-1;12363:2:641;12348:18;;12335:32;;-1:-1:-1;12419:2:641;12404:18;;12391:32;12432:33;12391:32;12432:33;:::i;:::-;12484:7;-1:-1:-1;12538:2:641;12523:18;;12510:32;;-1:-1:-1;12593:3:641;12578:19;;12565:33;-1:-1:-1;;;;;12647:14:641;;;12644:34;;;12674:1;12671;12664:12;12644:34;12697:74;12763:7;12754:6;12743:9;12739:22;12697:74;:::i;:::-;12687:84;;12824:3;12813:9;12809:19;12796:33;12780:49;;12854:2;12844:8;12841:16;12838:36;;;12870:1;12867;12860:12;12838:36;;12893:52;12937:7;12926:8;12915:9;12911:24;12893:52;:::i;13209:322::-;13278:6;13331:2;13319:9;13310:7;13306:23;13302:32;13299:52;;;13347:1;13344;13337:12;13299:52;13387:9;13374:23;-1:-1:-1;;;;;13412:6:641;13409:30;13406:50;;;13452:1;13449;13442:12;13406:50;13475;13517:7;13508:6;13497:9;13493:22;13475:50;:::i;13536:383::-;13613:6;13621;13629;13682:2;13670:9;13661:7;13657:23;13653:32;13650:52;;;13698:1;13695;13688:12;13650:52;13737:9;13724:23;13756:31;13781:5;13756:31;:::i;:::-;13806:5;13858:2;13843:18;;13830:32;;-1:-1:-1;13909:2:641;13894:18;;;13881:32;;13536:383;-1:-1:-1;;;13536:383:641:o;13924:::-;14001:6;14009;14017;14070:2;14058:9;14049:7;14045:23;14041:32;14038:52;;;14086:1;14083;14076:12;14038:52;14122:9;14109:23;14099:33;;14182:2;14171:9;14167:18;14154:32;14195:31;14220:5;14195:31;:::i;14312:382::-;14377:6;14385;14438:2;14426:9;14417:7;14413:23;14409:32;14406:52;;;14454:1;14451;14444:12;14406:52;14493:9;14480:23;14512:31;14537:5;14512:31;:::i;:::-;14562:5;-1:-1:-1;14619:2:641;14604:18;;14591:32;14632:30;14591:32;14632:30;:::i;14699:375::-;14797:6;14850:2;14838:9;14829:7;14825:23;14821:32;14818:52;;;14866:1;14863;14856:12;14818:52;14906:9;14893:23;-1:-1:-1;;;;;14931:6:641;14928:30;14925:50;;;14971:1;14968;14961:12;14925:50;14994:74;15060:7;15051:6;15040:9;15036:22;14994:74;:::i;15079:471::-;15176:6;15184;15237:2;15225:9;15216:7;15212:23;15208:32;15205:52;;;15253:1;15250;15243:12;15205:52;15293:9;15280:23;-1:-1:-1;;;;;15318:6:641;15315:30;15312:50;;;15358:1;15355;15348:12;15312:50;15397:93;15482:7;15473:6;15462:9;15458:22;15397:93;:::i;:::-;15509:8;;15371:119;;-1:-1:-1;15079:471:641;-1:-1:-1;;;;15079:471:641:o;15555:812::-;15715:4;15744:2;15784;15773:9;15769:18;15814:2;15803:9;15796:21;15837:6;15872;15866:13;15903:6;15895;15888:22;15941:2;15930:9;15926:18;15919:25;;16003:2;15993:6;15990:1;15986:14;15975:9;15971:30;15967:39;15953:53;;16041:2;16033:6;16029:15;16062:1;16072:266;16086:6;16083:1;16080:13;16072:266;;;16179:2;16175:7;16163:9;16155:6;16151:22;16147:36;16142:3;16135:49;16207:51;16251:6;16242;16236:13;16207:51;:::i;:::-;16197:61;-1:-1:-1;16316:12:641;;;;16281:15;;;;16108:1;16101:9;16072:266;;;-1:-1:-1;16355:6:641;;15555:812;-1:-1:-1;;;;;;;15555:812:641:o;16692:755::-;16985:3;16974:9;16967:22;16948:4;17012:57;17064:3;17053:9;17049:19;17041:6;17012:57;:::i;:::-;17117:9;17109:6;17105:22;17100:2;17089:9;17085:18;17078:50;17151:44;17188:6;17180;17151:44;:::i;:::-;17137:58;;17243:9;17235:6;17231:22;17226:2;17215:9;17211:18;17204:50;17277:44;17314:6;17306;17277:44;:::i;:::-;17263:58;;17369:9;17361:6;17357:22;17352:2;17341:9;17337:18;17330:50;17397:44;17434:6;17426;17397:44;:::i;17452:666::-;17547:6;17555;17563;17571;17624:3;17612:9;17603:7;17599:23;17595:33;17592:53;;;17641:1;17638;17631:12;17592:53;17680:9;17667:23;17699:31;17724:5;17699:31;:::i;:::-;17749:5;-1:-1:-1;17806:2:641;17791:18;;17778:32;17819:33;17778:32;17819:33;:::i;:::-;17871:7;-1:-1:-1;17925:2:641;17910:18;;17897:32;;-1:-1:-1;17980:2:641;17965:18;;17952:32;-1:-1:-1;;;;;17996:30:641;;17993:50;;;18039:1;18036;18029:12;17993:50;18062;18104:7;18095:6;18084:9;18080:22;18062:50;:::i;:::-;18052:60;;;17452:666;;;;;;;:::o;18903:388::-;18971:6;18979;19032:2;19020:9;19011:7;19007:23;19003:32;19000:52;;;19048:1;19045;19038:12;19000:52;19087:9;19074:23;19106:31;19131:5;19106:31;:::i;:::-;19156:5;-1:-1:-1;19213:2:641;19198:18;;19185:32;19226:33;19185:32;19226:33;:::i;19296:380::-;19375:1;19371:12;;;;19418;;;19439:61;;19493:4;19485:6;19481:17;19471:27;;19439:61;19546:2;19538:6;19535:14;19515:18;19512:38;19509:161;;;19592:10;19587:3;19583:20;19580:1;19573:31;19627:4;19624:1;19617:15;19655:4;19652:1;19645:15;19681:304;-1:-1:-1;;;;;19911:15:641;;;19893:34;;19963:15;;19958:2;19943:18;;19936:43;19843:2;19828:18;;19681:304::o;19990:245::-;20057:6;20110:2;20098:9;20089:7;20085:23;20081:32;20078:52;;;20126:1;20123;20116:12;20078:52;20158:9;20152:16;20177:28;20199:5;20177:28;:::i;20240:338::-;20442:2;20424:21;;;20481:2;20461:18;;;20454:30;-1:-1:-1;;;20515:2:641;20500:18;;20493:44;20569:2;20554:18;;20240:338::o;20583:545::-;20676:4;20682:6;20742:11;20729:25;20836:2;20832:7;20821:8;20805:14;20801:29;20797:43;20777:18;20773:68;20763:96;;20855:1;20852;20845:12;20763:96;20882:33;;20934:20;;;-1:-1:-1;;;;;;20966:30:641;;20963:50;;;21009:1;21006;20999:12;20963:50;21042:4;21030:17;;-1:-1:-1;21093:1:641;21089:14;;;21073;21069:35;21059:46;;21056:66;;;21118:1;21115;21108:12;21939:127;22000:10;21995:3;21991:20;21988:1;21981:31;22031:4;22028:1;22021:15;22055:4;22052:1;22045:15;22071:128;22111:3;22142:1;22138:6;22135:1;22132:13;22129:39;;;22148:18;;:::i;:::-;-1:-1:-1;22184:9:641;;22071:128::o;23218:168::-;23258:7;23324:1;23320;23316:6;23312:14;23309:1;23306:21;23301:1;23294:9;23287:17;23283:45;23280:71;;;23331:18;;:::i;:::-;-1:-1:-1;23371:9:641;;23218:168::o;23391:127::-;23452:10;23447:3;23443:20;23440:1;23433:31;23483:4;23480:1;23473:15;23507:4;23504:1;23497:15;23523:120;23563:1;23589;23579:35;;23594:18;;:::i;:::-;-1:-1:-1;23628:9:641;;23523:120::o;26220:127::-;26281:10;26276:3;26272:20;26269:1;26262:31;26312:4;26309:1;26302:15;26336:4;26333:1;26326:15;26352:333;26453:4;26511:11;26498:25;26605:3;26601:8;26590;26574:14;26570:29;26566:44;26546:18;26542:69;26532:97;;26625:1;26622;26615:12;26532:97;26646:33;;;;;26352:333;-1:-1:-1;;26352:333:641:o;27367:522::-;27445:4;27451:6;27511:11;27498:25;27605:2;27601:7;27590:8;27574:14;27570:29;27566:43;27546:18;27542:68;27532:96;;27624:1;27621;27614:12;27532:96;27651:33;;27703:20;;;-1:-1:-1;;;;;;27735:30:641;;27732:50;;;27778:1;27775;27768:12;27732:50;27811:4;27799:17;;-1:-1:-1;27842:14:641;27838:27;;;27828:38;;27825:58;;;27879:1;27876;27869:12;28020:545;28122:2;28117:3;28114:11;28111:448;;;28158:1;28183:5;28179:2;28172:17;28228:4;28224:2;28214:19;28298:2;28286:10;28282:19;28279:1;28275:27;28269:4;28265:38;28334:4;28322:10;28319:20;28316:47;;;-1:-1:-1;28357:4:641;28316:47;28412:2;28407:3;28403:12;28400:1;28396:20;28390:4;28386:31;28376:41;;28467:82;28485:2;28478:5;28475:13;28467:82;;;28530:17;;;28511:1;28500:13;28467:82;;28741:1190;-1:-1:-1;;;;;28844:3:641;28841:27;28838:53;;;28871:18;;:::i;:::-;28900:94;28990:3;28950:38;28982:4;28976:11;28950:38;:::i;:::-;28944:4;28900:94;:::i;:::-;29020:1;29045:2;29040:3;29037:11;29062:1;29057:616;;;;29717:1;29734:3;29731:93;;;-1:-1:-1;29790:19:641;;;29777:33;29731:93;-1:-1:-1;;28698:1:641;28694:11;;;28690:24;28686:29;28676:40;28722:1;28718:11;;;28673:57;29837:78;;29030:895;;29057:616;27967:1;27960:14;;;28004:4;27991:18;;-1:-1:-1;;29093:17:641;;;29194:9;29216:229;29230:7;29227:1;29224:14;29216:229;;;29319:19;;;29306:33;29291:49;;29426:4;29411:20;;;;29379:1;29367:14;;;;29246:12;29216:229;;;29220:3;29473;29464:7;29461:16;29458:159;;;29597:1;29593:6;29587:3;29581;29578:1;29574:11;29570:21;29566:34;29562:39;29549:9;29544:3;29540:19;29527:33;29523:79;29515:6;29508:95;29458:159;;;29660:1;29654:3;29651:1;29647:11;29643:19;29637:4;29630:33;29030:895;;28741:1190;;;:::o;29936:956::-;30115:5;30102:19;30096:4;30089:33;30176:2;30169:5;30165:14;30152:28;30148:1;30142:4;30138:12;30131:50;30235:2;30228:5;30224:14;30211:28;30207:1;30201:4;30197:12;30190:50;30294:2;30287:5;30283:14;30270:28;30266:1;30260:4;30256:12;30249:50;30353:3;30346:5;30342:15;30329:29;30325:1;30319:4;30315:12;30308:51;30413:3;30406:5;30402:15;30389:29;30385:1;30379:4;30375:12;30368:51;30456:1;30450:4;30446:12;30506:3;30499:5;30495:15;30482:29;30520:33;30545:7;30520:33;:::i;:::-;30588:17;;-1:-1:-1;;;;;;30584:48:641;-1:-1:-1;;;;;30634:33:641;;;;30581:87;30562:107;;30712:66;30773:3;30762:15;;30766:5;30712:66;:::i;:::-;30787:99;30872:13;30859:11;30855:1;30849:4;30845:12;30787:99;:::i;30897:135::-;30936:3;-1:-1:-1;;30957:17:641;;30954:43;;;30977:18;;:::i;:::-;-1:-1:-1;31024:1:641;31013:13;;30897:135::o;31037:504::-;31096:5;31103:6;31163:3;31150:17;31249:2;31245:7;31234:8;31218:14;31214:29;31210:43;31190:18;31186:68;31176:96;;31268:1;31265;31258:12;31176:96;31296:33;;31400:4;31387:18;;;-1:-1:-1;31348:21:641;;-1:-1:-1;;;;;;31417:30:641;;31414:50;;;31460:1;31457;31450:12;31414:50;31510:6;31494:14;31490:27;31480:8;31476:42;31473:62;;;31531:1;31528;31521:12;31546:267;31635:6;31630:3;31623:19;31687:6;31680:5;31673:4;31668:3;31664:14;31651:43;-1:-1:-1;31739:1:641;31714:16;;;31732:4;31710:27;;;31703:38;;;;31795:2;31774:15;;;-1:-1:-1;;31770:29:641;31761:39;;;31757:50;;31546:267::o;31818:2051::-;32089:2;32141:21;;;32114:18;;;32197:22;;;32060:4;;32238:2;32256:18;;;32320:1;32316:14;;;32301:30;;32297:39;;32359:6;32060:4;;32414:1372;32430:6;32425:3;32422:15;32414:1372;;;32499:22;;;-1:-1:-1;;32495:36:641;32483:49;;32571:20;;32646:14;32642:27;;;-1:-1:-1;;32638:42:641;32614:67;;32604:95;;32695:1;32692;32685:12;32604:95;32725:31;;32813:19;;32798:35;;32856:4;32910:14;;;32897:28;32880:15;;;32873:53;32976:14;;;32963:28;32946:15;;;32939:53;33042:14;;;33029:28;33012:15;;;33005:53;33081:4;33135:14;;;33122:28;33105:15;;;33098:53;33174:4;33228:14;;;33215:28;33198:15;;;33191:53;32779:6;;33267:4;33312:14;;;33299:28;33340:33;33299:28;33340:33;:::i;:::-;-1:-1:-1;;;;;33410:33:641;33393:15;;;33386:58;33467:4;33518:54;33557:14;;;33561:5;33518:54;:::i;:::-;33484:88;;33609:2;33604;33596:6;33592:15;33585:27;33635:71;33702:2;33694:6;33690:15;33676:12;33662;33635:71;:::i;:::-;33764:12;;;;33625:81;-1:-1:-1;;;33729:15:641;;;;;-1:-1:-1;;32456:1:641;32447:11;32414:1372;;;-1:-1:-1;;;470:13:641;;463:21;33857:4;33842:20;;451:34;33803:6;-1:-1:-1;33818:45:641;;-1:-1:-1;;;400:91:641;34400:125;34440:4;34468:1;34465;34462:8;34459:34;;;34473:18;;:::i;:::-;-1:-1:-1;34510:9:641;;34400:125::o;34530:136::-;34569:3;34597:5;34587:39;;34606:18;;:::i;:::-;-1:-1:-1;;;34642:18:641;;34530:136::o;35594:185::-;35636:3;35674:5;35668:12;35689:52;35734:6;35729:3;35722:4;35715:5;35711:16;35689:52;:::i;:::-;35757:16;;;;;35594:185;-1:-1:-1;;35594:185:641:o;35784:784::-;-1:-1:-1;;;36190:3:641;36183:36;36165:3;36248:6;36242:13;36264:62;36319:6;36314:2;36309:3;36305:12;36298:4;36290:6;36286:17;36264:62;:::i;:::-;-1:-1:-1;;;36385:2:641;36345:16;;;36377:11;;;36370:40;36435:13;;36457:63;36435:13;36506:2;36498:11;;36491:4;36479:17;;36457:63;:::i;:::-;36540:17;36559:2;36536:26;;35784:784;-1:-1:-1;;;;35784:784:641:o;36573:407::-;36775:2;36757:21;;;36814:2;36794:18;;;36787:30;36853:34;36848:2;36833:18;;36826:62;-1:-1:-1;;;36919:2:641;36904:18;;36897:41;36970:3;36955:19;;36573:407::o;36985:416::-;37187:2;37169:21;;;37226:2;37206:18;;;37199:30;37265:34;37260:2;37245:18;;37238:62;-1:-1:-1;;;37331:2:641;37316:18;;37309:50;37391:3;37376:19;;36985:416::o;37406:405::-;37603:2;37592:9;37585:21;37566:4;37629:56;37681:2;37670:9;37666:18;37658:6;37629:56;:::i;:::-;37733:9;37725:6;37721:22;37716:2;37705:9;37701:18;37694:50;37761:44;37798:6;37790;37761:44;:::i;:::-;37753:52;37406:405;-1:-1:-1;;;;;37406:405:641:o;37816:339::-;38018:2;38000:21;;;38057:2;38037:18;;;38030:30;-1:-1:-1;;;38091:2:641;38076:18;;38069:45;38146:2;38131:18;;37816:339::o;39085:819::-;39418:3;39407:9;39400:22;39381:4;39445:63;39503:3;39492:9;39488:19;39480:6;39472;39445:63;:::i;:::-;39556:9;39548:6;39544:22;39539:2;39528:9;39524:18;39517:50;39590;39633:6;39625;39617;39590:50;:::i;:::-;39576:64;;39688:9;39680:6;39676:22;39671:2;39660:9;39656:18;39649:50;39722;39765:6;39757;39749;39722:50;:::i;:::-;39708:64;;39820:9;39812:6;39808:22;39803:2;39792:9;39788:18;39781:50;39848;39891:6;39883;39875;39848:50;:::i;:::-;39840:58;39085:819;-1:-1:-1;;;;;;;;;;;39085:819:641:o;41007:274::-;41136:3;41174:6;41168:13;41190:53;41236:6;41231:3;41224:4;41216:6;41212:17;41190:53;:::i;41286:500::-;-1:-1:-1;;;;;41555:15:641;;;41537:34;;41607:15;;41602:2;41587:18;;41580:43;41654:2;41639:18;;41632:34;;;41702:3;41697:2;41682:18;;41675:31;;;41480:4;;41723:57;;41760:19;;41752:6;41723:57;:::i;41791:249::-;41860:6;41913:2;41901:9;41892:7;41888:23;41884:32;41881:52;;;41929:1;41926;41919:12;41881:52;41961:9;41955:16;41980:30;42004:5;41980:30;:::i;42612:995::-;-1:-1:-1;;;43112:43:641;;43178:13;;43094:3;;43200:61;43178:13;43250:1;43241:11;;43234:4;43222:17;;43200:61;:::i;:::-;-1:-1:-1;;;43320:1:641;43280:16;;;43312:10;;;43305:73;43403:13;;43425:63;43403:13;43474:2;43466:11;;43459:4;43447:17;;43425:63;:::i;:::-;-1:-1:-1;;;43548:2:641;43507:17;;;;43540:11;;;43533:41;43598:2;43590:11;;42612:995;-1:-1:-1;;;;42612:995:641:o;43612:617::-;-1:-1:-1;;;43963:43:641;;44029:13;;43945:3;;44051:61;44029:13;44101:1;44092:11;;44085:4;44073:17;;44051:61;:::i;:::-;-1:-1:-1;;;44171:1:641;44131:16;;;;44163:10;;;44156:40;-1:-1:-1;44220:2:641;44212:11;;43612:617;-1:-1:-1;43612:617:641:o;44234:635::-;-1:-1:-1;;;44585:59:641;;44667:13;;44567:3;;44689:62;44667:13;44739:2;44730:12;;44723:4;44711:17;;44689:62;:::i;:::-;-1:-1:-1;;;44810:2:641;44770:16;;;;44802:11;;;44795:41;-1:-1:-1;44860:2:641;44852:11;;44234:635;-1:-1:-1;44234:635:641:o;45158:2268::-;-1:-1:-1;;;46355:45:641;;46423:13;;46337:3;;46445:62;46423:13;46495:2;46486:12;;46479:4;46467:17;;46445:62;:::i;:::-;-1:-1:-1;;;46566:2:641;46526:16;;;46558:11;;;46551:24;46600:13;;46622:63;46600:13;46671:2;46663:11;;46656:4;46644:17;;46622:63;:::i;:::-;-1:-1:-1;;;46784:2:641;46704:17;;;;46776:11;;;46769:23;;;-1:-1:-1;;;46816:2:641;46808:11;;46801:63;46889:13;;46911:63;46889:13;46960:2;46952:11;;46945:4;46933:17;;46911:63;:::i;:::-;47034:2;46993:17;;47026:11;;;47019:23;47067:13;;47089:63;47067:13;47138:2;47130:11;;47123:4;47111:17;;47089:63;:::i;:::-;-1:-1:-1;;;47212:2:641;47171:17;;;;47204:11;;;47197:80;47293:127;47323:96;47349:69;47379:38;47413:2;47405:11;;47397:6;47379:38;:::i;:::-;-1:-1:-1;;;44939:47:641;;45011:2;45002:12;;44874:146;47349:69;47341:6;47323:96;:::i;:::-;-1:-1:-1;;;45090:30:641;;45145:1;45136:11;;45025:128;47293:127;47286:134;45158:2268;-1:-1:-1;;;;;;;;;45158:2268:641:o;47431:448::-;47693:31;47688:3;47681:44;47663:3;47754:6;47748:13;47770:62;47825:6;47820:2;47815:3;47811:12;47804:4;47796:6;47792:17;47770:62;:::i;:::-;47852:16;;;;47870:2;47848:25;;47431:448;-1:-1:-1;;47431:448:641:o;48264:112::-;48296:1;48322;48312:35;;48327:18;;:::i;:::-;-1:-1:-1;48361:9:641;;48264:112::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string))": "a7d27d9d",
    "sharedMetadata()": "b280f703",
    "startTokenId()": "e6798baa",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadata.SharedMetadataInfo\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can update the shared metadata of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataUpdated(string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string))\":{\"notice\":\"Set shared metadata for NFTs\"},\"sharedMetadata()\":{\"notice\":\"Token metadata information\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenEditionERC721.sol\":\"OpenEditionERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/OpenEditionERC721.sol\":{\"keccak256\":\"0x3b1d28bfe498d8323c979f837981e25ca4883b57e70c33c7262b748266a14356\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cf46e4c0090401fc7099b13e14b52e38feb0b7f1d48c0d5a3d14ff672edad7b3\",\"dweb:/ipfs/QmWaeHA5RM854RHofEr5ZcmLKxscwm1zgvQczSt3fv74N6\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC4906.sol\":{\"keccak256\":\"0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4\",\"dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c\",\"dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SharedMetadata.sol\":{\"keccak256\":\"0x4a6cd7459ebc1afc270c46559e1e6e4e92546da350c012f3d42cce90b0352091\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://0577c1d6f6c66746167581e209f2043ccb476ab47e2e59e35deacec43c748421\",\"dweb:/ipfs/QmPqczyrVhdfBhtEVayQbFFUEM6CjCX2E1SPQyGKcMKL1G\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISharedMetadata.sol\":{\"keccak256\":\"0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15\",\"dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x32ea718445bcdb52775e5f1b287699fde2123ddb7b08ee7efa4cf1d3d35e845d\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://18da3987bde87a1d82515bc304dbf97aeeb22f97f4a3862a7c51ea521c5ac3bb\",\"dweb:/ipfs/QmXLETfqsSBzn5R1641qd3TC2awF3wjwtVRBCpxLmMKRwh\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadata.SharedMetadataInfo",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sharedMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string))": {
            "notice": "Set shared metadata for NFTs"
          },
          "sharedMetadata()": {
            "notice": "Token metadata information"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OpenEditionERC721.sol": "OpenEditionERC721"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/OpenEditionERC721.sol": {
        "keccak256": "0x3b1d28bfe498d8323c979f837981e25ca4883b57e70c33c7262b748266a14356",
        "urls": [
          "bzz-raw://cf46e4c0090401fc7099b13e14b52e38feb0b7f1d48c0d5a3d14ff672edad7b3",
          "dweb:/ipfs/QmWaeHA5RM854RHofEr5ZcmLKxscwm1zgvQczSt3fv74N6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC4906.sol": {
        "keccak256": "0xa31c36a97c9133c8a451aaec1aa585537cacd71760eb6c5ce402155313efb392",
        "urls": [
          "bzz-raw://f3d6fee0ee338d9d0041e7a094efe2f0cd1d4a05b8b127e4f8928f5d3bac8fc4",
          "dweb:/ipfs/Qmcrgw6xMNvsFBfYh51FmFnRP14EEThSSp4n6F6QeKLhy3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc",
        "urls": [
          "bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c",
          "dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SharedMetadata.sol": {
        "keccak256": "0x4a6cd7459ebc1afc270c46559e1e6e4e92546da350c012f3d42cce90b0352091",
        "urls": [
          "bzz-raw://0577c1d6f6c66746167581e209f2043ccb476ab47e2e59e35deacec43c748421",
          "dweb:/ipfs/QmPqczyrVhdfBhtEVayQbFFUEM6CjCX2E1SPQyGKcMKL1G"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadata.sol": {
        "keccak256": "0x854451e0d70760c7fbe438aa6f09e3c310fd501567e78ae7d37ab19dd82e0499",
        "urls": [
          "bzz-raw://e5df37ec2be0af127bb0fd549cdf2599e55f5eeceed841953939309eb81e2a15",
          "dweb:/ipfs/QmVc3TgdN9MJU5HL8G9Tdx3ThzYtmLRtBrF9QrM3WDdMm7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x32ea718445bcdb52775e5f1b287699fde2123ddb7b08ee7efa4cf1d3d35e845d",
        "urls": [
          "bzz-raw://18da3987bde87a1d82515bc304dbf97aeeb22f97f4a3862a7c51ea521c5ac3bb",
          "dweb:/ipfs/QmXLETfqsSBzn5R1641qd3TC2awF3wjwtVRBCpxLmMKRwh"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OpenEditionERC721.sol",
    "id": 2339,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "Base64": [
        78619
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFiltererUpgradeable": [
        34803
      ],
      "Drop": [
        35609
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "ERC721AQueryableUpgradeable": [
        31824
      ],
      "ERC721AStorage": [
        31875
      ],
      "ERC721AUpgradeable": [
        33852
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        31896
      ],
      "ERC721A__Initializable": [
        33955
      ],
      "ERC721A__InitializableStorage": [
        33981
      ],
      "IClaimCondition": [
        49527
      ],
      "IClaimConditionMultiPhase": [
        49550
      ],
      "IContractMetadata": [
        49679
      ],
      "IDrop": [
        49815
      ],
      "IERC165": [
        31146
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IERC2981Upgradeable": [
        151718
      ],
      "IERC4906": [
        31309
      ],
      "IERC721": [
        31422
      ],
      "IERC721AQueryableUpgradeable": [
        34022
      ],
      "IERC721AUpgradeable": [
        34228
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "ISharedMetadata": [
        50859
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "MerkleProof": [
        64593
      ],
      "Multicall": [
        37872
      ],
      "NFTMetadataRenderer": [
        64772
      ],
      "OpenEditionERC721": [
        2338
      ],
      "OperatorFiltererUpgradeable": [
        38318
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PrimarySale": [
        39318
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "SharedMetadata": [
        39755
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11731:2",
    "nodes": [
      {
        "id": 1626,
        "nodeType": "PragmaDirective",
        "src": "39:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 1627,
        "nodeType": "ImportDirective",
        "src": "775:74:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 158124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1628,
        "nodeType": "ImportDirective",
        "src": "850:80:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 151719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1629,
        "nodeType": "ImportDirective",
        "src": "932:57:2",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "./eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 31825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1630,
        "nodeType": "ImportDirective",
        "src": "1039:69:2",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "./openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1631,
        "nodeType": "ImportDirective",
        "src": "1109:39:2",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "./lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1632,
        "nodeType": "ImportDirective",
        "src": "1190:35:2",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "./extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1633,
        "nodeType": "ImportDirective",
        "src": "1226:42:2",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "./extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1634,
        "nodeType": "ImportDirective",
        "src": "1269:33:2",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "./extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1635,
        "nodeType": "ImportDirective",
        "src": "1303:37:2",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "./extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1636,
        "nodeType": "ImportDirective",
        "src": "1341:33:2",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "./extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1637,
        "nodeType": "ImportDirective",
        "src": "1375:40:2",
        "nodes": [],
        "absolutePath": "contracts/extension/SharedMetadata.sol",
        "file": "./extension/SharedMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 39756,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1638,
        "nodeType": "ImportDirective",
        "src": "1416:47:2",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "./extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1639,
        "nodeType": "ImportDirective",
        "src": "1464:30:2",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "./extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 35610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1640,
        "nodeType": "ImportDirective",
        "src": "1523:60:2",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "./extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2339,
        "sourceUnit": 34804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2338,
        "nodeType": "ContractDefinition",
        "src": "1585:10184:2",
        "nodes": [
          {
            "id": 1667,
            "nodeType": "UsingForDirective",
            "src": "1880:37:2",
            "nodes": [],
            "libraryName": {
              "id": 1665,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158123,
              "src": "1886:18:2"
            },
            "typeName": {
              "id": 1666,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1909:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1670,
            "nodeType": "VariableDeclaration",
            "src": "2210:28:2",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1668,
              "nodeType": "StructuredDocumentation",
              "src": "2107:98:2",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2226:12:2",
            "scope": 2338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1669,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2210:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1673,
            "nodeType": "VariableDeclaration",
            "src": "2324:26:2",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1671,
              "nodeType": "StructuredDocumentation",
              "src": "2244:75:2",
              "text": "@dev Only MINTER_ROLE holders can update the shared metadata of tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2340:10:2",
            "scope": 2338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1672,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2324:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1677,
            "nodeType": "VariableDeclaration",
            "src": "2402:41:2",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 1674,
              "nodeType": "StructuredDocumentation",
              "src": "2357:40:2",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2427:7:2",
            "scope": 2338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1675,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2402:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 1676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2437:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 1683,
            "nodeType": "FunctionDefinition",
            "src": "2642:28:2",
            "nodes": [],
            "body": {
              "id": 1682,
              "nodeType": "Block",
              "src": "2668:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 1680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1679,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "2656:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2656:11:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2653:2:2"
            },
            "returnParameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2668:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1785,
            "nodeType": "FunctionDefinition",
            "src": "2735:1176:2",
            "nodes": [],
            "body": {
              "id": 1784,
              "nodeType": "Block",
              "src": "3069:842:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1709,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3087:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1784,
                      "src": "3079:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1708,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3079:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1713,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 1711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3113:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 1710,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3103:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3079:50:2"
                },
                {
                  "assignments": [
                    1715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1715,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3147:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1784,
                      "src": "3139:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1714,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3139:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1719,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3171:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1716,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3161:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3139:46:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1721,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "3293:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 1720,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "3271:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "3271:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1725,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1688,
                        "src": "3337:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1726,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1690,
                        "src": "3344:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1724,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31986,
                      "src": "3322:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3322:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1728,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:30:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1729,
                      "name": "__DefaultOperatorFilterer_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34785,
                      "src": "3362:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3362:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1731,
                  "nodeType": "ExpressionStatement",
                  "src": "3362:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1733,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1692,
                        "src": "3423:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1732,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "3405:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1735,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1737,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1686,
                        "src": "3458:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1736,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "3446:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:26:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3506:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1740,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37988,
                      "src": "3482:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "3482:29:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1745,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3533:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1746,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1686,
                        "src": "3553:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1744,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3522:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1750,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "3588:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1751,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1686,
                        "src": "3601:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1749,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3577:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1753,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1755,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "3636:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1756,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1686,
                        "src": "3651:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1754,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3625:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3625:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1758,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1760,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "3686:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3709:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3701:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1761,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3701:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3701:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1759,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3675:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1768,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1699,
                        "src": "3748:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1769,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "3767:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1767,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "3723:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1771,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1773,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "3816:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1772,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "3789:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3789:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1775,
                  "nodeType": "ExpressionStatement",
                  "src": "3789:42:2"
                },
                {
                  "expression": {
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1776,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "3842:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1777,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1709,
                      "src": "3857:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3842:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:28:2"
                },
                {
                  "expression": {
                    "id": 1782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1780,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1673,
                      "src": "3880:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1781,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1715,
                      "src": "3893:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3880:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1783,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:24:2"
                }
              ]
            },
            "documentation": {
              "id": 1684,
              "nodeType": "StructuredDocumentation",
              "src": "2676:54:2",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1704,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1703,
                  "name": "initializerERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33919,
                  "src": "3038:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3038:18:2"
              },
              {
                "id": 1706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1705,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3057:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3057:11:2"
              }
            ],
            "name": "initialize",
            "nameLocation": "2744:10:2",
            "parameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1686,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2772:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2764:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2809:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2795:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2838:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2824:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1692,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2869:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2855:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2908:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2891:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1693,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2891:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1694,
                    "nodeType": "ArrayTypeName",
                    "src": "2891:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2944:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2936:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2936:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2976:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "2968:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2968:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3011:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1785,
                  "src": "3003:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2754:274:2"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3069:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1811,
            "nodeType": "FunctionDefinition",
            "src": "4158:305:2",
            "nodes": [],
            "body": {
              "id": 1810,
              "nodeType": "Block",
              "src": "4332:131:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4346:18:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1797,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1788,
                          "src": "4355:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1796,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32739,
                        "src": "4347:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 1798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4347:17:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1805,
                  "nodeType": "IfStatement",
                  "src": "4342:62:2",
                  "trueBody": {
                    "id": 1804,
                    "nodeType": "Block",
                    "src": "4366:38:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 1801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4387:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 1800,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "4380:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4380:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1803,
                        "nodeType": "ExpressionStatement",
                        "src": "4380:13:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1807,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1788,
                        "src": "4447:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1806,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39748,
                      "src": "4421:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1795,
                  "id": 1809,
                  "nodeType": "Return",
                  "src": "4414:42:2"
                }
              ]
            },
            "baseFunctions": [
              32323,
              34216
            ],
            "documentation": {
              "id": 1786,
              "nodeType": "StructuredDocumentation",
              "src": "4108:45:2",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4167:8:2",
            "overrides": {
              "id": 1792,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1790,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "4255:18:2"
                },
                {
                  "id": 1791,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "4275:19:2"
                }
              ],
              "src": "4246:49:2"
            },
            "parameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4184:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "4176:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:18:2"
            },
            "returnParameters": {
              "id": 1795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "4313:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1793,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4312:15:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1836,
            "nodeType": "FunctionDefinition",
            "src": "4494:301:2",
            "nodes": [],
            "body": {
              "id": 1835,
              "nodeType": "Block",
              "src": "4679:116:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1825,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1814,
                          "src": "4720:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1823,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4696:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                            "typeString": "type(contract super OpenEditionERC721)"
                          }
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32252,
                        "src": "4696:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4696:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1828,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151718,
                              "src": "4741:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 1827,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4736:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4736:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151718",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 1830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4736:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1831,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4777:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4736:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4696:92:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1822,
                  "id": 1834,
                  "nodeType": "Return",
                  "src": "4689:99:2"
                }
              ]
            },
            "baseFunctions": [
              31145,
              32252,
              34087
            ],
            "documentation": {
              "id": 1812,
              "nodeType": "StructuredDocumentation",
              "src": "4469:20:2",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4503:17:2",
            "overrides": {
              "id": 1819,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1816,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "4602:18:2"
                },
                {
                  "id": 1817,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "4622:7:2"
                },
                {
                  "id": 1818,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "4631:19:2"
                }
              ],
              "src": "4593:58:2"
            },
            "parameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4528:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1836,
                  "src": "4521:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4521:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4520:20:2"
            },
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1836,
                  "src": "4669:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4669:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4668:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1846,
            "nodeType": "FunctionDefinition",
            "src": "4851:91:2",
            "nodes": [],
            "body": {
              "id": 1845,
              "nodeType": "Block",
              "src": "4917:25:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4934:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 1842,
                  "id": 1844,
                  "nodeType": "Return",
                  "src": "4927:8:2"
                }
              ]
            },
            "baseFunctions": [
              32030
            ],
            "documentation": {
              "id": 1837,
              "nodeType": "StructuredDocumentation",
              "src": "4801:45:2",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4860:13:2",
            "overrides": {
              "id": 1839,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4890:8:2"
            },
            "parameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4873:2:2"
            },
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1846,
                  "src": "4908:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4908:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4907:9:2"
            },
            "scope": 2338,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1855,
            "nodeType": "FunctionDefinition",
            "src": "4948:93:2",
            "nodes": [],
            "body": {
              "id": 1854,
              "nodeType": "Block",
              "src": "5002:39:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1851,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1846
                      ],
                      "referencedDeclaration": 1846,
                      "src": "5019:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1850,
                  "id": 1853,
                  "nodeType": "Return",
                  "src": "5012:22:2"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4957:12:2",
            "parameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:2:2"
            },
            "returnParameters": {
              "id": 1850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1855,
                  "src": "4993:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4993:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4992:9:2"
            },
            "scope": 2338,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1941,
            "nodeType": "FunctionDefinition",
            "src": "5314:840:2",
            "nodes": [],
            "body": {
              "id": 1940,
              "nodeType": "Block",
              "src": "5500:654:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1868,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "5514:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5532:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5514:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1881,
                  "nodeType": "IfStatement",
                  "src": "5510:103:2",
                  "trueBody": {
                    "id": 1880,
                    "nodeType": "Block",
                    "src": "5535:78:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1872,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5557:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5557:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5570:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5557:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5573:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 1871,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5549:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5549:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1878,
                        "nodeType": "ExpressionStatement",
                        "src": "5549:33:2"
                      },
                      {
                        "functionReturnParameters": 1867,
                        "id": 1879,
                        "nodeType": "Return",
                        "src": "5596:7:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1883,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5631:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1940,
                      "src": "5623:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1882,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5623:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1887,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1884,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "5644:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1885,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "5663:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5644:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5623:54:2"
                },
                {
                  "assignments": [
                    1889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1889,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5693:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1940,
                      "src": "5688:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1888,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5688:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1890,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5688:18:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1891,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "5720:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1892,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "5733:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "5733:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5720:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1910,
                    "nodeType": "Block",
                    "src": "5837:55:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1903,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "5851:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1904,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5867:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5867:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5880:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5867:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5851:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1909,
                        "nodeType": "ExpressionStatement",
                        "src": "5851:30:2"
                      }
                    ]
                  },
                  "id": 1911,
                  "nodeType": "IfStatement",
                  "src": "5716:176:2",
                  "trueBody": {
                    "id": 1902,
                    "nodeType": "Block",
                    "src": "5767:64:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1895,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "5781:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1896,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5797:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5797:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1898,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1883,
                              "src": "5810:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5797:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5781:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1901,
                        "nodeType": "ExpressionStatement",
                        "src": "5781:39:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1913,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1889,
                        "src": "5909:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5924:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 1912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5901:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5901:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1916,
                  "nodeType": "ExpressionStatement",
                  "src": "5901:28:2"
                },
                {
                  "assignments": [
                    1918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1918,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5948:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1940,
                      "src": "5940:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1917,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5940:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1929,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1919,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "5964:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5997:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5989:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5989:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5964:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1927,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1858,
                      "src": "6027:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5964:84:2",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1925,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "6002:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6002:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5940:108:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1933,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "6096:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1934,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "6107:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6107:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1936,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "6121:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1937,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "6136:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1930,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "6059:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 1932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "6059:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1939,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:88:2"
                }
              ]
            },
            "baseFunctions": [
              35592
            ],
            "documentation": {
              "id": 1856,
              "nodeType": "StructuredDocumentation",
              "src": "5230:79:2",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5323:20:2",
            "overrides": {
              "id": 1866,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5491:8:2"
            },
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1858,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5361:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "5353:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5400:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "5392:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5434:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "5426:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5426:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5461:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1941,
                  "src": "5453:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5343:138:2"
            },
            "returnParameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5500:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1963,
            "nodeType": "FunctionDefinition",
            "src": "6207:248:2",
            "nodes": [],
            "body": {
              "id": 1962,
              "nodeType": "Block",
              "src": "6361:94:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1952,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "6371:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1953,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32042,
                        "src": "6387:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6387:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6371:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1958,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "6421:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1959,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "6426:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1957,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33452,
                        33467
                      ],
                      "referencedDeclaration": 33467,
                      "src": "6411:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6411:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1961,
                  "nodeType": "ExpressionStatement",
                  "src": "6411:37:2"
                }
              ]
            },
            "baseFunctions": [
              35602
            ],
            "documentation": {
              "id": 1942,
              "nodeType": "StructuredDocumentation",
              "src": "6160:42:2",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "6216:22:2",
            "overrides": {
              "id": 1948,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6308:8:2"
            },
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6247:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "6239:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6239:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6260:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "6252:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6252:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6238:44:2"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6342:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "6334:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6333:23:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1977,
            "nodeType": "FunctionDefinition",
            "src": "6555:142:2",
            "nodes": [],
            "body": {
              "id": 1976,
              "nodeType": "Block",
              "src": "6632:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1971,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "6657:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1972,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "6677:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6677:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1970,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "6649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1969,
                  "id": 1975,
                  "nodeType": "Return",
                  "src": "6642:48:2"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 1964,
              "nodeType": "StructuredDocumentation",
              "src": "6461:89:2",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6564:27:2",
            "overrides": {
              "id": 1966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6608:8:2"
            },
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6591:2:2"
            },
            "returnParameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1977,
                  "src": "6626:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6626:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6625:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1991,
            "nodeType": "FunctionDefinition",
            "src": "6780:127:2",
            "nodes": [],
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "6842:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1985,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "6867:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1986,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "6887:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6887:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1984,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "6859:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6859:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1983,
                  "id": 1989,
                  "nodeType": "Return",
                  "src": "6852:48:2"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 1978,
              "nodeType": "StructuredDocumentation",
              "src": "6703:72:2",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6789:12:2",
            "overrides": {
              "id": 1980,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6818:8:2"
            },
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6801:2:2"
            },
            "returnParameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "6836:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6835:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2005,
            "nodeType": "FunctionDefinition",
            "src": "6997:133:2",
            "nodes": [],
            "body": {
              "id": 2004,
              "nodeType": "Block",
              "src": "7065:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1999,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7090:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2000,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "7110:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7110:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1998,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7082:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7082:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1997,
                  "id": 2003,
                  "nodeType": "Return",
                  "src": "7075:48:2"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 1992,
              "nodeType": "StructuredDocumentation",
              "src": "6913:79:2",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "7006:18:2",
            "overrides": {
              "id": 1994,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7041:8:2"
            },
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7024:2:2"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "7059:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7058:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2019,
            "nodeType": "FunctionDefinition",
            "src": "7225:133:2",
            "nodes": [],
            "body": {
              "id": 2018,
              "nodeType": "Block",
              "src": "7293:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2013,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7318:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2014,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "7338:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7338:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2012,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7310:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7310:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2011,
                  "id": 2017,
                  "nodeType": "Return",
                  "src": "7303:48:2"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 2006,
              "nodeType": "StructuredDocumentation",
              "src": "7136:84:2",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7234:18:2",
            "overrides": {
              "id": 2008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7269:8:2"
            },
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7252:2:2"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "7287:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2033,
            "nodeType": "FunctionDefinition",
            "src": "7453:137:2",
            "nodes": [],
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "7525:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2027,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7550:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2028,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "7570:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7570:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2026,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7542:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7542:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2025,
                  "id": 2031,
                  "nodeType": "Return",
                  "src": "7535:48:2"
                }
              ]
            },
            "baseFunctions": [
              35608
            ],
            "documentation": {
              "id": 2020,
              "nodeType": "StructuredDocumentation",
              "src": "7364:84:2",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7462:22:2",
            "overrides": {
              "id": 2022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7501:8:2"
            },
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7484:2:2"
            },
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "7519:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7519:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7518:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2047,
            "nodeType": "FunctionDefinition",
            "src": "7698:136:2",
            "nodes": [],
            "body": {
              "id": 2046,
              "nodeType": "Block",
              "src": "7777:57:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2041,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1673,
                        "src": "7802:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2042,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "7814:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7814:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2040,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7794:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7794:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2039,
                  "id": 2045,
                  "nodeType": "Return",
                  "src": "7787:40:2"
                }
              ]
            },
            "baseFunctions": [
              39754
            ],
            "documentation": {
              "id": 2034,
              "nodeType": "StructuredDocumentation",
              "src": "7596:97:2",
              "text": "@dev Returns whether the shared metadata of tokens can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7707:21:2",
            "overrides": {
              "id": 2036,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7753:8:2"
            },
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7728:2:2"
            },
            "returnParameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2047,
                  "src": "7771:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7771:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7770:6:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2061,
            "nodeType": "FunctionDefinition",
            "src": "7933:144:2",
            "nodes": [],
            "body": {
              "id": 2060,
              "nodeType": "Block",
              "src": "8012:65:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2055,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "8037:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2056,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2325
                          ],
                          "referencedDeclaration": 2325,
                          "src": "8057:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8057:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2054,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "8029:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8029:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2053,
                  "id": 2059,
                  "nodeType": "Return",
                  "src": "8022:48:2"
                }
              ]
            },
            "baseFunctions": [
              37993
            ],
            "documentation": {
              "id": 2048,
              "nodeType": "StructuredDocumentation",
              "src": "7840:88:2",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "7942:26:2",
            "overrides": {
              "id": 2050,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7988:8:2"
            },
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7968:2:2"
            },
            "returnParameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2061,
                  "src": "8006:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8005:6:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2075,
            "nodeType": "FunctionDefinition",
            "src": "8343:145:2",
            "nodes": [],
            "body": {
              "id": 2074,
              "nodeType": "Block",
              "src": "8398:90:2",
              "nodes": [],
              "statements": [
                {
                  "id": 2073,
                  "nodeType": "UncheckedBlock",
                  "src": "8408:74:2",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2067,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32042,
                            "src": "8439:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8439:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2069,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1846
                            ],
                            "referencedDeclaration": 1846,
                            "src": "8456:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8456:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8439:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2066,
                      "id": 2072,
                      "nodeType": "Return",
                      "src": "8432:39:2"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 2062,
              "nodeType": "StructuredDocumentation",
              "src": "8261:77:2",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "8352:11:2",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8363:2:2"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "8389:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8388:9:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2085,
            "nodeType": "FunctionDefinition",
            "src": "8570:99:2",
            "nodes": [],
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "8631:38:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2081,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32042,
                      "src": "8648:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8648:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2080,
                  "id": 2083,
                  "nodeType": "Return",
                  "src": "8641:21:2"
                }
              ]
            },
            "documentation": {
              "id": 2076,
              "nodeType": "StructuredDocumentation",
              "src": "8494:71:2",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8579:17:2",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8596:2:2"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "8622:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8622:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8621:9:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2095,
            "nodeType": "FunctionDefinition",
            "src": "8738:100:2",
            "nodes": [],
            "body": {
              "id": 2094,
              "nodeType": "Block",
              "src": "8800:38:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2091,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32042,
                      "src": "8817:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8817:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2090,
                  "id": 2093,
                  "nodeType": "Return",
                  "src": "8810:21:2"
                }
              ]
            },
            "documentation": {
              "id": 2086,
              "nodeType": "StructuredDocumentation",
              "src": "8675:58:2",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8747:18:2",
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8765:2:2"
            },
            "returnParameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "8791:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8791:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8790:9:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2107,
            "nodeType": "FunctionDefinition",
            "src": "8894:184:2",
            "nodes": [],
            "body": {
              "id": 2106,
              "nodeType": "Block",
              "src": "8942:136:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2102,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "9057:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9066:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2101,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33548,
                        33724
                      ],
                      "referencedDeclaration": 33724,
                      "src": "9051:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9051:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2105,
                  "nodeType": "ExpressionStatement",
                  "src": "9051:20:2"
                }
              ]
            },
            "documentation": {
              "id": 2096,
              "nodeType": "StructuredDocumentation",
              "src": "8844:45:2",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8903:4:2",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8916:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8908:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8908:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8907:17:2"
            },
            "returnParameters": {
              "id": 2100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8942:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 2171,
            "nodeType": "FunctionDefinition",
            "src": "9132:563:2",
            "nodes": [],
            "body": {
              "id": 2170,
              "nodeType": "Block",
              "src": "9294:401:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2123,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2110,
                        "src": "9332:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "9338:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2125,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "9342:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2126,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2116,
                        "src": "9357:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2120,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9304:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33042,
                      "src": "9304:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9304:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "9304:62:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9478:34:2",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2130,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "9487:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9509:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9501:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2131,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9501:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9501:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2129,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "9479:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9479:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2137,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2110,
                          "src": "9516:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9532:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9524:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2138,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9524:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9524:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9516:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9478:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2144,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "9538:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9552:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9544:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9544:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9544:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9538:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9478:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2169,
                  "nodeType": "IfStatement",
                  "src": "9474:215:2",
                  "trueBody": {
                    "id": 2168,
                    "nodeType": "Block",
                    "src": "9556:133:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9574:28:2",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 2152,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "9583:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 2153,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2110,
                                  "src": "9597:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2151,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38454,
                                "src": "9575:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 2154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9575:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 2160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9606:26:2",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 2157,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "9615:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 2158,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2112,
                                  "src": "9629:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2156,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38454,
                                "src": "9607:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9607:25:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9574:58:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2167,
                        "nodeType": "IfStatement",
                        "src": "9570:109:2",
                        "trueBody": {
                          "id": 2166,
                          "nodeType": "Block",
                          "src": "9634:45:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 2163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9659:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 2162,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9652:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 2164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9652:12:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2165,
                              "nodeType": "ExpressionStatement",
                              "src": "9652:12:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              33042
            ],
            "documentation": {
              "id": 2108,
              "nodeType": "StructuredDocumentation",
              "src": "9084:43:2",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9141:21:2",
            "overrides": {
              "id": 2118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9285:8:2"
            },
            "parameters": {
              "id": 2117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9180:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "9172:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9172:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9202:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "9194:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9194:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "9222:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "9214:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9214:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9253:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "9245:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9245:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9162:105:2"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9294:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2193,
            "nodeType": "FunctionDefinition",
            "src": "9746:243:2",
            "nodes": [],
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "9929:60:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2188,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "9963:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2189,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2176,
                        "src": "9973:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2185,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9939:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32669,
                      "src": "9939:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9939:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "9939:43:2"
                }
              ]
            },
            "baseFunctions": [
              32669,
              34178
            ],
            "documentation": {
              "id": 2172,
              "nodeType": "StructuredDocumentation",
              "src": "9701:40:2",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2182,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2174,
                    "src": "9915:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2181,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38255,
                  "src": "9887:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9887:37:2"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "9755:17:2",
            "overrides": {
              "id": 2180,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2178,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "9838:19:2"
                },
                {
                  "id": 2179,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "9859:18:2"
                }
              ],
              "src": "9829:49:2"
            },
            "parameters": {
              "id": 2177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2174,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9781:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "9773:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2176,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "9796:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "9791:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9791:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9772:33:2"
            },
            "returnParameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9929:0:2"
            },
            "scope": 2338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2215,
            "nodeType": "FunctionDefinition",
            "src": "10030:240:2",
            "nodes": [],
            "body": {
              "id": 2214,
              "nodeType": "Block",
              "src": "10221:49:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2210,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "10245:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2211,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2198,
                        "src": "10255:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2207,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10231:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32611,
                      "src": "10231:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10231:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "10231:32:2"
                }
              ]
            },
            "baseFunctions": [
              32611,
              34170
            ],
            "documentation": {
              "id": 2194,
              "nodeType": "StructuredDocumentation",
              "src": "9995:30:2",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2204,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2196,
                    "src": "10207:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2205,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2203,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38255,
                  "src": "10179:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10179:37:2"
              }
            ],
            "name": "approve",
            "nameLocation": "10039:7:2",
            "overrides": {
              "id": 2202,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2200,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10130:18:2"
                },
                {
                  "id": 2201,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10150:19:2"
                }
              ],
              "src": "10121:49:2"
            },
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10055:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "10047:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10047:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2198,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10073:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "10065:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10065:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10046:35:2"
            },
            "returnParameters": {
              "id": 2206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10221:0:2"
            },
            "scope": 2338,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2240,
            "nodeType": "FunctionDefinition",
            "src": "10317:240:2",
            "nodes": [],
            "body": {
              "id": 2239,
              "nodeType": "Block",
              "src": "10503:54:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2234,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2218,
                        "src": "10532:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2235,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "10538:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2236,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "10542:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2231,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10513:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32970,
                      "src": "10513:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10513:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2238,
                  "nodeType": "ExpressionStatement",
                  "src": "10513:37:2"
                }
              ]
            },
            "baseFunctions": [
              32970,
              34162
            ],
            "documentation": {
              "id": 2216,
              "nodeType": "StructuredDocumentation",
              "src": "10276:36:2",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2228,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2218,
                    "src": "10497:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2227,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "10477:19:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10477:25:2"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "10326:12:2",
            "overrides": {
              "id": 2226,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2224,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10436:18:2"
                },
                {
                  "id": 2225,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10456:19:2"
                }
              ],
              "src": "10427:49:2"
            },
            "parameters": {
              "id": 2223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10356:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2240,
                  "src": "10348:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10348:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10378:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2240,
                  "src": "10370:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10370:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2222,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10398:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2240,
                  "src": "10390:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10390:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10338:73:2"
            },
            "returnParameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10503:0:2"
            },
            "scope": 2338,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2265,
            "nodeType": "FunctionDefinition",
            "src": "10608:248:2",
            "nodes": [],
            "body": {
              "id": 2264,
              "nodeType": "Block",
              "src": "10798:58:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2259,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "10831:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2260,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2245,
                        "src": "10837:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2261,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2247,
                        "src": "10841:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2256,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10808:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32989,
                      "src": "10808:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10808:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "10808:41:2"
                }
              ]
            },
            "baseFunctions": [
              32989,
              34152
            ],
            "documentation": {
              "id": 2241,
              "nodeType": "StructuredDocumentation",
              "src": "10563:40:2",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2253,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2243,
                    "src": "10792:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2252,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "10772:19:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10772:25:2"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10617:16:2",
            "overrides": {
              "id": 2251,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2249,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10731:18:2"
                },
                {
                  "id": 2250,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10751:19:2"
                }
              ],
              "src": "10722:49:2"
            },
            "parameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10651:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "10643:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10643:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10673:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "10665:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10665:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10693:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "10685:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10685:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10633:73:2"
            },
            "returnParameters": {
              "id": 2255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10798:0:2"
            },
            "scope": 2338,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2293,
            "nodeType": "FunctionDefinition",
            "src": "10907:281:2",
            "nodes": [],
            "body": {
              "id": 2292,
              "nodeType": "Block",
              "src": "11124:64:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2286,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "11157:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2287,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "11163:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2288,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2272,
                        "src": "11167:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2289,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2274,
                        "src": "11176:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2283,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11134:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_OpenEditionERC721_$2338_$",
                          "typeString": "type(contract super OpenEditionERC721)"
                        }
                      },
                      "id": 2285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33029,
                      "src": "11134:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11134:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "11134:47:2"
                }
              ]
            },
            "baseFunctions": [
              33029,
              34142
            ],
            "documentation": {
              "id": 2266,
              "nodeType": "StructuredDocumentation",
              "src": "10862:40:2",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2280,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2268,
                    "src": "11118:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2279,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "11098:19:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11098:25:2"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10916:16:2",
            "overrides": {
              "id": 2278,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2276,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "11057:18:2"
                },
                {
                  "id": 2277,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "11077:19:2"
                }
              ],
              "src": "11048:49:2"
            },
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2268,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10950:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2293,
                  "src": "10942:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10942:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10972:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2293,
                  "src": "10964:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10964:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2272,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10992:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2293,
                  "src": "10984:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10984:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2274,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11022:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2293,
                  "src": "11009:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2273,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11009:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10932:100:2"
            },
            "returnParameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11124:0:2"
            },
            "scope": 2338,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2303,
            "nodeType": "FunctionDefinition",
            "src": "11194:111:2",
            "nodes": [],
            "body": {
              "id": 2302,
              "nodeType": "Block",
              "src": "11269:36:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2299,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2325
                      ],
                      "referencedDeclaration": 2325,
                      "src": "11286:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11286:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2298,
                  "id": 2301,
                  "nodeType": "Return",
                  "src": "11279:19:2"
                }
              ]
            },
            "baseFunctions": [
              35544
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "11203:14:2",
            "overrides": {
              "id": 2295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11242:8:2"
            },
            "parameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11217:2:2"
            },
            "returnParameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2303,
                  "src": "11260:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11260:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11259:9:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2313,
            "nodeType": "FunctionDefinition",
            "src": "11311:114:2",
            "nodes": [],
            "body": {
              "id": 2312,
              "nodeType": "Block",
              "src": "11389:36:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2309,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2325
                      ],
                      "referencedDeclaration": 2325,
                      "src": "11406:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11406:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2308,
                  "id": 2311,
                  "nodeType": "Return",
                  "src": "11399:19:2"
                }
              ]
            },
            "baseFunctions": [
              33833
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderERC721A",
            "nameLocation": "11320:17:2",
            "overrides": {
              "id": 2305,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11362:8:2"
            },
            "parameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11337:2:2"
            },
            "returnParameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "11380:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11380:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11379:9:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2325,
            "nodeType": "FunctionDefinition",
            "src": "11431:167:2",
            "nodes": [],
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "11536:62:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2320,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "11553:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 2321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "11553:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11553:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2319,
                  "id": 2323,
                  "nodeType": "Return",
                  "src": "11546:45:2"
                }
              ]
            },
            "baseFunctions": [
              75733
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "11440:10:2",
            "overrides": {
              "id": 2316,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2315,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "11484:25:2"
                }
              ],
              "src": "11475:35:2"
            },
            "parameters": {
              "id": 2314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11450:2:2"
            },
            "returnParameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11528:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "11520:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11520:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11519:16:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 2337,
            "nodeType": "FunctionDefinition",
            "src": "11604:163:2",
            "nodes": [],
            "body": {
              "id": 2336,
              "nodeType": "Block",
              "src": "11707:60:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2332,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "11724:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 2333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "11724:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11724:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 2331,
                  "id": 2335,
                  "nodeType": "Return",
                  "src": "11717:43:2"
                }
              ]
            },
            "baseFunctions": [
              75760
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "11613:8:2",
            "overrides": {
              "id": 2328,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2327,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "11655:25:2"
                }
              ],
              "src": "11646:35:2"
            },
            "parameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11621:2:2"
            },
            "returnParameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "11691:14:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11691:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11690:16:2"
            },
            "scope": 2338,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1641,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1619:13:2"
            },
            "id": 1642,
            "nodeType": "InheritanceSpecifier",
            "src": "1619:13:2"
          },
          {
            "baseName": {
              "id": 1643,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1638:16:2"
            },
            "id": 1644,
            "nodeType": "InheritanceSpecifier",
            "src": "1638:16:2"
          },
          {
            "baseName": {
              "id": 1645,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1660:7:2"
            },
            "id": 1646,
            "nodeType": "InheritanceSpecifier",
            "src": "1660:7:2"
          },
          {
            "baseName": {
              "id": 1647,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "1673:11:2"
            },
            "id": 1648,
            "nodeType": "InheritanceSpecifier",
            "src": "1673:11:2"
          },
          {
            "baseName": {
              "id": 1649,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1690:7:2"
            },
            "id": 1650,
            "nodeType": "InheritanceSpecifier",
            "src": "1690:7:2"
          },
          {
            "baseName": {
              "id": 1651,
              "name": "SharedMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39755,
              "src": "1703:14:2"
            },
            "id": 1652,
            "nodeType": "InheritanceSpecifier",
            "src": "1703:14:2"
          },
          {
            "baseName": {
              "id": 1653,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1723:21:2"
            },
            "id": 1654,
            "nodeType": "InheritanceSpecifier",
            "src": "1723:21:2"
          },
          {
            "baseName": {
              "id": 1655,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35609,
              "src": "1750:4:2"
            },
            "id": 1656,
            "nodeType": "InheritanceSpecifier",
            "src": "1750:4:2"
          },
          {
            "baseName": {
              "id": 1657,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1760:25:2"
            },
            "id": 1658,
            "nodeType": "InheritanceSpecifier",
            "src": "1760:25:2"
          },
          {
            "baseName": {
              "id": 1659,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "1791:9:2"
            },
            "id": 1660,
            "nodeType": "InheritanceSpecifier",
            "src": "1791:9:2"
          },
          {
            "baseName": {
              "id": 1661,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34803,
              "src": "1806:34:2"
            },
            "id": 1662,
            "nodeType": "InheritanceSpecifier",
            "src": "1806:34:2"
          },
          {
            "baseName": {
              "id": 1663,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31824,
              "src": "1846:27:2"
            },
            "id": 1664,
            "nodeType": "InheritanceSpecifier",
            "src": "1846:27:2"
          }
        ],
        "canonicalName": "OpenEditionERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2338,
          31824,
          34022,
          33852,
          34228,
          33955,
          34803,
          38318,
          37994,
          50395,
          37872,
          50168,
          75765,
          157714,
          35609,
          49815,
          49550,
          49527,
          39046,
          38747,
          50516,
          50491,
          39755,
          31309,
          38400,
          50418,
          39318,
          50580,
          39646,
          50644,
          31290,
          31146,
          50859,
          34723,
          151869,
          49679
        ],
        "name": "OpenEditionERC721",
        "nameLocation": "1594:17:2",
        "scope": 2339,
        "usedErrors": [
          33990,
          34028,
          34031,
          34034,
          34037,
          34040,
          34043,
          34046,
          34049,
          34052,
          34055,
          34058,
          34061,
          34064,
          38158
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 2
}