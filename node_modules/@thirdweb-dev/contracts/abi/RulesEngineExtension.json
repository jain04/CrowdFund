{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct IRulesEngine.RuleWithId",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "RuleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "name": "RuleDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRulesEngine",
          "type": "address"
        }
      ],
      "name": "RulesEngineOverriden",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scorePerOwnedToken",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleMulitiplicative",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRulesEngine.RuleTypeThreshold",
          "name": "rule",
          "type": "tuple"
        }
      ],
      "name": "createRuleThreshold",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ruleId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ruleId",
          "type": "bytes32"
        }
      ],
      "name": "deleteRule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllRules",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "enum IRulesEngine.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            },
            {
              "internalType": "enum IRulesEngine.RuleType",
              "name": "ruleType",
              "type": "uint8"
            }
          ],
          "internalType": "struct IRulesEngine.RuleWithId[]",
          "name": "rules",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRulesEngineOverride",
      "outputs": [
        {
          "internalType": "address",
          "name": "rulesEngineAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        }
      ],
      "name": "getScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rulesEngineAddress",
          "type": "address"
        }
      ],
      "name": "setRulesEngineOverride",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061121b806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80630eb0adb6146100725780631022a25e146100875780631184aef2146100ad5780639d907761146100c2578063a7145eb4146100d5578063c0c95f69146100ea578063d47875d0146100fd575b600080fd5b610085610080366004610dc4565b610110565b005b61009a610095366004610e04565b6101ce565b6040519081526020015b60405180910390f35b6100b56102b7565b6040516100a49190610f14565b6100856100d0366004610f62565b61044b565b6100dd61047b565b6040516100a49190610f7b565b61009a6100f8366004610f8f565b610494565b61009a61010b366004610dc4565b61055c565b610118610723565b61017b5760405162461bcd60e51b815260206004820152602960248201527f52756c6573456e67696e653a2063616e6e6f74206f766572726964652072756c604482015268657320656e67696e6560b81b60648201526084015b60405180910390fd5b80610184610734565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f7e4ea600166ef789c479bc85ab387baad110a51bcb8892becff89aa66749d31590600090a250565b60006101d8610758565b6101f45760405162461bcd60e51b81526004016101729061100e565b81516020808401516040808601516060870151608088015192516102209695929391926000910161106c565b6040516020818303038152906040528051906020012090506102b26040518060e0016040528083815260200184600001516001600160a01b031681526020018460200151600281111561027557610275610e8d565b8152602001846040015181526020018460600151815260200184608001518152602001600060018111156102ab576102ab610e8d565b9052610784565b919050565b606060006102ce6102c6610734565b6001016108b6565b8051909150806001600160401b038111156102eb576102eb610ddf565b60405190808252806020026020018201604052801561032457816020015b610311610d60565b8152602001906001900390816103095790505b50925060005b818110156104455761033a610734565b6003016000848381518110610351576103516110b6565b6020908102919091018101518252818101929092526040908101600020815160e0810183528154815260018201546001600160a01b03811694820194909452929091830190600160a01b900460ff1660028111156103b1576103b1610e8d565b60028111156103c2576103c2610e8d565b8152600282015460208201526003820154604082015260048201546060820152600582015460809091019060ff16600181111561040157610401610e8d565b600181111561041257610412610e8d565b81525050848281518110610428576104286110b6565b602090810291909101015261043e6001826110e2565b905061032a565b50505090565b610453610758565b61046f5760405162461bcd60e51b81526004016101729061100e565b610478816108c7565b50565b6000610485610734565b546001600160a01b0316919050565b600061049e610758565b6104ba5760405162461bcd60e51b81526004016101729061100e565b8151602080840151604080860151606087015191516104e09594919291600191016110fa565b6040516020818303038152906040528051906020012090506102b26040518060e0016040528083815260200184600001516001600160a01b031681526020018460200151600281111561053557610535610e8d565b815260408086015160208301526000908201526060808601519082015260800160016102ab565b60008061056761047b565b90506001600160a01b038116156105ec57604051630d47875d60e41b81526001600160a01b0382169063d47875d0906105a4908690600401610f7b565b602060405180830381865afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e5919061113d565b9392505050565b60006105f96102c6610734565b805190915060005b8181101561071a576000610613610734565b600301600085848151811061062a5761062a6110b6565b6020908102919091018101518252818101929092526040908101600020815160e0810183528154815260018201546001600160a01b03811694820194909452929091830190600160a01b900460ff16600281111561068a5761068a610e8d565b600281111561069b5761069b610e8d565b8152600282015460208201526003820154604082015260048201546060820152600582015460809091019060ff1660018111156106da576106da610e8d565b60018111156106eb576106eb610e8d565b90525090506106fa8782610972565b61070490876110e2565b955061071390506001826110e2565b9050610601565b50505050919050565b600061072f8133610b60565b905090565b7f06343399fe112adbefbb500137c8946b0202962fdcbce169cfc105e7138fde9e90565b600061072f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610b60565b805161079b90610792610734565b60010190610baa565b6107b75760405162461bcd60e51b815260040161017290611156565b806107c0610734565b82516000908152600391909101602090815260409182902083518155908301516001820180546001600160a01b039092166001600160a01b031983168117825593850151929390916001600160a81b03191617600160a01b83600281111561082a5761082a610e8d565b0217905550606082015160028201556080820151600382015560a0820151600482015560c082015160058201805460ff19166001838181111561086f5761086f610e8d565b021790555090505080600001517f66e6c61edc36a7cd029e6e694786708b7524849b1753efae9ab0b3dfe2b68322826040516108ab919061118b565b60405180910390a250565b60606108c182610bb6565b92915050565b6108dc816108d3610734565b60010190610c12565b6108f85760405162461bcd60e51b815260040161017290611156565b610900610734565b6000828152600391820160205260408082208281556001810180546001600160a81b031916905560028101839055928301829055600483018290556005909201805460ff19169055905182917f393e38d78dfe0ad0b79c18f06aa7611579d592c72f5a2255a42c5a308dda751891a250565b600080808360400151600281111561098c5761098c610e8d565b1415610a0a5782602001516001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016109c29190610f7b565b602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a03919061113d565b9050610af3565b600183604001516002811115610a2257610a22610e8d565b1415610a585782602001516001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016109c29190610f7b565b600283604001516002811115610a7057610a70610e8d565b1415610af35760208301516060840151604051627eeac760e11b81526001600160a01b038781166004830152602482019290925291169062fdd58e90604401602060405180830381865afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af0919061113d565b90505b60008360c001516001811115610b0b57610b0b610e8d565b1415610b295782608001518110610b24578260a0015191505b610b59565b60018360c001516001811115610b4157610b41610e8d565b1415610b595760a0830151610b569082611199565b91505b5092915050565b60009182527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006105e58383610c1e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c0657602002820191906000526020600020905b815481526020019060010190808311610bf2575b50505050509050919050565b60006105e58383610c6d565b6000818152600183016020526040812054610c65575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108c1565b5060006108c1565b60008181526001830160205260408120548015610d56576000610c916001836111b8565b8554909150600090610ca5906001906111b8565b9050818114610d0a576000866000018281548110610cc557610cc56110b6565b9060005260206000200154905080876000018481548110610ce857610ce86110b6565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d1b57610d1b6111cf565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108c1565b60009150506108c1565b6040805160e0810182526000808252602082018190529091820190815260200160008152602001600081526020016000815260200160006001811115610da857610da8610e8d565b905290565b80356001600160a01b03811681146102b257600080fd5b600060208284031215610dd657600080fd5b6105e582610dad565b634e487b7160e01b600052604160045260246000fd5b8035600381106102b257600080fd5b600060a08284031215610e1657600080fd5b60405160a081018181106001600160401b0382111715610e4657634e487b7160e01b600052604160045260246000fd5b604052610e5283610dad565b8152610e6060208401610df5565b60208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b634e487b7160e01b600052602160045260246000fd5b805182526020808201516001600160a01b031690830152604081015160038110610ecf57610ecf610e8d565b80604084015250606081015160608301526080810151608083015260a081015160a083015260c081015160028110610f0957610f09610e8d565b8060c0840152505050565b6020808252825182820181905260009190848201906040850190845b81811015610f5657610f43838551610ea3565b9284019260e09290920191600101610f30565b50909695505050505050565b600060208284031215610f7457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b600060808284031215610fa157600080fd5b604051608081018181106001600160401b0382111715610fd157634e487b7160e01b600052604160045260246000fd5b604052610fdd83610dad565b8152610feb60208401610df5565b602082015260408301356040820152606083013560608201528091505092915050565b6020808252601d908201527f52756c6573456e67696e653a2063616e6e6f74207365742072756c6573000000604082015260600190565b6003811061105557611055610e8d565b60f81b9052565b6002811061105557611055610e8d565b606087901b6001600160601b031916815261108a6014820187611045565b8460158201528360358201528260558201526110a9607582018361105c565b6076019695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156110f5576110f56110cc565b500190565b606086901b6001600160601b03191681526111186014820186611045565b836015820152826035820152611131605582018361105c565b60560195945050505050565b60006020828403121561114f57600080fd5b5051919050565b6020808252818101527f52756c6573456e67696e653a2072756c6520616c726561647920657869737473604082015260600190565b60e081016108c18284610ea3565b60008160001904831182151516156111b3576111b36110cc565b500290565b6000828210156111ca576111ca6110cc565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220cd0f686712ba1ba63d8ba45c7f1eb0f3f514e7083749605cdd9ba3c284ab580f64736f6c634300080c0033",
    "sourceMap": "263:863:389:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c80630eb0adb6146100725780631022a25e146100875780631184aef2146100ad5780639d907761146100c2578063a7145eb4146100d5578063c0c95f69146100ea578063d47875d0146100fd575b600080fd5b610085610080366004610dc4565b610110565b005b61009a610095366004610e04565b6101ce565b6040519081526020015b60405180910390f35b6100b56102b7565b6040516100a49190610f14565b6100856100d0366004610f62565b61044b565b6100dd61047b565b6040516100a49190610f7b565b61009a6100f8366004610f8f565b610494565b61009a61010b366004610dc4565b61055c565b610118610723565b61017b5760405162461bcd60e51b815260206004820152602960248201527f52756c6573456e67696e653a2063616e6e6f74206f766572726964652072756c604482015268657320656e67696e6560b81b60648201526084015b60405180910390fd5b80610184610734565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f7e4ea600166ef789c479bc85ab387baad110a51bcb8892becff89aa66749d31590600090a250565b60006101d8610758565b6101f45760405162461bcd60e51b81526004016101729061100e565b81516020808401516040808601516060870151608088015192516102209695929391926000910161106c565b6040516020818303038152906040528051906020012090506102b26040518060e0016040528083815260200184600001516001600160a01b031681526020018460200151600281111561027557610275610e8d565b8152602001846040015181526020018460600151815260200184608001518152602001600060018111156102ab576102ab610e8d565b9052610784565b919050565b606060006102ce6102c6610734565b6001016108b6565b8051909150806001600160401b038111156102eb576102eb610ddf565b60405190808252806020026020018201604052801561032457816020015b610311610d60565b8152602001906001900390816103095790505b50925060005b818110156104455761033a610734565b6003016000848381518110610351576103516110b6565b6020908102919091018101518252818101929092526040908101600020815160e0810183528154815260018201546001600160a01b03811694820194909452929091830190600160a01b900460ff1660028111156103b1576103b1610e8d565b60028111156103c2576103c2610e8d565b8152600282015460208201526003820154604082015260048201546060820152600582015460809091019060ff16600181111561040157610401610e8d565b600181111561041257610412610e8d565b81525050848281518110610428576104286110b6565b602090810291909101015261043e6001826110e2565b905061032a565b50505090565b610453610758565b61046f5760405162461bcd60e51b81526004016101729061100e565b610478816108c7565b50565b6000610485610734565b546001600160a01b0316919050565b600061049e610758565b6104ba5760405162461bcd60e51b81526004016101729061100e565b8151602080840151604080860151606087015191516104e09594919291600191016110fa565b6040516020818303038152906040528051906020012090506102b26040518060e0016040528083815260200184600001516001600160a01b031681526020018460200151600281111561053557610535610e8d565b815260408086015160208301526000908201526060808601519082015260800160016102ab565b60008061056761047b565b90506001600160a01b038116156105ec57604051630d47875d60e41b81526001600160a01b0382169063d47875d0906105a4908690600401610f7b565b602060405180830381865afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e5919061113d565b9392505050565b60006105f96102c6610734565b805190915060005b8181101561071a576000610613610734565b600301600085848151811061062a5761062a6110b6565b6020908102919091018101518252818101929092526040908101600020815160e0810183528154815260018201546001600160a01b03811694820194909452929091830190600160a01b900460ff16600281111561068a5761068a610e8d565b600281111561069b5761069b610e8d565b8152600282015460208201526003820154604082015260048201546060820152600582015460809091019060ff1660018111156106da576106da610e8d565b60018111156106eb576106eb610e8d565b90525090506106fa8782610972565b61070490876110e2565b955061071390506001826110e2565b9050610601565b50505050919050565b600061072f8133610b60565b905090565b7f06343399fe112adbefbb500137c8946b0202962fdcbce169cfc105e7138fde9e90565b600061072f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610b60565b805161079b90610792610734565b60010190610baa565b6107b75760405162461bcd60e51b815260040161017290611156565b806107c0610734565b82516000908152600391909101602090815260409182902083518155908301516001820180546001600160a01b039092166001600160a01b031983168117825593850151929390916001600160a81b03191617600160a01b83600281111561082a5761082a610e8d565b0217905550606082015160028201556080820151600382015560a0820151600482015560c082015160058201805460ff19166001838181111561086f5761086f610e8d565b021790555090505080600001517f66e6c61edc36a7cd029e6e694786708b7524849b1753efae9ab0b3dfe2b68322826040516108ab919061118b565b60405180910390a250565b60606108c182610bb6565b92915050565b6108dc816108d3610734565b60010190610c12565b6108f85760405162461bcd60e51b815260040161017290611156565b610900610734565b6000828152600391820160205260408082208281556001810180546001600160a81b031916905560028101839055928301829055600483018290556005909201805460ff19169055905182917f393e38d78dfe0ad0b79c18f06aa7611579d592c72f5a2255a42c5a308dda751891a250565b600080808360400151600281111561098c5761098c610e8d565b1415610a0a5782602001516001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016109c29190610f7b565b602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a03919061113d565b9050610af3565b600183604001516002811115610a2257610a22610e8d565b1415610a585782602001516001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016109c29190610f7b565b600283604001516002811115610a7057610a70610e8d565b1415610af35760208301516060840151604051627eeac760e11b81526001600160a01b038781166004830152602482019290925291169062fdd58e90604401602060405180830381865afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af0919061113d565b90505b60008360c001516001811115610b0b57610b0b610e8d565b1415610b295782608001518110610b24578260a0015191505b610b59565b60018360c001516001811115610b4157610b41610e8d565b1415610b595760a0830151610b569082611199565b91505b5092915050565b60009182527fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed5602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006105e58383610c1e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c0657602002820191906000526020600020905b815481526020019060010190808311610bf2575b50505050509050919050565b60006105e58383610c6d565b6000818152600183016020526040812054610c65575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108c1565b5060006108c1565b60008181526001830160205260408120548015610d56576000610c916001836111b8565b8554909150600090610ca5906001906111b8565b9050818114610d0a576000866000018281548110610cc557610cc56110b6565b9060005260206000200154905080876000018481548110610ce857610ce86110b6565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d1b57610d1b6111cf565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108c1565b60009150506108c1565b6040805160e0810182526000808252602082018190529091820190815260200160008152602001600081526020016000815260200160006001811115610da857610da8610e8d565b905290565b80356001600160a01b03811681146102b257600080fd5b600060208284031215610dd657600080fd5b6105e582610dad565b634e487b7160e01b600052604160045260246000fd5b8035600381106102b257600080fd5b600060a08284031215610e1657600080fd5b60405160a081018181106001600160401b0382111715610e4657634e487b7160e01b600052604160045260246000fd5b604052610e5283610dad565b8152610e6060208401610df5565b60208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b634e487b7160e01b600052602160045260246000fd5b805182526020808201516001600160a01b031690830152604081015160038110610ecf57610ecf610e8d565b80604084015250606081015160608301526080810151608083015260a081015160a083015260c081015160028110610f0957610f09610e8d565b8060c0840152505050565b6020808252825182820181905260009190848201906040850190845b81811015610f5657610f43838551610ea3565b9284019260e09290920191600101610f30565b50909695505050505050565b600060208284031215610f7457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b600060808284031215610fa157600080fd5b604051608081018181106001600160401b0382111715610fd157634e487b7160e01b600052604160045260246000fd5b604052610fdd83610dad565b8152610feb60208401610df5565b602082015260408301356040820152606083013560608201528091505092915050565b6020808252601d908201527f52756c6573456e67696e653a2063616e6e6f74207365742072756c6573000000604082015260600190565b6003811061105557611055610e8d565b60f81b9052565b6002811061105557611055610e8d565b606087901b6001600160601b031916815261108a6014820187611045565b8460158201528360358201528260558201526110a9607582018361105c565b6076019695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156110f5576110f56110cc565b500190565b606086901b6001600160601b03191681526111186014820186611045565b836015820152826035820152611131605582018361105c565b60560195945050505050565b60006020828403121561114f57600080fd5b5051919050565b6020808252818101527f52756c6573456e67696e653a2072756c6520616c726561647920657869737473604082015260600190565b60e081016108c18284610ea3565b60008160001904831182151516156111b3576111b36110cc565b500290565b6000828210156111ca576111ca6110cc565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220cd0f686712ba1ba63d8ba45c7f1eb0f3f514e7083749605cdd9ba3c284ab580f64736f6c634300080c0033",
    "sourceMap": "263:863:389:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5196:295:63;;;;;;:::i;:::-;;:::i;:::-;;3046:475;;;;;;:::i;:::-;;:::i;:::-;;;1654:25:641;;;1642:2;1627:18;3046:475:63;;;;;;;;1706:339;;;:::i;:::-;;;;;;;:::i;3527:149::-;;;;;;:::i;:::-;;:::i;2051:162::-;;;:::i;:::-;;;;;;;:::i;2406:634::-;;;;;;:::i;:::-;;:::i;1142:558::-;;;;;;:::i;:::-;;:::i;5196:295::-;5284:24;:22;:24::i;:::-;5276:78;;;;-1:-1:-1;;;5276:78:63;;4767:2:641;5276:78:63;;;4749:21:641;4806:2;4786:18;;;4779:30;4845:34;4825:18;;;4818:62;-1:-1:-1;;;4896:18:641;;;4889:39;4945:19;;5276:78:63;;;;;;;;;5408:19;5364:21;:19;:21::i;:::-;:63;;-1:-1:-1;;;;;;5364:63:63;-1:-1:-1;;;;;5364:63:63;;;;;;5443:41;;;;;;;;-1:-1:-1;;5443:41:63;5196:295;:::o;3046:475::-;3124:14;3158;:12;:14::i;:::-;3150:56;;;;-1:-1:-1;;;3150:56:63;;;;;;;:::i;:::-;3266:10;;3278:14;;;;;3294:12;;;;;3308;;;;3322:10;;;;3249:104;;;;3266:10;3294:12;;3308;;3266:10;;3249:104;;:::i;:::-;;;;;;;;;;;;;3226:137;;;;;;3217:146;;3373:141;3398:106;;;;;;;;3409:6;3398:106;;;;3417:4;:10;;;-1:-1:-1;;;;;3398:106:63;;;;;3429:4;:14;;;3398:106;;;;;;;;:::i;:::-;;;;;3445:4;:12;;;3398:106;;;;3459:4;:12;;;3398:106;;;;3473:4;:10;;;3398:106;;;;3485:18;3398:106;;;;;;;;:::i;:::-;;;3373:11;:141::i;:::-;3046:475;;;:::o;1706:339::-;1752:25;1789:20;1812:34;:21;:19;:21::i;:::-;:25;;:32;:34::i;:::-;1870:10;;1789:57;;-1:-1:-1;1870:10:63;-1:-1:-1;;;;;1899:21:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1891:29;;1936:9;1931:108;1955:3;1951:1;:7;1931:108;;;1993:21;:19;:21::i;:::-;:27;;:35;2021:3;2025:1;2021:6;;;;;;;;:::i;:::-;;;;;;;;;;;;1993:35;;;;;;;;;;;;;-1:-1:-1;1993:35:63;1982:46;;;;;;;;;;;;;;;-1:-1:-1;;;;;1982:46:63;;;;;;;;;;1993:35;;1982:46;;;-1:-1:-1;;;1982:46:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:5;1988:1;1982:8;;;;;;;;:::i;:::-;;;;;;;;;;:46;1960:6;1965:1;1960:6;;:::i;:::-;;;1931:108;;;;1779:266;;1706:339;:::o;3527:149::-;3591:14;:12;:14::i;:::-;3583:56;;;;-1:-1:-1;;;3583:56:63;;;;;;;:::i;:::-;3649:20;3661:7;3649:11;:20::i;:::-;3527:149;:::o;2051:162::-;2106:26;2165:21;:19;:21::i;:::-;:41;-1:-1:-1;;;;;2165:41:63;;2051:162;-1:-1:-1;2051:162:63:o;2406:634::-;2495:14;2529;:12;:14::i;:::-;2521:56;;;;-1:-1:-1;;;2521:56:63;;;;;;;:::i;:::-;2637:10;;2649:14;;;;;2665:12;;;;;2679:23;;;;2620:108;;;;2637:10;2665:12;;2679:23;2704;;2620:108;;:::i;:::-;;;;;;;;;;;;;2597:141;;;;;;2588:150;;2748:285;2773:250;;;;;;;;2801:6;2773:250;;;;2825:4;:10;;;-1:-1:-1;;;;;2773:250:63;;;;;2853:4;:14;;;2773:250;;;;;;;;:::i;:::-;;;2885:12;;;;;2773:250;;;;-1:-1:-1;2773:250:63;;;;;2945:23;;;;2773:250;;;;;;2986:23;2773:250;;1142:558;1202:13;1227:22;1252:24;:22;:24::i;:::-;1227:49;-1:-1:-1;;;;;;1290:28:63;;;1286:116;;1341:50;;-1:-1:-1;;;1341:50:63;;-1:-1:-1;;;;;1341:37:63;;;;;:50;;1379:11;;1341:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:57;1142:558;-1:-1:-1;;;1142:558:63:o;1286:116::-;1412:20;1435:34;:21;:19;:21::i;:34::-;1493:10;;1412:57;;-1:-1:-1;1479:11:63;1514:180;1538:3;1534:1;:7;1514:180;;;1565:22;1590:21;:19;:21::i;:::-;:27;;:35;1618:3;1622:1;1618:6;;;;;;;;:::i;:::-;;;;;;;;;;;;1590:35;;;;;;;;;;;;;-1:-1:-1;1590:35:63;1565:60;;;;;;;;;;;;;;;-1:-1:-1;;;;;1565:60:63;;;;;;;;;;1590:35;;1565:60;;;-1:-1:-1;;;1565:60:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;1565:60:63;-1:-1:-1;1648:35:63;1665:11;1565:60;1648:16;:35::i;:::-;1639:44;;;;:::i;:::-;;-1:-1:-1;1543:6:63;;-1:-1:-1;1548:1:63;1543:6;;:::i;:::-;;;1514:180;;;;1217:483;;;1142:558;;;:::o;674:160:389:-;748:4;801:26;748:4;816:10;801:8;:26::i;:::-;794:33;;674:160;:::o;5497:155:63:-;427:33;;674:160:389:o;412:140::-;476:4;499:46;508:24;534:10;499:8;:46::i;4680:266:63:-;4783:12;;4753:43;;:21;:19;:21::i;:::-;:25;;;:29;:43::i;:::-;4745:88;;;;-1:-1:-1;;;4745:88:63;;;;;;;:::i;:::-;4887:5;4843:21;:19;:21::i;:::-;4871:12;;4843:41;;;;:27;;;;;:41;;;;;;;;;:49;;;;;;;;;;;;;-1:-1:-1;;;;;4843:49:63;;;-1:-1:-1;;;;;;4843:49:63;;;;;;;;;;:41;;:49;;-1:-1:-1;;;;;;4843:49:63;;-1:-1:-1;;;4843:49:63;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4843:49:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4843:49:63;;;;;;;;;;;:::i;:::-;;;;;;;;;4919:5;:12;;;4907:32;4933:5;4907:32;;;;;;:::i;:::-;;;;;;;;4680:266;:::o;7664:124:337:-;7727:16;7762:19;7770:3;7762:7;:19::i;:::-;7755:26;7664:124;-1:-1:-1;;7664:124:337:o;4952:238:63:-;5017:41;5050:7;5017:21;:19;:21::i;:::-;:25;;;:32;:41::i;:::-;5009:86;;;;-1:-1:-1;;;5009:86:63;;;;;;;:::i;:::-;5112:21;:19;:21::i;:::-;:36;;;;:27;;;;:36;;;;;;5105:43;;;;;;;;-1:-1:-1;;;;;;5105:43:63;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5105:43:63;;;5163:20;;5140:7;;5163:20;;;4952:238;:::o;3869:805::-;3964:13;;;4023:5;:15;;;:34;;;;;;;;:::i;:::-;;4019:384;;;4090:5;:11;;;-1:-1:-1;;;;;4083:29:63;;4113:11;4083:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:52;;4019:384;;;4165:16;4146:5;:15;;;:35;;;;;;;;:::i;:::-;;4142:261;;;4215:5;:11;;;-1:-1:-1;;;;;4207:30:63;;4238:11;4207:43;;;;;;;;;;;;;;;:::i;4142:261::-;4290:17;4271:5;:15;;;:36;;;;;;;;:::i;:::-;;4267:136;;;4342:11;;;;4378:13;;;;4333:59;;-1:-1:-1;;;4333:59:63;;-1:-1:-1;;;;;8207:32:641;;;4333:59:63;;;8189:51:641;8256:18;;;8249:34;;;;4333:31:63;;;;;8162:18:641;;4333:59:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4323:69;;4267:136;4435:18;4417:5;:14;;;:36;;;;;;;;:::i;:::-;;4413:255;;;4484:5;:13;;;4473:7;:24;4469:82;;4525:5;:11;;;4517:19;;4469:82;4413:255;;;4589:23;4571:5;:14;;;:41;;;;;;;;:::i;:::-;;4567:101;;;4646:11;;;;4636:21;;:7;:21;:::i;:::-;4628:29;;4567:101;3979:695;3869:805;;;;:::o;902:222:389:-;976:4;1087:20;;;395:32:57;1087:20:389;;;;;;;;-1:-1:-1;;;;;1087:30:389;;;;;;;;;;;;;;;902:222::o;5818:123:337:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;5469:109::-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;6109:129::-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:337;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:337;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:337;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:173:641:-;82:20;;-1:-1:-1;;;;;131:31:641;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:150;590:20;;639:1;629:12;;619:40;;655:1;652;645:12;670:833;765:6;818:3;806:9;797:7;793:23;789:33;786:53;;;835:1;832;825:12;786:53;868:2;862:9;910:3;902:6;898:16;980:6;968:10;965:22;-1:-1:-1;;;;;932:10:641;929:34;926:62;923:185;;;1030:10;1025:3;1021:20;1018:1;1011:31;1065:4;1062:1;1055:15;1093:4;1090:1;1083:15;923:185;1124:2;1117:22;1163:29;1182:9;1163:29;:::i;:::-;1155:6;1148:45;1226;1267:2;1256:9;1252:18;1226:45;:::i;:::-;1221:2;1213:6;1209:15;1202:70;1333:2;1322:9;1318:18;1305:32;1300:2;1292:6;1288:15;1281:57;1399:2;1388:9;1384:18;1371:32;1366:2;1358:6;1354:15;1347:57;1466:3;1455:9;1451:19;1438:33;1432:3;1424:6;1420:16;1413:59;1491:6;1481:16;;;670:833;;;;:::o;1690:127::-;1751:10;1746:3;1742:20;1739:1;1732:31;1782:4;1779:1;1772:15;1806:4;1803:1;1796:15;1822:669;1898:12;;1886:25;;1964:4;1953:16;;;1947:23;-1:-1:-1;;;;;1943:49:641;1927:14;;;1920:73;2039:4;2028:16;;2022:23;2081:1;2064:19;;2054:53;;2087:18;;:::i;:::-;2139:12;2132:4;2127:3;2123:14;2116:36;;2201:4;2194:5;2190:16;2184:23;2177:4;2172:3;2168:14;2161:47;2257:4;2250:5;2246:16;2240:23;2233:4;2228:3;2224:14;2217:47;2313:4;2306:5;2302:16;2296:23;2289:4;2284:3;2280:14;2273:47;2368:4;2361:5;2357:16;2351:23;2412:1;2396:14;2393:21;2383:55;;2418:18;;:::i;:::-;2470:14;2463:4;2458:3;2454:14;2447:38;;1822:669;;:::o;2496:714::-;2725:2;2777:21;;;2847:13;;2750:18;;;2869:22;;;2696:4;;2725:2;2948:15;;;;2922:2;2907:18;;;2696:4;2991:193;3005:6;3002:1;2999:13;2991:193;;;3054:48;3098:3;3089:6;3083:13;3054:48;:::i;:::-;3159:15;;;;3131:4;3122:14;;;;;3027:1;3020:9;2991:193;;;-1:-1:-1;3201:3:641;;2496:714;-1:-1:-1;;;;;;2496:714:641:o;3215:180::-;3274:6;3327:2;3315:9;3306:7;3302:23;3298:32;3295:52;;;3343:1;3340;3333:12;3295:52;-1:-1:-1;3366:23:641;;3215:180;-1:-1:-1;3215:180:641:o;3400:203::-;-1:-1:-1;;;;;3564:32:641;;;;3546:51;;3534:2;3519:18;;3400:203::o;3608:770::-;3708:6;3761:3;3749:9;3740:7;3736:23;3732:33;3729:53;;;3778:1;3775;3768:12;3729:53;3811:2;3805:9;3853:3;3845:6;3841:16;3923:6;3911:10;3908:22;-1:-1:-1;;;;;3875:10:641;3872:34;3869:62;3866:185;;;3973:10;3968:3;3964:20;3961:1;3954:31;4008:4;4005:1;3998:15;4036:4;4033:1;4026:15;3866:185;4067:2;4060:22;4106:29;4125:9;4106:29;:::i;:::-;4098:6;4091:45;4169;4210:2;4199:9;4195:18;4169:45;:::i;:::-;4164:2;4156:6;4152:15;4145:70;4276:2;4265:9;4261:18;4248:32;4243:2;4235:6;4231:15;4224:57;4342:2;4331:9;4327:18;4314:32;4309:2;4301:6;4297:15;4290:57;4366:6;4356:16;;;3608:770;;;;:::o;4975:353::-;5177:2;5159:21;;;5216:2;5196:18;;;5189:30;5255:31;5250:2;5235:18;;5228:59;5319:2;5304:18;;4975:353::o;5333:150::-;5414:1;5407:5;5404:12;5394:46;;5420:18;;:::i;:::-;5465:3;5461:15;5449:28;;5333:150::o;5488:149::-;5568:1;5561:5;5558:12;5548:46;;5574:18;;:::i;5642:610::-;5981:2;5952:15;;;-1:-1:-1;;;;;;5948:45:641;5936:58;;6003:47;6046:2;6037:12;;6029:6;6003:47;:::i;:::-;6080:6;6075:2;6070:3;6066:12;6059:28;6117:6;6112:2;6107:3;6103:12;6096:28;6154:6;6149:2;6144:3;6140:12;6133:28;6170:47;6212:3;6207;6203:13;6195:6;6170:47;:::i;:::-;6242:3;6233:13;;5642:610;-1:-1:-1;;;;;;5642:610:641:o;6257:127::-;6318:10;6313:3;6309:20;6306:1;6299:31;6349:4;6346:1;6339:15;6373:4;6370:1;6363:15;6389:127;6450:10;6445:3;6441:20;6438:1;6431:31;6481:4;6478:1;6471:15;6505:4;6502:1;6495:15;6521:128;6561:3;6592:1;6588:6;6585:1;6582:13;6579:39;;;6598:18;;:::i;:::-;-1:-1:-1;6634:9:641;;6521:128::o;6654:543::-;6965:2;6936:15;;;-1:-1:-1;;;;;;6932:45:641;6920:58;;6987:47;7030:2;7021:12;;7013:6;6987:47;:::i;:::-;7064:6;7059:2;7054:3;7050:12;7043:28;7101:6;7096:2;7091:3;7087:12;7080:28;7117:46;7159:2;7154:3;7150:12;7142:6;7117:46;:::i;:::-;7188:2;7179:12;;6654:543;-1:-1:-1;;;;;6654:543:641:o;7202:184::-;7272:6;7325:2;7313:9;7304:7;7300:23;7296:32;7293:52;;;7341:1;7338;7331:12;7293:52;-1:-1:-1;7364:16:641;;7202:184;-1:-1:-1;7202:184:641:o;7391:356::-;7593:2;7575:21;;;7612:18;;;7605:30;7671:34;7666:2;7651:18;;7644:62;7738:2;7723:18;;7391:356::o;7752:258::-;7944:3;7929:19;;7957:47;7933:9;7986:6;7957:47;:::i;8294:168::-;8334:7;8400:1;8396;8392:6;8388:14;8385:1;8382:21;8377:1;8370:9;8363:17;8359:45;8356:71;;;8407:18;;:::i;:::-;-1:-1:-1;8447:9:641;;8294:168::o;8467:125::-;8507:4;8535:1;8532;8529:8;8526:34;;;8540:18;;:::i;:::-;-1:-1:-1;8577:9:641;;8467:125::o;8597:127::-;8658:10;8653:3;8649:20;8646:1;8639:31;8689:4;8686:1;8679:15;8713:4;8710:1;8703:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createRuleMulitiplicative((address,uint8,uint256,uint256))": "c0c95f69",
    "createRuleThreshold((address,uint8,uint256,uint256,uint256))": "1022a25e",
    "deleteRule(bytes32)": "9d907761",
    "getAllRules()": "1184aef2",
    "getRulesEngineOverride()": "a7145eb4",
    "getScore(address)": "d47875d0",
    "setRulesEngineOverride(address)": "0eb0adb6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct IRulesEngine.RuleWithId\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"RuleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"name\":\"RuleDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRulesEngine\",\"type\":\"address\"}],\"name\":\"RulesEngineOverriden\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scorePerOwnedToken\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeMultiplicative\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleMulitiplicative\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"internalType\":\"struct IRulesEngine.RuleTypeThreshold\",\"name\":\"rule\",\"type\":\"tuple\"}],\"name\":\"createRuleThreshold\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ruleId\",\"type\":\"bytes32\"}],\"name\":\"deleteRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRules\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ruleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IRulesEngine.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum IRulesEngine.RuleType\",\"name\":\"ruleType\",\"type\":\"uint8\"}],\"internalType\":\"struct IRulesEngine.RuleWithId[]\",\"name\":\"rules\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRulesEngineOverride\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rulesEngineAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rulesEngineAddress\",\"type\":\"address\"}],\"name\":\"setRulesEngineOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol\":\"RulesEngineExtension\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/dynamic-contracts/extension/Permissions.sol\":{\"keccak256\":\"0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb\",\"dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW\"]},\"contracts/dynamic-contracts/extension/RulesEngine.sol\":{\"keccak256\":\"0xc06a5537688deef4d3edfe617b7b57d2156a03a41727aca9885113e6b2910b3e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://268e9414a43eb651e7e25d8b391f2becd01d3052461fa0eab6ecb9b35aa8721f\",\"dweb:/ipfs/QmZHHBG7JLuKeuGC52koopkS5Pm5d1GHVPatFNMLeMYfM2\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa\",\"dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol\":{\"keccak256\":\"0x96624f0a621b001074f2bc477672e489678b73268dbee558456e05120d9e3608\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1c36748cc635c5e21beb8aca6db493b5eb8be57468e7bb0559ce0473889138a2\",\"dweb:/ipfs/QmZq9zKYBK16NyaCYhgV4fNgSVvoJg4bLrmeAnBuSyEgDC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct IRulesEngine.RuleWithId",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RuleCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RuleDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRulesEngine",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RulesEngineOverriden",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeMultiplicative",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scorePerOwnedToken",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleMulitiplicative",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IRulesEngine.RuleTypeThreshold",
              "name": "rule",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRuleThreshold",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ruleId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_ruleId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteRule"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllRules",
          "outputs": [
            {
              "internalType": "struct IRulesEngine.RuleWithId[]",
              "name": "rules",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "ruleId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum IRulesEngine.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "score",
                  "type": "uint256"
                },
                {
                  "internalType": "enum IRulesEngine.RuleType",
                  "name": "ruleType",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRulesEngineOverride",
          "outputs": [
            {
              "internalType": "address",
              "name": "rulesEngineAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getScore",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rulesEngineAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRulesEngineOverride"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol": "RulesEngineExtension"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dynamic-contracts/extension/Permissions.sol": {
        "keccak256": "0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a",
        "urls": [
          "bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb",
          "dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/RulesEngine.sol": {
        "keccak256": "0xc06a5537688deef4d3edfe617b7b57d2156a03a41727aca9885113e6b2910b3e",
        "urls": [
          "bzz-raw://268e9414a43eb651e7e25d8b391f2becd01d3052461fa0eab6ecb9b35aa8721f",
          "dweb:/ipfs/QmZHHBG7JLuKeuGC52koopkS5Pm5d1GHVPatFNMLeMYfM2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2",
        "urls": [
          "bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa",
          "dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol": {
        "keccak256": "0x96624f0a621b001074f2bc477672e489678b73268dbee558456e05120d9e3608",
        "urls": [
          "bzz-raw://1c36748cc635c5e21beb8aca6db493b5eb8be57468e7bb0559ce0473889138a2",
          "dweb:/ipfs/QmZq9zKYBK16NyaCYhgV4fNgSVvoJg4bLrmeAnBuSyEgDC"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/unaudited/evolving-nfts/extension/RulesEngineExtension.sol",
    "id": 102676,
    "exportedSymbols": {
      "PermissionsStorage": [
        22443
      ],
      "RulesEngine": [
        24395
      ],
      "RulesEngineExtension": [
        102675
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1088:389",
    "nodes": [
      {
        "id": 102611,
        "nodeType": "PragmaDirective",
        "src": "39:24:389",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 102613,
        "nodeType": "ImportDirective",
        "src": "87:90:389",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Permissions.sol",
        "file": "../../../dynamic-contracts/extension/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102676,
        "sourceUnit": 22887,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102612,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22443,
              "src": "96:18:389",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$22443_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102615,
        "nodeType": "ImportDirective",
        "src": "178:83:389",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/RulesEngine.sol",
        "file": "../../../dynamic-contracts/extension/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102676,
        "sourceUnit": 24396,
        "symbolAliases": [
          {
            "foreign": {
              "id": 102614,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24395,
              "src": "187:11:389",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$24395_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 102675,
        "nodeType": "ContractDefinition",
        "src": "263:863:389",
        "nodes": [
          {
            "id": 102633,
            "nodeType": "FunctionDefinition",
            "src": "412:140:389",
            "nodes": [],
            "body": {
              "id": 102632,
              "nodeType": "Block",
              "src": "482:70:389",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d494e5445525f524f4c45",
                            "id": 102626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "518:13:389",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            },
                            "value": "MINTER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                              "typeString": "literal_string \"MINTER_ROLE\""
                            }
                          ],
                          "id": 102625,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "508:9:389",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 102627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "508:24:389",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 102628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "534:3:389",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "534:10:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102624,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102674,
                      "src": "499:8:389",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:46:389",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102623,
                  "id": 102631,
                  "nodeType": "Return",
                  "src": "492:53:389"
                }
              ]
            },
            "baseFunctions": [
              24389
            ],
            "documentation": {
              "id": 102618,
              "nodeType": "StructuredDocumentation",
              "src": "314:93:389",
              "text": "@dev Returns whether the rules of the contract can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRules",
            "nameLocation": "421:12:389",
            "overrides": {
              "id": 102620,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "458:8:389"
            },
            "parameters": {
              "id": 102619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:2:389"
            },
            "returnParameters": {
              "id": 102623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102633,
                  "src": "476:4:389",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:4:389",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:6:389"
            },
            "scope": 102675,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102647,
            "nodeType": "FunctionDefinition",
            "src": "674:160:389",
            "nodes": [],
            "body": {
              "id": 102646,
              "nodeType": "Block",
              "src": "754:80:389",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30783030",
                        "id": 102641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "810:4:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x00"
                      },
                      {
                        "expression": {
                          "id": 102642,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "816:3:389",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "816:10:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102640,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102674,
                      "src": "801:8:389",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "801:26:389",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102639,
                  "id": 102645,
                  "nodeType": "Return",
                  "src": "794:33:389"
                }
              ]
            },
            "baseFunctions": [
              24394
            ],
            "documentation": {
              "id": 102634,
              "nodeType": "StructuredDocumentation",
              "src": "558:111:389",
              "text": "@dev Returns whether the rules engine used by the contract can be overriden in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canOverrieRulesEngine",
            "nameLocation": "683:22:389",
            "overrides": {
              "id": 102636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "730:8:389"
            },
            "parameters": {
              "id": 102635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:389"
            },
            "returnParameters": {
              "id": 102639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102647,
                  "src": "748:4:389",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102637,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:4:389",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:6:389"
            },
            "scope": 102675,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102674,
            "nodeType": "FunctionDefinition",
            "src": "902:222:389",
            "nodes": [],
            "body": {
              "id": 102673,
              "nodeType": "Block",
              "src": "982:142:389",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102661,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1024:4:389",
                      "nodeType": "VariableDeclaration",
                      "scope": 102673,
                      "src": "992:36:389",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 102660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102659,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22430,
                          "src": "992:23:389"
                        },
                        "referencedDeclaration": 22430,
                        "src": "992:23:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102665,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 102662,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22443,
                        "src": "1031:18:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$22443_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 102663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22442,
                      "src": "1031:37:389",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$22430_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 102664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:39:389",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:78:389"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 102666,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102661,
                          "src": "1087:4:389",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 102667,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22424,
                        "src": "1087:13:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 102669,
                      "indexExpression": {
                        "id": 102668,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102650,
                        "src": "1101:5:389",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1087:20:389",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 102671,
                    "indexExpression": {
                      "id": 102670,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102652,
                      "src": "1108:8:389",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1087:30:389",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102656,
                  "id": 102672,
                  "nodeType": "Return",
                  "src": "1080:37:389"
                }
              ]
            },
            "documentation": {
              "id": 102648,
              "nodeType": "StructuredDocumentation",
              "src": "840:57:389",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "911:8:389",
            "parameters": {
              "id": 102653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102650,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "928:5:389",
                  "nodeType": "VariableDeclaration",
                  "scope": 102674,
                  "src": "920:13:389",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:389",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102652,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "943:8:389",
                  "nodeType": "VariableDeclaration",
                  "scope": 102674,
                  "src": "935:16:389",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:389",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:33:389"
            },
            "returnParameters": {
              "id": 102656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102674,
                  "src": "976:4:389",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:4:389",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:6:389"
            },
            "scope": 102675,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 102616,
              "name": "RulesEngine",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24395,
              "src": "296:11:389"
            },
            "id": 102617,
            "nodeType": "InheritanceSpecifier",
            "src": "296:11:389"
          }
        ],
        "canonicalName": "RulesEngineExtension",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          102675,
          24395,
          50828
        ],
        "name": "RulesEngineExtension",
        "nameLocation": "272:20:389",
        "scope": 102676,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 389
}