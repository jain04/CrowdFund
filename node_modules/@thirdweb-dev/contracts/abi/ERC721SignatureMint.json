{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b50604051620043253803806200432583398101604081905262000035916200060a565b6040518060400160405280601381526020017f5369676e61747572654d696e7445524337323100000000000000000000000000815250604051806040016040528060018152602001603160f81b8152508787878787733cc6cdda760b79bafa08df41ecfa224f810dceb6600185858160029080519060200190620000bb9291906200047a565b508051620000d19060039060208401906200047a565b50506000805550620000e48282620001be565b50620000f2905085620002ec565b62000107826001600160801b0383166200033e565b620001136001620003e9565b5050845160209586012084519486019490942060e08590526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919098012090529490945250506101205250620001b28162000430565b50505050505062000709565b6daaeb6d7670e522a718067333cd4e3b15620002e8576001600160a01b0382163b15620002a15780156200026057604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200024357600080fd5b505af115801562000258573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af29039060440162000228565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200024357600080fd5b5050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620003875760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b8280546200048890620006cc565b90600052602060002090601f016020900481019282620004ac5760008555620004f7565b82601f10620004c757805160ff1916838001178555620004f7565b82800160010185558215620004f7579182015b82811115620004f7578251825591602001919060010190620004da565b506200050592915062000509565b5090565b5b808211156200050557600081556001016200050a565b80516001600160a01b03811681146200053857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200056557600080fd5b81516001600160401b03808211156200058257620005826200053d565b604051601f8301601f19908116603f01168101908282118183101715620005ad57620005ad6200053d565b81604052838152602092508683858801011115620005ca57600080fd5b600091505b83821015620005ee5785820183015181830184015290820190620005cf565b83821115620006005760008385830101525b9695505050505050565b60008060008060008060c087890312156200062457600080fd5b6200062f8762000520565b60208801519096506001600160401b03808211156200064d57600080fd5b6200065b8a838b0162000553565b965060408901519150808211156200067257600080fd5b506200068189828a0162000553565b945050620006926060880162000520565b60808801519093506001600160801b0381168114620006b057600080fd5b9150620006c060a0880162000520565b90509295509295509295565b600181811c90821680620006e157607f821691505b602082108114156200070357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051613bcc6200075960003960006129df01526000612a2e01526000612a09015260006129620152600061298c015260006129b60152613bcc6000f3fe6080604052600436106101cf5760003560e01c80634cc157df116100fe5780634cc157df14610469578063504c6e01146104ab57806357fd8455146104c5578063600dd5ea146104e55780636352211e1461050557806363b45e2d146105255780636f4f28371461053a57806370a082311461055a578063754a81d91461057a5780638da5cb5b1461059a578063938e3d7b146105af57806395d89b41146105cf5780639bcf7a15146105e4578063a22cb46514610604578063ac9650d814610624578063b24f2d3914610651578063b88d4fde1461067c578063c87b56dd1461069c578063e8a3d485146106bc578063e985e9c5146106d157600080fd5b806275a317146101d457806301ffc9a7146101f657806306fdde031461022b578063079fe40e1461024d578063081812fc1461026f578063095ea7b31461028f57806313af4035146102af57806318160ddd146102cf57806323b872dd146102f25780632419f51b14610312578063252e82e8146103325780632a55205a1461037157806332f0cd641461039f5780633b1475a7146103bf57806341f43434146103d457806342842e0e146103f657806342966c6814610416578063430c208114610436578063439c7be514610456575b600080fd5b3480156101e057600080fd5b506101f46101ef366004613189565b6106f1565b005b34801561020257600080fd5b506102166102113660046131ec565b61074f565b60405190151581526020015b60405180910390f35b34801561023757600080fd5b506102406107bc565b6040516102229190613261565b34801561025957600080fd5b5061026261084e565b6040516102229190613281565b34801561027b57600080fd5b5061026261028a366004613295565b61085d565b34801561029b57600080fd5b506101f46102aa3660046132ae565b6108a1565b3480156102bb57600080fd5b506101f46102ca3660046132d8565b6108ba565b3480156102db57600080fd5b50600154600054035b604051908152602001610222565b3480156102fe57600080fd5b506101f461030d3660046132f3565b6108ea565b34801561031e57600080fd5b506102e461032d366004613295565b610915565b34801561033e57600080fd5b5061035261034d36600461332f565b610983565b6040805192151583526001600160a01b03909116602083015201610222565b34801561037d57600080fd5b5061039161038c3660046133ce565b6109c7565b6040516102229291906133f0565b3480156103ab57600080fd5b506101f46103ba366004613417565b610a04565b3480156103cb57600080fd5b506000546102e4565b3480156103e057600080fd5b506102626daaeb6d7670e522a718067333cd4e81565b34801561040257600080fd5b506101f46104113660046132f3565b610a75565b34801561042257600080fd5b506101f4610431366004613295565b610a9a565b34801561044257600080fd5b506102166104513660046132ae565b610aa5565b61026261046436600461332f565b610b04565b34801561047557600080fd5b50610489610484366004613295565b610c9f565b604080516001600160a01b03909316835261ffff909116602083015201610222565b3480156104b757600080fd5b50600e546102169060ff1681565b3480156104d157600080fd5b506101f46104e03660046132d8565b610d0a565b3480156104f157600080fd5b506101f46105003660046132ae565b610d7a565b34801561051157600080fd5b50610262610520366004613295565b610da8565b34801561053157600080fd5b50600c546102e4565b34801561054657600080fd5b506101f46105553660046132d8565b610dba565b34801561056657600080fd5b506102e46105753660046132d8565b610de7565b34801561058657600080fd5b506101f4610595366004613434565b610e35565b3480156105a657600080fd5b50610262610e79565b3480156105bb57600080fd5b506101f46105ca3660046134b1565b610e88565b3480156105db57600080fd5b50610240610eb5565b3480156105f057600080fd5b506101f46105ff3660046134e5565b610ec4565b34801561061057600080fd5b506101f461061f36600461350a565b610ef3565b34801561063057600080fd5b5061064461063f366004613541565b610f07565b60405161022291906135b5565b34801561065d57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff16610489565b34801561068857600080fd5b506101f4610697366004613617565b610ffb565b3480156106a857600080fd5b506102406106b7366004613295565b611028565b3480156106c857600080fd5b50610240611116565b3480156106dd57600080fd5b506102166106ec366004613672565b6111a4565b6106f96111d2565b61071e5760405162461bcd60e51b8152600401610715906136a5565b60405180910390fd5b61073061072a60005490565b826111f5565b61074b8260016040518060200160405280600081525061126e565b5050565b60006301ffc9a760e01b6001600160e01b03198316148061078057506380ac58cd60e01b6001600160e01b03198316145b8061079b5750635b5e139f60e01b6001600160e01b03198316145b806107b657506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546107cb906136d6565b80601f01602080910402602001604051908101604052809291908181526020018280546107f7906136d6565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b5050505050905090565b6010546001600160a01b031690565b600061086882611407565b610885576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b816108ab81611432565b6108b583836114e5565b505050565b6108c26111d2565b6108de5760405162461bcd60e51b815260040161071590613711565b6108e781611567565b50565b826001600160a01b03811633146109045761090433611432565b61090f8484846115b9565b50505050565b6000610920600c5490565b821061095e5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610715565b600c828154811061097157610971613739565b90600052602060002001549050919050565b6000806109918585856115c4565b61014086013560009081526011602052604090205490915060ff161580156109bd57506109bd8161162a565b9150935093915050565b6000806000806109d686610c9f565b90945084925061ffff1690506127106109ef8287613765565b6109f9919061379a565b925050509250929050565b610a0c6111d2565b610a6c5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610715565b6108e78161164f565b826001600160a01b0381163314610a8f57610a8f33611432565b61090f848484611696565b6108e78160016116b1565b600080610ab183610da8565b9050806001600160a01b0316846001600160a01b03161480610ad85750610ad881856111a4565b80610afc5750836001600160a01b0316610af18461085d565b6001600160a01b0316145b949350505050565b60008360a00135600114610b4e5760405162461bcd60e51b81526020600482015260116024820152707175616e746979206d757374206265203160781b6044820152606401610715565b600054610b5c858585611860565b91506000610b6d60208701876132d8565b9050610ba2610b8260808801606089016132d8565b60a0880135610b986101008a0160e08b016132d8565b8960c001356119e9565b6000610bb460408801602089016132d8565b6001600160a01b031614158015610bce5750604086013515155b15610bf157610bf182610be76040890160208a016132d8565b8860400135611ae3565b610c3c82610c0260808901896137ae565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f592505050565b610c4a818760a00135611b8a565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c89604051610c8e9190613879565b60405180910390a450509392505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610ce65780516020820151610d00565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610d126111d2565b610d6f5760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610715565b6108e7816001611ba4565b610d826111d2565b610d9e5760405162461bcd60e51b815260040161071590613711565b61074b8282611c9c565b6000610db382611d20565b5192915050565b610dc26111d2565b610dde5760405162461bcd60e51b815260040161071590613711565b6108e781611e3a565b60006001600160a01b038216610e10576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610e3d6111d2565b610e595760405162461bcd60e51b8152600401610715906136a5565b610e6c610e6560005490565b8484611e84565b505061090f84848361126e565b6009546001600160a01b031690565b610e906111d2565b610eac5760405162461bcd60e51b815260040161071590613711565b6108e781611ef1565b6060600380546107cb906136d6565b610ecc6111d2565b610ee85760405162461bcd60e51b815260040161071590613711565b6108b5838383611ae3565b81610efd81611432565b6108b58383611fd3565b6060816001600160401b03811115610f2157610f216130e7565b604051908082528060200260200182016040528015610f5457816020015b6060815260200190600190039081610f3f5790505b50905060005b82811015610ff457610fc430858584818110610f7857610f78613739565b9050602002810190610f8a91906137ae565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061206992505050565b828281518110610fd657610fd6613739565b60200260200101819052508080610fec90613987565b915050610f5a565b5092915050565b836001600160a01b03811633146110155761101533611432565b6110218585858561208e565b5050505050565b6000818152600f6020526040812080546060929190611046906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611072906136d6565b80156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b505050505090506000815111156110d65792915050565b60006110e1846120d9565b9050806110ed85612275565b6040516020016110fe9291906139a2565b60405160208183030381529060405292505050919050565b60088054611123906136d6565b80601f016020809104026020016040519081016040528092919081815260200182805461114f906136d6565b801561119c5780601f106111715761010080835404028352916020019161119c565b820191906000526020600020905b81548152906001019060200180831161117f57829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006111dc610e79565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f60205260409020805461120e906136d6565b15905061124f5760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b6044820152606401610715565b6000828152600f6020908152604090912082516108b592840190613032565b6000546001600160a01b03841661129757604051622e076360e81b815260040160405180910390fd5b826112b55760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061134e90612372565b156113c4575b60405182906001600160a01b03881690600090600080516020613b77833981519152908290a461138d6000878480600101955087612381565b6113aa576040516368d2bf6b60e11b815260040160405180910390fd5b8082106113545782600054146113bf57600080fd5b6113f7565b5b6040516001830192906001600160a01b03881690600090600080516020613b77833981519152908290a48082106113c5575b50600090815561090f9085838684565b60008054821080156107b6575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff16156108e7576daaeb6d7670e522a718067333cd4e3b156108e757604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061148590309085906004016139d1565b602060405180830381865afa1580156114a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c691906139eb565b6108e75780604051633b79c77360e21b81526004016107159190613281565b60006114f082610da8565b9050806001600160a01b0316836001600160a01b031614156115255760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161461155c5761153f81336111a4565b61155c576040516367d9dca160e11b815260040160405180910390fd5b6108b5838383612469565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6108b58383836124c5565b600061162083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061161a925061160e915088905061269d565b805190602001206127e4565b90612811565b90505b9392505050565b6000611634610e79565b6001600160a01b0316826001600160a01b0316149050919050565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6108b583838360405180602001604052806000815250610ffb565b60006116bc83611d20565b80519091508215611722576000336001600160a01b03831614806116e557506116e582336111a4565b806117005750336116f58661085d565b6001600160a01b0316145b90508061172057604051632ce44b5f60e11b815260040160405180910390fd5b505b61172e60008583612469565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661182857600054821461182857805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020613b77833981519152908390a4505060018054810190555050565b60008061186e858585610983565b92509050806118ad5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610715565b426118c061012087016101008801613a08565b6001600160801b031611806118ee57506118e261014086016101208701613a08565b6001600160801b031642115b156119295760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610715565b600061193860208701876132d8565b6001600160a01b031614156119855760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610715565b60008560a00135116119c15760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610715565b50610140909301356000908152601160205260409020805460ff191660011790555090919050565b80611a2a573415611a255760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610715565b61090f565b6000611a368285613765565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611a685750348114611a6c565b5034155b80611aad5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610715565b60006001600160a01b03871615611ac45786611acc565b611acc61084e565b9050611ada85338386612835565b50505050505050565b612710811115611b055760405162461bcd60e51b815260040161071590613a23565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b61074b82826040518060200160405280600081525061126e565b6daaeb6d7670e522a718067333cd4e3b1561074b576001600160a01b0382163b15611c6b578015611c3857604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90611c0290309086906004016139d1565b600060405180830381600087803b158015611c1c57600080fd5b505af1158015611c30573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390611c0290309086906004016139d1565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690611c02903090600401613281565b612710811115611cbe5760405162461bcd60e51b815260040161071590613a23565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b604080516060810182526000808252602082018190529181019190915281600054811015611e2157600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611e1f5780516001600160a01b031615611db6579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611e1a579392505050565b611db6565b505b604051636f96cda160e11b815260040160405180910390fd5b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600080611e918486613a4c565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611ee8929091860190613032565b50935093915050565b600060088054611f00906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2c906136d6565b8015611f795780601f10611f4e57610100808354040283529160200191611f79565b820191906000526020600020905b815481529060010190602001808311611f5c57829003601f168201915b50508551939450611f9593600893506020870192509050613032565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611fc7929190613a64565b60405180910390a15050565b6001600160a01b038216331415611ffd5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606116238383604051806060016040528060278152602001613b506027913961287a565b6120998484846124c5565b6120ab836001600160a01b0316612372565b1561090f576120bc84848484612381565b61090f576040516368d2bf6b60e11b815260040160405180910390fd5b606060006120e6600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561213657602002820191906000526020600020905b815481526020019060010190808311612122575b5050505050905060005b8281101561223a5781818151811061215a5761215a613739565b602002602001015185101561222857600d600083838151811061217f5761217f613739565b6020026020010151815260200190815260200160002080546121a0906136d6565b80601f01602080910402602001604051908101604052809291908181526020018280546121cc906136d6565b80156122195780601f106121ee57610100808354040283529160200191612219565b820191906000526020600020905b8154815290600101906020018083116121fc57829003601f168201915b50505050509350505050919050565b612233600182613a4c565b9050612140565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610715565b6060816122995750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122c357806122ad81613987565b91506122bc9050600a8361379a565b915061229d565b6000816001600160401b038111156122dd576122dd6130e7565b6040519080825280601f01601f191660200182016040528015612307576020820181803683370190505b5090505b8415610afc5761231c600183613a92565b9150612329600a86613aa9565b612334906030613a4c565b60f81b81838151811061234957612349613739565b60200101906001600160f81b031916908160001a90535061236b600a8661379a565b945061230b565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906123b6903390899088908890600401613abd565b6020604051808303816000875af19250505080156123f1575060408051601f3d908101601f191682019092526123ee91810190613af0565b60015b61244c573d80801561241f576040519150601f19603f3d011682016040523d82523d6000602084013e612424565b606091505b508051612444576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006124d082611d20565b9050836001600160a01b031681600001516001600160a01b0316146125075760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480612525575061252585336111a4565b806125405750336125358461085d565b6001600160a01b0316145b90508061256057604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661258757604051633a954ecd60e21b815260040160405180910390fd5b61259360008487612469565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661266657600054821461266657805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020613b7783398151915260405160405180910390a4611021565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d446126cd60208401846132d8565b6126dd60408501602086016132d8565b60408501356126f260808701606088016132d8565b6126ff60808801886137ae565b60405161270d929190613b0d565b60405190819003902060a088013560c08901356127316101008b0160e08c016132d8565b6127436101208c016101008d01613a08565b6127556101408d016101208e01613a08565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b60006107b66127f1612955565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006128208585612a7c565b9150915061282d81612ac2565b509392505050565b8061283f5761090f565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561286e57611a258282612c0b565b61090f84848484612cad565b606061288584612372565b6128e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610715565b600080856001600160a01b0316856040516128fb9190613b1d565b600060405180830381855af49150503d8060008114612936576040519150601f19603f3d011682016040523d82523d6000602084013e61293b565b606091505b509150915061294b828286612d06565b9695505050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156129ae57507f000000000000000000000000000000000000000000000000000000000000000046145b156129d857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160411415612ab35760208301516040840151606085015160001a612aa787828585612d3f565b94509450505050612abb565b506000905060025b9250929050565b6000816004811115612ad657612ad6613b39565b1415612adf5750565b6001816004811115612af357612af3613b39565b1415612b3c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610715565b6002816004811115612b5057612b50613b39565b1415612b9e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610715565b6003816004811115612bb257612bb2613b39565b14156108e75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610715565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612c58576040519150601f19603f3d011682016040523d82523d6000602084013e612c5d565b606091505b50509050806108b55760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610715565b816001600160a01b0316836001600160a01b03161415612ccc5761090f565b6001600160a01b038316301415612cf157611a256001600160a01b0385168383612df9565b61090f6001600160a01b038516848484612e4f565b60608315612d15575081611623565b825115612d255782518084602001fd5b8160405162461bcd60e51b81526004016107159190613261565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612d6c5750600090506003612df0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612dc0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612de957600060019250925050612df0565b9150600090505b94509492505050565b6108b58363a9059cbb60e01b8484604051602401612e189291906133f0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e87565b6040516001600160a01b038085166024830152831660448201526064810182905261090f9085906323b872dd60e01b90608401612e18565b6000612edc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f599092919063ffffffff16565b8051909150156108b55780806020019051810190612efa91906139eb565b6108b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610715565b6060611620848460008585612f6d85612372565b612fb95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610715565b600080866001600160a01b03168587604051612fd59190613b1d565b60006040518083038185875af1925050503d8060008114613012576040519150601f19603f3d011682016040523d82523d6000602084013e613017565b606091505b5091509150613027828286612d06565b979650505050505050565b82805461303e906136d6565b90600052602060002090601f01602090048101928261306057600085556130a6565b82601f1061307957805160ff19168380011785556130a6565b828001600101855582156130a6579182015b828111156130a657825182559160200191906001019061308b565b506130b29291506130b6565b5090565b5b808211156130b257600081556001016130b7565b80356001600160a01b03811681146130e257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261310e57600080fd5b81356001600160401b0380821115613128576131286130e7565b604051601f8301601f19908116603f01168101908282118183101715613150576131506130e7565b8160405283815286602085880101111561316957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561319c57600080fd5b6131a5836130cb565b915060208301356001600160401b038111156131c057600080fd5b6131cc858286016130fd565b9150509250929050565b6001600160e01b0319811681146108e757600080fd5b6000602082840312156131fe57600080fd5b8135611623816131d6565b60005b8381101561322457818101518382015260200161320c565b8381111561090f5750506000910152565b6000815180845261324d816020860160208601613209565b601f01601f19169290920160200192915050565b6020815260006116236020830184613235565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6000602082840312156132a757600080fd5b5035919050565b600080604083850312156132c157600080fd5b6132ca836130cb565b946020939093013593505050565b6000602082840312156132ea57600080fd5b611623826130cb565b60008060006060848603121561330857600080fd5b613311846130cb565b925061331f602085016130cb565b9150604084013590509250925092565b60008060006040848603121561334457600080fd5b83356001600160401b038082111561335b57600080fd5b90850190610160828803121561337057600080fd5b9093506020850135908082111561338657600080fd5b818601915086601f83011261339a57600080fd5b8135818111156133a957600080fd5b8760208285010111156133bb57600080fd5b6020830194508093505050509250925092565b600080604083850312156133e157600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b80151581146108e757600080fd5b60006020828403121561342957600080fd5b813561162381613409565b6000806000806080858703121561344a57600080fd5b613453856130cb565b93506020850135925060408501356001600160401b038082111561347657600080fd5b613482888389016130fd565b9350606087013591508082111561349857600080fd5b506134a5878288016130fd565b91505092959194509250565b6000602082840312156134c357600080fd5b81356001600160401b038111156134d957600080fd5b610afc848285016130fd565b6000806000606084860312156134fa57600080fd5b8335925061331f602085016130cb565b6000806040838503121561351d57600080fd5b613526836130cb565b9150602083013561353681613409565b809150509250929050565b6000806020838503121561355457600080fd5b82356001600160401b038082111561356b57600080fd5b818501915085601f83011261357f57600080fd5b81358181111561358e57600080fd5b8660208260051b85010111156135a357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561360a57603f198886030184526135f8858351613235565b945092850192908501906001016135dc565b5092979650505050505050565b6000806000806080858703121561362d57600080fd5b613636856130cb565b9350613644602086016130cb565b92506040850135915060608501356001600160401b0381111561366657600080fd5b6134a5878288016130fd565b6000806040838503121561368557600080fd5b61368e836130cb565b915061369c602084016130cb565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c908216806136ea57607f821691505b6020821081141561370b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561377f5761377f61374f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826137a9576137a9613784565b500490565b6000808335601e198436030181126137c557600080fd5b8301803591506001600160401b038211156137df57600080fd5b602001915036819003821315612abb57600080fd5b6000808335601e1984360301811261380b57600080fd5b83016020810192503590506001600160401b0381111561382a57600080fd5b803603831315612abb57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146130e257600080fd5b602081526138926020820161388d846130cb565b613274565b60006138a0602084016130cb565b6138ad6040840182613274565b50604083013560608301526138c4606084016130cb565b6138d16080840182613274565b506138df60808401846137f4565b6101608060a08601526138f761018086018385613839565b925060a086013560c086015260c086013560e086015261391960e087016130cb565b915061010061392a81870184613274565b613935818801613862565b92505061012061394f818701846001600160801b03169052565b61395a818801613862565b925050610140613974818701846001600160801b03169052565b9590950135939094019290925250919050565b600060001982141561399b5761399b61374f565b5060010190565b600083516139b4818460208801613209565b8351908301906139c8818360208801613209565b01949350505050565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156139fd57600080fd5b815161162381613409565b600060208284031215613a1a57600080fd5b61162382613862565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b60008219821115613a5f57613a5f61374f565b500190565b604081526000613a776040830185613235565b8281036020840152613a898185613235565b95945050505050565b600082821015613aa457613aa461374f565b500390565b600082613ab857613ab8613784565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061294b90830184613235565b600060208284031215613b0257600080fd5b8151611623816131d6565b8183823760009101908152919050565b60008251613b2f818460208701613209565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220abb386ae920bc03d14bf49274893f6cc2b7b8a8760756b5a1b1663528d5b8e8364736f6c634300080c0033",
    "sourceMap": "876:3616:33:-:0;;;1138:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;1361:13:33;1376:5;1383:7;1392:17;1411:11;413:42:117;516:4;1903:5:28;1910:7;1893:5:87;1885;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1908:17:87;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2121:7:87;1935:31;;-1:-1:-1;1313:52:130;1323:30;1355:9;1313;:52::i;:::-;-1:-1:-1;1929:26:28::1;::::0;-1:-1:-1;1941:13:28;1929:11:::1;:26::i;:::-;1965:56;1990:17:::0;-1:-1:-1;;;;;1965:56:28;::::1;:24;:56::i;:::-;2031:29;2055:4;2031:23;:29::i;:::-;-1:-1:-1::0;;2541:22:333;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:333;;2651:117;3633:73;;;3704:25:641;;;3745:18;;;3738:34;;;;-1:-1:-1;3788:18:641;;3781:34;;;;3831:18;;;;3824:34;;;;3700:4:333;3874:19:641;;;3867:61;;;3633:73:333;;;;;;;;;;3676:19:641;;;;3633:73:333;;;3623:84;;;;;;;2896:85;;2991:28;;;;-1:-1:-1;;3029:21:333;;-1:-1:-1;1434:49:33::1;1461:21:::0;1434:26:::1;:49::i;:::-;1138:352:::0;;;;;;876:3616;;2349:783:130;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;2817:4;2763:92;;;2422:34:641;-1:-1:-1;;;;;2492:15:641;;2472:18;;;2465:43;905:42:130;;2763:45;;2357:18:641;;2763:92:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:130;;2958:4;2902:94;;;2422:34:641;-1:-1:-1;;;;;2492:15:641;;2472:18;;;2465:43;905:42:130;;2902:47;;2357:18:641;;2902:94:130;2210:304:641;2603:513:130;3053:48;;-1:-1:-1;;;3053:48:130;;3095:4;3053:48;;;2665:51:641;905:42:130;;3053:33;;2638:18:641;;3053:48:130;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;2929:2:641;3571:25:139;;;2911:21:641;2968:2;2948:18;;;2941:30;-1:-1:-1;;;2987:18:641;;;2980:45;3042:18;;3571:25:139;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3217:25:641;;;3711:46:139;;3205:2:641;3190:18;3711:46:139;;;;;;;3430:334;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;3393:41:641;;;577:33:129;;3381:2:641;3366:18;577:33:129;;;;;;;457:160;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;876:3616:33:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;876:3616:33;;;-1:-1:-1;876:3616:33;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:641;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:641;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:641:o;1218:987::-;1353:6;1361;1369;1377;1385;1393;1446:3;1434:9;1425:7;1421:23;1417:33;1414:53;;;1463:1;1460;1453:12;1414:53;1486:40;1516:9;1486:40;:::i;:::-;1570:2;1555:18;;1549:25;1476:50;;-1:-1:-1;;;;;;1623:14:641;;;1620:34;;;1650:1;1647;1640:12;1620:34;1673:61;1726:7;1717:6;1706:9;1702:22;1673:61;:::i;:::-;1663:71;;1780:2;1769:9;1765:18;1759:25;1743:41;;1809:2;1799:8;1796:16;1793:36;;;1825:1;1822;1815:12;1793:36;;1848:63;1903:7;1892:8;1881:9;1877:24;1848:63;:::i;:::-;1838:73;;;1930:49;1975:2;1964:9;1960:18;1930:49;:::i;:::-;2022:3;2007:19;;2001:26;1920:59;;-1:-1:-1;;;;;;2056:31:641;;2046:42;;2036:70;;2102:1;2099;2092:12;2036:70;2125:5;-1:-1:-1;2149:50:641;2194:3;2179:19;;2149:50;:::i;:::-;2139:60;;1218:987;;;;;;;;:::o;3939:380::-;4018:1;4014:12;;;;4061;;;4082:61;;4136:4;4128:6;4124:17;4114:27;;4082:61;4189:2;4181:6;4178:14;4158:18;4155:38;4152:161;;;4235:10;4230:3;4226:20;4223:1;4216:31;4270:4;4267:1;4260:15;4298:4;4295:1;4288:15;4152:161;;3939:380;;;:::o;:::-;876:3616:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cf5760003560e01c80634cc157df116100fe5780634cc157df14610469578063504c6e01146104ab57806357fd8455146104c5578063600dd5ea146104e55780636352211e1461050557806363b45e2d146105255780636f4f28371461053a57806370a082311461055a578063754a81d91461057a5780638da5cb5b1461059a578063938e3d7b146105af57806395d89b41146105cf5780639bcf7a15146105e4578063a22cb46514610604578063ac9650d814610624578063b24f2d3914610651578063b88d4fde1461067c578063c87b56dd1461069c578063e8a3d485146106bc578063e985e9c5146106d157600080fd5b806275a317146101d457806301ffc9a7146101f657806306fdde031461022b578063079fe40e1461024d578063081812fc1461026f578063095ea7b31461028f57806313af4035146102af57806318160ddd146102cf57806323b872dd146102f25780632419f51b14610312578063252e82e8146103325780632a55205a1461037157806332f0cd641461039f5780633b1475a7146103bf57806341f43434146103d457806342842e0e146103f657806342966c6814610416578063430c208114610436578063439c7be514610456575b600080fd5b3480156101e057600080fd5b506101f46101ef366004613189565b6106f1565b005b34801561020257600080fd5b506102166102113660046131ec565b61074f565b60405190151581526020015b60405180910390f35b34801561023757600080fd5b506102406107bc565b6040516102229190613261565b34801561025957600080fd5b5061026261084e565b6040516102229190613281565b34801561027b57600080fd5b5061026261028a366004613295565b61085d565b34801561029b57600080fd5b506101f46102aa3660046132ae565b6108a1565b3480156102bb57600080fd5b506101f46102ca3660046132d8565b6108ba565b3480156102db57600080fd5b50600154600054035b604051908152602001610222565b3480156102fe57600080fd5b506101f461030d3660046132f3565b6108ea565b34801561031e57600080fd5b506102e461032d366004613295565b610915565b34801561033e57600080fd5b5061035261034d36600461332f565b610983565b6040805192151583526001600160a01b03909116602083015201610222565b34801561037d57600080fd5b5061039161038c3660046133ce565b6109c7565b6040516102229291906133f0565b3480156103ab57600080fd5b506101f46103ba366004613417565b610a04565b3480156103cb57600080fd5b506000546102e4565b3480156103e057600080fd5b506102626daaeb6d7670e522a718067333cd4e81565b34801561040257600080fd5b506101f46104113660046132f3565b610a75565b34801561042257600080fd5b506101f4610431366004613295565b610a9a565b34801561044257600080fd5b506102166104513660046132ae565b610aa5565b61026261046436600461332f565b610b04565b34801561047557600080fd5b50610489610484366004613295565b610c9f565b604080516001600160a01b03909316835261ffff909116602083015201610222565b3480156104b757600080fd5b50600e546102169060ff1681565b3480156104d157600080fd5b506101f46104e03660046132d8565b610d0a565b3480156104f157600080fd5b506101f46105003660046132ae565b610d7a565b34801561051157600080fd5b50610262610520366004613295565b610da8565b34801561053157600080fd5b50600c546102e4565b34801561054657600080fd5b506101f46105553660046132d8565b610dba565b34801561056657600080fd5b506102e46105753660046132d8565b610de7565b34801561058657600080fd5b506101f4610595366004613434565b610e35565b3480156105a657600080fd5b50610262610e79565b3480156105bb57600080fd5b506101f46105ca3660046134b1565b610e88565b3480156105db57600080fd5b50610240610eb5565b3480156105f057600080fd5b506101f46105ff3660046134e5565b610ec4565b34801561061057600080fd5b506101f461061f36600461350a565b610ef3565b34801561063057600080fd5b5061064461063f366004613541565b610f07565b60405161022291906135b5565b34801561065d57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff16610489565b34801561068857600080fd5b506101f4610697366004613617565b610ffb565b3480156106a857600080fd5b506102406106b7366004613295565b611028565b3480156106c857600080fd5b50610240611116565b3480156106dd57600080fd5b506102166106ec366004613672565b6111a4565b6106f96111d2565b61071e5760405162461bcd60e51b8152600401610715906136a5565b60405180910390fd5b61073061072a60005490565b826111f5565b61074b8260016040518060200160405280600081525061126e565b5050565b60006301ffc9a760e01b6001600160e01b03198316148061078057506380ac58cd60e01b6001600160e01b03198316145b8061079b5750635b5e139f60e01b6001600160e01b03198316145b806107b657506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546107cb906136d6565b80601f01602080910402602001604051908101604052809291908181526020018280546107f7906136d6565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b5050505050905090565b6010546001600160a01b031690565b600061086882611407565b610885576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b816108ab81611432565b6108b583836114e5565b505050565b6108c26111d2565b6108de5760405162461bcd60e51b815260040161071590613711565b6108e781611567565b50565b826001600160a01b03811633146109045761090433611432565b61090f8484846115b9565b50505050565b6000610920600c5490565b821061095e5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610715565b600c828154811061097157610971613739565b90600052602060002001549050919050565b6000806109918585856115c4565b61014086013560009081526011602052604090205490915060ff161580156109bd57506109bd8161162a565b9150935093915050565b6000806000806109d686610c9f565b90945084925061ffff1690506127106109ef8287613765565b6109f9919061379a565b925050509250929050565b610a0c6111d2565b610a6c5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610715565b6108e78161164f565b826001600160a01b0381163314610a8f57610a8f33611432565b61090f848484611696565b6108e78160016116b1565b600080610ab183610da8565b9050806001600160a01b0316846001600160a01b03161480610ad85750610ad881856111a4565b80610afc5750836001600160a01b0316610af18461085d565b6001600160a01b0316145b949350505050565b60008360a00135600114610b4e5760405162461bcd60e51b81526020600482015260116024820152707175616e746979206d757374206265203160781b6044820152606401610715565b600054610b5c858585611860565b91506000610b6d60208701876132d8565b9050610ba2610b8260808801606089016132d8565b60a0880135610b986101008a0160e08b016132d8565b8960c001356119e9565b6000610bb460408801602089016132d8565b6001600160a01b031614158015610bce5750604086013515155b15610bf157610bf182610be76040890160208a016132d8565b8860400135611ae3565b610c3c82610c0260808901896137ae565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f592505050565b610c4a818760a00135611b8a565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c89604051610c8e9190613879565b60405180910390a450509392505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610ce65780516020820151610d00565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610d126111d2565b610d6f5760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610715565b6108e7816001611ba4565b610d826111d2565b610d9e5760405162461bcd60e51b815260040161071590613711565b61074b8282611c9c565b6000610db382611d20565b5192915050565b610dc26111d2565b610dde5760405162461bcd60e51b815260040161071590613711565b6108e781611e3a565b60006001600160a01b038216610e10576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610e3d6111d2565b610e595760405162461bcd60e51b8152600401610715906136a5565b610e6c610e6560005490565b8484611e84565b505061090f84848361126e565b6009546001600160a01b031690565b610e906111d2565b610eac5760405162461bcd60e51b815260040161071590613711565b6108e781611ef1565b6060600380546107cb906136d6565b610ecc6111d2565b610ee85760405162461bcd60e51b815260040161071590613711565b6108b5838383611ae3565b81610efd81611432565b6108b58383611fd3565b6060816001600160401b03811115610f2157610f216130e7565b604051908082528060200260200182016040528015610f5457816020015b6060815260200190600190039081610f3f5790505b50905060005b82811015610ff457610fc430858584818110610f7857610f78613739565b9050602002810190610f8a91906137ae565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061206992505050565b828281518110610fd657610fd6613739565b60200260200101819052508080610fec90613987565b915050610f5a565b5092915050565b836001600160a01b03811633146110155761101533611432565b6110218585858561208e565b5050505050565b6000818152600f6020526040812080546060929190611046906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611072906136d6565b80156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b505050505090506000815111156110d65792915050565b60006110e1846120d9565b9050806110ed85612275565b6040516020016110fe9291906139a2565b60405160208183030381529060405292505050919050565b60088054611123906136d6565b80601f016020809104026020016040519081016040528092919081815260200182805461114f906136d6565b801561119c5780601f106111715761010080835404028352916020019161119c565b820191906000526020600020905b81548152906001019060200180831161117f57829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006111dc610e79565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f60205260409020805461120e906136d6565b15905061124f5760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b6044820152606401610715565b6000828152600f6020908152604090912082516108b592840190613032565b6000546001600160a01b03841661129757604051622e076360e81b815260040160405180910390fd5b826112b55760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061134e90612372565b156113c4575b60405182906001600160a01b03881690600090600080516020613b77833981519152908290a461138d6000878480600101955087612381565b6113aa576040516368d2bf6b60e11b815260040160405180910390fd5b8082106113545782600054146113bf57600080fd5b6113f7565b5b6040516001830192906001600160a01b03881690600090600080516020613b77833981519152908290a48082106113c5575b50600090815561090f9085838684565b60008054821080156107b6575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff16156108e7576daaeb6d7670e522a718067333cd4e3b156108e757604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061148590309085906004016139d1565b602060405180830381865afa1580156114a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c691906139eb565b6108e75780604051633b79c77360e21b81526004016107159190613281565b60006114f082610da8565b9050806001600160a01b0316836001600160a01b031614156115255760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161461155c5761153f81336111a4565b61155c576040516367d9dca160e11b815260040160405180910390fd5b6108b5838383612469565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6108b58383836124c5565b600061162083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061161a925061160e915088905061269d565b805190602001206127e4565b90612811565b90505b9392505050565b6000611634610e79565b6001600160a01b0316826001600160a01b0316149050919050565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6108b583838360405180602001604052806000815250610ffb565b60006116bc83611d20565b80519091508215611722576000336001600160a01b03831614806116e557506116e582336111a4565b806117005750336116f58661085d565b6001600160a01b0316145b90508061172057604051632ce44b5f60e11b815260040160405180910390fd5b505b61172e60008583612469565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661182857600054821461182857805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020613b77833981519152908390a4505060018054810190555050565b60008061186e858585610983565b92509050806118ad5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610715565b426118c061012087016101008801613a08565b6001600160801b031611806118ee57506118e261014086016101208701613a08565b6001600160801b031642115b156119295760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610715565b600061193860208701876132d8565b6001600160a01b031614156119855760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610715565b60008560a00135116119c15760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610715565b50610140909301356000908152601160205260409020805460ff191660011790555090919050565b80611a2a573415611a255760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610715565b61090f565b6000611a368285613765565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611a685750348114611a6c565b5034155b80611aad5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610715565b60006001600160a01b03871615611ac45786611acc565b611acc61084e565b9050611ada85338386612835565b50505050505050565b612710811115611b055760405162461bcd60e51b815260040161071590613a23565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b61074b82826040518060200160405280600081525061126e565b6daaeb6d7670e522a718067333cd4e3b1561074b576001600160a01b0382163b15611c6b578015611c3857604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90611c0290309086906004016139d1565b600060405180830381600087803b158015611c1c57600080fd5b505af1158015611c30573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390611c0290309086906004016139d1565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690611c02903090600401613281565b612710811115611cbe5760405162461bcd60e51b815260040161071590613a23565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b604080516060810182526000808252602082018190529181019190915281600054811015611e2157600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611e1f5780516001600160a01b031615611db6579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611e1a579392505050565b611db6565b505b604051636f96cda160e11b815260040160405180910390fd5b601080546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600080611e918486613a4c565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611ee8929091860190613032565b50935093915050565b600060088054611f00906136d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2c906136d6565b8015611f795780601f10611f4e57610100808354040283529160200191611f79565b820191906000526020600020905b815481529060010190602001808311611f5c57829003601f168201915b50508551939450611f9593600893506020870192509050613032565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611fc7929190613a64565b60405180910390a15050565b6001600160a01b038216331415611ffd5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606116238383604051806060016040528060278152602001613b506027913961287a565b6120998484846124c5565b6120ab836001600160a01b0316612372565b1561090f576120bc84848484612381565b61090f576040516368d2bf6b60e11b815260040160405180910390fd5b606060006120e6600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561213657602002820191906000526020600020905b815481526020019060010190808311612122575b5050505050905060005b8281101561223a5781818151811061215a5761215a613739565b602002602001015185101561222857600d600083838151811061217f5761217f613739565b6020026020010151815260200190815260200160002080546121a0906136d6565b80601f01602080910402602001604051908101604052809291908181526020018280546121cc906136d6565b80156122195780601f106121ee57610100808354040283529160200191612219565b820191906000526020600020905b8154815290600101906020018083116121fc57829003601f168201915b50505050509350505050919050565b612233600182613a4c565b9050612140565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610715565b6060816122995750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122c357806122ad81613987565b91506122bc9050600a8361379a565b915061229d565b6000816001600160401b038111156122dd576122dd6130e7565b6040519080825280601f01601f191660200182016040528015612307576020820181803683370190505b5090505b8415610afc5761231c600183613a92565b9150612329600a86613aa9565b612334906030613a4c565b60f81b81838151811061234957612349613739565b60200101906001600160f81b031916908160001a90535061236b600a8661379a565b945061230b565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906123b6903390899088908890600401613abd565b6020604051808303816000875af19250505080156123f1575060408051601f3d908101601f191682019092526123ee91810190613af0565b60015b61244c573d80801561241f576040519150601f19603f3d011682016040523d82523d6000602084013e612424565b606091505b508051612444576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006124d082611d20565b9050836001600160a01b031681600001516001600160a01b0316146125075760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480612525575061252585336111a4565b806125405750336125358461085d565b6001600160a01b0316145b90508061256057604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661258757604051633a954ecd60e21b815260040160405180910390fd5b61259360008487612469565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661266657600054821461266657805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020613b7783398151915260405160405180910390a4611021565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d446126cd60208401846132d8565b6126dd60408501602086016132d8565b60408501356126f260808701606088016132d8565b6126ff60808801886137ae565b60405161270d929190613b0d565b60405190819003902060a088013560c08901356127316101008b0160e08c016132d8565b6127436101208c016101008d01613a08565b6127556101408d016101208e01613a08565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b60006107b66127f1612955565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006128208585612a7c565b9150915061282d81612ac2565b509392505050565b8061283f5761090f565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561286e57611a258282612c0b565b61090f84848484612cad565b606061288584612372565b6128e05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610715565b600080856001600160a01b0316856040516128fb9190613b1d565b600060405180830381855af49150503d8060008114612936576040519150601f19603f3d011682016040523d82523d6000602084013e61293b565b606091505b509150915061294b828286612d06565b9695505050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156129ae57507f000000000000000000000000000000000000000000000000000000000000000046145b156129d857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160411415612ab35760208301516040840151606085015160001a612aa787828585612d3f565b94509450505050612abb565b506000905060025b9250929050565b6000816004811115612ad657612ad6613b39565b1415612adf5750565b6001816004811115612af357612af3613b39565b1415612b3c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610715565b6002816004811115612b5057612b50613b39565b1415612b9e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610715565b6003816004811115612bb257612bb2613b39565b14156108e75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610715565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612c58576040519150601f19603f3d011682016040523d82523d6000602084013e612c5d565b606091505b50509050806108b55760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610715565b816001600160a01b0316836001600160a01b03161415612ccc5761090f565b6001600160a01b038316301415612cf157611a256001600160a01b0385168383612df9565b61090f6001600160a01b038516848484612e4f565b60608315612d15575081611623565b825115612d255782518084602001fd5b8160405162461bcd60e51b81526004016107159190613261565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612d6c5750600090506003612df0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612dc0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612de957600060019250925050612df0565b9150600090505b94509492505050565b6108b58363a9059cbb60e01b8484604051602401612e189291906133f0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e87565b6040516001600160a01b038085166024830152831660448201526064810182905261090f9085906323b872dd60e01b90608401612e18565b6000612edc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f599092919063ffffffff16565b8051909150156108b55780806020019051810190612efa91906139eb565b6108b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610715565b6060611620848460008585612f6d85612372565b612fb95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610715565b600080866001600160a01b03168587604051612fd59190613b1d565b60006040518083038185875af1925050503d8060008114613012576040519150601f19603f3d011682016040523d82523d6000602084013e613017565b606091505b5091509150613027828286612d06565b979650505050505050565b82805461303e906136d6565b90600052602060002090601f01602090048101928261306057600085556130a6565b82601f1061307957805160ff19168380011785556130a6565b828001600101855582156130a6579182015b828111156130a657825182559160200191906001019061308b565b506130b29291506130b6565b5090565b5b808211156130b257600081556001016130b7565b80356001600160a01b03811681146130e257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261310e57600080fd5b81356001600160401b0380821115613128576131286130e7565b604051601f8301601f19908116603f01168101908282118183101715613150576131506130e7565b8160405283815286602085880101111561316957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561319c57600080fd5b6131a5836130cb565b915060208301356001600160401b038111156131c057600080fd5b6131cc858286016130fd565b9150509250929050565b6001600160e01b0319811681146108e757600080fd5b6000602082840312156131fe57600080fd5b8135611623816131d6565b60005b8381101561322457818101518382015260200161320c565b8381111561090f5750506000910152565b6000815180845261324d816020860160208601613209565b601f01601f19169290920160200192915050565b6020815260006116236020830184613235565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6000602082840312156132a757600080fd5b5035919050565b600080604083850312156132c157600080fd5b6132ca836130cb565b946020939093013593505050565b6000602082840312156132ea57600080fd5b611623826130cb565b60008060006060848603121561330857600080fd5b613311846130cb565b925061331f602085016130cb565b9150604084013590509250925092565b60008060006040848603121561334457600080fd5b83356001600160401b038082111561335b57600080fd5b90850190610160828803121561337057600080fd5b9093506020850135908082111561338657600080fd5b818601915086601f83011261339a57600080fd5b8135818111156133a957600080fd5b8760208285010111156133bb57600080fd5b6020830194508093505050509250925092565b600080604083850312156133e157600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b80151581146108e757600080fd5b60006020828403121561342957600080fd5b813561162381613409565b6000806000806080858703121561344a57600080fd5b613453856130cb565b93506020850135925060408501356001600160401b038082111561347657600080fd5b613482888389016130fd565b9350606087013591508082111561349857600080fd5b506134a5878288016130fd565b91505092959194509250565b6000602082840312156134c357600080fd5b81356001600160401b038111156134d957600080fd5b610afc848285016130fd565b6000806000606084860312156134fa57600080fd5b8335925061331f602085016130cb565b6000806040838503121561351d57600080fd5b613526836130cb565b9150602083013561353681613409565b809150509250929050565b6000806020838503121561355457600080fd5b82356001600160401b038082111561356b57600080fd5b818501915085601f83011261357f57600080fd5b81358181111561358e57600080fd5b8660208260051b85010111156135a357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561360a57603f198886030184526135f8858351613235565b945092850192908501906001016135dc565b5092979650505050505050565b6000806000806080858703121561362d57600080fd5b613636856130cb565b9350613644602086016130cb565b92506040850135915060608501356001600160401b0381111561366657600080fd5b6134a5878288016130fd565b6000806040838503121561368557600080fd5b61368e836130cb565b915061369c602084016130cb565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c908216806136ea57607f821691505b6020821081141561370b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561377f5761377f61374f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826137a9576137a9613784565b500490565b6000808335601e198436030181126137c557600080fd5b8301803591506001600160401b038211156137df57600080fd5b602001915036819003821315612abb57600080fd5b6000808335601e1984360301811261380b57600080fd5b83016020810192503590506001600160401b0381111561382a57600080fd5b803603831315612abb57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146130e257600080fd5b602081526138926020820161388d846130cb565b613274565b60006138a0602084016130cb565b6138ad6040840182613274565b50604083013560608301526138c4606084016130cb565b6138d16080840182613274565b506138df60808401846137f4565b6101608060a08601526138f761018086018385613839565b925060a086013560c086015260c086013560e086015261391960e087016130cb565b915061010061392a81870184613274565b613935818801613862565b92505061012061394f818701846001600160801b03169052565b61395a818801613862565b925050610140613974818701846001600160801b03169052565b9590950135939094019290925250919050565b600060001982141561399b5761399b61374f565b5060010190565b600083516139b4818460208801613209565b8351908301906139c8818360208801613209565b01949350505050565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156139fd57600080fd5b815161162381613409565b600060208284031215613a1a57600080fd5b61162382613862565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b60008219821115613a5f57613a5f61374f565b500190565b604081526000613a776040830185613235565b8281036020840152613a898185613235565b95945050505050565b600082821015613aa457613aa461374f565b500390565b600082613ab857613ab8613784565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061294b90830184613235565b600060208284031215613b0257600080fd5b8151611623816131d6565b8183823760009101908152919050565b60008251613b2f818460208701613209565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220abb386ae920bc03d14bf49274893f6cc2b7b8a8760756b5a1b1663528d5b8e8364736f6c634300080c0033",
    "sourceMap": "876:3616:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217:28;;;;;;;;;;-1:-1:-1;4090:217:28;;;;;:::i;:::-;;:::i;:::-;;2317:444;;;;;;;;;;-1:-1:-1;2317:444:28;;;;;:::i;:::-;;:::i;:::-;;;2000:14:641;;1993:22;1975:41;;1963:2;1948:18;2317:444:28;;;;;;;;6131:98:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:136:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7617:200:87:-;;;;;;;;;;-1:-1:-1;7617:200:87;;;;;:::i;:::-;;:::i;6870:208:28:-;;;;;;;;;;-1:-1:-1;6870:208:28;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;2284:306:87:-;;;;;;;;;;-1:-1:-1;2543:12:87;;2337:7;2527:13;:28;2284:306;;;3876:25:641;;;3864:2;3849:18;2284:306:87;3730:177:641;7125:208:28;;;;;;;;;;-1:-1:-1;7125:208:28;;;;;:::i;:::-;;:::i;1277:203:114:-;;;;;;;;;;-1:-1:-1;1277:203:114;;;;;:::i;:::-;;:::i;891:293:147:-;;;;;;;;;;-1:-1:-1;891:293:147;;;;;:::i;:::-;;:::i;:::-;;;;5304:14:641;;5297:22;5279:41;;-1:-1:-1;;;;;5356:32:641;;;5351:2;5336:18;;5329:60;5252:18;891:293:147;5111:284:641;1421:347:139;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;5809:104:28:-;;;;;;;;;;-1:-1:-1;5867:7:28;5893:13;5809:104;;806:142:130;;;;;;;;;;;;905:42;806:142;;7384:216:28;;;;;;;;;;-1:-1:-1;7384:216:28;;;;;:::i;:::-;;:::i;5467:87::-;;;;;;;;;;-1:-1:-1;5467:87:28;;;;;:::i;:::-;;:::i;6013:357::-;;;;;;;;;;-1:-1:-1;6013:357:28;;;;;:::i;:::-;;:::i;1928:982:33:-;;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6732:32:641;;;6714:51;;6813:6;6801:19;;;6796:2;6781:18;;6774:47;6687:18;2008:381:139;6542:285:641;205:31:129;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;530:199:117;;;;;;;;;;-1:-1:-1;530:199:117;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;5946:123:87:-;;;;;;;;;;-1:-1:-1;5946:123:87;;;;;:::i;:::-;;:::i;980:96:114:-;;;;;;;;;;-1:-1:-1;1054:8:114;:15;980:96;;1189:228:136;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;3372:203:87:-;;;;;;;;;;-1:-1:-1;3372:203:87;;;;;:::i;:::-;;:::i;4868:325:28:-;;;;;;;;;;-1:-1:-1;4868:325:28;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;;;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;6293:102:87:-;;;;;;;;;;;;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;6602:227:28:-;;;;;;;;;;-1:-1:-1;6602:227:28;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;;;;;;;;;;-1:-1:-1;2599:16:139;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;7651:249:28;;;;;;;;;;-1:-1:-1;7651:249:28;;;;;:::i;:::-;;:::i;3175:379::-;;;;;;;;;;-1:-1:-1;3175:379:28;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;8232:162:87:-;;;;;;;;;;-1:-1:-1;8232:162:87;;;;;:::i;:::-;;:::i;4090:217:28:-;4177:10;:8;:10::i;:::-;4169:46;;;;-1:-1:-1;;;4169:46:28;;;;;;;:::i;:::-;;;;;;;;;4225:44;4238:19;5867:7;5893:13;;5809:104;4238:19;4259:9;4225:12;:44::i;:::-;4279:21;4289:3;4294:1;4279:21;;;;;;;;;;;;:9;:21::i;:::-;4090:217;;:::o;2317:444::-;2420:4;-1:-1:-1;;;;;;;;;2455:25:28;;;;:100;;-1:-1:-1;;;;;;;;;;2530:25:28;;;2455:100;:175;;;-1:-1:-1;;;;;;;;;;2605:25:28;;;2455:175;:274;;;-1:-1:-1;;;;;;;2688:41:28;;-1:-1:-1;;;2688:41:28;2455:274;2436:293;2317:444;-1:-1:-1;;2317:444:28:o;6131:98:87:-;6185:13;6217:5;6210:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6131:98;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;7617:200:87:-;7685:7;7709:16;7717:7;7709;:16::i;:::-;7704:64;;7734:34;;-1:-1:-1;;;7734:34:87;;;;;;;;;;;7704:64;-1:-1:-1;7786:24:87;;;;:15;:24;;;;;;-1:-1:-1;;;;;7786:24:87;;7617:200::o;6870:208:28:-;7015:8;1812:30:130;1833:8;1812:20;:30::i;:::-;7039:32:28::1;7053:8;7063:7;7039:13;:32::i;:::-;6870:208:::0;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;7125:208:28:-;7273:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7289:37:28::1;7308:4;7314:2;7318:7;7289:18;:37::i;:::-;7125:208:::0;;;;:::o;1277:203:114:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:114;;12023:2:641;1407:23:114;;;12005:21:641;12062:2;12042:18;;;12035:30;-1:-1:-1;;;12081:18:641;;;12074:43;12134:18;;1407:23:114;11821:337:641;1360:81:114;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;891:293:147:-;1023:12;1037:14;1076:33;1092:4;1098:10;;1076:15;:33::i;:::-;1137:8;;;;1130:16;;;;:6;:16;;;;;;1067:42;;-1:-1:-1;1130:16:147;;1129:17;:48;;;;;1150:27;1170:6;1150:19;:27::i;:::-;1119:58;;891:293;;;;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;13059:2:641;313:84:129;;;13041:21:641;13098:2;13078:18;;;13071:30;13137:34;13117:18;;;13110:62;-1:-1:-1;;;13188:18:641;;;13181:41;13239:19;;313:84:129;12857:407:641;313:84:129;407:37;431:12;407:23;:37::i;7384:216:28:-;7536:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7552:41:28::1;7575:4;7581:2;7585:7;7552:22;:41::i;5467:87::-:0;5526:21;5532:8;5542:4;5526:5;:21::i;6013:357::-;6138:24;6178:13;6194:17;6202:8;6194:7;:17::i;:::-;6178:33;;6257:5;-1:-1:-1;;;;;6244:18:28;:9;-1:-1:-1;;;;;6244:18:28;;:68;;;;6278:34;6295:5;6302:9;6278:16;:34::i;:::-;6244:118;;;;6353:9;-1:-1:-1;;;;;6328:34:28;:21;6340:8;6328:11;:21::i;:::-;-1:-1:-1;;;;;6328:34:28;;6244:118;6221:142;6013:357;-1:-1:-1;;;;6013:357:28:o;1928:982:33:-;2092:14;2130:4;:13;;;2147:1;2130:18;2122:48;;;;-1:-1:-1;;;2122:48:33;;13471:2:641;2122:48:33;;;13453:21:641;13510:2;13490:18;;;13483:30;-1:-1:-1;;;13529:18:641;;;13522:47;13586:18;;2122:48:33;13269:341:641;2122:48:33;2181:21;5893:13:28;2283:33:33;2299:4;2305:10;;2283:15;:33::i;:::-;2274:42;-1:-1:-1;2327:16:33;2346:7;;;;:4;:7;:::i;:::-;2327:26;-1:-1:-1;2389:97:33;2410:25;;;;;;;;:::i;:::-;2437:13;;;;2452;;;;;;;;:::i;:::-;2467:4;:18;;;2389:20;:97::i;:::-;2575:1;2542:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2542:35:33;;;:59;;;;-1:-1:-1;2581:15:33;;;;:20;;2542:59;2538:170;;;2617:80;2643:13;2658:21;;;;;;;;:::i;:::-;2681:4;:15;;;2617:25;:80::i;:::-;2742:37;2755:13;2770:8;;;;:4;:8;:::i;:::-;2742:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2742:12:33;;-1:-1:-1;;;2742:37:33:i;:::-;2789:34;2799:8;2809:4;:13;;;2789:9;:34::i;:::-;2883:13;2873:8;-1:-1:-1;;;;;2839:64:33;2865:6;-1:-1:-1;;;;;2839:64:33;;2898:4;2839:64;;;;;;:::i;:::-;;;;;;;;2112:798;;1928:982;;;;;:::o;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;530:199:117:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:117;;16959:2:641;601:81:117;;;16941:21:641;16998:2;16978:18;;;16971:30;17037:34;17017:18;;;17010:62;-1:-1:-1;;;17088:18:641;;;17081:38;17136:19;;601:81:117;16757:404:641;601:81:117;692:30;702:13;717:4;692:9;:30::i;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;5946:123:87:-;6010:7;6036:21;6049:7;6036:12;:21::i;:::-;:26;;5946:123;-1:-1:-1;;5946:123:87:o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3372:203:87:-;3436:7;-1:-1:-1;;;;;3459:19:87;;3455:60;;3487:28;;-1:-1:-1;;;3487:28:87;;;;;;;;;;;3455:60;-1:-1:-1;;;;;;3540:19:87;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3540:27:87;;3372:203::o;4868:325:28:-;5036:10;:8;:10::i;:::-;5028:46;;;;-1:-1:-1;;;5028:46:28;;;;;;;:::i;:::-;5084:60;5103:19;5867:7;5893:13;;5809:104;5103:19;5124:9;5135:8;5084:18;:60::i;:::-;;;5154:32;5164:3;5169:9;5180:5;5154:9;:32::i;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6293:102:87:-;6349:13;6381:7;6374:14;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;6602:227:28:-;6755:8;1812:30:130;1833:8;1812:20;:30::i;:::-;6779:43:28::1;6803:8;6813;6779:23;:43::i;698:319:127:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;7651:249:28:-;7830:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7846:47:28::1;7869:4;7875:2;7879:7;7888:4;7846:22;:47::i;:::-;7651:249:::0;;;;;:::o;3175:379::-;3274:29;3306:17;;;:7;:17;;;;;3274:49;;3249:13;;3274:29;3306:17;3274:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:1;3343:15;3337:29;:33;3333:86;;;3393:15;3175:379;-1:-1:-1;;3175:379:28:o;3333:86::-;3429:22;3454:21;3466:8;3454:11;:21::i;:::-;3429:46;;3516:8;3526:19;:8;:17;:19::i;:::-;3499:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3485:62;;;;3175:379;;;:::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8232:162:87:-;-1:-1:-1;;;;;8352:25:87;;;8329:4;8352:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8232:162::o;8611:102:28:-;8662:4;8699:7;:5;:7::i;:::-;-1:-1:-1;;;;;8685:21:28;:10;-1:-1:-1;;;;;8685:21:28;;8678:28;;8611:102;:::o;8103:202::-;8209:17;;;;:7;:17;;;;;8203:31;;;;;:::i;:::-;:36;;-1:-1:-1;8195:64:28;;;;-1:-1:-1;;;8195:64:28;;18509:2:641;8195:64:28;;;18491:21:641;18548:2;18528:18;;;18521:30;-1:-1:-1;;;18567:18:641;;;18560:45;18622:18;;8195:64:28;18307:339:641;8195:64:28;8269:17;;;;:7;:17;;;;;;;;:29;;;;;;;;:::i;10271:1708:87:-;10389:20;10412:13;-1:-1:-1;;;;;10439:16:87;;10435:48;;10464:19;;-1:-1:-1;;;10464:19:87;;;;;;;;;;;10435:48;10497:13;10493:44;;10519:18;;-1:-1:-1;;;10519:18:87;;;;;;;;;;;10493:44;-1:-1:-1;;;;;10880:16:87;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;10938:49:87;;-1:-1:-1;;;;;10880:44:87;;;;;;;10938:49;;;-1:-1:-1;;;;;;;;;10880:44:87;;;;;;10938:49;;;;;;;;;;;;;;;;11002:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11051:66:87;;;-1:-1:-1;;;11101:15:87;11051:66;;;;;;;;;;;;;11002:25;;11195:23;;;;11237:15;;:13;:15::i;:::-;11233:618;;;11272:308;11302:38;;11327:12;;-1:-1:-1;;;;;11302:38:87;;;11319:1;;-1:-1:-1;;;;;;;;;;;11302:38:87;11319:1;;11302:38;11367:69;11406:1;11410:2;11414:14;;;;;;11430:5;11367:30;:69::i;:::-;11362:172;;11471:40;;-1:-1:-1;;;11471:40:87;;;;;;;;;;;11362:172;11575:3;11560:12;:18;11272:308;;11659:12;11642:13;;:29;11638:43;;11673:8;;;11638:43;11233:618;;;11720:117;11750:40;;11775:14;;;;;-1:-1:-1;;;;;11750:40:87;;;11767:1;;-1:-1:-1;;;;;;;;;;;11750:40:87;11767:1;;11750:40;11832:3;11817:12;:18;11720:117;;11233:618;-1:-1:-1;11864:13:87;:28;;;11912:60;;11945:2;11949:12;11963:8;11912:60;:::i;9558:172::-;9615:4;9678:13;;9668:7;:23;9638:85;;;;-1:-1:-1;;9696:20:87;;;;:11;:20;;;;;:27;-1:-1:-1;;;9696:27:87;;;;9695:28;;9558:172::o;1866:477:130:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:130;;905:42;;2168;;:67;;2219:4;;2226:8;;2168:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2285:8;2266:28;;-1:-1:-1;;;2266:28:130;;;;;;;;:::i;7164:392:87:-;7244:13;7260:24;7276:7;7260:15;:24::i;:::-;7244:40;;7304:5;-1:-1:-1;;;;;7298:11:87;:2;-1:-1:-1;;;;;7298:11:87;;7294:48;;;7318:24;;-1:-1:-1;;;7318:24:87;;;;;;;;;;;7294:48;719:10:325;-1:-1:-1;;;;;7357:21:87;;;7353:158;;7397:37;7414:5;719:10:325;8232:162:87;:::i;7397:37::-;7392:119;;7461:35;;-1:-1:-1;;;7461:35:87;;;;;;;;;;;7392:119;7521:28;7530:2;7534:7;7543:5;7521:8;:28::i;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;8456:164:87:-;8585:28;8595:4;8601:2;8605:7;8585:9;:28::i;2067:204:147:-;2169:7;2195:69;2253:10;;2195:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2195:49:147;;-1:-1:-1;2222:20:147;;-1:-1:-1;2237:4:147;;-1:-1:-1;2222:14:147;:20::i;:::-;2212:31;;;;;;2195:16;:49::i;:::-;:57;;:69::i;:::-;2188:76;;2067:204;;;;;;:::o;3184:134:33:-;3270:4;3304:7;:5;:7::i;:::-;-1:-1:-1;;;;;3293:18:33;:7;-1:-1:-1;;;;;3293:18:33;;3286:25;;3184:134;;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;1975:41:641;;;577:33:129;;1963:2:641;1948:18;577:33:129;;;;;;;457:160;:::o;8686:179:87:-;8819:39;8836:4;8842:2;8846:7;8819:39;;;;;;;;;;;;:16;:39::i;16073:2355::-;16152:35;16190:21;16203:7;16190:12;:21::i;:::-;16237:18;;16152:59;;-1:-1:-1;16266:284:87;;;;16299:22;719:10:325;-1:-1:-1;;;;;16325:20:87;;;;:76;;-1:-1:-1;16365:36:87;16382:4;719:10:325;8232:162:87;:::i;16365:36::-;16325:132;;;-1:-1:-1;719:10:325;16421:20:87;16433:7;16421:11;:20::i;:::-;-1:-1:-1;;;;;16421:36:87;;16325:132;16299:159;;16478:17;16473:66;;16504:35;;-1:-1:-1;;;16504:35:87;;;;;;;;;;;16473:66;16285:265;16266:284;16673:35;16690:1;16694:7;16703:4;16673:8;:35::i;:::-;-1:-1:-1;;;;;17032:18:87;;;16998:31;17032:18;;;:12;:18;;;;;;;;17064:24;;-1:-1:-1;;;;;;;;;;17064:24:87;;;;;;;;;-1:-1:-1;;;;;;17064:24:87;;;;17102:29;;;;;17087:1;17102:29;;;;;;;;-1:-1:-1;;;;;;17102:29:87;;;;;;;;;;17261:20;;;:11;:20;;;;;;17295;;-1:-1:-1;;;;17362:15:87;17329:49;;;-1:-1:-1;;;17329:49:87;-1:-1:-1;;;;;;17329:49:87;;;;;;;;;;17392:22;-1:-1:-1;;;17392:22:87;;;17680:11;;;17739:24;;;;;17781:13;;17032:18;;17739:24;;17781:13;17777:377;;17988:13;;17973:11;:28;17969:171;;18025:20;;18093:28;;;;-1:-1:-1;;;;;18067:54:87;-1:-1:-1;;;18067:54:87;-1:-1:-1;;;;;;18067:54:87;;;-1:-1:-1;;;;;18025:20:87;;18067:54;;;;17969:171;-1:-1:-1;;18179:35:87;;18206:7;;-1:-1:-1;18202:1:87;;-1:-1:-1;;;;;;18179:35:87;;;-1:-1:-1;;;;;;;;;;;18179:35:87;18202:1;;18179:35;-1:-1:-1;;18397:12:87;:14;;;;;;-1:-1:-1;;16073:2355:87:o;1431:562:147:-;1528:14;1554:12;1596:24;1603:4;1609:10;;1596:6;:24::i;:::-;1576:44;-1:-1:-1;1576:44:147;-1:-1:-1;1576:44:147;1631:60;;1659:21;;-1:-1:-1;;;1659:21:147;;19412:2:641;1659:21:147;;;19394::641;19451:2;19431:18;;;19424:30;-1:-1:-1;;;19470:18:641;;;19463:41;19521:18;;1659:21:147;19210:335:641;1631:60:147;1735:15;1705:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1705:45:147;;:92;;;-1:-1:-1;1772:25:147;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1754:43:147;:15;:43;1705:92;1701:144;;;1813:21;;-1:-1:-1;;;1813:21:147;;19943:2:641;1813:21:147;;;19925::641;19982:2;19962:18;;;19955:30;-1:-1:-1;;;20001:18:641;;;19994:41;20052:18;;1813:21:147;19741:335:641;1701:144:147;1881:1;1862:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1862:21:147;;;1854:53;;;;-1:-1:-1;;;1854:53:147;;20283:2:641;1854:53:147;;;20265:21:641;20322:2;20302:18;;;20295:30;-1:-1:-1;;;20341:18:641;;;20334:49;20400:18;;1854:53:147;20081:343:641;1854:53:147;1941:1;1925:4;:13;;;:17;1917:35;;;;-1:-1:-1;;;1917:35:147;;20631:2:641;1917:35:147;;;20613:21:641;20670:1;20650:18;;;20643:29;-1:-1:-1;;;20688:18:641;;;20681:35;20733:18;;1917:35:147;20429:328:641;1917:35:147;-1:-1:-1;1970:8:147;;;;;1963:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1963:23:147;1982:4;1963:23;;;-1:-1:-1;1431:562:147;;;-1:-1:-1;1431:562:147:o;3639:851:33:-;3838:19;3834:103;;3881:9;:14;3873:33;;;;-1:-1:-1;;;3873:33:33;;20964:2:641;3873:33:33;;;20946:21:641;21003:1;20983:18;;;20976:29;-1:-1:-1;;;21021:18:641;;;21014:36;21067:18;;3873:33:33;20762:329:641;3873:33:33;3920:7;;3834:103;3947:18;3968:33;3987:14;3968:16;:33;:::i;:::-;3947:54;-1:-1:-1;4012:18:33;-1:-1:-1;;;;;4044:45:33;;397:42:277;4044:45:33;4040:176;;;-1:-1:-1;4121:9:33;:23;;4040:176;;;-1:-1:-1;4191:9:33;:14;4040:176;4233:13;4225:43;;;;-1:-1:-1;;;4225:43:33;;21298:2:641;4225:43:33;;;21280:21:641;21337:2;21317:18;;;21310:30;-1:-1:-1;;;21356:18:641;;;21349:47;21413:18;;4225:43:33;21096:341:641;4225:43:33;4279:21;-1:-1:-1;;;;;4303:35:33;;;:84;;4366:21;4303:84;;;4341:22;:20;:22::i;:::-;4279:108;;4397:86;4434:9;4445:10;4457:13;4472:10;4397:36;:86::i;:::-;3824:666;;;3639:851;;;;:::o;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;3876:25:641;;;4918:49:139;;4886:29;;4983:43;;3849:18:641;4983:43:139;;;;;;;4671:362;;;:::o;9809:102:87:-;9877:27;9887:2;9891:8;9877:27;;;;;;;;;;;;:9;:27::i;2349:783:130:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;905:42;;2763:45;;:92;;2817:4;;2824:30;;2763:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217:28;;:::o;2726:289:130:-;2902:94;;-1:-1:-1;;;2902:94:130;;905:42;;2902:47;;:94;;2958:4;;2965:30;;2902:94;;;:::i;2603:513::-;3053:48;;-1:-1:-1;;;3053:48:130;;905:42;;3053:33;;:48;;3095:4;;3053:48;;;:::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3876:25:641;;;3711:46:139;;3864:2:641;3849:18;3711:46:139;;;;;;;3430:334;;:::o;4715:1174:87:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4825:7:87;4923:13;;4916:4;:20;4912:913;;;4960:31;4994:17;;;:11;:17;;;;;;;;;4960:51;;;;;;;;;-1:-1:-1;;;;;4960:51:87;;;;-1:-1:-1;;;4960:51:87;;-1:-1:-1;;;;;4960:51:87;;;;;;;;-1:-1:-1;;;4960:51:87;;;;;;;;;;;;;;5033:774;;5086:14;;-1:-1:-1;;;;;5086:28:87;;5082:107;;5153:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5082:107::-;-1:-1:-1;;;5549:6:87;5597:17;;;;:11;:17;;;;;;;;;5585:29;;;;;;;;;-1:-1:-1;;;;;5585:29:87;;;;;-1:-1:-1;;;5585:29:87;;-1:-1:-1;;;;;5585:29:87;;;;;;;;-1:-1:-1;;;5585:29:87;;;;;;;;;;;;;5648:28;5644:115;;5719:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5644:115::-;5506:279;;;4938:887;4912:913;5851:31;;-1:-1:-1;;;5851:31:87;;;;;;;;;;;1499:170:136;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;2840:362:114:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:114;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:114;;-1:-1:-1;3159:36:114;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;7884:282:87:-;-1:-1:-1;;;;;7982:24:87;;719:10:325;7982:24:87;7978:54;;;8015:17;;-1:-1:-1;;;8015:17:87;;;;;;;;;;;7978:54;719:10:325;8043:32:87;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8043:42:87;;;;;;;;;;;;:53;;-1:-1:-1;;8043:53:87;;;;;;;;;;8111:48;;1975:41:641;;;8043:42:87;;719:10:325;8111:48:87;;1948:18:641;8111:48:87;;;;;;;7884:282;;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;8931:381:87:-;9092:28;9102:4;9108:2;9112:7;9092:9;:28::i;:::-;9134:15;:2;-1:-1:-1;;;;;9134:13:87;;:15::i;:::-;9130:176;;;9168:56;9199:4;9205:2;9209:7;9218:5;9168:30;:56::i;:::-;9163:143;;9251:40;;-1:-1:-1;;;9251:40:87;;;;;;;;;;;2153:390:114;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:114;;-1:-1:-1;;;2511:25:114;;22509:2:641;2511:25:114;;;22491:21:641;22548:2;22528:18;;;22521:30;-1:-1:-1;;;22567:18:641;;;22560:45;22622:18;;2511:25:114;22307:339:641;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;1137:320:281;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;19209:650:87:-;19387:72;;-1:-1:-1;;;19387:72:87;;19367:4;;-1:-1:-1;;;;;19387:36:87;;;;;:72;;719:10:325;;19438:4:87;;19444:7;;19453:5;;19387:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19387:72:87;;;;;;;;-1:-1:-1;;19387:72:87;;;;;;;;;;;;:::i;:::-;;;19383:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19618:13:87;;19614:229;;19663:40;;-1:-1:-1;;;19663:40:87;;;;;;;;;;;19614:229;19803:6;19797:13;19788:6;19784:2;19780:15;19773:38;19383:470;-1:-1:-1;;;;;;19505:55:87;-1:-1:-1;;;19505:55:87;;-1:-1:-1;19209:650:87;;;;;;:::o;18539:189::-;18649:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18649:29:87;-1:-1:-1;;;;;18649:29:87;;;;;;;;;18693:28;;18649:24;;18693:28;;;;;;;18539:189;;;:::o;13614:2082::-;13724:35;13762:21;13775:7;13762:12;:21::i;:::-;13724:59;;13820:4;-1:-1:-1;;;;;13798:26:87;:13;:18;;;-1:-1:-1;;;;;13798:26:87;;13794:67;;13833:28;;-1:-1:-1;;;13833:28:87;;;;;;;;;;;13794:67;13872:22;719:10:325;-1:-1:-1;;;;;13898:20:87;;;;:72;;-1:-1:-1;13934:36:87;13951:4;719:10:325;8232:162:87;:::i;13934:36::-;13898:124;;;-1:-1:-1;719:10:325;13986:20:87;13998:7;13986:11;:20::i;:::-;-1:-1:-1;;;;;13986:36:87;;13898:124;13872:151;;14039:17;14034:66;;14065:35;;-1:-1:-1;;;14065:35:87;;;;;;;;;;;14034:66;-1:-1:-1;;;;;14114:16:87;;14110:52;;14139:23;;-1:-1:-1;;;14139:23:87;;;;;;;;;;;14110:52;14278:35;14295:1;14299:7;14308:4;14278:8;:35::i;:::-;-1:-1:-1;;;;;14603:18:87;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;14603:31:87;;;-1:-1:-1;;;;;14603:31:87;;;-1:-1:-1;;14603:31:87;;;;;;;14648:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14648:29:87;;;;;;;;;;;14726:20;;;:11;:20;;;;;;14760:18;;-1:-1:-1;;;;;;14792:49:87;;;;-1:-1:-1;;;14825:15:87;14792:49;;;;;;;;;;15111:11;;15170:24;;;;;15212:13;;14726:20;;15170:24;;15212:13;15208:377;;15419:13;;15404:11;:28;15400:171;;15456:20;;15524:28;;;;-1:-1:-1;;;;;15498:54:87;-1:-1:-1;;;15498:54:87;-1:-1:-1;;;;;;15498:54:87;;;-1:-1:-1;;;;;15456:20:87;;15498:54;;;;15400:171;14579:1016;;;15629:7;15625:2;-1:-1:-1;;;;;15610:27:87;15619:4;-1:-1:-1;;;;;15610:27:87;-1:-1:-1;;;;;;;;;;;15610:27:87;;;;;;;;;15647:42;7125:208:28;2343:570:147;2417:12;348:270;2514:7;;;;:4;:7;:::i;:::-;2539:21;;;;;;;;:::i;:::-;2578:15;;;;2611:25;;;;;;;;:::i;:::-;2670:8;;;;:4;:8;:::i;:::-;2654:26;;;;;;;:::i;:::-;;;;;;;;;2698:13;;;;2729:18;;;;2765:13;;;;;;;;:::i;:::-;2796:27;;;;;;;;:::i;:::-;2841:25;;;;;;;;:::i;:::-;2460:446;;;;;;24379:25:641;;;;-1:-1:-1;;;;;24478:15:641;;;24458:18;;;24451:43;24530:15;;;24510:18;;;24503:43;24562:18;;;24555:34;;;;24626:15;;;24605:19;;;24598:44;24658:19;;;24651:35;;;;24702:19;;;24695:35;24746:19;;;24739:35;24811:15;;;24790:19;;;24783:44;-1:-1:-1;;;;;24902:15:641;;;2884:8:147;24881:19:641;;;24874:44;;;;24955:16;;24934:19;;;24927:45;2884:8:147;;;24988:19:641;;;24981:36;24351:19;;2460:446:147;;;;;;;;;;;;2441:465;;2343:570;;;:::o;4339:165:333:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8686:4:332;8680:11;-1:-1:-1;;;8704:23:332;;8756:4;8747:14;;8740:39;;;;8808:4;8799:14;;8792:34;8862:4;8847:20;;;8486:397;3673:227;3751:7;3771:17;3790:18;3812:27;3823:4;3829:9;3812:10;:27::i;:::-;3770:69;;;;3849:18;3861:5;3849:11;:18::i;:::-;-1:-1:-1;3884:9:332;3673:227;-1:-1:-1;;;3673:227:332:o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;25230:2:641;7087:69:281;;;25212:21:641;25269:2;25249:18;;;25242:30;25308:34;25288:18;;;25281:62;-1:-1:-1;;;25359:18:641;;;25352:36;25405:19;;7087:69:281;25028:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;3143:308:333:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:333;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:333;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:333;;;3392:10;3633:73;;;;27788:25:641;;;;3404:12:333;27829:18:641;;;27822:34;3418:15:333;27872:18:641;;;27865:34;3677:13:333;27915:18:641;;;27908:34;3700:4:333;27958:19:641;;;;27951:61;;;;3633:73:333;;;;;;;;;;27760:19:641;;;;3633:73:333;;;3623:84;;;;;;3143:308::o;2157:730:332:-;2238:7;2247:12;2275:9;:16;2295:2;2275:22;2271:610;;;2611:4;2596:20;;2590:27;2660:4;2645:20;;2639:27;2717:4;2702:20;;2696:27;2313:9;2688:36;2758:25;2769:4;2688:36;2590:27;2639;2758:10;:25::i;:::-;2751:32;;;;;;;;;2271:610;-1:-1:-1;2830:1:332;;-1:-1:-1;2834:35:332;2271:610;2157:730;;;;;:::o;582:511::-;659:20;650:5;:29;;;;;;;;:::i;:::-;;646:441;;;582:511;:::o;646:441::-;755:29;746:5;:38;;;;;;;;:::i;:::-;;742:345;;;800:34;;-1:-1:-1;;;800:34:332;;26048:2:641;800:34:332;;;26030:21:641;26087:2;26067:18;;;26060:30;-1:-1:-1;;;26106:18:641;;;26099:54;26170:18;;800:34:332;25846:348:641;742:345:332;864:35;855:5;:44;;;;;;;;:::i;:::-;;851:236;;;915:41;;-1:-1:-1;;;915:41:332;;26401:2:641;915:41:332;;;26383:21:641;26440:2;26420:18;;;26413:30;26479:33;26459:18;;;26452:61;26530:18;;915:41:332;26199:355:641;851:236:332;986:30;977:5;:39;;;;;;;;:::i;:::-;;973:114;;;1032:44;;-1:-1:-1;;;1032:44:332;;26761:2:641;1032:44:332;;;26743:21:641;26800:2;26780:18;;;26773:30;26839:34;26819:18;;;26812:62;-1:-1:-1;;;26890:18:641;;;26883:32;26932:19;;1032:44:332;26559:398:641;2521:292:277;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;27374:2:641;2758:48:277;;;27356:21:641;27413:2;27393:18;;;27386:30;-1:-1:-1;;;27432:18:641;;;27425:58;27500:18;;2758:48:277;27172:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;7529:692:281:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;5081:1494:332:-;5207:7;;-1:-1:-1;;;;;6118:79:332;;6114:161;;;-1:-1:-1;6229:1:332;;-1:-1:-1;6233:30:332;6213:51;;6114:161;6386:24;;;6369:14;6386:24;;;;;;;;;28250:25:641;;;28323:4;28311:17;;28291:18;;;28284:45;;;;28345:18;;;28338:34;;;28388:18;;;28381:34;;;6386:24:332;;28222:19:641;;6386:24:332;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6386:24:332;;-1:-1:-1;;6386:24:332;;;-1:-1:-1;;;;;;;6424:20:332;;6420:101;;6476:1;6480:29;6460:50;;;;;;;6420:101;6539:6;-1:-1:-1;6547:20:332;;-1:-1:-1;5081:1494:332;;;;;;;;:::o;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;28684:15:641;;;1105:68:321;;;28666:34:641;28736:15;;28716:18;;;28709:43;28768:18;;;28761:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;28601:18:641;;1105:68:321;28426:375:641;3235:706:321;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;29008:2:641;3839:85:321;;;28990:21:641;29047:2;29027:18;;;29020:30;29086:34;29066:18;;;29059:62;-1:-1:-1;;;29137:18:641;;;29130:40;29187:19;;3839:85:321;28806:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;29826:2:641;5194:60:281;;;29808:21:641;29865:2;29845:18;;;29838:30;29904:31;29884:18;;;29877:59;29953:18;;5194:60:281;29624:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:641;82:20;;-1:-1:-1;;;;;131:31:641;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;-1:-1:-1;;;;;537:2:641;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:641;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:396::-;1126:6;1134;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1306:2;1295:9;1291:18;1278:32;-1:-1:-1;;;;;1325:6:641;1322:30;1319:50;;;1365:1;1362;1355:12;1319:50;1388;1430:7;1421:6;1410:9;1406:22;1388:50;:::i;:::-;1378:60;;;1048:396;;;;;:::o;1449:131::-;-1:-1:-1;;;;;;1523:32:641;;1513:43;;1503:71;;1570:1;1567;1560:12;1585:245;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1751:9;1738:23;1770:30;1794:5;1770:30;:::i;2027:258::-;2099:1;2109:113;2123:6;2120:1;2117:13;2109:113;;;2199:11;;;2193:18;2180:11;;;2173:39;2145:2;2138:10;2109:113;;;2240:6;2237:1;2234:13;2231:48;;;-1:-1:-1;;2275:1:641;2257:16;;2250:27;2027:258::o;2290:::-;2332:3;2370:5;2364:12;2397:6;2392:3;2385:19;2413:63;2469:6;2462:4;2457:3;2453:14;2446:4;2439:5;2435:16;2413:63;:::i;:::-;2530:2;2509:15;-1:-1:-1;;2505:29:641;2496:39;;;;2537:4;2492:50;;2290:258;-1:-1:-1;;2290:258:641:o;2553:220::-;2702:2;2691:9;2684:21;2665:4;2722:45;2763:2;2752:9;2748:18;2740:6;2722:45;:::i;2778:104::-;-1:-1:-1;;;;;2844:31:641;2832:44;;2778:104::o;2887:203::-;-1:-1:-1;;;;;3051:32:641;;;;3033:51;;3021:2;3006:18;;2887:203::o;3095:180::-;3154:6;3207:2;3195:9;3186:7;3182:23;3178:32;3175:52;;;3223:1;3220;3213:12;3175:52;-1:-1:-1;3246:23:641;;3095:180;-1:-1:-1;3095:180:641:o;3280:254::-;3348:6;3356;3409:2;3397:9;3388:7;3384:23;3380:32;3377:52;;;3425:1;3422;3415:12;3377:52;3448:29;3467:9;3448:29;:::i;:::-;3438:39;3524:2;3509:18;;;;3496:32;;-1:-1:-1;;;3280:254:641:o;3539:186::-;3598:6;3651:2;3639:9;3630:7;3626:23;3622:32;3619:52;;;3667:1;3664;3657:12;3619:52;3690:29;3709:9;3690:29;:::i;3912:328::-;3989:6;3997;4005;4058:2;4046:9;4037:7;4033:23;4029:32;4026:52;;;4074:1;4071;4064:12;4026:52;4097:29;4116:9;4097:29;:::i;:::-;4087:39;;4145:38;4179:2;4168:9;4164:18;4145:38;:::i;:::-;4135:48;;4230:2;4219:9;4215:18;4202:32;4192:42;;3912:328;;;;;:::o;4245:861::-;4356:6;4364;4372;4425:2;4413:9;4404:7;4400:23;4396:32;4393:52;;;4441:1;4438;4431:12;4393:52;4481:9;4468:23;-1:-1:-1;;;;;4551:2:641;4543:6;4540:14;4537:34;;;4567:1;4564;4557:12;4537:34;4590:22;;;;4646:3;4628:16;;;4624:26;4621:46;;;4663:1;4660;4653:12;4621:46;4686:2;;-1:-1:-1;4741:2:641;4726:18;;4713:32;;4757:16;;;4754:36;;;4786:1;4783;4776:12;4754:36;4824:8;4813:9;4809:24;4799:34;;4871:7;4864:4;4860:2;4856:13;4852:27;4842:55;;4893:1;4890;4883:12;4842:55;4933:2;4920:16;4959:2;4951:6;4948:14;4945:34;;;4975:1;4972;4965:12;4945:34;5020:7;5015:2;5006:6;5002:2;4998:15;4994:24;4991:37;4988:57;;;5041:1;5038;5031:12;4988:57;5072:2;5068;5064:11;5054:21;;5094:6;5084:16;;;;;4245:861;;;;;:::o;5400:248::-;5468:6;5476;5529:2;5517:9;5508:7;5504:23;5500:32;5497:52;;;5545:1;5542;5535:12;5497:52;-1:-1:-1;;5568:23:641;;;5638:2;5623:18;;;5610:32;;-1:-1:-1;5400:248:641:o;5653:274::-;-1:-1:-1;;;;;5845:32:641;;;;5827:51;;5909:2;5894:18;;5887:34;5815:2;5800:18;;5653:274::o;5932:118::-;6018:5;6011:13;6004:21;5997:5;5994:32;5984:60;;6040:1;6037;6030:12;6055:241;6111:6;6164:2;6152:9;6143:7;6139:23;6135:32;6132:52;;;6180:1;6177;6170:12;6132:52;6219:9;6206:23;6238:28;6260:5;6238:28;:::i;6832:685::-;6937:6;6945;6953;6961;7014:3;7002:9;6993:7;6989:23;6985:33;6982:53;;;7031:1;7028;7021:12;6982:53;7054:29;7073:9;7054:29;:::i;:::-;7044:39;;7130:2;7119:9;7115:18;7102:32;7092:42;;7185:2;7174:9;7170:18;7157:32;-1:-1:-1;;;;;7249:2:641;7241:6;7238:14;7235:34;;;7265:1;7262;7255:12;7235:34;7288:50;7330:7;7321:6;7310:9;7306:22;7288:50;:::i;:::-;7278:60;;7391:2;7380:9;7376:18;7363:32;7347:48;;7420:2;7410:8;7407:16;7404:36;;;7436:1;7433;7426:12;7404:36;;7459:52;7503:7;7492:8;7481:9;7477:24;7459:52;:::i;:::-;7449:62;;;6832:685;;;;;;;:::o;7522:322::-;7591:6;7644:2;7632:9;7623:7;7619:23;7615:32;7612:52;;;7660:1;7657;7650:12;7612:52;7700:9;7687:23;-1:-1:-1;;;;;7725:6:641;7722:30;7719:50;;;7765:1;7762;7755:12;7719:50;7788;7830:7;7821:6;7810:9;7806:22;7788:50;:::i;7849:322::-;7926:6;7934;7942;7995:2;7983:9;7974:7;7970:23;7966:32;7963:52;;;8011:1;8008;8001:12;7963:52;8047:9;8034:23;8024:33;;8076:38;8110:2;8099:9;8095:18;8076:38;:::i;8176:315::-;8241:6;8249;8302:2;8290:9;8281:7;8277:23;8273:32;8270:52;;;8318:1;8315;8308:12;8270:52;8341:29;8360:9;8341:29;:::i;:::-;8331:39;;8420:2;8409:9;8405:18;8392:32;8433:28;8455:5;8433:28;:::i;:::-;8480:5;8470:15;;;8176:315;;;;;:::o;8496:626::-;8593:6;8601;8654:2;8642:9;8633:7;8629:23;8625:32;8622:52;;;8670:1;8667;8660:12;8622:52;8710:9;8697:23;-1:-1:-1;;;;;8780:2:641;8772:6;8769:14;8766:34;;;8796:1;8793;8786:12;8766:34;8834:6;8823:9;8819:22;8809:32;;8879:7;8872:4;8868:2;8864:13;8860:27;8850:55;;8901:1;8898;8891:12;8850:55;8941:2;8928:16;8967:2;8959:6;8956:14;8953:34;;;8983:1;8980;8973:12;8953:34;9036:7;9031:2;9021:6;9018:1;9014:14;9010:2;9006:23;9002:32;8999:45;8996:65;;;9057:1;9054;9047:12;8996:65;9088:2;9080:11;;;;;9110:6;;-1:-1:-1;8496:626:641;;-1:-1:-1;;;;8496:626:641:o;9127:801::-;9287:4;9316:2;9356;9345:9;9341:18;9386:2;9375:9;9368:21;9409:6;9444;9438:13;9475:6;9467;9460:22;9513:2;9502:9;9498:18;9491:25;;9575:2;9565:6;9562:1;9558:14;9547:9;9543:30;9539:39;9525:53;;9613:2;9605:6;9601:15;9634:1;9644:255;9658:6;9655:1;9652:13;9644:255;;;9751:2;9747:7;9735:9;9727:6;9723:22;9719:36;9714:3;9707:49;9779:40;9812:6;9803;9797:13;9779:40;:::i;:::-;9769:50;-1:-1:-1;9877:12:641;;;;9842:15;;;;9680:1;9673:9;9644:255;;;-1:-1:-1;9916:6:641;;9127:801;-1:-1:-1;;;;;;;9127:801:641:o;9933:538::-;10028:6;10036;10044;10052;10105:3;10093:9;10084:7;10080:23;10076:33;10073:53;;;10122:1;10119;10112:12;10073:53;10145:29;10164:9;10145:29;:::i;:::-;10135:39;;10193:38;10227:2;10216:9;10212:18;10193:38;:::i;:::-;10183:48;;10278:2;10267:9;10263:18;10250:32;10240:42;;10333:2;10322:9;10318:18;10305:32;-1:-1:-1;;;;;10352:6:641;10349:30;10346:50;;;10392:1;10389;10382:12;10346:50;10415;10457:7;10448:6;10437:9;10433:22;10415:50;:::i;10476:260::-;10544:6;10552;10605:2;10593:9;10584:7;10580:23;10576:32;10573:52;;;10621:1;10618;10611:12;10573:52;10644:29;10663:9;10644:29;:::i;:::-;10634:39;;10692:38;10726:2;10715:9;10711:18;10692:38;:::i;:::-;10682:48;;10476:260;;;;;:::o;10741:347::-;10943:2;10925:21;;;10982:2;10962:18;;;10955:30;-1:-1:-1;;;11016:2:641;11001:18;;10994:53;11079:2;11064:18;;10741:347::o;11093:380::-;11172:1;11168:12;;;;11215;;;11236:61;;11290:4;11282:6;11278:17;11268:27;;11236:61;11343:2;11335:6;11332:14;11312:18;11309:38;11306:161;;;11389:10;11384:3;11380:20;11377:1;11370:31;11424:4;11421:1;11414:15;11452:4;11449:1;11442:15;11306:161;;11093:380;;;:::o;11478:338::-;11680:2;11662:21;;;11719:2;11699:18;;;11692:30;-1:-1:-1;;;11753:2:641;11738:18;;11731:44;11807:2;11792:18;;11478:338::o;12163:127::-;12224:10;12219:3;12215:20;12212:1;12205:31;12255:4;12252:1;12245:15;12279:4;12276:1;12269:15;12295:127;12356:10;12351:3;12347:20;12344:1;12337:31;12387:4;12384:1;12377:15;12411:4;12408:1;12401:15;12427:168;12467:7;12533:1;12529;12525:6;12521:14;12518:1;12515:21;12510:1;12503:9;12496:17;12492:45;12489:71;;;12540:18;;:::i;:::-;-1:-1:-1;12580:9:641;;12427:168::o;12600:127::-;12661:10;12656:3;12652:20;12649:1;12642:31;12692:4;12689:1;12682:15;12716:4;12713:1;12706:15;12732:120;12772:1;12798;12788:35;;12803:18;;:::i;:::-;-1:-1:-1;12837:9:641;;12732:120::o;13615:522::-;13693:4;13699:6;13759:11;13746:25;13853:2;13849:7;13838:8;13822:14;13818:29;13814:43;13794:18;13790:68;13780:96;;13872:1;13869;13862:12;13780:96;13899:33;;13951:20;;;-1:-1:-1;;;;;;13983:30:641;;13980:50;;;14026:1;14023;14016:12;13980:50;14059:4;14047:17;;-1:-1:-1;14090:14:641;14086:27;;;14076:38;;14073:58;;;14127:1;14124;14117:12;14142:504;14201:5;14208:6;14268:3;14255:17;14354:2;14350:7;14339:8;14323:14;14319:29;14315:43;14295:18;14291:68;14281:96;;14373:1;14370;14363:12;14281:96;14401:33;;14505:4;14492:18;;;-1:-1:-1;14453:21:641;;-1:-1:-1;;;;;;14522:30:641;;14519:50;;;14565:1;14562;14555:12;14519:50;14615:6;14599:14;14595:27;14585:8;14581:42;14578:62;;;14636:1;14633;14626:12;14651:267;14740:6;14735:3;14728:19;14792:6;14785:5;14778:4;14773:3;14769:14;14756:43;-1:-1:-1;14844:1:641;14819:16;;;14837:4;14815:27;;;14808:38;;;;14900:2;14879:15;;;-1:-1:-1;;14875:29:641;14866:39;;;14862:50;;14651:267::o;14923:173::-;14991:20;;-1:-1:-1;;;;;15040:31:641;;15030:42;;15020:70;;15086:1;15083;15076:12;15210:1542;15401:2;15390:9;15383:21;15413:66;15475:2;15464:9;15460:18;15432:26;15451:6;15432:26;:::i;:::-;15413:66;:::i;:::-;15364:4;15508:35;15539:2;15531:6;15527:15;15508:35;:::i;:::-;15552:52;15600:2;15589:9;15585:18;15571:12;15552:52;:::i;:::-;;15665:2;15657:6;15653:15;15640:29;15635:2;15624:9;15620:18;15613:57;15701:35;15732:2;15724:6;15720:15;15701:35;:::i;:::-;15745:55;15795:3;15784:9;15780:19;15764:14;15745:55;:::i;:::-;;15845:57;15897:3;15889:6;15885:16;15877:6;15845:57;:::i;:::-;15921:6;15964:2;15958:3;15947:9;15943:19;15936:31;15990:77;16062:3;16051:9;16047:19;16033:12;16017:14;15990:77;:::i;:::-;15976:91;;16129:3;16121:6;16117:16;16104:30;16098:3;16087:9;16083:19;16076:59;16197:3;16189:6;16185:16;16172:30;16166:3;16155:9;16151:19;16144:59;16234:36;16265:3;16257:6;16253:16;16234:36;:::i;:::-;16212:58;;16289:3;16301:54;16351:2;16340:9;16336:18;16320:14;16301:54;:::i;:::-;16386:35;16417:2;16409:6;16405:15;16386:35;:::i;:::-;16364:57;;;16440:3;16452:54;16502:2;16491:9;16487:18;16471:14;-1:-1:-1;;;;;15167:31:641;15155:44;;15101:104;16452:54;16537:35;16568:2;16560:6;16556:15;16537:35;:::i;:::-;16515:57;;;16591:3;16603:54;16653:2;16642:9;16638:18;16622:14;-1:-1:-1;;;;;15167:31:641;15155:44;;15101:104;16603:54;16706:15;;;;16693:29;16673:18;;;;16666:57;;;;-1:-1:-1;16740:6:641;15210:1542;-1:-1:-1;15210:1542:641:o;17692:135::-;17731:3;-1:-1:-1;;17752:17:641;;17749:43;;;17772:18;;:::i;:::-;-1:-1:-1;17819:1:641;17808:13;;17692:135::o;17832:470::-;18011:3;18049:6;18043:13;18065:53;18111:6;18106:3;18099:4;18091:6;18087:17;18065:53;:::i;:::-;18181:13;;18140:16;;;;18203:57;18181:13;18140:16;18237:4;18225:17;;18203:57;:::i;:::-;18276:20;;17832:470;-1:-1:-1;;;;17832:470:641:o;18651:304::-;-1:-1:-1;;;;;18881:15:641;;;18863:34;;18933:15;;18928:2;18913:18;;18906:43;18813:2;18798:18;;18651:304::o;18960:245::-;19027:6;19080:2;19068:9;19059:7;19055:23;19051:32;19048:52;;;19096:1;19093;19086:12;19048:52;19128:9;19122:16;19147:28;19169:5;19147:28;:::i;19550:186::-;19609:6;19662:2;19650:9;19641:7;19637:23;19633:32;19630:52;;;19678:1;19675;19668:12;19630:52;19701:29;19720:9;19701:29;:::i;21442:339::-;21644:2;21626:21;;;21683:2;21663:18;;;21656:30;-1:-1:-1;;;21717:2:641;21702:18;;21695:45;21772:2;21757:18;;21442:339::o;21786:128::-;21826:3;21857:1;21853:6;21850:1;21847:13;21844:39;;;21863:18;;:::i;:::-;-1:-1:-1;21899:9:641;;21786:128::o;21919:383::-;22116:2;22105:9;22098:21;22079:4;22142:45;22183:2;22172:9;22168:18;22160:6;22142:45;:::i;:::-;22235:9;22227:6;22223:22;22218:2;22207:9;22203:18;22196:50;22263:33;22289:6;22281;22263:33;:::i;:::-;22255:41;21919:383;-1:-1:-1;;;;;21919:383:641:o;22651:125::-;22691:4;22719:1;22716;22713:8;22710:34;;;22724:18;;:::i;:::-;-1:-1:-1;22761:9:641;;22651:125::o;22781:112::-;22813:1;22839;22829:35;;22844:18;;:::i;:::-;-1:-1:-1;22878:9:641;;22781:112::o;22898:489::-;-1:-1:-1;;;;;23167:15:641;;;23149:34;;23219:15;;23214:2;23199:18;;23192:43;23266:2;23251:18;;23244:34;;;23314:3;23309:2;23294:18;;23287:31;;;23092:4;;23335:46;;23361:19;;23353:6;23335:46;:::i;23392:249::-;23461:6;23514:2;23502:9;23493:7;23489:23;23485:32;23482:52;;;23530:1;23527;23520:12;23482:52;23562:9;23556:16;23581:30;23605:5;23581:30;:::i;23646:271::-;23829:6;23821;23816:3;23803:33;23785:3;23855:16;;23880:13;;;23855:16;23646:271;-1:-1:-1;23646:271:641:o;25435:274::-;25564:3;25602:6;25596:13;25618:53;25664:6;25659:3;25652:4;25644:6;25640:17;25618:53;:::i;:::-;25687:16;;;;;25435:274;-1:-1:-1;;25435:274:641:o;25714:127::-;25775:10;25770:3;25766:20;25763:1;25756:31;25806:4;25803:1;25796:15;25830:4;25827:1;25820:15",
    "linkReferences": {},
    "immutableReferences": {
      "79909": [
        {
          "start": 10678,
          "length": 32
        }
      ],
      "79911": [
        {
          "start": 10636,
          "length": 32
        }
      ],
      "79913": [
        {
          "start": 10594,
          "length": 32
        }
      ],
      "79915": [
        {
          "start": 10761,
          "length": 32
        }
      ],
      "79917": [
        {
          "start": 10798,
          "length": 32
        }
      ],
      "79919": [
        {
          "start": 10719,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchMintTo(address,uint256,string,bytes)": "754a81d9",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "mintTo(address,string)": "0075a317",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchMintTo(address,uint256,string,bytes)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_data\":\"Additional data to pass along during the minting of the NFT.\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an authorized account.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchMintTo(address,uint256,string,bytes)\":{\"notice\":\"Lets an authorized address mint multiple NFTs at once to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"}},\"notice\":\"BASE:      ERC721A      EXTENSION: SignatureMintERC721  The `ERC721SignatureMint` contract uses the `ERC721Base` contract, along with the `SignatureMintERC721` extension.  The 'signature minting' mechanism in the `SignatureMintERC721` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC721SignatureMint.sol\":\"ERC721SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC721Base.sol\":{\"keccak256\":\"0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7\",\"dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX\"]},\"contracts/base/ERC721SignatureMint.sol\":{\"keccak256\":\"0x2096cf26cac77e019e52e4d97928ffc2509f1042fdf9b4b9181063ff67e54121\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0292449b5da6aa86f614142d6f0102e3c3743acefc3e55a079ca483163e3f0dc\",\"dweb:/ipfs/QmaxuLsWC4feBjVQRNzLuRUogZaCWUeK99gkfRmDoBKLw6\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea\",\"dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721.sol\":{\"keccak256\":\"0x2a80f0c7606c75d3aef4757b04bd37092cf63db695254d94a288655b4a840853\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7f5816987df8fe8ab84023d1ed8b1aaa1cbc895d5cb061aecc03c516c8ff1651\",\"dweb:/ipfs/QmdgFFGCwgqiSVKXBdkBJgttFkft96EFaiunV8GAfVW4N9\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8\",\"dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN\"]},\"contracts/openzeppelin-presets/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchMintTo(address,uint256,string,bytes)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_data": "Additional data to pass along during the minting of the NFT.",
              "_quantity": "The number of NFTs to mint.",
              "_to": "The recipient of the NFT to mint."
            }
          },
          "burn(uint256)": {
            "details": "ERC721A's `_burn(uint256,bool)` internally checks for token approvals.",
            "params": {
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintTo(address,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_to": "The recipient of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFT minted."
            }
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See `BatchMintMetadata` for handling of metadata in this contract.",
            "params": {
              "_tokenId": "The tokenId of an NFT."
            }
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an authorized account."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchMintTo(address,uint256,string,bytes)": {
            "notice": "Lets an authorized address mint multiple NFTs at once to a recipient."
          },
          "burn(uint256)": {
            "notice": "Lets an owner or approved operator burn the NFT of the given tokenId."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "mintTo(address,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the metadata URI for an NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC721SignatureMint.sol": "ERC721SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC721Base.sol": {
        "keccak256": "0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3",
        "urls": [
          "bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7",
          "dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC721SignatureMint.sol": {
        "keccak256": "0x2096cf26cac77e019e52e4d97928ffc2509f1042fdf9b4b9181063ff67e54121",
        "urls": [
          "bzz-raw://0292449b5da6aa86f614142d6f0102e3c3743acefc3e55a079ca483163e3f0dc",
          "dweb:/ipfs/QmaxuLsWC4feBjVQRNzLuRUogZaCWUeK99gkfRmDoBKLw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10",
        "urls": [
          "bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea",
          "dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721.sol": {
        "keccak256": "0x2a80f0c7606c75d3aef4757b04bd37092cf63db695254d94a288655b4a840853",
        "urls": [
          "bzz-raw://7f5816987df8fe8ab84023d1ed8b1aaa1cbc895d5cb061aecc03c516c8ff1651",
          "dweb:/ipfs/QmdgFFGCwgqiSVKXBdkBJgttFkft96EFaiunV8GAfVW4N9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e",
        "urls": [
          "bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8",
          "dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC721SignatureMint.sol",
    "id": 13022,
    "exportedSymbols": {
      "BatchMintMetadata": [
        34496
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFilterer": [
        34762
      ],
      "ECDSA": [
        79903
      ],
      "EIP712": [
        80057
      ],
      "ERC721A": [
        29541
      ],
      "ERC721Base": [
        10896
      ],
      "ERC721SignatureMint": [
        13021
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC165": [
        31146
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "ISignatureMintERC721": [
        51138
      ],
      "IWETH": [
        55699
      ],
      "Multicall": [
        37872
      ],
      "OperatorFilterer": [
        38148
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PrimarySale": [
        39318
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureMintERC721": [
        41170
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4454:33",
    "nodes": [
      {
        "id": 12777,
        "nodeType": "PragmaDirective",
        "src": "39:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 12778,
        "nodeType": "ImportDirective",
        "src": "86:26:33",
        "nodes": [],
        "absolutePath": "contracts/base/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13022,
        "sourceUnit": 10897,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12779,
        "nodeType": "ImportDirective",
        "src": "114:38:33",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13022,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12780,
        "nodeType": "ImportDirective",
        "src": "153:48:33",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13022,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12781,
        "nodeType": "ImportDirective",
        "src": "202:46:33",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721.sol",
        "file": "../extension/SignatureMintERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13022,
        "sourceUnit": 41171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12782,
        "nodeType": "ImportDirective",
        "src": "250:40:33",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13022,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13021,
        "nodeType": "ContractDefinition",
        "src": "876:3616:33",
        "nodes": [
          {
            "id": 12816,
            "nodeType": "FunctionDefinition",
            "src": "1138:352:33",
            "nodes": [],
            "body": {
              "id": 12815,
              "nodeType": "Block",
              "src": "1424:66:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12812,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12801,
                        "src": "1461:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12811,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "1434:26:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:49:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12814,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:49:33"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12804,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12791,
                    "src": "1361:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 12805,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12793,
                    "src": "1376:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 12806,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12795,
                    "src": "1383:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 12807,
                    "name": "_royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12797,
                    "src": "1392:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 12808,
                    "name": "_royaltyBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12799,
                    "src": "1411:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  }
                ],
                "id": 12809,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12803,
                  "name": "ERC721Base",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10896,
                  "src": "1350:10:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1350:73:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12791,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1167:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1159:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12793,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1204:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1190:19:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12792,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12795,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1233:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1219:21:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12794,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12797,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1258:17:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1250:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12799,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1293:11:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1285:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 12798,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12801,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1322:21:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "1314:29:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:200:33"
            },
            "returnParameters": {
              "id": 12810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:33"
            },
            "scope": 13021,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12906,
            "nodeType": "FunctionDefinition",
            "src": "1928:982:33",
            "nodes": [],
            "body": {
              "id": 12905,
              "nodeType": "Block",
              "src": "2112:798:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 12829,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12820,
                            "src": "2130:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                              "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                            }
                          },
                          "id": 12830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51090,
                          "src": "2130:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 12831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2147:1:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2130:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e746979206d7573742062652031",
                        "id": 12833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2150:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_403941308fab4adac3b4202ae6eec0d958f8667c849593cca07bfa4f63d40758",
                          "typeString": "literal_string \"quantiy must be 1\""
                        },
                        "value": "quantiy must be 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_403941308fab4adac3b4202ae6eec0d958f8667c849593cca07bfa4f63d40758",
                          "typeString": "literal_string \"quantiy must be 1\""
                        }
                      ],
                      "id": 12828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2122:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:48:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12835,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:48:33"
                },
                {
                  "assignments": [
                    12837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12837,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "2189:13:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 12905,
                      "src": "2181:21:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12836,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2181:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12840,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12838,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "2205:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 12839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:19:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2181:43:33"
                },
                {
                  "expression": {
                    "id": 12846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12841,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12826,
                      "src": "2274:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12843,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2299:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 12844,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12822,
                          "src": "2305:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 12842,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41104,
                        "src": "2283:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$51101_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 12845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2283:33:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2274:42:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12847,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:42:33"
                },
                {
                  "assignments": [
                    12849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12849,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2335:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 12905,
                      "src": "2327:16:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12848,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2327:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12852,
                  "initialValue": {
                    "expression": {
                      "id": 12850,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12820,
                      "src": "2346:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 12851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51080,
                    "src": "2346:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2327:26:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12854,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2410:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51086,
                        "src": "2410:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12856,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2437:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51090,
                        "src": "2437:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 12858,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2452:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51094,
                        "src": "2452:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12860,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2467:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51092,
                        "src": "2467:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12853,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13020,
                      "src": "2389:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 12862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:97:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12863,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:97:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 12864,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2542:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51082,
                        "src": "2542:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2575:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2567:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12866,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2567:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2567:10:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2542:35:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 12871,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2581:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51084,
                        "src": "2581:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 12873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2600:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2581:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2542:59:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12885,
                  "nodeType": "IfStatement",
                  "src": "2538:170:33",
                  "trueBody": {
                    "id": 12884,
                    "nodeType": "Block",
                    "src": "2603:105:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12877,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12837,
                              "src": "2643:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 12878,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12820,
                                "src": "2658:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 12879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51082,
                              "src": "2658:21:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 12880,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12820,
                                "src": "2681:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 12881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51084,
                              "src": "2681:15:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 12876,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39639,
                            "src": "2617:25:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 12882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:80:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12883,
                        "nodeType": "ExpressionStatement",
                        "src": "2617:80:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12887,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12837,
                        "src": "2755:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 12888,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2770:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uri",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51088,
                        "src": "2770:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 12886,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10826,
                      "src": "2742:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 12890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12891,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:37:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12893,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12849,
                        "src": "2799:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 12894,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12820,
                          "src": "2809:4:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 12895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51090,
                        "src": "2809:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12892,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28791,
                        28954
                      ],
                      "referencedDeclaration": 28791,
                      "src": "2789:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:34:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12897,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:34:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12899,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "2865:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12900,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12849,
                        "src": "2873:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12901,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12837,
                        "src": "2883:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12902,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12820,
                        "src": "2898:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 12898,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51113,
                      "src": "2839:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$51101_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 12903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:64:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12904,
                  "nodeType": "EmitStatement",
                  "src": "2834:69:33"
                }
              ]
            },
            "baseFunctions": [
              51137
            ],
            "documentation": {
              "id": 12817,
              "nodeType": "StructuredDocumentation",
              "src": "1683:240:33",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1937:17:33",
            "overrides": {
              "id": 12824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2066:8:33"
            },
            "parameters": {
              "id": 12823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12820,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1976:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12906,
                  "src": "1955:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 12819,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12818,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51101,
                      "src": "1955:11:33"
                    },
                    "referencedDeclaration": 51101,
                    "src": "1955:11:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$51101_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12822,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1997:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12906,
                  "src": "1982:25:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12821,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1954:54:33"
            },
            "returnParameters": {
              "id": 12827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12826,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2100:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12906,
                  "src": "2092:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:16:33"
            },
            "scope": 13021,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12921,
            "nodeType": "FunctionDefinition",
            "src": "3184:134:33",
            "nodes": [],
            "body": {
              "id": 12920,
              "nodeType": "Block",
              "src": "3276:42:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12915,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12909,
                      "src": "3293:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12916,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3304:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3304:7:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3293:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12914,
                  "id": 12919,
                  "nodeType": "Return",
                  "src": "3286:25:33"
                }
              ]
            },
            "baseFunctions": [
              41029
            ],
            "documentation": {
              "id": 12907,
              "nodeType": "StructuredDocumentation",
              "src": "3102:77:33",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3193:19:33",
            "overrides": {
              "id": 12911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3252:8:33"
            },
            "parameters": {
              "id": 12910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12909,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3221:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 12921,
                  "src": "3213:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3212:17:33"
            },
            "returnParameters": {
              "id": 12914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12921,
                  "src": "3270:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12912,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3270:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3269:6:33"
            },
            "scope": 13021,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12935,
            "nodeType": "FunctionDefinition",
            "src": "3419:130:33",
            "nodes": [],
            "body": {
              "id": 12934,
              "nodeType": "Block",
              "src": "3504:45:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12928,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3521:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3521:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12930,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3535:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3535:7:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3521:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12927,
                  "id": 12933,
                  "nodeType": "Return",
                  "src": "3514:28:33"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 12922,
              "nodeType": "StructuredDocumentation",
              "src": "3324:90:33",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3428:27:33",
            "overrides": {
              "id": 12924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3480:8:33"
            },
            "parameters": {
              "id": 12923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3455:2:33"
            },
            "returnParameters": {
              "id": 12927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12935,
                  "src": "3498:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12925,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3497:6:33"
            },
            "scope": 13021,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13020,
            "nodeType": "FunctionDefinition",
            "src": "3639:851:33",
            "nodes": [],
            "body": {
              "id": 13019,
              "nodeType": "Block",
              "src": "3824:666:33",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12947,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12944,
                      "src": "3838:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3856:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3838:19:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12960,
                  "nodeType": "IfStatement",
                  "src": "3834:103:33",
                  "trueBody": {
                    "id": 12959,
                    "nodeType": "Block",
                    "src": "3859:78:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 12951,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3881:3:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 12952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3881:9:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 12953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3894:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3881:14:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 12955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3897:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 12950,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3873:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3873:33:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12957,
                        "nodeType": "ExpressionStatement",
                        "src": "3873:33:33"
                      },
                      {
                        "functionReturnParameters": 12946,
                        "id": 12958,
                        "nodeType": "Return",
                        "src": "3920:7:33"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12962,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "3955:10:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 13019,
                      "src": "3947:18:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3947:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12966,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12963,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12940,
                      "src": "3968:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 12964,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12944,
                      "src": "3987:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3968:33:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3947:54:33"
                },
                {
                  "assignments": [
                    12968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12968,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "4017:13:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 13019,
                      "src": "4012:18:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 12967,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4012:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12969,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4012:18:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12970,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12942,
                      "src": "4044:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 12971,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4057:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 12972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "4057:32:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4044:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12989,
                    "nodeType": "Block",
                    "src": "4161:55:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 12987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12982,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12968,
                            "src": "4175:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 12983,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4191:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4191:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 12985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4204:1:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4191:14:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4175:30:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12988,
                        "nodeType": "ExpressionStatement",
                        "src": "4175:30:33"
                      }
                    ]
                  },
                  "id": 12990,
                  "nodeType": "IfStatement",
                  "src": "4040:176:33",
                  "trueBody": {
                    "id": 12981,
                    "nodeType": "Block",
                    "src": "4091:64:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 12979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12974,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12968,
                            "src": "4105:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 12975,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4121:9:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 12977,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12962,
                              "src": "4134:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4121:23:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4105:39:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12980,
                        "nodeType": "ExpressionStatement",
                        "src": "4105:39:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12992,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12968,
                        "src": "4233:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 12993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4248:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 12991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4225:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:43:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12995,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:43:33"
                },
                {
                  "assignments": [
                    12997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12997,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "4287:13:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 13019,
                      "src": "4279:21:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12996,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4279:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13008,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 13003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12998,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12938,
                        "src": "4303:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4336:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4328:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4328:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4328:10:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4303:35:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 13006,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12938,
                      "src": "4366:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4303:84:33",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 13004,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "4341:20:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 13005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4341:22:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:108:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13012,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12942,
                        "src": "4434:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13013,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4445:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4445:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13015,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12997,
                        "src": "4457:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13016,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12962,
                        "src": "4472:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13009,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4397:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 13011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "4397:36:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 13017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4397:86:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13018,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:86:33"
                }
              ]
            },
            "documentation": {
              "id": 12936,
              "nodeType": "StructuredDocumentation",
              "src": "3555:79:33",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3648:20:33",
            "parameters": {
              "id": 12945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12938,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3686:21:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 13020,
                  "src": "3678:29:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12940,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "3725:16:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 13020,
                  "src": "3717:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12942,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3759:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 13020,
                  "src": "3751:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12944,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "3786:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 13020,
                  "src": "3778:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3668:138:33"
            },
            "returnParameters": {
              "id": 12946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3824:0:33"
            },
            "scope": 13021,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12784,
              "name": "ERC721Base",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10896,
              "src": "908:10:33"
            },
            "id": 12785,
            "nodeType": "InheritanceSpecifier",
            "src": "908:10:33"
          },
          {
            "baseName": {
              "id": 12786,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "920:11:33"
            },
            "id": 12787,
            "nodeType": "InheritanceSpecifier",
            "src": "920:11:33"
          },
          {
            "baseName": {
              "id": 12788,
              "name": "SignatureMintERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41170,
              "src": "933:19:33"
            },
            "id": 12789,
            "nodeType": "InheritanceSpecifier",
            "src": "933:19:33"
          }
        ],
        "canonicalName": "ERC721SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12783,
          "nodeType": "StructuredDocumentation",
          "src": "292:582:33",
          "text": "      BASE:      ERC721A\n      EXTENSION: SignatureMintERC721\n  The `ERC721SignatureMint` contract uses the `ERC721Base` contract, along with the `SignatureMintERC721` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC721` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13021,
          41170,
          51138,
          80057,
          39318,
          50580,
          10896,
          34762,
          38148,
          37994,
          50395,
          34496,
          39646,
          50644,
          31290,
          38400,
          50418,
          37872,
          50168,
          34723,
          49679,
          29541,
          31493,
          31539,
          31422,
          26795,
          31146,
          78641
        ],
        "name": "ERC721SignatureMint",
        "nameLocation": "885:19:33",
        "scope": 13022,
        "usedErrors": [
          31434,
          31437,
          31440,
          31443,
          31446,
          31449,
          31452,
          31455,
          31458,
          31461,
          31464,
          31467,
          31470,
          38005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 33
}