{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC1155.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162004e9838038062004e9883398101604081905262000035916200060c565b6040518060400160405280601481526020017f5369676e61747572654d696e7445524331313535000000000000000000000000815250604051806040016040528060018152602001603160f81b8152508787878787733cc6cdda760b79bafa08df41ecfa224f810dceb6600185858160009080519060200190620000bb9291906200047c565b508051620000d19060019060208401906200047c565b505050620000e68282620001c060201b60201c565b50620000f4905085620002ee565b62000109826001600160801b03831662000340565b620001156001620003eb565b5050845160209586012084519486019490942060e08590526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919098012090529490945250506101205250620001b48162000432565b5050505050506200070b565b6daaeb6d7670e522a718067333cd4e3b15620002ea576001600160a01b0382163b15620002a35780156200026257604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200024557600080fd5b505af11580156200025a573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af2903906044016200022a565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200024557600080fd5b5050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620003895760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600b805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b8280546200048a90620006ce565b90600052602060002090601f016020900481019282620004ae5760008555620004f9565b82601f10620004c957805160ff1916838001178555620004f9565b82800160010185558215620004f9579182015b82811115620004f9578251825591602001919060010190620004dc565b50620005079291506200050b565b5090565b5b808211156200050757600081556001016200050c565b80516001600160a01b03811681146200053a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200056757600080fd5b81516001600160401b03808211156200058457620005846200053f565b604051601f8301601f19908116603f01168101908282118183101715620005af57620005af6200053f565b81604052838152602092508683858801011115620005cc57600080fd5b600091505b83821015620005f05785820183015181830184015290820190620005d1565b83821115620006025760008385830101525b9695505050505050565b60008060008060008060c087890312156200062657600080fd5b620006318762000522565b60208801519096506001600160401b03808211156200064f57600080fd5b6200065d8a838b0162000555565b965060408901519150808211156200067457600080fd5b506200068389828a0162000555565b945050620006946060880162000522565b60808801519093506001600160801b0381168114620006b257600080fd5b9150620006c260a0880162000522565b90509295509295509295565b600181811c90821680620006e357607f821691505b602082108114156200070557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161473d6200075b6000396000612fe3015260006130320152600061300d01526000612f6601526000612f9001526000612fba015261473d6000f3fe6080604052600436106101ae5760003560e01c80636b20c454116100e85780636b20c454146104575780636f4f2837146104775780638da5cb5b14610497578063938e3d7b146104ac578063949c09f7146104cc57806395d89b41146104ec57806398a6e993146105015780639bcf7a1514610514578063a22cb46514610534578063ac9650d814610554578063b03f452814610581578063b17cd86f146105a1578063b24f2d39146105e0578063bd85b0391461060b578063e8a3d48514610638578063e985e9c51461064d578063f242432a14610688578063f5298aca146106a857600080fd5b8062fdd58e146101b357806301ffc9a7146101fe57806306fdde031461022e578063079fe40e146102505780630e89341c1461027257806313af4035146102925780632419f51b146102b45780632a55205a146102d45780632eb2c2d61461030257806332f0cd64146103225780633b1475a71461034257806341f43434146103575780634cc157df146103795780634e1273f4146103bb578063504c6e01146103e857806357fd845514610402578063600dd5ea1461042257806363b45e2d14610442575b600080fd5b3480156101bf57600080fd5b506101eb6101ce3660046135ba565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020a57600080fd5b5061021e6102193660046135fa565b6106c8565b60405190151581526020016101f5565b34801561023a57600080fd5b50610243610735565b6040516101f5919061366f565b34801561025c57600080fd5b506102656107c3565b6040516101f5919061368f565b34801561027e57600080fd5b5061024361028d3660046136a3565b6107d2565b34801561029e57600080fd5b506102b26102ad3660046136bc565b6108c0565b005b3480156102c057600080fd5b506101eb6102cf3660046136a3565b6108f9565b3480156102e057600080fd5b506102f46102ef3660046136d7565b610967565b6040516101f59291906136f9565b34801561030e57600080fd5b506102b261031d36600461385b565b6109a4565b34801561032e57600080fd5b506102b261033d366004613912565b6109d3565b34801561034e57600080fd5b50600c546101eb565b34801561036357600080fd5b506102656daaeb6d7670e522a718067333cd4e81565b34801561038557600080fd5b506103996103943660046136a3565b610a44565b604080516001600160a01b03909316835261ffff9091166020830152016101f5565b3480156103c757600080fd5b506103db6103d636600461392f565b610aaf565b6040516101f59190613a34565b3480156103f457600080fd5b50600b5461021e9060ff1681565b34801561040e57600080fd5b506102b261041d3660046136bc565b610bc3565b34801561042e57600080fd5b506102b261043d3660046135ba565b610c33565b34801561044e57600080fd5b506009546101eb565b34801561046357600080fd5b506102b2610472366004613a47565b610c65565b34801561048357600080fd5b506102b26104923660046136bc565b610db9565b3480156104a357600080fd5b50610265610de6565b3480156104b857600080fd5b506102b26104c7366004613aba565b610df5565b3480156104d857600080fd5b506102b26104e7366004613aee565b610e22565b3480156104f857600080fd5b50610243610fb0565b61026561050f366004613b86565b610fbd565b34801561052057600080fd5b506102b261052f366004613c25565b6111a8565b34801561054057600080fd5b506102b261054f366004613c5a565b6111dc565b34801561056057600080fd5b5061057461056f366004613c91565b6111f0565b6040516101f59190613d05565b34801561058d57600080fd5b506102b261059c366004613d67565b6112e4565b3480156105ad57600080fd5b506105c16105bc366004613b86565b611389565b6040805192151583526001600160a01b039091166020830152016101f5565b3480156105ec57600080fd5b506007546001600160a01b03811690600160a01b900461ffff16610399565b34801561061757600080fd5b506101eb6106263660046136a3565b600d6020526000908152604090205481565b34801561064457600080fd5b506102436113cd565b34801561065957600080fd5b5061021e610668366004613dc5565b600360209081526000928352604080842090915290825290205460ff1681565b34801561069457600080fd5b506102b26106a3366004613df8565b6113da565b3480156106b457600080fd5b506102b26106c3366004613e5c565b611401565b60006301ffc9a760e01b6001600160e01b0319831614806106f95750636cdb3d1360e11b6001600160e01b03198316145b8061071457506303a24d0760e21b6001600160e01b03198316145b8061072f57506001600160e01b0319821663152a902d60e11b145b92915050565b6000805461074290613e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461076e90613e8f565b80156107bb5780601f10610790576101008083540402835291602001916107bb565b820191906000526020600020905b81548152906001019060200180831161079e57829003601f168201915b505050505081565b600e546001600160a01b031690565b6000818152600460205260408120805460609291906107f090613e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461081c90613e8f565b80156108695780601f1061083e57610100808354040283529160200191610869565b820191906000526020600020905b81548152906001019060200180831161084c57829003601f168201915b505050505090506000815111156108805792915050565b600061088b846114a8565b90508061089785611644565b6040516020016108a8929190613eca565b60405160208183030381529060405292505050919050565b6108c8611749565b6108ed5760405162461bcd60e51b81526004016108e490613ef9565b60405180910390fd5b6108f68161176c565b50565b600061090460095490565b82106109425760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016108e4565b6009828154811061095557610955613f21565b90600052602060002001549050919050565b60008060008061097686610a44565b90945084925061ffff16905061271061098f8287613f4d565b6109999190613f82565b925050509250929050565b846001600160a01b03811633146109be576109be336117be565b6109cb8686868686611871565b505050505050565b6109db611749565b610a3b5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016108e4565b6108f6816118db565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610a8b5780516020820151610aa5565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610ad25760405162461bcd60e51b81526004016108e490613f96565b600083516001600160401b03811115610aed57610aed613712565b604051908082528060200260200182016040528015610b16578160200160208202803683370190505b50905060005b8451811015610bbb5760026000868381518110610b3b57610b3b613f21565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610b7757610b77613f21565b6020026020010151815260200190815260200160002054828281518110610ba057610ba0613f21565b6020908102919091010152610bb481613fbf565b9050610b1c565b509392505050565b610bcb611749565b610c285760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b60648201526084016108e4565b6108f6816001611922565b610c3b611749565b610c575760405162461bcd60e51b81526004016108e490613ef9565b610c618282611a12565b5050565b336001600160a01b038416811480610ca257506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610cbe5760405162461bcd60e51b81526004016108e490613fda565b8151835114610d015760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016108e4565b60005b8351811015610da757828181518110610d1f57610d1f613f21565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610d6057610d60613f21565b60200260200101518152602001908152602001600020541015610d955760405162461bcd60e51b81526004016108e490614005565b610da0600182614036565b9050610d04565b50610db3848484611a96565b50505050565b610dc1611749565b610ddd5760405162461bcd60e51b81526004016108e490613ef9565b6108f681611c18565b6006546001600160a01b031690565b610dfd611749565b610e195760405162461bcd60e51b81526004016108e490613ef9565b6108f681611c62565b610e2a611749565b610e465760405162461bcd60e51b81526004016108e49061404e565b6000825111610e675760405162461bcd60e51b81526004016108e49061407f565b8151835114610eab5760405162461bcd60e51b815260206004820152601060248201526f2632b733ba341036b4b9b6b0ba31b41760811b60448201526064016108e4565b6000610eb6600c5490565b9050806000805b8651811015610f7057600019878281518110610edb57610edb613f21565b60200260200101511415610f265783878281518110610efc57610efc613f21565b6020908102919091010152610f12600185614036565b9350610f1f600183614036565b9150610f5e565b83878281518110610f3957610f39613f21565b602002602001015110610f5e5760405162461bcd60e51b81526004016108e4906140ad565b610f69600182614036565b9050610ebd565b508015610f8557610f82828286611d44565b50505b82600c81905550610fa787878760405180602001604052806000815250611db1565b50505050505050565b6001805461074290613e8f565b6000808460c0013511610fe25760405162461bcd60e51b81526004016108e49061407f565b600080610fee600c5490565b90506000198660800135141561101f578091506001600c60008282546110149190614036565b9091555061104a9050565b808660800135106110425760405162461bcd60e51b81526004016108e4906140ad565b856080013591505b611055868686611efa565b9250600061106660208801886136bc565b905061109c61107b6080890160608a016136bc565b60c08901356110926101208b016101008c016136bc565b8a60e0013561208d565b60006110ae6040890160208a016136bc565b6001600160a01b0316146110da576110da836110d060408a0160208b016136bc565b896040013561217e565b6000198760800135141561113357611133836110f960a08a018a6140d1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061222692505050565b61115281848960c0013560405180602001604052806000815250612245565b82816001600160a01b0316856001600160a01b03167f0b35afaf155daeef41cc46df86f058df2855c57d30ab134647a6b587e7cc8c398a60405161119691906141a9565b60405180910390a45050509392505050565b6111b0611749565b6111cc5760405162461bcd60e51b81526004016108e490613ef9565b6111d783838361217e565b505050565b816111e6816117be565b6111d7838361230c565b6060816001600160401b0381111561120a5761120a613712565b60405190808252806020026020018201604052801561123d57816020015b60608152602001906001900390816112285790505b50905060005b828110156112dd576112ad3085858481811061126157611261613f21565b905060200281019061127391906140d1565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123bc92505050565b8282815181106112bf576112bf613f21565b602002602001018190525080806112d590613fbf565b915050611243565b5092915050565b6112ec611749565b6113085760405162461bcd60e51b81526004016108e49061404e565b600080611314600c5490565b905060001985141561134b578091506001600c60008282546113369190614036565b9091555061134690508185612226565b61136e565b80851061136a5760405162461bcd60e51b81526004016108e4906140ad565b8491505b6109cb86838560405180602001604052806000815250612245565b6000806113978585856123e8565b6101608601356000908152600f602052604090205490915060ff161580156113c357506113c381612444565b9150935093915050565b6005805461074290613e8f565b846001600160a01b03811633146113f4576113f4336117be565b6109cb8686868686612469565b336001600160a01b03841681148061143e57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b61145a5760405162461bcd60e51b81526004016108e490613fda565b6001600160a01b038416600090815260026020908152604080832086845290915290205482111561149d5760405162461bcd60e51b81526004016108e490614005565b610db38484846124cc565b606060006114b560095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561150557602002820191906000526020600020905b8154815260200190600101908083116114f1575b5050505050905060005b828110156116095781818151811061152957611529613f21565b60200260200101518510156115f757600a600083838151811061154e5761154e613f21565b60200260200101518152602001908152602001600020805461156f90613e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461159b90613e8f565b80156115e85780601f106115bd576101008083540402835291602001916115e8565b820191906000526020600020905b8154815290600101906020018083116115cb57829003601f168201915b50505050509350505050919050565b611602600182614036565b905061150f565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016108e4565b6060816116685750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611692578061167c81613fbf565b915061168b9050600a83613f82565b915061166c565b6000816001600160401b038111156116ac576116ac613712565b6040519080825280601f01601f1916602001820160405280156116d6576020820181803683370190505b5090505b8415611741576116eb6001836142b4565b91506116f8600a866142cb565b611703906030614036565b60f81b81838151811061171857611718613f21565b60200101906001600160f81b031916908160001a90535061173a600a86613f82565b94506116da565b949350505050565b6000611753610de6565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600b5460ff16156108f6576daaeb6d7670e522a718067333cd4e3b156108f657604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061181190309085906004016142df565b602060405180830381865afa15801561182e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185291906142f9565b6108f65780604051633b79c77360e21b81526004016108e4919061368f565b6001600160a01b0385163314806118ab57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6118c75760405162461bcd60e51b81526004016108e490614316565b6118d485858585856125be565b5050505050565b600b805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6daaeb6d7670e522a718067333cd4e3b15610c61576001600160a01b0382163b156119e15780156119ae57604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe9061198090309086906004016142df565b600060405180830381600087803b15801561199a57600080fd5b505af11580156109cb573d6000803e3d6000fd5b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af29039061198090309086906004016142df565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e4869061198090309060040161368f565b612710811115611a345760405162461bcd60e51b81526004016108e490614342565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b038316611abc5760405162461bcd60e51b81526004016108e49061436b565b8051825114611add5760405162461bcd60e51b81526004016108e490613f96565b6000339050611b008185600086866040518060200160405280600081525061275f565b60005b8351811015611bcb576000848281518110611b2057611b20613f21565b602002602001015190506000848381518110611b3e57611b3e613f21565b6020908102919091018101516001600160a01b0389166000908152600283526040808220868352909352919091205490915081811015611b905760405162461bcd60e51b81526004016108e490614393565b6001600160a01b0388166000908152600260209081526040808320958352949052929092209103905580611bc381613fbf565b915050611b03565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03166000805160206146a18339815191528686604051611c0a9291906143bd565b60405180910390a450505050565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600060058054611c7190613e8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c9d90613e8f565b8015611cea5780601f10611cbf57610100808354040283529160200191611cea565b820191906000526020600020905b815481529060010190602001808311611ccd57829003601f168201915b50508551939450611d0693600593506020870192509050613505565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d389291906143eb565b60405180910390a15050565b600080611d518486614036565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350611da8929091860190613505565b50935093915050565b6001600160a01b038416611dd75760405162461bcd60e51b81526004016108e490614410565b8151835114611df85760405162461bcd60e51b81526004016108e490613f96565b33611e088160008787878761275f565b60005b8451811015611ea457838181518110611e2657611e26613f21565b602002602001015160026000886001600160a01b03166001600160a01b031681526020019081526020016000206000878481518110611e6757611e67613f21565b602002602001015181526020019081526020016000206000828254611e8c9190614036565b90915550819050611e9c81613fbf565b915050611e0b565b50846001600160a01b031660006001600160a01b0316826001600160a01b03166000805160206146a18339815191528787604051611ee39291906143bd565b60405180910390a46118d48160008787878761286b565b600080611f08858585611389565b9250905080611f4b5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b60448201526064016108e4565b42611f5e61014087016101208801614436565b6001600160801b031611158015611f8f5750611f8261016086016101408701614436565b6001600160801b03164211155b611fcd5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016108e4565b6000611fdc60208701876136bc565b6001600160a01b031614156120295760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b60448201526064016108e4565b60008560c00135116120655760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b60448201526064016108e4565b50610160909301356000908152600f60205260409020805460ff191660011790555090919050565b806120ce5734156120c95760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016108e4565b610db3565b60006120da8285613f4d565b905060006001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561210c5750348114612110565b5034155b806121515760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b60448201526064016108e4565b60006001600160a01b038716156121685786612170565b6121706107c3565b9050610fa78533838661299d565b6127108111156121a05760405162461bcd60e51b81526004016108e490614342565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b600082815260046020908152604090912082516111d792840190613505565b6001600160a01b03841661226b5760405162461bcd60e51b81526004016108e490614410565b3361228b8160008761227c886129e2565b612285886129e2565b8761275f565b6001600160a01b0385166000908152600260209081526040808320878452909152812080548592906122be908490614036565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206146c1833981519152910160405180910390a46118d481600087878787612a2d565b336001600160a01b0383168114156123575760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016108e4565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101612219565b60606123e183836040518060600160405280602781526020016146e160279139612ae8565b9392505050565b600061174183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061243e92506124329150889050612bc3565b80519060200120612cb9565b90612ce6565b600061244e610de6565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b0385163314806124a357506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6124bf5760405162461bcd60e51b81526004016108e490614316565b6118d48585858585612d02565b6001600160a01b0383166124f25760405162461bcd60e51b81526004016108e49061436b565b3361252181856000612503876129e2565b61250c876129e2565b6040518060200160405280600081525061275f565b6001600160a01b0384166000908152600260209081526040808320868452909152902054828110156125655760405162461bcd60e51b81526004016108e490614393565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616916000805160206146c1833981519152910160405180910390a45050505050565b81518351146125df5760405162461bcd60e51b81526004016108e490613f96565b6001600160a01b0384166126055760405162461bcd60e51b81526004016108e490614410565b3361261481878787878761275f565b60005b845181101561270b57600085828151811061263457612634613f21565b60200260200101519050600085838151811061265257612652613f21565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156126a45760405162461bcd60e51b81526004016108e490614393565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d168352908152828220868352905290812080548492906126f0908490614036565b925050819055505050508061270490613fbf565b9050612617565b50846001600160a01b0316866001600160a01b0316826001600160a01b03166000805160206146a183398151915287876040516127499291906143bd565b60405180910390a46109cb81878787878761286b565b6001600160a01b0385166127e65760005b83518110156127e45782818151811061278b5761278b613f21565b6020026020010151600d60008684815181106127a9576127a9613f21565b6020026020010151815260200190815260200160002060008282546127ce9190614036565b909155506127dd905081613fbf565b9050612770565b505b6001600160a01b0384166109cb5760005b8351811015610fa75782818151811061281257612812613f21565b6020026020010151600d600086848151811061283057612830613f21565b60200260200101518152602001908152602001600020600082825461285591906142b4565b90915550612864905081613fbf565b90506127f7565b6001600160a01b0384163b156109cb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906128af9089908990889088908890600401614451565b6020604051808303816000875af19250505080156128ea575060408051601f3d908101601f191682019092526128e7918101906144af565b60015b61296d576128f66144cc565b806308c379a01415612930575061290b6144e7565b806129165750612932565b8060405162461bcd60e51b81526004016108e4919061366f565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b60448201526064016108e4565b6001600160e01b0319811663bc197c8160e01b14610fa75760405162461bcd60e51b81526004016108e490614570565b806129a757610db3565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156129d6576120c98282612e16565b610db384848484612eb8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612a1c57612a1c613f21565b602090810291909101015292915050565b6001600160a01b0384163b156109cb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190612a719089908990889088908890600401614599565b6020604051808303816000875af1925050508015612aac575060408051601f3d908101601f19168201909252612aa9918101906144af565b60015b612ab8576128f66144cc565b6001600160e01b0319811663f23a6e6160e01b14610fa75760405162461bcd60e51b81526004016108e490614570565b6060612af384612f11565b612b4e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016108e4565b600080856001600160a01b031685604051612b6991906145d3565b600060405180830381855af49150503d8060008114612ba4576040519150601f19603f3d011682016040523d82523d6000602084013e612ba9565b606091505b5091509150612bb9828286612f20565b9695505050505050565b60607fc7a95ef88f83fa833ccfce325157b7111633b181b6a27181b86415d8d501134d612bf360208401846136bc565b612c0360408501602086016136bc565b6040850135612c1860808701606088016136bc565b6080870135612c2a60a08901896140d1565b604051612c389291906145ef565b60405190819003902060c089013560e08a0135612c5d6101208c016101008d016136bc565b612c6f6101408d016101208e01614436565b612c816101608e016101408f01614436565b8d6101600135604051602001612ca39d9c9b9a999897969594939291906145ff565b6040516020818303038152906040529050919050565b600061072f612cc6612f59565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000612cf58585613083565b91509150610bbb816130c9565b6001600160a01b038416612d285760405162461bcd60e51b81526004016108e490614410565b33612d3881878761227c886129e2565b6001600160a01b038616600090815260026020908152604080832087845290915290205483811015612d7c5760405162461bcd60e51b81526004016108e490614393565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a16835290815282822088835290529081208054869290612dc8908490614036565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206146c1833981519152910160405180910390a4610fa7828888888888612a2d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612e63576040519150601f19603f3d011682016040523d82523d6000602084013e612e68565b606091505b50509050806111d75760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016108e4565b816001600160a01b0316836001600160a01b03161415612ed757610db3565b6001600160a01b038316301415612efc576120c96001600160a01b0385168383613212565b610db36001600160a01b038516848484613268565b6001600160a01b03163b151590565b60608315612f2f5750816123e1565b825115612f3f5782518084602001fd5b8160405162461bcd60e51b81526004016108e4919061366f565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612fb257507f000000000000000000000000000000000000000000000000000000000000000046145b15612fdc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b90565b6000808251604114156130ba5760208301516040840151606085015160001a6130ae878285856132a0565b945094505050506130c2565b506000905060025b9250929050565b60008160048111156130dd576130dd61468a565b14156130e65750565b60018160048111156130fa576130fa61468a565b14156131435760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016108e4565b60028160048111156131575761315761468a565b14156131a55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016108e4565b60038160048111156131b9576131b961468a565b14156108f65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016108e4565b6111d78363a9059cbb60e01b84846040516024016132319291906136f9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261335a565b6040516001600160a01b0380851660248301528316604482015260648101829052610db39085906323b872dd60e01b90608401613231565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156132cd5750600090506003613351565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613321573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661334a57600060019250925050613351565b9150600090505b94509492505050565b60006133af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661342c9092919063ffffffff16565b8051909150156111d757808060200190518101906133cd91906142f9565b6111d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108e4565b606061174184846000858561344085612f11565b61348c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108e4565b600080866001600160a01b031685876040516134a891906145d3565b60006040518083038185875af1925050503d80600081146134e5576040519150601f19603f3d011682016040523d82523d6000602084013e6134ea565b606091505b50915091506134fa828286612f20565b979650505050505050565b82805461351190613e8f565b90600052602060002090601f0160209004810192826135335760008555613579565b82601f1061354c57805160ff1916838001178555613579565b82800160010185558215613579579182015b8281111561357957825182559160200191906001019061355e565b50613585929150613589565b5090565b5b80821115613585576000815560010161358a565b80356001600160a01b03811681146135b557600080fd5b919050565b600080604083850312156135cd57600080fd5b6135d68361359e565b946020939093013593505050565b6001600160e01b0319811681146108f657600080fd5b60006020828403121561360c57600080fd5b81356123e1816135e4565b60005b8381101561363257818101518382015260200161361a565b83811115610db35750506000910152565b6000815180845261365b816020860160208601613617565b601f01601f19169290920160200192915050565b6020815260006123e16020830184613643565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6000602082840312156136b557600080fd5b5035919050565b6000602082840312156136ce57600080fd5b6123e18261359e565b600080604083850312156136ea57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561374d5761374d613712565b6040525050565b60006001600160401b0382111561376d5761376d613712565b5060051b60200190565b600082601f83011261378857600080fd5b8135602061379582613754565b6040516137a28282613728565b83815260059390931b85018201928281019150868411156137c257600080fd5b8286015b848110156137dd57803583529183019183016137c6565b509695505050505050565b600082601f8301126137f957600080fd5b81356001600160401b0381111561381257613812613712565b604051613829601f8301601f191660200182613728565b81815284602083860101111561383e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561387357600080fd5b61387c8661359e565b945061388a6020870161359e565b935060408601356001600160401b03808211156138a657600080fd5b6138b289838a01613777565b945060608801359150808211156138c857600080fd5b6138d489838a01613777565b935060808801359150808211156138ea57600080fd5b506138f7888289016137e8565b9150509295509295909350565b80151581146108f657600080fd5b60006020828403121561392457600080fd5b81356123e181613904565b6000806040838503121561394257600080fd5b82356001600160401b038082111561395957600080fd5b818501915085601f83011261396d57600080fd5b8135602061397a82613754565b6040516139878282613728565b83815260059390931b85018201928281019150898411156139a757600080fd5b948201945b838610156139cc576139bd8661359e565b825294820194908201906139ac565b965050860135925050808211156139e257600080fd5b506139ef85828601613777565b9150509250929050565b600081518084526020808501945080840160005b83811015613a2957815187529582019590820190600101613a0d565b509495945050505050565b6020815260006123e160208301846139f9565b600080600060608486031215613a5c57600080fd5b613a658461359e565b925060208401356001600160401b0380821115613a8157600080fd5b613a8d87838801613777565b93506040860135915080821115613aa357600080fd5b50613ab086828701613777565b9150509250925092565b600060208284031215613acc57600080fd5b81356001600160401b03811115613ae257600080fd5b611741848285016137e8565b60008060008060808587031215613b0457600080fd5b613b0d8561359e565b935060208501356001600160401b0380821115613b2957600080fd5b613b3588838901613777565b94506040870135915080821115613b4b57600080fd5b613b5788838901613777565b93506060870135915080821115613b6d57600080fd5b50613b7a878288016137e8565b91505092959194509250565b600080600060408486031215613b9b57600080fd5b83356001600160401b0380821115613bb257600080fd5b908501906101808288031215613bc757600080fd5b90935060208501359080821115613bdd57600080fd5b818601915086601f830112613bf157600080fd5b813581811115613c0057600080fd5b876020828501011115613c1257600080fd5b6020830194508093505050509250925092565b600080600060608486031215613c3a57600080fd5b83359250613c4a6020850161359e565b9150604084013590509250925092565b60008060408385031215613c6d57600080fd5b613c768361359e565b91506020830135613c8681613904565b809150509250929050565b60008060208385031215613ca457600080fd5b82356001600160401b0380821115613cbb57600080fd5b818501915085601f830112613ccf57600080fd5b813581811115613cde57600080fd5b8660208260051b8501011115613cf357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613d5a57603f19888603018452613d48858351613643565b94509285019290850190600101613d2c565b5092979650505050505050565b60008060008060808587031215613d7d57600080fd5b613d868561359e565b93506020850135925060408501356001600160401b03811115613da857600080fd5b613db4878288016137e8565b949793965093946060013593505050565b60008060408385031215613dd857600080fd5b613de18361359e565b9150613def6020840161359e565b90509250929050565b600080600080600060a08688031215613e1057600080fd5b613e198661359e565b9450613e276020870161359e565b9350604086013592506060860135915060808601356001600160401b03811115613e5057600080fd5b6138f7888289016137e8565b600080600060608486031215613e7157600080fd5b613e7a8461359e565b95602085013595506040909401359392505050565b600181811c90821680613ea357607f821691505b60208210811415613ec457634e487b7160e01b600052602260045260246000fd5b50919050565b60008351613edc818460208801613617565b835190830190613ef0818360208801613617565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613f6757613f67613f37565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613f9157613f91613f6c565b500490565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6000600019821415613fd357613fd3613f37565b5060010190565b6020808252601190820152702ab730b8383937bb32b21031b0b63632b960791b604082015260600190565b602080825260179082015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604082015260600190565b6000821982111561404957614049613f37565b500190565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b6020808252600a90820152691a5b9d985b1a59081a5960b21b604082015260600190565b6000808335601e198436030181126140e857600080fd5b8301803591506001600160401b0382111561410257600080fd5b6020019150368190038213156130c257600080fd5b6000808335601e1984360301811261412e57600080fd5b83016020810192503590506001600160401b0381111561414d57600080fd5b8036038313156130c257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b03811681146135b557600080fd5b6001600160801b03169052565b602081526141c2602082016141bd8461359e565b613682565b60006141d06020840161359e565b6141dd6040840182613682565b50604083013560608301526141f46060840161359e565b6142016080840182613682565b50608083013560a083015261421960a0840184614117565b6101808060c08601526142316101a08601838561415c565b925060c086013560e0860152610100915060e08601358286015261425682870161359e565b915061012061426781870184613682565b614272818801614185565b9250506101406142848187018461419c565b61428f818801614185565b9250506101606142a18187018461419c565b9590950135939094019290925250919050565b6000828210156142c6576142c6613f37565b500390565b6000826142da576142da613f6c565b500690565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561430b57600080fd5b81516123e181613904565b6020808252601290820152710853d5d3915497d3d497d054141493d5915160721b604082015260600190565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252600e908201526d232927a6afad22a927afa0a2222960911b604082015260600190565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b6040815260006143d060408301856139f9565b82810360208401526143e281856139f9565b95945050505050565b6040815260006143fe6040830185613643565b82810360208401526143e28185613643565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b60006020828403121561444857600080fd5b6123e182614185565b6001600160a01b0386811682528516602082015260a06040820181905260009061447d908301866139f9565b828103606084015261448f81866139f9565b905082810360808401526144a38185613643565b98975050505050505050565b6000602082840312156144c157600080fd5b81516123e1816135e4565b600060033d11156130805760046000803e5060005160e01c90565b600060443d10156144f55790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561452457505050505090565b828501915081518181111561453c5750505050505090565b843d87010160208285010111156145565750505050505090565b61456560208286010187613728565b509095945050505050565b6020808252600f908201526e1513d2d15394d7d491529150d51151608a1b604082015260600190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906134fa90830184613643565b600082516145e5818460208701613617565b9190910192915050565b8183823760009101908152919050565b8d81526001600160a01b038d811660208301528c81166040830152606082018c90528a8116608083015260a082018a905260c0820189905260e08201889052610100820187905285166101208201526001600160801b0384166101408201526101a0810161467161016083018561419c565b826101808301529e9d5050505050505050505050505050565b634e487b7160e01b600052602160045260246000fdfe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7e55899982c4a489509295fc8c11ae731d84f40e9f6447ea8b7acc2a3e0e60264736f6c634300080c0033",
    "sourceMap": "838:3988:21:-:0;;;1103:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;1327:13:21;1342:5;1349:7;1358:17;1377:11;413:42:117;516:4;2303:5:17;2310:7;1090:5:83;1083:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1105:16:83;;;;:6;;:16;;;;;:::i;:::-;;1017:111;;1313:52:130;1323:30;1355:9;1313;;;:52;;:::i;:::-;-1:-1:-1;2329:26:17::1;::::0;-1:-1:-1;2341:13:17;2329:11:::1;:26::i;:::-;2365:56;2390:17:::0;-1:-1:-1;;;;;2365:56:17;::::1;:24;:56::i;:::-;2431:29;2455:4;2431:23;:29::i;:::-;-1:-1:-1::0;;2541:22:333;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:333;;2651:117;3633:73;;;3704:25:641;;;3745:18;;;3738:34;;;;-1:-1:-1;3788:18:641;;3781:34;;;;3831:18;;;;3824:34;;;;3700:4:333;3874:19:641;;;3867:61;;;3633:73:333;;;;;;;;;;3676:19:641;;;;3633:73:333;;;3623:84;;;;;;;2896:85;;2991:28;;;;-1:-1:-1;;3029:21:333;;-1:-1:-1;1400:49:21::1;1427:21:::0;1400:26:::1;:49::i;:::-;1103:353:::0;;;;;;838:3988;;2349:783:130;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;2817:4;2763:92;;;2422:34:641;-1:-1:-1;;;;;2492:15:641;;2472:18;;;2465:43;905:42:130;;2763:45;;2357:18:641;;2763:92:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:130;;2958:4;2902:94;;;2422:34:641;-1:-1:-1;;;;;2492:15:641;;2472:18;;;2465:43;905:42:130;;2902:47;;2357:18:641;;2902:94:130;2210:304:641;2603:513:130;3053:48;;-1:-1:-1;;;3053:48:130;;3095:4;3053:48;;;2665:51:641;905:42:130;;3053:33;;2638:18:641;;3053:48:130;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;2929:2:641;3571:25:139;;;2911:21:641;2968:2;2948:18;;;2941:30;-1:-1:-1;;;2987:18:641;;;2980:45;3042:18;;3571:25:139;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3217:25:641;;;3711:46:139;;3205:2:641;3190:18;3711:46:139;;;;;;;3430:334;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;3393:41:641;;;577:33:129;;3381:2:641;3366:18;577:33:129;;;;;;;457:160;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;838:3988:21:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;838:3988:21;;;-1:-1:-1;838:3988:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:641;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:641;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:641:o;1218:987::-;1353:6;1361;1369;1377;1385;1393;1446:3;1434:9;1425:7;1421:23;1417:33;1414:53;;;1463:1;1460;1453:12;1414:53;1486:40;1516:9;1486:40;:::i;:::-;1570:2;1555:18;;1549:25;1476:50;;-1:-1:-1;;;;;;1623:14:641;;;1620:34;;;1650:1;1647;1640:12;1620:34;1673:61;1726:7;1717:6;1706:9;1702:22;1673:61;:::i;:::-;1663:71;;1780:2;1769:9;1765:18;1759:25;1743:41;;1809:2;1799:8;1796:16;1793:36;;;1825:1;1822;1815:12;1793:36;;1848:63;1903:7;1892:8;1881:9;1877:24;1848:63;:::i;:::-;1838:73;;;1930:49;1975:2;1964:9;1960:18;1930:49;:::i;:::-;2022:3;2007:19;;2001:26;1920:59;;-1:-1:-1;;;;;;2056:31:641;;2046:42;;2036:70;;2102:1;2099;2092:12;2036:70;2125:5;-1:-1:-1;2149:50:641;2194:3;2179:19;;2149:50;:::i;:::-;2139:60;;1218:987;;;;;;;;:::o;3939:380::-;4018:1;4014:12;;;;4061;;;4082:61;;4136:4;4128:6;4124:17;4114:27;;4082:61;4189:2;4181:6;4178:14;4158:18;4155:38;4152:161;;;4235:10;4230:3;4226:20;4223:1;4216:31;4270:4;4267:1;4260:15;4298:4;4295:1;4288:15;4152:161;;3939:380;;;:::o;:::-;838:3988:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "838:3988:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:83;;;;;;;;;;-1:-1:-1;645:64:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:641;;;585:2;570:18;645:64:83;;;;;;;;8365:449:17;;;;;;;;;;-1:-1:-1;8365:449:17;;;;;:::i;:::-;;:::i;:::-;;;1184:14:641;;1177:22;1159:41;;1147:2;1132:18;8365:449:17;1019:187:641;418:18:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:136:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2721:359:17:-;;;;;;;;;;-1:-1:-1;2721:359:17;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;:::-;;1277:203:114;;;;;;;;;;-1:-1:-1;1277:203:114;;;;;:::i;:::-;;:::i;1421:347:139:-;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10052:303:17:-;;;;;;;;;;-1:-1:-1;10052:303:17;;;;;:::i;:::-;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;9073:109:17:-;;;;;;;;;;-1:-1:-1;9157:18:17;;9073:109;;806:142:130;;;;;;;;;;;;905:42;806:142;;2008:381:139;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6798:32:641;;;6780:51;;6879:6;6867:19;;;6862:2;6847:18;;6840:47;6753:18;2008:381:139;6608:285:641;1788:482:83;;;;;;;;;;-1:-1:-1;1788:482:83;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;205:31:129:-;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;530:199:117;;;;;;;;;;-1:-1:-1;530:199:117;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;980:96:114:-;;;;;;;;;;-1:-1:-1;1054:8:114;:15;980:96;;7539:564:17;;;;;;;;;;-1:-1:-1;7539:564:17;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;;;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;5530:1054:17:-;;;;;;;;;;-1:-1:-1;5530:1054:17;;;;;:::i;:::-;;:::i;442:20:83:-;;;;;;;;;;;;;:::i;1894:1350:21:-;;;;;;:::i;:::-;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;9415:227:17:-;;;;;;;;;;-1:-1:-1;9415:227:17;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4011:639:17:-;;;;;;;;;;-1:-1:-1;4011:639:17;;;;;:::i;:::-;;:::i;956:293:143:-;;;;;;;;;;-1:-1:-1;956:293:143;;;;;:::i;:::-;;:::i;:::-;;;;14371:14:641;;14364:22;14346:41;;-1:-1:-1;;;;;14423:32:641;;;14418:2;14403:18;;14396:60;14319:18;956:293:143;14178:284:641;2499:144:139;;;;;;;;;;-1:-1:-1;2599:16:139;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;1890:46:17;;;;;;;;;;-1:-1:-1;1890:46:17;;;;;:::i;:::-;;;;;;;;;;;;;;565:34:116;;;;;;;;;;;;;:::i;716:68:83:-;;;;;;;;;;-1:-1:-1;716:68:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;9709:271:17;;;;;;;;;;-1:-1:-1;9709:271:17;;;;;:::i;:::-;;:::i;6869:376::-;;;;;;;;;;-1:-1:-1;6869:376:17;;;;;:::i;:::-;;:::i;8365:449::-;8468:4;-1:-1:-1;;;;;;;;;8503:25:17;;;;:100;;-1:-1:-1;;;;;;;;;;8578:25:17;;;8503:100;:176;;;-1:-1:-1;;;;;;;;;;8654:25:17;;;8503:176;:279;;;-1:-1:-1;;;;;;;8741:41:17;;-1:-1:-1;;;8741:41:17;8503:279;8484:298;8365:449;-1:-1:-1;;8365:449:17:o;418:18:83:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;2721:359:17:-;2815:25;2843:14;;;:4;:14;;;;;2815:42;;2790:13;;2815:25;2843:14;2815:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2899:1;2877:11;2871:25;:29;2867:78;;;2923:11;2721:359;-1:-1:-1;;2721:359:17:o;2867:78::-;2955:22;2980:21;2992:8;2980:11;:21::i;:::-;2955:46;;3042:8;3052:19;:8;:17;:19::i;:::-;3025:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3011:62;;;;2721:359;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;1277:203:114:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:114;;17075:2:641;1407:23:114;;;17057:21:641;17114:2;17094:18;;;17087:30;-1:-1:-1;;;17133:18:641;;;17126:43;17186:18;;1407:23:114;16873:337:641;1360:81:114;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;10052:303:17:-;10275:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;10291:57:17::1;10319:4;10325:2;10329:3;10334:7;10343:4;10291:27;:57::i;:::-;10052:303:::0;;;;;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;18111:2:641;313:84:129;;;18093:21:641;18150:2;18130:18;;;18123:30;18189:34;18169:18;;;18162:62;-1:-1:-1;;;18240:18:641;;;18233:41;18291:19;;313:84:129;17909:407:641;313:84:129;407:37;431:12;407:23;:37::i;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;1788:482:83:-;1939:16;1998:3;:10;1979:8;:15;:29;1971:57;;;;-1:-1:-1;;;1971:57:83;;;;;;;:::i;:::-;2039:30;2086:8;:15;-1:-1:-1;;;;;2072:30:83;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2072:30:83;;2039:63;;2118:9;2113:120;2137:8;:15;2133:1;:19;2113:120;;;2192:9;:22;2202:8;2211:1;2202:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2192:22:83;-1:-1:-1;;;;;2192:22:83;;;;;;;;;;;;:30;2215:3;2219:1;2215:6;;;;;;;;:::i;:::-;;;;;;;2192:30;;;;;;;;;;;;2173:13;2187:1;2173:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2154:3;;;:::i;:::-;;;2113:120;;;-1:-1:-1;2250:13:83;1788:482;-1:-1:-1;;;1788:482:83:o;530:199:117:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:117;;19007:2:641;601:81:117;;;18989:21:641;19046:2;19026:18;;;19019:30;19085:34;19065:18;;;19058:62;-1:-1:-1;;;19136:18:641;;;19129:38;19184:19;;601:81:117;18805:404:641;601:81:117;692:30;702:13;717:4;692:9;:30::i;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;:::-;3087:256;;:::o;7539:564:17:-;7703:10;-1:-1:-1;;;;;7732:16:17;;;;;:52;;-1:-1:-1;;;;;;7752:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;7732:52;7724:82;;;;-1:-1:-1;;;7724:82:17;;;;;;;:::i;:::-;7844:8;:15;7824:9;:16;:35;7816:63;;;;-1:-1:-1;;;7816:63:17;;19762:2:641;7816:63:17;;;19744:21:641;19801:2;19781:18;;;19774:30;-1:-1:-1;;;19820:18:641;;;19813:45;19875:18;;7816:63:17;19560:339:641;7816:63:17;7895:9;7890:157;7914:9;:16;7910:1;:20;7890:157;;;7997:8;8006:1;7997:11;;;;;;;;:::i;:::-;;;;;;;7962:9;:17;7972:6;-1:-1:-1;;;;;7962:17:17;-1:-1:-1;;;;;7962:17:17;;;;;;;;;;;;:31;7980:9;7990:1;7980:12;;;;;;;;:::i;:::-;;;;;;;7962:31;;;;;;;;;;;;:46;;7954:82;;;;-1:-1:-1;;;7954:82:17;;;;;;;:::i;:::-;7932:6;7937:1;7932:6;;:::i;:::-;;;7890:157;;;;8057:39;8068:6;8076:9;8087:8;8057:10;:39::i;:::-;7676:427;7539:564;;;:::o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5530:1054:17:-;5714:10;:8;:10::i;:::-;5706:46;;;;-1:-1:-1;;;5706:46:17;;;;;;;:::i;:::-;5788:1;5770:8;:15;:19;5762:52;;;;-1:-1:-1;;;5762:52:17;;;;;;;:::i;:::-;5852:8;:15;5832:9;:16;:35;5824:64;;;;-1:-1:-1;;;5824:64:17;;21292:2:641;5824:64:17;;;21274:21:641;21331:2;21311:18;;;21304:30;-1:-1:-1;;;21350:18:641;;;21343:46;21406:18;;5824:64:17;21090:340:641;5824:64:17;5899:20;5922:19;9157:18;;;9073:109;5922:19;5899:42;-1:-1:-1;5899:42:17;5951:25;;6033:333;6057:9;:16;6053:1;:20;6033:333;;;-1:-1:-1;;6101:9:17;6111:1;6101:12;;;;;;;;:::i;:::-;;;;;;;:33;6097:259;;;6169:12;6154:9;6164:1;6154:12;;;;;;;;:::i;:::-;;;;;;;;;;:27;6200:17;6216:1;6200:17;;:::i;:::-;;-1:-1:-1;6235:17:17;6251:1;6235:17;;:::i;:::-;;;6097:259;;;6314:12;6299:9;6309:1;6299:12;;;;;;;;:::i;:::-;;;;;;;:27;6291:50;;;;-1:-1:-1;;;6291:50:17;;;;;;;:::i;:::-;6075:6;6080:1;6075:6;;:::i;:::-;;;6033:333;;;-1:-1:-1;6380:16:17;;6376:108;;6412:61;6431:17;6450:12;6464:8;6412:18;:61::i;:::-;;;6376:108;6515:12;6494:18;:33;;;;6537:40;6548:3;6553:9;6564:8;6537:40;;;;;;;;;;;;:10;:40::i;:::-;5696:888;;;5530:1054;;;;:::o;442:20:83:-;;;;;;;:::i;1894:1350:21:-;2058:14;2112:1;2096:4;:13;;;:17;2088:50;;;;-1:-1:-1;;;2088:50:21;;;;;;;:::i;:::-;2149:21;2180:20;2203:19;9157:18:17;;;9073:109;2203:19:21;2180:42;;-1:-1:-1;;2237:4:21;:12;;;:33;2233:252;;;2302:12;2286:28;;2350:1;2328:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;2233:252:21;;-1:-1:-1;2233:252:21;;2405:12;2390:4;:12;;;:27;2382:50;;;;-1:-1:-1;;;2382:50:21;;;;;;;:::i;:::-;2462:4;:12;;;2446:28;;2233:252;2543:33;2559:4;2565:10;;2543:15;:33::i;:::-;2534:42;-1:-1:-1;2587:16:21;2606:7;;;;:4;:7;:::i;:::-;2587:26;-1:-1:-1;2649:97:21;2670:25;;;;;;;;:::i;:::-;2697:13;;;;2712;;;;;;;;:::i;:::-;2727:4;:18;;;2649:20;:97::i;:::-;2835:1;2802:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2802:35:21;;2798:146;;2853:80;2879:13;2894:21;;;;;;;;:::i;:::-;2917:4;:15;;;2853:25;:80::i;:::-;-1:-1:-1;;2977:4:21;:12;;;:33;2973:101;;;3026:37;3039:13;3054:8;;;;:4;:8;:::i;:::-;3026:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3026:12:21;;-1:-1:-1;;;3026:37:21:i;:::-;3108:49;3114:8;3124:13;3139:4;:13;;;3108:49;;;;;;;;;;;;:5;:49::i;:::-;3217:13;3207:8;-1:-1:-1;;;;;3173:64:21;3199:6;-1:-1:-1;;;;;3173:64:21;;3232:4;3173:64;;;;;;:::i;:::-;;;;;;;;2078:1166;;;1894:1350;;;;;:::o;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;:::-;4281:288;;;:::o;9415:227:17:-;9568:8;1812:30:130;1833:8;1812:20;:30::i;:::-;9592:43:17::1;9616:8;9626;9592:23;:43::i;698:319:127:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;4011:639:17:-;4171:10;:8;:10::i;:::-;4163:46;;;;-1:-1:-1;;;4163:46:17;;;;;;;:::i;:::-;4220:21;4251:20;4274:19;9157:18;;;9073:109;4274:19;4251:42;;-1:-1:-1;;4308:8:17;:29;4304:291;;;4369:12;4353:28;;4417:1;4395:18;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;4432:37:17;;-1:-1:-1;4445:12:17;4459:9;4432:12;:37::i;:::-;4304:291;;;4519:12;4508:8;:23;4500:46;;;;-1:-1:-1;;;4500:46:17;;;;;;;:::i;:::-;4576:8;4560:24;;4304:291;4605:38;4611:3;4616:13;4631:7;4605:38;;;;;;;;;;;;:5;:38::i;956:293:143:-;1088:12;1102:14;1141:33;1157:4;1163:10;;1141:15;:33::i;:::-;1202:8;;;;1195:16;;;;:6;:16;;;;;;1132:42;;-1:-1:-1;1195:16:143;;1194:17;:48;;;;;1215:27;1235:6;1215:19;:27::i;:::-;1184:58;;956:293;;;;;;:::o;565:34:116:-;;;;;;;:::i;9709:271:17:-;9907:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;9923:50:17::1;9946:4;9952:2;9956;9960:6;9968:4;9923:22;:50::i;6869:376::-:0;7008:10;-1:-1:-1;;;;;7037:16:17;;;;;:52;;-1:-1:-1;;;;;;7057:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;7037:52;7029:82;;;;-1:-1:-1;;;7029:82:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;7129:17:17;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;7129:38:17;7121:74;;;;-1:-1:-1;;;7121:74:17;;;;;;;:::i;:::-;7206:32;7212:6;7220:8;7230:7;7206:5;:32::i;2153:390:114:-;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:114;;-1:-1:-1;;;2511:25:114;;25732:2:641;2511:25:114;;;25714:21:641;25771:2;25751:18;;;25744:30;-1:-1:-1;;;25790:18:641;;;25783:45;25845:18;;2511:25:114;25530:339:641;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:285:o;11040:115:17:-;11104:4;11141:7;:5;:7::i;:::-;-1:-1:-1;;;;;11127:21:17;:10;-1:-1:-1;;;;;11127:21:17;;11120:28;;11040:115;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;1866:477:130:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:130;;905:42;;2168;;:67;;2219:4;;2226:8;;2168:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2285:8;2266:28;;-1:-1:-1;;;2266:28:130;;;;;;;;:::i;3088:360:83:-;-1:-1:-1;;;;;3300:18:83;;3308:10;3300:18;;:56;;-1:-1:-1;;;;;;3322:22:83;;;;;;:16;:22;;;;;;;;3345:10;3322:34;;;;;;;;;;3300:56;3292:87;;;;-1:-1:-1;;;3292:87:83;;;;;;;:::i;:::-;3389:52;3412:4;3418:2;3422:3;3427:7;3436:4;3389:22;:52::i;:::-;3088:360;;;;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;1159:41:641;;;577:33:129;;1147:2:641;1132:18;577:33:129;;;;;;;457:160;:::o;2349:783:130:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;905:42;;2763:45;;:92;;2817:4;;2824:30;;2763:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:289;2902:94;;-1:-1:-1;;;2902:94:130;;905:42;;2902:47;;:94;;2958:4;;2965:30;;2902:94;;;:::i;2603:513::-;3053:48;;-1:-1:-1;;;3053:48:130;;905:42;;3053:33;;:48;;3095:4;;3053:48;;;:::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;597:25:641;;;3711:46:139;;585:2:641;570:18;3711:46:139;;;;;;;3430:334;;:::o;7284:799:83:-;-1:-1:-1;;;;;7431:18:83;;7423:45;;;;-1:-1:-1;;;7423:45:83;;;;;;;:::i;:::-;7500:7;:14;7486:3;:10;:28;7478:56;;;;-1:-1:-1;;;7478:56:83;;;;;;;:::i;:::-;7545:16;7564:10;7545:29;;7585:66;7606:8;7616:4;7630:1;7634:3;7639:7;7585:66;;;;;;;;;;;;:20;:66::i;:::-;7667:9;7662:344;7686:3;:10;7682:1;:14;7662:344;;;7717:10;7730:3;7734:1;7730:6;;;;;;;;:::i;:::-;;;;;;;7717:19;;7750:14;7767:7;7775:1;7767:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7814:15:83;;7792:19;7814:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7767:10;;-1:-1:-1;7855:21:83;;;;7847:50;;;;-1:-1:-1;;;7847:50:83;;;;;;;:::i;:::-;-1:-1:-1;;;;;7939:15:83;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7961:20;;7939:42;;7698:3;;;;:::i;:::-;;;;7662:344;;;;8059:1;-1:-1:-1;;;;;8021:55:83;8045:4;-1:-1:-1;;;;;8021:55:83;8035:8;-1:-1:-1;;;;;8021:55:83;-1:-1:-1;;;;;;;;;;;8063:3:83;8068:7;8021:55;;;;;;;:::i;:::-;;;;;;;;7413:670;7284:799;;;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;2840:362:114:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:114;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:114;;-1:-1:-1;3159:36:114;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;6018:667:83:-;-1:-1:-1;;;;;6190:16:83;;6182:41;;;;-1:-1:-1;;;6182:41:83;;;;;;;:::i;:::-;6255:7;:14;6241:3;:10;:28;6233:56;;;;-1:-1:-1;;;6233:56:83;;;;;;;:::i;:::-;6319:10;6340:66;6319:10;6300:16;6383:2;6387:3;6392:7;6401:4;6340:20;:66::i;:::-;6422:9;6417:101;6441:3;:10;6437:1;:14;6417:101;;;6497:7;6505:1;6497:10;;;;;;;;:::i;:::-;;;;;;;6472:9;:13;6482:2;-1:-1:-1;;;;;6472:13:83;-1:-1:-1;;;;;6472:13:83;;;;;;;;;;;;:21;6486:3;6490:1;6486:6;;;;;;;;:::i;:::-;;;;;;;6472:21;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;6453:3:83;;-1:-1:-1;6453:3:83;;;:::i;:::-;;;;6417:101;;;;6569:2;-1:-1:-1;;;;;6533:53:83;6565:1;-1:-1:-1;;;;;6533:53:83;6547:8;-1:-1:-1;;;;;6533:53:83;-1:-1:-1;;;;;;;;;;;6573:3:83;6578:7;6533:53;;;;;;;:::i;:::-;;;;;;;;6597:81;6633:8;6651:1;6655:2;6659:3;6664:7;6673:4;6597:35;:81::i;1496:550:143:-;1593:14;1619:12;1661:24;1668:4;1674:10;;1661:6;:24::i;:::-;1641:44;-1:-1:-1;1641:44:143;-1:-1:-1;1641:44:143;1696:35;;;;-1:-1:-1;;;1696:35:143;;29460:2:641;1696:35:143;;;29442:21:641;29499:2;29479:18;;;29472:30;-1:-1:-1;;;29518:18:641;;;29511:45;29573:18;;1696:35:143;29258:339:641;1696:35:143;1793:15;1762:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1762:46:143;;;:94;;;;-1:-1:-1;1831:25:143;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1812:44:143;:15;:44;;1762:94;1741:156;;;;-1:-1:-1;;;1741:156:143;;29995:2:641;1741:156:143;;;29977:21:641;30034:2;30014:18;;;30007:30;-1:-1:-1;;;30053:18:641;;;30046:45;30108:18;;1741:156:143;29793:339:641;1741:156:143;1934:1;1915:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1915:21:143;;;1907:53;;;;-1:-1:-1;;;1907:53:143;;30339:2:641;1907:53:143;;;30321:21:641;30378:2;30358:18;;;30351:30;-1:-1:-1;;;30397:18:641;;;30390:49;30456:18;;1907:53:143;30137:343:641;1907:53:143;1994:1;1978:4;:13;;;:17;1970:35;;;;-1:-1:-1;;;1970:35:143;;30687:2:641;1970:35:143;;;30669:21:641;30726:1;30706:18;;;30699:29;-1:-1:-1;;;30744:18:641;;;30737:35;30789:18;;1970:35:143;30485:328:641;1970:35:143;-1:-1:-1;2023:8:143;;;;;2016:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2016:23:143;2035:4;2016:23;;;-1:-1:-1;1496:550:143;;;-1:-1:-1;1496:550:143:o;3973:851:21:-;4172:19;4168:103;;4215:9;:14;4207:33;;;;-1:-1:-1;;;4207:33:21;;31020:2:641;4207:33:21;;;31002:21:641;31059:1;31039:18;;;31032:29;-1:-1:-1;;;31077:18:641;;;31070:36;31123:18;;4207:33:21;30818:329:641;4207:33:21;4254:7;;4168:103;4281:18;4302:33;4321:14;4302:16;:33;:::i;:::-;4281:54;-1:-1:-1;4346:18:21;-1:-1:-1;;;;;4378:45:21;;397:42:277;4378:45:21;4374:176;;;-1:-1:-1;4455:9:21;:23;;4374:176;;;-1:-1:-1;4525:9:21;:14;4374:176;4567:13;4559:43;;;;-1:-1:-1;;;4559:43:21;;31354:2:641;4559:43:21;;;31336:21:641;31393:2;31373:18;;;31366:30;-1:-1:-1;;;31412:18:641;;;31405:47;31469:18;;4559:43:21;31152:341:641;4559:43:21;4613:21;-1:-1:-1;;;;;4637:35:21;;;:84;;4700:21;4637:84;;;4675:22;:20;:22::i;:::-;4613:108;;4731:86;4768:9;4779:10;4791:13;4806:10;4731:36;:86::i;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;597:25:641;;;4918:49:139;;4886:29;;4983:43;;570:18:641;4983:43:139;;;;;;;;4671:362;;;:::o;5359:117:83:-;5447:13;;;;:4;:13;;;;;;;;:22;;;;;;;;:::i;5482:530::-;-1:-1:-1;;;;;5629:16:83;;5621:41;;;;-1:-1:-1;;;5621:41:83;;;;;;;:::i;:::-;5692:10;5713:102;5692:10;5673:16;5756:2;5760:21;5778:2;5760:17;:21::i;:::-;5783:25;5801:6;5783:17;:25::i;:::-;5810:4;5713:20;:102::i;:::-;-1:-1:-1;;;;;5826:13:83;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5847:6;;5826:13;:27;;5847:6;;5826:27;:::i;:::-;;;;-1:-1:-1;;5868:52:83;;;31672:25:641;;;31728:2;31713:18;;31706:34;;;-1:-1:-1;;;;;5868:52:83;;;;5901:1;;5868:52;;;;-1:-1:-1;;;;;;;;;;;5868:52:83;31645:18:641;5868:52:83;;;;;;;5931:74;5962:8;5980:1;5984:2;5988;5992:6;6000:4;5931:30;:74::i;2457:291::-;2567:10;-1:-1:-1;;;;;2595:17:83;;;;;2587:44;;;;-1:-1:-1;;;2587:44:83;;31953:2:641;2587:44:83;;;31935:21:641;31992:2;31972:18;;;31965:30;-1:-1:-1;;;32011:18:641;;;32004:44;32065:18;;2587:44:83;31751:338:641;2587:44:83;-1:-1:-1;;;;;2641:23:83;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2641:44:83;;;;;;;;;;2700:41;;1159::641;;;2700::83;;1132:18:641;2700:41:83;1019:187:641;6538:198:281;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:281:o;2120:204:143:-;2222:7;2248:69;2306:10;;2248:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2248:49:143;;-1:-1:-1;2275:20:143;;-1:-1:-1;2290:4:143;;-1:-1:-1;2275:14:143;:20::i;:::-;2265:31;;;;;;2248:16;:49::i;:::-;:57;;:69::i;3518:134:21:-;3604:4;3638:7;:5;:7::i;:::-;-1:-1:-1;;;;;3627:18:21;:7;-1:-1:-1;;;;;3627:18:21;;3620:25;;3518:134;;;:::o;2754:328:83:-;-1:-1:-1;;;;;2941:18:83;;2949:10;2941:18;;:56;;-1:-1:-1;;;;;;2963:22:83;;;;;;:16;:22;;;;;;;;2986:10;2963:34;;;;;;;;;;2941:56;2933:87;;;;-1:-1:-1;;;2933:87:83;;;;;;;:::i;:::-;3030:45;3048:4;3054:2;3058;3062:6;3070:4;3030:17;:45::i;6691:587::-;-1:-1:-1;;;;;6813:18:83;;6805:45;;;;-1:-1:-1;;;6805:45:83;;;;;;;:::i;:::-;6880:10;6901:102;6880:10;6932:4;6861:16;6950:21;6968:2;6950:17;:21::i;:::-;6973:25;6991:6;6973:17;:25::i;:::-;6901:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;7036:15:83;;7014:19;7036:15;;;:9;:15;;;;;;;;:19;;;;;;;;;7073:21;;;;7065:50;;;;-1:-1:-1;;;7065:50:83;;;;;;;:::i;:::-;-1:-1:-1;;;;;7149:15:83;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7171:20;;;7149:42;;7217:54;;31672:25:641;;;31713:18;;;31706:34;;;7149:15:83;;7217:54;;;-1:-1:-1;;;;;;;;;;;7217:54:83;31645:18:641;7217:54:83;;;;;;;6795:483;;6691:587;;;:::o;4386:967::-;4606:7;:14;4592:3;:10;:28;4584:56;;;;-1:-1:-1;;;4584:56:83;;;;;;;:::i;:::-;-1:-1:-1;;;;;4658:16:83;;4650:41;;;;-1:-1:-1;;;4650:41:83;;;;;;;:::i;:::-;4721:10;4742:60;4721:10;4773:4;4779:2;4783:3;4788:7;4797:4;4742:20;:60::i;:::-;4818:9;4813:385;4837:3;:10;4833:1;:14;4813:385;;;4868:10;4881:3;4885:1;4881:6;;;;;;;;:::i;:::-;;;;;;;4868:19;;4901:14;4918:7;4926:1;4918:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4965:15:83;;4943:19;4965:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4918:10;;-1:-1:-1;5006:21:83;;;;4998:50;;;;-1:-1:-1;;;4998:50:83;;;;;;;:::i;:::-;-1:-1:-1;;;;;5090:15:83;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5112:20;;;5090:42;;5160:13;;;;;;;;;;;:17;;;;;;;;:27;;5126:6;;5090:15;5160:27;;5126:6;;5160:27;:::i;:::-;;;;;;;;4854:344;;;4849:3;;;;:::i;:::-;;;4813:385;;;;5243:2;-1:-1:-1;;;;;5213:47:83;5237:4;-1:-1:-1;;;;;5213:47:83;5227:8;-1:-1:-1;;;;;5213:47:83;-1:-1:-1;;;;;;;;;;;5247:3:83;5252:7;5213:47;;;;;;;:::i;:::-;;;;;;;;5271:75;5307:8;5317:4;5323:2;5327:3;5332:7;5341:4;5271:35;:75::i;11657:632:17:-;-1:-1:-1;;;;;11969:18:17;;11965:155;;12008:9;12003:107;12027:3;:10;12023:1;:14;12003:107;;;12085:7;12093:1;12085:10;;;;;;;;:::i;:::-;;;;;;;12062:11;:19;12074:3;12078:1;12074:6;;;;;;;;:::i;:::-;;;;;;;12062:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;12039:3:17;;-1:-1:-1;12039:3:17;;:::i;:::-;;;12003:107;;;;11965:155;-1:-1:-1;;;;;12134:16:17;;12130:153;;12171:9;12166:107;12190:3;:10;12186:1;:14;12166:107;;;12248:7;12256:1;12248:10;;;;;;;;:::i;:::-;;;;;;;12225:11;:19;12237:3;12241:1;12237:6;;;;;;;;:::i;:::-;;;;;;;12225:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;12202:3:17;;-1:-1:-1;12202:3:17;;:::i;:::-;;;12166:107;;8982:734:83;-1:-1:-1;;;;;9214:14:83;;;:18;9210:500;;9252:79;;-1:-1:-1;;;9252:79:83;;-1:-1:-1;;;;;9252:43:83;;;;;:79;;9296:8;;9306:4;;9312:3;;9317:7;;9326:4;;9252:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9252:79:83;;;;;;;;-1:-1:-1;;9252:79:83;;;;;;;;;;;;:::i;:::-;;;9248:452;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9612:6;9605:14;;-1:-1:-1;;;9605:14:83;;;;;;;;:::i;9248:452::-;;;9659:26;;-1:-1:-1;;;9659:26:83;;34242:2:641;9659:26:83;;;34224:21:641;34281:2;34261:18;;;34254:30;-1:-1:-1;;;34300:18:641;;;34293:46;34356:18;;9659:26:83;34040:340:641;9248:452:83;-1:-1:-1;;;;;;9410:60:83;;-1:-1:-1;;;9410:60:83;9406:132;;9494:25;;-1:-1:-1;;;9494:25:83;;;;;;;:::i;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;9722:193:83:-;9841:16;;;9855:1;9841:16;;;;;;;;;9788;;9816:22;;9841:16;;;;;;;;;;;;-1:-1:-1;9841:16:83;9816:41;;9878:7;9867:5;9873:1;9867:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9903:5;9722:193;-1:-1:-1;;9722:193:83:o;8309:667::-;-1:-1:-1;;;;;8516:14:83;;;:18;8512:458;;8554:72;;-1:-1:-1;;;8554:72:83;;-1:-1:-1;;;;;8554:38:83;;;;;:72;;8593:8;;8603:4;;8609:2;;8613:6;;8621:4;;8554:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8554:72:83;;;;;;;;-1:-1:-1;;8554:72:83;;;;;;;;;;;;:::i;:::-;;;8550:410;;;;:::i;:::-;-1:-1:-1;;;;;;8675:55:83;;-1:-1:-1;;;8675:55:83;8671:127;;8754:25;;-1:-1:-1;;;8754:25:83;;;;;;;:::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;35497:2:641;7087:69:281;;;35479:21:641;35536:2;35516:18;;;35509:30;35575:34;35555:18;;;35548:62;-1:-1:-1;;;35626:18:641;;;35619:36;35672:19;;7087:69:281;35295:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;2396:600:143:-;2470:12;352:286;2567:7;;;;:4;:7;:::i;:::-;2592:21;;;;;;;;:::i;:::-;2631:15;;;;2664:25;;;;;;;;:::i;:::-;2707:12;;;;2753:8;;;;2707:4;2753:8;:::i;:::-;2737:26;;;;;;;:::i;:::-;;;;;;;;;2781:13;;;;2812:18;;;;2848:13;;;;;;;;:::i;:::-;2879:27;;;;;;;;:::i;:::-;2924:25;;;;;;;;:::i;:::-;2967:4;:8;;;2513:476;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2494:495;;2396:600;;;:::o;4339:165:333:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8686:4:332;8680:11;-1:-1:-1;;;8704:23:332;;8756:4;8747:14;;8740:39;;;;8808:4;8799:14;;8792:34;8862:4;8847:20;;;8486:397;3673:227;3751:7;3771:17;3790:18;3812:27;3823:4;3829:9;3812:10;:27::i;:::-;3770:69;;;;3849:18;3861:5;3849:11;:18::i;3636:744:83:-;-1:-1:-1;;;;;3817:16:83;;3809:41;;;;-1:-1:-1;;;3809:41:83;;;;;;;:::i;:::-;3880:10;3901:96;3880:10;3932:4;3938:2;3942:21;3960:2;3942:17;:21::i;3901:96::-;-1:-1:-1;;;;;4030:15:83;;4008:19;4030:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4067:21;;;;4059:50;;;;-1:-1:-1;;;4059:50:83;;;;;;;:::i;:::-;-1:-1:-1;;;;;4143:15:83;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4165:20;;;4143:42;;4205:13;;;;;;;;;;;:17;;;;;;;;:27;;4179:6;;4143:15;4205:27;;4179:6;;4205:27;:::i;:::-;;;;-1:-1:-1;;4248:46:83;;;31672:25:641;;;31728:2;31713:18;;31706:34;;;-1:-1:-1;;;;;4248:46:83;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4248:46:83;31645:18:641;4248:46:83;;;;;;;4305:68;4336:8;4346:4;4352:2;4356;4360:6;4368:4;4305:30;:68::i;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;37831:2:641;2758:48:277;;;37813:21:641;37870:2;37850:18;;;37843:30;-1:-1:-1;;;37889:18:641;;;37882:58;37957:18;;2758:48:277;37629:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;1137:320:281:-;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;3143:308:333:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:333;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:333;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:333;;;3392:10;3633:73;;;;39873:25:641;;;;3404:12:333;39914:18:641;;;39907:34;3418:15:333;39957:18:641;;;39950:34;3677:13:333;40000:18:641;;;39993:34;3700:4:333;40043:19:641;;;;40036:61;;;;3633:73:333;;;;;;;;;;39845:19:641;;;;3633:73:333;;;3623:84;;;;;;3143:308::o;3215:230::-;3143:308;:::o;2157:730:332:-;2238:7;2247:12;2275:9;:16;2295:2;2275:22;2271:610;;;2611:4;2596:20;;2590:27;2660:4;2645:20;;2639:27;2717:4;2702:20;;2696:27;2313:9;2688:36;2758:25;2769:4;2688:36;2590:27;2639;2758:10;:25::i;:::-;2751:32;;;;;;;;;2271:610;-1:-1:-1;2830:1:332;;-1:-1:-1;2834:35:332;2271:610;2157:730;;;;;:::o;582:511::-;659:20;650:5;:29;;;;;;;;:::i;:::-;;646:441;;;582:511;:::o;646:441::-;755:29;746:5;:38;;;;;;;;:::i;:::-;;742:345;;;800:34;;-1:-1:-1;;;800:34:332;;38320:2:641;800:34:332;;;38302:21:641;38359:2;38339:18;;;38332:30;-1:-1:-1;;;38378:18:641;;;38371:54;38442:18;;800:34:332;38118:348:641;742:345:332;864:35;855:5;:44;;;;;;;;:::i;:::-;;851:236;;;915:41;;-1:-1:-1;;;915:41:332;;38673:2:641;915:41:332;;;38655:21:641;38712:2;38692:18;;;38685:30;38751:33;38731:18;;;38724:61;38802:18;;915:41:332;38471:355:641;851:236:332;986:30;977:5;:39;;;;;;;;:::i;:::-;;973:114;;;1032:44;;-1:-1:-1;;;1032:44:332;;39033:2:641;1032:44:332;;;39015:21:641;39072:2;39052:18;;;39045:30;39111:34;39091:18;;;39084:62;-1:-1:-1;;;39162:18:641;;;39155:32;39204:19;;1032:44:332;38831:398:641;729:205:321;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;39492:15:641;;;1105:68:321;;;39474:34:641;39544:15;;39524:18;;;39517:43;39576:18;;;39569:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;39409:18:641;;1105:68:321;39234:375:641;5081:1494:332;5207:7;;-1:-1:-1;;;;;6118:79:332;;6114:161;;;-1:-1:-1;6229:1:332;;-1:-1:-1;6233:30:332;6213:51;;6114:161;6386:24;;;6369:14;6386:24;;;;;;;;;40335:25:641;;;40408:4;40396:17;;40376:18;;;40369:45;;;;40430:18;;;40423:34;;;40473:18;;;40466:34;;;6386:24:332;;40307:19:641;;6386:24:332;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6386:24:332;;-1:-1:-1;;6386:24:332;;;-1:-1:-1;;;;;;;6424:20:332;;6420:101;;6476:1;6480:29;6460:50;;;;;;;6420:101;6539:6;-1:-1:-1;6547:20:332;;-1:-1:-1;5081:1494:332;;;;;;;;:::o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;40713:2:641;3839:85:321;;;40695:21:641;40752:2;40732:18;;;40725:30;40791:34;40771:18;;;40764:62;-1:-1:-1;;;40842:18:641;;;40835:40;40892:19;;3839:85:321;40511:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;41531:2:641;5194:60:281;;;41513:21:641;41570:2;41550:18;;;41543:30;41609:31;41589:18;;;41582:59;41658:18;;5194:60:281;41329:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:641;82:20;;-1:-1:-1;;;;;131:31:641;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:641:o;633:131::-;-1:-1:-1;;;;;;707:32:641;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:258::-;1283:1;1293:113;1307:6;1304:1;1301:13;1293:113;;;1383:11;;;1377:18;1364:11;;;1357:39;1329:2;1322:10;1293:113;;;1424:6;1421:1;1418:13;1415:48;;;-1:-1:-1;;1459:1:641;1441:16;;1434:27;1211:258::o;1474:::-;1516:3;1554:5;1548:12;1581:6;1576:3;1569:19;1597:63;1653:6;1646:4;1641:3;1637:14;1630:4;1623:5;1619:16;1597:63;:::i;:::-;1714:2;1693:15;-1:-1:-1;;1689:29:641;1680:39;;;;1721:4;1676:50;;1474:258;-1:-1:-1;;1474:258:641:o;1737:220::-;1886:2;1875:9;1868:21;1849:4;1906:45;1947:2;1936:9;1932:18;1924:6;1906:45;:::i;1962:104::-;-1:-1:-1;;;;;2028:31:641;2016:44;;1962:104::o;2071:203::-;-1:-1:-1;;;;;2235:32:641;;;;2217:51;;2205:2;2190:18;;2071:203::o;2279:180::-;2338:6;2391:2;2379:9;2370:7;2366:23;2362:32;2359:52;;;2407:1;2404;2397:12;2359:52;-1:-1:-1;2430:23:641;;2279:180;-1:-1:-1;2279:180:641:o;2464:186::-;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;2615:29;2634:9;2615:29;:::i;2655:248::-;2723:6;2731;2784:2;2772:9;2763:7;2759:23;2755:32;2752:52;;;2800:1;2797;2790:12;2752:52;-1:-1:-1;;2823:23:641;;;2893:2;2878:18;;;2865:32;;-1:-1:-1;2655:248:641:o;2908:274::-;-1:-1:-1;;;;;3100:32:641;;;;3082:51;;3164:2;3149:18;;3142:34;3070:2;3055:18;;2908:274::o;3187:127::-;3248:10;3243:3;3239:20;3236:1;3229:31;3279:4;3276:1;3269:15;3303:4;3300:1;3293:15;3319:249;3429:2;3410:13;;-1:-1:-1;;3406:27:641;3394:40;;-1:-1:-1;;;;;3449:34:641;;3485:22;;;3446:62;3443:88;;;3511:18;;:::i;:::-;3547:2;3540:22;-1:-1:-1;;3319:249:641:o;3573:183::-;3633:4;-1:-1:-1;;;;;3658:6:641;3655:30;3652:56;;;3688:18;;:::i;:::-;-1:-1:-1;3733:1:641;3729:14;3745:4;3725:25;;3573:183::o;3761:724::-;3815:5;3868:3;3861:4;3853:6;3849:17;3845:27;3835:55;;3886:1;3883;3876:12;3835:55;3922:6;3909:20;3948:4;3971:43;4011:2;3971:43;:::i;:::-;4043:2;4037:9;4055:31;4083:2;4075:6;4055:31;:::i;:::-;4121:18;;;4213:1;4209:10;;;;4197:23;;4193:32;;;4155:15;;;;-1:-1:-1;4237:15:641;;;4234:35;;;4265:1;4262;4255:12;4234:35;4301:2;4293:6;4289:15;4313:142;4329:6;4324:3;4321:15;4313:142;;;4395:17;;4383:30;;4433:12;;;;4346;;4313:142;;;-1:-1:-1;4473:6:641;3761:724;-1:-1:-1;;;;;;3761:724:641:o;4490:555::-;4532:5;4585:3;4578:4;4570:6;4566:17;4562:27;4552:55;;4603:1;4600;4593:12;4552:55;4639:6;4626:20;-1:-1:-1;;;;;4661:2:641;4658:26;4655:52;;;4687:18;;:::i;:::-;4736:2;4730:9;4748:67;4803:2;4784:13;;-1:-1:-1;;4780:27:641;4809:4;4776:38;4730:9;4748:67;:::i;:::-;4839:2;4831:6;4824:18;4885:3;4878:4;4873:2;4865:6;4861:15;4857:26;4854:35;4851:55;;;4902:1;4899;4892:12;4851:55;4966:2;4959:4;4951:6;4947:17;4940:4;4932:6;4928:17;4915:54;5013:1;4989:15;;;5006:4;4985:26;4978:37;;;;4993:6;4490:555;-1:-1:-1;;;4490:555:641:o;5050:943::-;5204:6;5212;5220;5228;5236;5289:3;5277:9;5268:7;5264:23;5260:33;5257:53;;;5306:1;5303;5296:12;5257:53;5329:29;5348:9;5329:29;:::i;:::-;5319:39;;5377:38;5411:2;5400:9;5396:18;5377:38;:::i;:::-;5367:48;;5466:2;5455:9;5451:18;5438:32;-1:-1:-1;;;;;5530:2:641;5522:6;5519:14;5516:34;;;5546:1;5543;5536:12;5516:34;5569:61;5622:7;5613:6;5602:9;5598:22;5569:61;:::i;:::-;5559:71;;5683:2;5672:9;5668:18;5655:32;5639:48;;5712:2;5702:8;5699:16;5696:36;;;5728:1;5725;5718:12;5696:36;5751:63;5806:7;5795:8;5784:9;5780:24;5751:63;:::i;:::-;5741:73;;5867:3;5856:9;5852:19;5839:33;5823:49;;5897:2;5887:8;5884:16;5881:36;;;5913:1;5910;5903:12;5881:36;;5936:51;5979:7;5968:8;5957:9;5953:24;5936:51;:::i;:::-;5926:61;;;5050:943;;;;;;;;:::o;5998:118::-;6084:5;6077:13;6070:21;6063:5;6060:32;6050:60;;6106:1;6103;6096:12;6121:241;6177:6;6230:2;6218:9;6209:7;6205:23;6201:32;6198:52;;;6246:1;6243;6236:12;6198:52;6285:9;6272:23;6304:28;6326:5;6304:28;:::i;6898:1208::-;7016:6;7024;7077:2;7065:9;7056:7;7052:23;7048:32;7045:52;;;7093:1;7090;7083:12;7045:52;7133:9;7120:23;-1:-1:-1;;;;;7203:2:641;7195:6;7192:14;7189:34;;;7219:1;7216;7209:12;7189:34;7257:6;7246:9;7242:22;7232:32;;7302:7;7295:4;7291:2;7287:13;7283:27;7273:55;;7324:1;7321;7314:12;7273:55;7360:2;7347:16;7382:4;7405:43;7445:2;7405:43;:::i;:::-;7477:2;7471:9;7489:31;7517:2;7509:6;7489:31;:::i;:::-;7555:18;;;7643:1;7639:10;;;;7631:19;;7627:28;;;7589:15;;;;-1:-1:-1;7667:19:641;;;7664:39;;;7699:1;7696;7689:12;7664:39;7723:11;;;;7743:148;7759:6;7754:3;7751:15;7743:148;;;7825:23;7844:3;7825:23;:::i;:::-;7813:36;;7776:12;;;;7869;;;;7743:148;;;7910:6;-1:-1:-1;;7954:18:641;;7941:32;;-1:-1:-1;;7985:16:641;;;7982:36;;;8014:1;8011;8004:12;7982:36;;8037:63;8092:7;8081:8;8070:9;8066:24;8037:63;:::i;:::-;8027:73;;;6898:1208;;;;;:::o;8111:435::-;8164:3;8202:5;8196:12;8229:6;8224:3;8217:19;8255:4;8284:2;8279:3;8275:12;8268:19;;8321:2;8314:5;8310:14;8342:1;8352:169;8366:6;8363:1;8360:13;8352:169;;;8427:13;;8415:26;;8461:12;;;;8496:15;;;;8388:1;8381:9;8352:169;;;-1:-1:-1;8537:3:641;;8111:435;-1:-1:-1;;;;;8111:435:641:o;8551:261::-;8730:2;8719:9;8712:21;8693:4;8750:56;8802:2;8791:9;8787:18;8779:6;8750:56;:::i;8817:669::-;8944:6;8952;8960;9013:2;9001:9;8992:7;8988:23;8984:32;8981:52;;;9029:1;9026;9019:12;8981:52;9052:29;9071:9;9052:29;:::i;:::-;9042:39;;9132:2;9121:9;9117:18;9104:32;-1:-1:-1;;;;;9196:2:641;9188:6;9185:14;9182:34;;;9212:1;9209;9202:12;9182:34;9235:61;9288:7;9279:6;9268:9;9264:22;9235:61;:::i;:::-;9225:71;;9349:2;9338:9;9334:18;9321:32;9305:48;;9378:2;9368:8;9365:16;9362:36;;;9394:1;9391;9384:12;9362:36;;9417:63;9472:7;9461:8;9450:9;9446:24;9417:63;:::i;:::-;9407:73;;;8817:669;;;;;:::o;9491:321::-;9560:6;9613:2;9601:9;9592:7;9588:23;9584:32;9581:52;;;9629:1;9626;9619:12;9581:52;9669:9;9656:23;-1:-1:-1;;;;;9694:6:641;9691:30;9688:50;;;9734:1;9731;9724:12;9688:50;9757:49;9798:7;9789:6;9778:9;9774:22;9757:49;:::i;9817:869::-;9963:6;9971;9979;9987;10040:3;10028:9;10019:7;10015:23;10011:33;10008:53;;;10057:1;10054;10047:12;10008:53;10080:29;10099:9;10080:29;:::i;:::-;10070:39;;10160:2;10149:9;10145:18;10132:32;-1:-1:-1;;;;;10224:2:641;10216:6;10213:14;10210:34;;;10240:1;10237;10230:12;10210:34;10263:61;10316:7;10307:6;10296:9;10292:22;10263:61;:::i;:::-;10253:71;;10377:2;10366:9;10362:18;10349:32;10333:48;;10406:2;10396:8;10393:16;10390:36;;;10422:1;10419;10412:12;10390:36;10445:63;10500:7;10489:8;10478:9;10474:24;10445:63;:::i;:::-;10435:73;;10561:2;10550:9;10546:18;10533:32;10517:48;;10590:2;10580:8;10577:16;10574:36;;;10606:1;10603;10596:12;10574:36;;10629:51;10672:7;10661:8;10650:9;10646:24;10629:51;:::i;:::-;10619:61;;;9817:869;;;;;;;:::o;10691:861::-;10802:6;10810;10818;10871:2;10859:9;10850:7;10846:23;10842:32;10839:52;;;10887:1;10884;10877:12;10839:52;10927:9;10914:23;-1:-1:-1;;;;;10997:2:641;10989:6;10986:14;10983:34;;;11013:1;11010;11003:12;10983:34;11036:22;;;;11092:3;11074:16;;;11070:26;11067:46;;;11109:1;11106;11099:12;11067:46;11132:2;;-1:-1:-1;11187:2:641;11172:18;;11159:32;;11203:16;;;11200:36;;;11232:1;11229;11222:12;11200:36;11270:8;11259:9;11255:24;11245:34;;11317:7;11310:4;11306:2;11302:13;11298:27;11288:55;;11339:1;11336;11329:12;11288:55;11379:2;11366:16;11405:2;11397:6;11394:14;11391:34;;;11421:1;11418;11411:12;11391:34;11466:7;11461:2;11452:6;11448:2;11444:15;11440:24;11437:37;11434:57;;;11487:1;11484;11477:12;11434:57;11518:2;11514;11510:11;11500:21;;11540:6;11530:16;;;;;10691:861;;;;;:::o;11557:322::-;11634:6;11642;11650;11703:2;11691:9;11682:7;11678:23;11674:32;11671:52;;;11719:1;11716;11709:12;11671:52;11755:9;11742:23;11732:33;;11784:38;11818:2;11807:9;11803:18;11784:38;:::i;:::-;11774:48;;11869:2;11858:9;11854:18;11841:32;11831:42;;11557:322;;;;;:::o;11884:315::-;11949:6;11957;12010:2;11998:9;11989:7;11985:23;11981:32;11978:52;;;12026:1;12023;12016:12;11978:52;12049:29;12068:9;12049:29;:::i;:::-;12039:39;;12128:2;12117:9;12113:18;12100:32;12141:28;12163:5;12141:28;:::i;:::-;12188:5;12178:15;;;11884:315;;;;;:::o;12204:626::-;12301:6;12309;12362:2;12350:9;12341:7;12337:23;12333:32;12330:52;;;12378:1;12375;12368:12;12330:52;12418:9;12405:23;-1:-1:-1;;;;;12488:2:641;12480:6;12477:14;12474:34;;;12504:1;12501;12494:12;12474:34;12542:6;12531:9;12527:22;12517:32;;12587:7;12580:4;12576:2;12572:13;12568:27;12558:55;;12609:1;12606;12599:12;12558:55;12649:2;12636:16;12675:2;12667:6;12664:14;12661:34;;;12691:1;12688;12681:12;12661:34;12744:7;12739:2;12729:6;12726:1;12722:14;12718:2;12714:23;12710:32;12707:45;12704:65;;;12765:1;12762;12755:12;12704:65;12796:2;12788:11;;;;;12818:6;;-1:-1:-1;12204:626:641;;-1:-1:-1;;;;12204:626:641:o;12835:801::-;12995:4;13024:2;13064;13053:9;13049:18;13094:2;13083:9;13076:21;13117:6;13152;13146:13;13183:6;13175;13168:22;13221:2;13210:9;13206:18;13199:25;;13283:2;13273:6;13270:1;13266:14;13255:9;13251:30;13247:39;13233:53;;13321:2;13313:6;13309:15;13342:1;13352:255;13366:6;13363:1;13360:13;13352:255;;;13459:2;13455:7;13443:9;13435:6;13431:22;13427:36;13422:3;13415:49;13487:40;13520:6;13511;13505:13;13487:40;:::i;:::-;13477:50;-1:-1:-1;13585:12:641;;;;13550:15;;;;13388:1;13381:9;13352:255;;;-1:-1:-1;13624:6:641;;12835:801;-1:-1:-1;;;;;;;12835:801:641:o;13641:532::-;13737:6;13745;13753;13761;13814:3;13802:9;13793:7;13789:23;13785:33;13782:53;;;13831:1;13828;13821:12;13782:53;13854:29;13873:9;13854:29;:::i;:::-;13844:39;;13930:2;13919:9;13915:18;13902:32;13892:42;;13985:2;13974:9;13970:18;13957:32;-1:-1:-1;;;;;14004:6:641;14001:30;13998:50;;;14044:1;14041;14034:12;13998:50;14067:49;14108:7;14099:6;14088:9;14084:22;14067:49;:::i;:::-;13641:532;;;;-1:-1:-1;14057:59:641;;14163:2;14148:18;14135:32;;-1:-1:-1;;;13641:532:641:o;14467:260::-;14535:6;14543;14596:2;14584:9;14575:7;14571:23;14567:32;14564:52;;;14612:1;14609;14602:12;14564:52;14635:29;14654:9;14635:29;:::i;:::-;14625:39;;14683:38;14717:2;14706:9;14702:18;14683:38;:::i;:::-;14673:48;;14467:260;;;;;:::o;14732:606::-;14836:6;14844;14852;14860;14868;14921:3;14909:9;14900:7;14896:23;14892:33;14889:53;;;14938:1;14935;14928:12;14889:53;14961:29;14980:9;14961:29;:::i;:::-;14951:39;;15009:38;15043:2;15032:9;15028:18;15009:38;:::i;:::-;14999:48;;15094:2;15083:9;15079:18;15066:32;15056:42;;15145:2;15134:9;15130:18;15117:32;15107:42;;15200:3;15189:9;15185:19;15172:33;-1:-1:-1;;;;;15220:6:641;15217:30;15214:50;;;15260:1;15257;15250:12;15214:50;15283:49;15324:7;15315:6;15304:9;15300:22;15283:49;:::i;15343:322::-;15420:6;15428;15436;15489:2;15477:9;15468:7;15464:23;15460:32;15457:52;;;15505:1;15502;15495:12;15457:52;15528:29;15547:9;15528:29;:::i;:::-;15518:39;15604:2;15589:18;;15576:32;;-1:-1:-1;15655:2:641;15640:18;;;15627:32;;15343:322;-1:-1:-1;;;15343:322:641:o;15670:380::-;15749:1;15745:12;;;;15792;;;15813:61;;15867:4;15859:6;15855:17;15845:27;;15813:61;15920:2;15912:6;15909:14;15889:18;15886:38;15883:161;;;15966:10;15961:3;15957:20;15954:1;15947:31;16001:4;15998:1;15991:15;16029:4;16026:1;16019:15;15883:161;;15670:380;;;:::o;16055:470::-;16234:3;16272:6;16266:13;16288:53;16334:6;16329:3;16322:4;16314:6;16310:17;16288:53;:::i;:::-;16404:13;;16363:16;;;;16426:57;16404:13;16363:16;16460:4;16448:17;;16426:57;:::i;:::-;16499:20;;16055:470;-1:-1:-1;;;;16055:470:641:o;16530:338::-;16732:2;16714:21;;;16771:2;16751:18;;;16744:30;-1:-1:-1;;;16805:2:641;16790:18;;16783:44;16859:2;16844:18;;16530:338::o;17215:127::-;17276:10;17271:3;17267:20;17264:1;17257:31;17307:4;17304:1;17297:15;17331:4;17328:1;17321:15;17347:127;17408:10;17403:3;17399:20;17396:1;17389:31;17439:4;17436:1;17429:15;17463:4;17460:1;17453:15;17479:168;17519:7;17585:1;17581;17577:6;17573:14;17570:1;17567:21;17562:1;17555:9;17548:17;17544:45;17541:71;;;17592:18;;:::i;:::-;-1:-1:-1;17632:9:641;;17479:168::o;17652:127::-;17713:10;17708:3;17704:20;17701:1;17694:31;17744:4;17741:1;17734:15;17768:4;17765:1;17758:15;17784:120;17824:1;17850;17840:35;;17855:18;;:::i;:::-;-1:-1:-1;17889:9:641;;17784:120::o;18321:339::-;18523:2;18505:21;;;18562:2;18542:18;;;18535:30;-1:-1:-1;;;18596:2:641;18581:18;;18574:45;18651:2;18636:18;;18321:339::o;18665:135::-;18704:3;-1:-1:-1;;18725:17:641;;18722:43;;;18745:18;;:::i;:::-;-1:-1:-1;18792:1:641;18781:13;;18665:135::o;19214:341::-;19416:2;19398:21;;;19455:2;19435:18;;;19428:30;-1:-1:-1;;;19489:2:641;19474:18;;19467:47;19546:2;19531:18;;19214:341::o;19904:347::-;20106:2;20088:21;;;20145:2;20125:18;;;20118:30;-1:-1:-1;;;20179:2:641;20164:18;;20157:53;20242:2;20227:18;;19904:347::o;20256:128::-;20296:3;20327:1;20323:6;20320:1;20317:13;20314:39;;;20333:18;;:::i;:::-;-1:-1:-1;20369:9:641;;20256:128::o;20389:347::-;20591:2;20573:21;;;20630:2;20610:18;;;20603:30;-1:-1:-1;;;20664:2:641;20649:18;;20642:53;20727:2;20712:18;;20389:347::o;20741:344::-;20943:2;20925:21;;;20982:2;20962:18;;;20955:30;-1:-1:-1;;;21016:2:641;21001:18;;20994:50;21076:2;21061:18;;20741:344::o;21435:334::-;21637:2;21619:21;;;21676:2;21656:18;;;21649:30;-1:-1:-1;;;21710:2:641;21695:18;;21688:40;21760:2;21745:18;;21435:334::o;21774:522::-;21852:4;21858:6;21918:11;21905:25;22012:2;22008:7;21997:8;21981:14;21977:29;21973:43;21953:18;21949:68;21939:96;;22031:1;22028;22021:12;21939:96;22058:33;;22110:20;;;-1:-1:-1;;;;;;22142:30:641;;22139:50;;;22185:1;22182;22175:12;22139:50;22218:4;22206:17;;-1:-1:-1;22249:14:641;22245:27;;;22235:38;;22232:58;;;22286:1;22283;22276:12;22301:504;22360:5;22367:6;22427:3;22414:17;22513:2;22509:7;22498:8;22482:14;22478:29;22474:43;22454:18;22450:68;22440:96;;22532:1;22529;22522:12;22440:96;22560:33;;22664:4;22651:18;;;-1:-1:-1;22612:21:641;;-1:-1:-1;;;;;;22681:30:641;;22678:50;;;22724:1;22721;22714:12;22678:50;22774:6;22758:14;22754:27;22744:8;22740:42;22737:62;;;22795:1;22792;22785:12;22810:267;22899:6;22894:3;22887:19;22951:6;22944:5;22937:4;22932:3;22928:14;22915:43;-1:-1:-1;23003:1:641;22978:16;;;22996:4;22974:27;;;22967:38;;;;23059:2;23038:15;;;-1:-1:-1;;23034:29:641;23025:39;;;23021:50;;22810:267::o;23082:173::-;23150:20;;-1:-1:-1;;;;;23199:31:641;;23189:42;;23179:70;;23245:1;23242;23235:12;23260:104;-1:-1:-1;;;;;23326:31:641;23314:44;;23260:104::o;23369:1630::-;23560:2;23549:9;23542:21;23572:66;23634:2;23623:9;23619:18;23591:26;23610:6;23591:26;:::i;:::-;23572:66;:::i;:::-;23523:4;23667:35;23698:2;23690:6;23686:15;23667:35;:::i;:::-;23711:52;23759:2;23748:9;23744:18;23730:12;23711:52;:::i;:::-;;23824:2;23816:6;23812:15;23799:29;23794:2;23783:9;23779:18;23772:57;23860:35;23891:2;23883:6;23879:15;23860:35;:::i;:::-;23904:55;23954:3;23943:9;23939:19;23923:14;23904:55;:::i;:::-;;24021:3;24013:6;24009:16;23996:30;23990:3;23979:9;23975:19;23968:59;24072:57;24124:3;24116:6;24112:16;24104:6;24072:57;:::i;:::-;24148:6;24191:2;24185:3;24174:9;24170:19;24163:31;24217:77;24289:3;24278:9;24274:19;24260:12;24244:14;24217:77;:::i;:::-;24203:91;;24356:3;24348:6;24344:16;24331:30;24325:3;24314:9;24310:19;24303:59;24381:3;24371:13;;24445:3;24437:6;24433:16;24420:30;24415:2;24404:9;24400:18;24393:58;24482:35;24513:2;24505:6;24501:15;24482:35;:::i;:::-;24460:57;;24536:3;24548:54;24598:2;24587:9;24583:18;24567:14;24548:54;:::i;:::-;24633:35;24664:2;24656:6;24652:15;24633:35;:::i;:::-;24611:57;;;24687:3;24699:54;24749:2;24738:9;24734:18;24718:14;24699:54;:::i;:::-;24784:35;24815:2;24807:6;24803:15;24784:35;:::i;:::-;24762:57;;;24838:3;24850:54;24900:2;24889:9;24885:18;24869:14;24850:54;:::i;:::-;24953:15;;;;24940:29;24920:18;;;;24913:57;;;;-1:-1:-1;24987:6:641;23369:1630;-1:-1:-1;23369:1630:641:o;25874:125::-;25914:4;25942:1;25939;25936:8;25933:34;;;25947:18;;:::i;:::-;-1:-1:-1;25984:9:641;;25874:125::o;26004:112::-;26036:1;26062;26052:35;;26067:18;;:::i;:::-;-1:-1:-1;26101:9:641;;26004:112::o;26121:304::-;-1:-1:-1;;;;;26351:15:641;;;26333:34;;26403:15;;26398:2;26383:18;;26376:43;26283:2;26268:18;;26121:304::o;26430:245::-;26497:6;26550:2;26538:9;26529:7;26525:23;26521:32;26518:52;;;26566:1;26563;26556:12;26518:52;26598:9;26592:16;26617:28;26639:5;26617:28;:::i;26680:342::-;26882:2;26864:21;;;26921:2;26901:18;;;26894:30;-1:-1:-1;;;26955:2:641;26940:18;;26933:48;27013:2;26998:18;;26680:342::o;27027:339::-;27229:2;27211:21;;;27268:2;27248:18;;;27241:30;-1:-1:-1;;;27302:2:641;27287:18;;27280:45;27357:2;27342:18;;27027:339::o;27371:338::-;27573:2;27555:21;;;27612:2;27592:18;;;27585:30;-1:-1:-1;;;27646:2:641;27631:18;;27624:44;27700:2;27685:18;;27371:338::o;27714:340::-;27916:2;27898:21;;;27955:2;27935:18;;;27928:30;-1:-1:-1;;;27989:2:641;27974:18;;27967:46;28045:2;28030:18;;27714:340::o;28059:465::-;28316:2;28305:9;28298:21;28279:4;28342:56;28394:2;28383:9;28379:18;28371:6;28342:56;:::i;:::-;28446:9;28438:6;28434:22;28429:2;28418:9;28414:18;28407:50;28474:44;28511:6;28503;28474:44;:::i;:::-;28466:52;28059:465;-1:-1:-1;;;;;28059:465:641:o;28529:383::-;28726:2;28715:9;28708:21;28689:4;28752:45;28793:2;28782:9;28778:18;28770:6;28752:45;:::i;:::-;28845:9;28837:6;28833:22;28828:2;28817:9;28813:18;28806:50;28873:33;28899:6;28891;28873:33;:::i;28917:336::-;29119:2;29101:21;;;29158:2;29138:18;;;29131:30;-1:-1:-1;;;29192:2:641;29177:18;;29170:42;29244:2;29229:18;;28917:336::o;29602:186::-;29661:6;29714:2;29702:9;29693:7;29689:23;29685:32;29682:52;;;29730:1;29727;29720:12;29682:52;29753:29;29772:9;29753:29;:::i;32094:827::-;-1:-1:-1;;;;;32491:15:641;;;32473:34;;32543:15;;32538:2;32523:18;;32516:43;32453:3;32590:2;32575:18;;32568:31;;;32416:4;;32622:57;;32659:19;;32651:6;32622:57;:::i;:::-;32727:9;32719:6;32715:22;32710:2;32699:9;32695:18;32688:50;32761:44;32798:6;32790;32761:44;:::i;:::-;32747:58;;32854:9;32846:6;32842:22;32836:3;32825:9;32821:19;32814:51;32882:33;32908:6;32900;32882:33;:::i;:::-;32874:41;32094:827;-1:-1:-1;;;;;;;;32094:827:641:o;32926:249::-;32995:6;33048:2;33036:9;33027:7;33023:23;33019:32;33016:52;;;33064:1;33061;33054:12;33016:52;33096:9;33090:16;33115:30;33139:5;33115:30;:::i;33180:179::-;33215:3;33257:1;33239:16;33236:23;33233:120;;;33303:1;33300;33297;33282:23;-1:-1:-1;33340:1:641;33334:8;33329:3;33325:18;33180:179;:::o;33364:671::-;33403:3;33445:4;33427:16;33424:26;33421:39;;;33364:671;:::o;33421:39::-;33487:2;33481:9;-1:-1:-1;;33552:16:641;33548:25;;33545:1;33481:9;33524:50;33603:4;33597:11;33627:16;-1:-1:-1;;;;;33733:2:641;33726:4;33718:6;33714:17;33711:25;33706:2;33698:6;33695:14;33692:45;33689:58;;;33740:5;;;;;33364:671;:::o;33689:58::-;33777:6;33771:4;33767:17;33756:28;;33813:3;33807:10;33840:2;33832:6;33829:14;33826:27;;;33846:5;;;;;;33364:671;:::o;33826:27::-;33930:2;33911:16;33905:4;33901:27;33897:36;33890:4;33881:6;33876:3;33872:16;33868:27;33865:69;33862:82;;;33937:5;;;;;;33364:671;:::o;33862:82::-;33953:57;34004:4;33995:6;33987;33983:19;33979:30;33973:4;33953:57;:::i;:::-;-1:-1:-1;34026:3:641;;33364:671;-1:-1:-1;;;;;33364:671:641:o;34385:339::-;34587:2;34569:21;;;34626:2;34606:18;;;34599:30;-1:-1:-1;;;34660:2:641;34645:18;;34638:45;34715:2;34700:18;;34385:339::o;34729:561::-;-1:-1:-1;;;;;35026:15:641;;;35008:34;;35078:15;;35073:2;35058:18;;35051:43;35125:2;35110:18;;35103:34;;;35168:2;35153:18;;35146:34;;;34988:3;35211;35196:19;;35189:32;;;34951:4;;35238:46;;35264:19;;35256:6;35238:46;:::i;35702:274::-;35831:3;35869:6;35863:13;35885:53;35931:6;35926:3;35919:4;35911:6;35907:17;35885:53;:::i;:::-;35954:16;;;;;35702:274;-1:-1:-1;;35702:274:641:o;35981:271::-;36164:6;36156;36151:3;36138:33;36120:3;36190:16;;36215:13;;;36190:16;35981:271;-1:-1:-1;35981:271:641:o;36257:1157::-;36743:25;;;-1:-1:-1;;;;;36842:15:641;;;36837:2;36822:18;;36815:43;36894:15;;;36889:2;36874:18;;36867:43;36941:2;36926:18;;36919:34;;;36990:15;;;36984:3;36969:19;;36962:44;36795:3;37022:19;;37015:35;;;37081:3;37066:19;;37059:35;;;37125:3;37110:19;;37103:35;;;37169:3;37154:19;;37147:35;;;37219:15;;37213:3;37198:19;;37191:44;-1:-1:-1;;;;;37272:33:641;;37266:3;37251:19;;37244:62;36730:3;36715:19;;37315:48;37358:3;37343:19;;37334:7;37315:48;:::i;:::-;37400:7;37394:3;37383:9;37379:19;37372:36;36257:1157;;;;;;;;;;;;;;;;:::o;37986:127::-;38047:10;38042:3;38038:20;38035:1;38028:31;38078:4;38075:1;38068:15;38102:4;38099:1;38092:15",
    "linkReferences": {},
    "immutableReferences": {
      "79909": [
        {
          "start": 12218,
          "length": 32
        }
      ],
      "79911": [
        {
          "start": 12176,
          "length": 32
        }
      ],
      "79913": [
        {
          "start": 12134,
          "length": 32
        }
      ],
      "79915": [
        {
          "start": 12301,
          "length": 32
        }
      ],
      "79917": [
        {
          "start": 12338,
          "length": 32
        }
      ],
      "79919": [
        {
          "start": 12259,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "batchMintTo(address,uint256[],uint256[],string)": "949c09f7",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "contractURI()": "e8a3d485",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintTo(address,uint256,string,uint256)": "b03f4528",
    "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "98a6e993",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "b17cd86f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC1155.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchMintTo(address,uint256[],uint256[],string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`\",\"params\":{\"_amounts\":\"The amounts of each NFT to mint.\",\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_to\":\"The recipient of the NFT to mint.\",\"_tokenIds\":\"The tokenIds of the NFTs to mint.\"}},\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"mintTo(address,uint256,string,uint256)\":{\"details\":\"- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.\",\"params\":{\"_amount\":\"The amount of the same NFT to mint.\",\"_to\":\"The recipient of the NFTs to mint.\",\"_tokenId\":\"The tokenId of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFTs minted (if a new NFT is being minted).\"}},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC1155-setApprovalForAll}\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"batchMintTo(address,uint256[],uint256[],string)\":{\"notice\":\"Lets an authorized address mint multiple NEW NFTs at once to a recipient.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"mintTo(address,uint256,string,uint256)\":{\"notice\":\"Lets an authorized address mint NFTs to a recipient.\"},\"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract supports the given interface.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"}},\"notice\":\"BASE:      ERC1155Base      EXTENSION: SignatureMintERC1155  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC1155SignatureMint.sol\":\"ERC1155SignatureMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC1155Base.sol\":{\"keccak256\":\"0x5275bc99a9b33f5e1c3e0171d4e5db1d90bcbdec158c897cd2fc0a2d6e98face\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3746a45be072810833de416ed3d3c0fc8b5710a85fd0a2ac20bc42cb1966ea0c\",\"dweb:/ipfs/QmaHJ2Xy7nEePuDjjLb4W7naUpTVvNz8tvCkHdbXhUShSX\"]},\"contracts/base/ERC1155SignatureMint.sol\":{\"keccak256\":\"0x1c6fdf9e728bc83d3c180e998afbf06f9135baa817dd2bbd8eb78304b74ef7ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9b25dc5e271c91972f4ed3783f30a9affacdca0cc9d95665ca335fc716ed0323\",\"dweb:/ipfs/QmbQrZJU2CxZGpz8URVM4Mzh8zdK8F8ot12VsajWWdv44g\"]},\"contracts/eip/ERC1155.sol\":{\"keccak256\":\"0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b\",\"dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC1155.sol\":{\"keccak256\":\"0xbb8162ec8f8de1f8fbd9c8cb7ca4845f38dcb756d1b828a44660f950d73cdeab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e6c0f19f9d6c7fbbff76a090a0c49294edb0a5a8310838534adf01243e6cecb\",\"dweb:/ipfs/QmdsKfnEiEG1AtuwXeNkxPWwRL5ErHZD14yu1q1tyWzkoj\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC1155.sol\":{\"keccak256\":\"0x5bb7951862f196799db88a77cda1642a25ee5b161295ce15a4b075b29502cf95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f8cf5b9b7b826df549246df2fe9bf9d1e177b41f7200c5d0365d01dcaf27891f\",\"dweb:/ipfs/QmTD3jRWLuxhBJtQPeq4VhkhNpDUUAf1NipnGFQYAXhWZL\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8\",\"dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN\"]},\"contracts/openzeppelin-presets/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC1155.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchMintTo(address,uint256[],uint256[],string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   If `_tokenIds[i] == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                   `tokenIds[i] < nextTokenIdToMint`, then additional supply of an existing NFT is minted.                   The metadata for each new NFT is stored at `baseURI/{tokenID of NFT}`",
            "params": {
              "_amounts": "The amounts of each NFT to mint.",
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_to": "The recipient of the NFT to mint.",
              "_tokenIds": "The tokenIds of the NFTs to mint."
            }
          },
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "mintTo(address,uint256,string,uint256)": {
            "details": "- The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.                   - If `_tokenId == type(uint256).max` a new NFT at tokenId `nextTokenIdToMint` is minted. If the given                     `tokenId < nextTokenIdToMint`, then additional supply of an existing NFT is being minted.",
            "params": {
              "_amount": "The amount of the same NFT to mint.",
              "_to": "The recipient of the NFTs to mint.",
              "_tokenId": "The tokenId of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFTs minted (if a new NFT is being minted)."
            }
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC1155-setApprovalForAll}"
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "batchMintTo(address,uint256[],uint256[],string)": {
            "notice": "Lets an authorized address mint multiple NEW NFTs at once to a recipient."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "mintTo(address,uint256,string,uint256)": {
            "notice": "Lets an authorized address mint NFTs to a recipient."
          },
          "mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "supportsInterface(bytes4)": {
            "notice": "Returns whether this contract supports the given interface."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC1155SignatureMint.sol": "ERC1155SignatureMint"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC1155Base.sol": {
        "keccak256": "0x5275bc99a9b33f5e1c3e0171d4e5db1d90bcbdec158c897cd2fc0a2d6e98face",
        "urls": [
          "bzz-raw://3746a45be072810833de416ed3d3c0fc8b5710a85fd0a2ac20bc42cb1966ea0c",
          "dweb:/ipfs/QmaHJ2Xy7nEePuDjjLb4W7naUpTVvNz8tvCkHdbXhUShSX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC1155SignatureMint.sol": {
        "keccak256": "0x1c6fdf9e728bc83d3c180e998afbf06f9135baa817dd2bbd8eb78304b74ef7ad",
        "urls": [
          "bzz-raw://9b25dc5e271c91972f4ed3783f30a9affacdca0cc9d95665ca335fc716ed0323",
          "dweb:/ipfs/QmbQrZJU2CxZGpz8URVM4Mzh8zdK8F8ot12VsajWWdv44g"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC1155.sol": {
        "keccak256": "0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6",
        "urls": [
          "bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b",
          "dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC1155.sol": {
        "keccak256": "0xbb8162ec8f8de1f8fbd9c8cb7ca4845f38dcb756d1b828a44660f950d73cdeab",
        "urls": [
          "bzz-raw://0e6c0f19f9d6c7fbbff76a090a0c49294edb0a5a8310838534adf01243e6cecb",
          "dweb:/ipfs/QmdsKfnEiEG1AtuwXeNkxPWwRL5ErHZD14yu1q1tyWzkoj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC1155.sol": {
        "keccak256": "0x5bb7951862f196799db88a77cda1642a25ee5b161295ce15a4b075b29502cf95",
        "urls": [
          "bzz-raw://f8cf5b9b7b826df549246df2fe9bf9d1e177b41f7200c5d0365d01dcaf27891f",
          "dweb:/ipfs/QmTD3jRWLuxhBJtQPeq4VhkhNpDUUAf1NipnGFQYAXhWZL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e",
        "urls": [
          "bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8",
          "dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC1155SignatureMint.sol",
    "id": 9068,
    "exportedSymbols": {
      "BatchMintMetadata": [
        34496
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFilterer": [
        34762
      ],
      "ECDSA": [
        79903
      ],
      "EIP712": [
        80057
      ],
      "ERC1155": [
        26755
      ],
      "ERC1155Base": [
        7181
      ],
      "ERC1155SignatureMint": [
        9067
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC165": [
        31146
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "ISignatureMintERC1155": [
        51020
      ],
      "IWETH": [
        55699
      ],
      "Multicall": [
        37872
      ],
      "OperatorFilterer": [
        38148
      ],
      "Ownable": [
        38400
      ],
      "PrimarySale": [
        39318
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureMintERC1155": [
        40325
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4788:21",
    "nodes": [
      {
        "id": 8782,
        "nodeType": "PragmaDirective",
        "src": "39:23:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 8783,
        "nodeType": "ImportDirective",
        "src": "86:27:21",
        "nodes": [],
        "absolutePath": "contracts/base/ERC1155Base.sol",
        "file": "./ERC1155Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9068,
        "sourceUnit": 7182,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8784,
        "nodeType": "ImportDirective",
        "src": "115:38:21",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9068,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8785,
        "nodeType": "ImportDirective",
        "src": "154:47:21",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC1155.sol",
        "file": "../extension/SignatureMintERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9068,
        "sourceUnit": 40326,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8786,
        "nodeType": "ImportDirective",
        "src": "203:40:21",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9068,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9067,
        "nodeType": "ContractDefinition",
        "src": "838:3988:21",
        "nodes": [
          {
            "id": 8820,
            "nodeType": "FunctionDefinition",
            "src": "1103:353:21",
            "nodes": [],
            "body": {
              "id": 8819,
              "nodeType": "Block",
              "src": "1390:66:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8816,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8805,
                        "src": "1427:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8815,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "1400:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8818,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:49:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8808,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8795,
                    "src": "1327:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8809,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8797,
                    "src": "1342:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 8810,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8799,
                    "src": "1349:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 8811,
                    "name": "_royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8801,
                    "src": "1358:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8812,
                    "name": "_royaltyBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8803,
                    "src": "1377:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  }
                ],
                "id": 8813,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8807,
                  "name": "ERC1155Base",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7181,
                  "src": "1315:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1315:74:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 8806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8795,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1132:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1124:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8797,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1169:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1155:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8799,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1198:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1184:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8801,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1223:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1215:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8803,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1258:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1250:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8802,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8805,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1287:21:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8820,
                  "src": "1279:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:200:21"
            },
            "returnParameters": {
              "id": 8814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:0:21"
            },
            "scope": 9067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 8952,
            "nodeType": "FunctionDefinition",
            "src": "1894:1350:21",
            "nodes": [],
            "body": {
              "id": 8951,
              "nodeType": "Block",
              "src": "2078:1166:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8833,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8824,
                            "src": "2096:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                              "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                            }
                          },
                          "id": 8834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50972,
                          "src": "2096:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2112:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2096:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 8837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2115:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 8832,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2088:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:50:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8839,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:50:21"
                },
                {
                  "assignments": [
                    8841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8841,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "2157:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 8951,
                      "src": "2149:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8842,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:21:21"
                },
                {
                  "assignments": [
                    8844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8844,
                      "mutability": "mutable",
                      "name": "nextIdToMint",
                      "nameLocation": "2188:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 8951,
                      "src": "2180:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2180:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8847,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8845,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6935,
                      "src": "2203:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2180:42:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8848,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "2237:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 8849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50968,
                      "src": "2237:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 8852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2258:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 8851,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2258:7:21",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 8850,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2253:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 8853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 8854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2253:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2237:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8878,
                    "nodeType": "Block",
                    "src": "2368:117:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8866,
                                  "name": "_req",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8824,
                                  "src": "2390:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                                    "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                  }
                                },
                                "id": 8867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50968,
                                "src": "2390:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 8868,
                                "name": "nextIdToMint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8844,
                                "src": "2405:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2390:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964206964",
                              "id": 8870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2419:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              },
                              "value": "invalid id"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                                "typeString": "literal_string \"invalid id\""
                              }
                            ],
                            "id": 8865,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2382:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2382:50:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8872,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:50:21"
                      },
                      {
                        "expression": {
                          "id": 8876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8873,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8841,
                            "src": "2446:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 8874,
                              "name": "_req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8824,
                              "src": "2462:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                                "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                              }
                            },
                            "id": 8875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50968,
                            "src": "2462:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2446:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8877,
                        "nodeType": "ExpressionStatement",
                        "src": "2446:28:21"
                      }
                    ]
                  },
                  "id": 8879,
                  "nodeType": "IfStatement",
                  "src": "2233:252:21",
                  "trueBody": {
                    "id": 8864,
                    "nodeType": "Block",
                    "src": "2272:90:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 8858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8856,
                            "name": "tokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8841,
                            "src": "2286:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8857,
                            "name": "nextIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8844,
                            "src": "2302:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2286:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8859,
                        "nodeType": "ExpressionStatement",
                        "src": "2286:28:21"
                      },
                      {
                        "expression": {
                          "id": 8862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8860,
                            "name": "nextTokenIdToMint_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6505,
                            "src": "2328:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 8861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2350:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2328:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8863,
                        "nodeType": "ExpressionStatement",
                        "src": "2328:23:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8880,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8830,
                      "src": "2534:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8882,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "2559:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        {
                          "id": 8883,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8826,
                          "src": "2565:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 8881,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40257,
                        "src": "2543:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$50983_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC1155.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 8884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2543:33:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2534:42:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8886,
                  "nodeType": "ExpressionStatement",
                  "src": "2534:42:21"
                },
                {
                  "assignments": [
                    8888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8888,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2595:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 8951,
                      "src": "2587:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8887,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2587:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8891,
                  "initialValue": {
                    "expression": {
                      "id": 8889,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8824,
                      "src": "2606:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                        "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                      }
                    },
                    "id": 8890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 50960,
                    "src": "2606:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2587:26:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8893,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "2670:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 8894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50966,
                        "src": "2670:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8895,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "2697:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 8896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50972,
                        "src": "2697:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8897,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "2712:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 8898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50976,
                        "src": "2712:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8899,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "2727:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 8900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50974,
                        "src": "2727:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8892,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9066,
                      "src": "2649:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 8901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:97:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8902,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:97:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8903,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "2802:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 8904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "royaltyRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50962,
                      "src": "2802:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2835:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2827:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2827:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2827:10:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2802:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8919,
                  "nodeType": "IfStatement",
                  "src": "2798:146:21",
                  "trueBody": {
                    "id": 8918,
                    "nodeType": "Block",
                    "src": "2839:105:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8911,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8841,
                              "src": "2879:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8912,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8824,
                                "src": "2894:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 8913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50962,
                              "src": "2894:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8914,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8824,
                                "src": "2917:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 8915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50964,
                              "src": "2917:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8910,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39639,
                            "src": "2853:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 8916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:80:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8917,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:80:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8920,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "2977:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      },
                      "id": 8921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50968,
                      "src": "2977:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 8924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2998:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 8923,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2998:7:21",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 8922,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2993:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 8925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2993:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 8926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2993:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2977:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8935,
                  "nodeType": "IfStatement",
                  "src": "2973:101:21",
                  "trueBody": {
                    "id": 8934,
                    "nodeType": "Block",
                    "src": "3012:62:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8929,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8841,
                              "src": "3039:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8930,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8824,
                                "src": "3054:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                                }
                              },
                              "id": 8931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "uri",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50970,
                              "src": "3054:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 8928,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26216,
                            "src": "3026:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 8932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3026:37:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8933,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:37:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8937,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8888,
                        "src": "3114:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8938,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8841,
                        "src": "3124:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8939,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8824,
                          "src": "3139:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                            "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                          }
                        },
                        "id": 8940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50972,
                        "src": "3139:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 8936,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26290,
                      "src": "3108:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 8942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3108:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8943,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:49:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8945,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8830,
                        "src": "3199:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8946,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8888,
                        "src": "3207:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8947,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8841,
                        "src": "3217:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8948,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8824,
                        "src": "3232:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                          "typeString": "struct ISignatureMintERC1155.MintRequest calldata"
                        }
                      ],
                      "id": 8944,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50995,
                      "src": "3173:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$50983_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC1155.MintRequest memory)"
                      }
                    },
                    "id": 8949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:64:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8950,
                  "nodeType": "EmitStatement",
                  "src": "3168:69:21"
                }
              ]
            },
            "baseFunctions": [
              51019
            ],
            "documentation": {
              "id": 8821,
              "nodeType": "StructuredDocumentation",
              "src": "1649:240:21",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "98a6e993",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1903:17:21",
            "overrides": {
              "id": 8828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2032:8:21"
            },
            "parameters": {
              "id": 8827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8824,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1942:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8952,
                  "src": "1921:25:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$50983_calldata_ptr",
                    "typeString": "struct ISignatureMintERC1155.MintRequest"
                  },
                  "typeName": {
                    "id": 8823,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8822,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50983,
                      "src": "1921:11:21"
                    },
                    "referencedDeclaration": 50983,
                    "src": "1921:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$50983_storage_ptr",
                      "typeString": "struct ISignatureMintERC1155.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8826,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1963:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8952,
                  "src": "1948:25:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8825,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:54:21"
            },
            "returnParameters": {
              "id": 8831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8830,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "2066:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8952,
                  "src": "2058:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:16:21"
            },
            "scope": 9067,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 8967,
            "nodeType": "FunctionDefinition",
            "src": "3518:134:21",
            "nodes": [],
            "body": {
              "id": 8966,
              "nodeType": "Block",
              "src": "3610:42:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8961,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8955,
                      "src": "3627:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8962,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3638:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 8963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3638:7:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3627:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8960,
                  "id": 8965,
                  "nodeType": "Return",
                  "src": "3620:25:21"
                }
              ]
            },
            "baseFunctions": [
              40187
            ],
            "documentation": {
              "id": 8953,
              "nodeType": "StructuredDocumentation",
              "src": "3436:77:21",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3527:19:21",
            "overrides": {
              "id": 8957,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3586:8:21"
            },
            "parameters": {
              "id": 8956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8955,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3555:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 8967,
                  "src": "3547:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3546:17:21"
            },
            "returnParameters": {
              "id": 8960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8967,
                  "src": "3604:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3603:6:21"
            },
            "scope": 9067,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 8981,
            "nodeType": "FunctionDefinition",
            "src": "3753:130:21",
            "nodes": [],
            "body": {
              "id": 8980,
              "nodeType": "Block",
              "src": "3838:45:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8974,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3855:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3855:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8976,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3869:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 8977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3869:7:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3855:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8973,
                  "id": 8979,
                  "nodeType": "Return",
                  "src": "3848:28:21"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 8968,
              "nodeType": "StructuredDocumentation",
              "src": "3658:90:21",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3762:27:21",
            "overrides": {
              "id": 8970,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3814:8:21"
            },
            "parameters": {
              "id": 8969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3789:2:21"
            },
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8981,
                  "src": "3832:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:6:21"
            },
            "scope": 9067,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 9066,
            "nodeType": "FunctionDefinition",
            "src": "3973:851:21",
            "nodes": [],
            "body": {
              "id": 9065,
              "nodeType": "Block",
              "src": "4158:666:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8993,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8990,
                      "src": "4172:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4190:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4172:19:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9006,
                  "nodeType": "IfStatement",
                  "src": "4168:103:21",
                  "trueBody": {
                    "id": 9005,
                    "nodeType": "Block",
                    "src": "4193:78:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8997,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4215:3:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 8998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4215:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 8999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4228:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4215:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 9001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4231:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 8996,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4207:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4207:33:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9003,
                        "nodeType": "ExpressionStatement",
                        "src": "4207:33:21"
                      },
                      {
                        "functionReturnParameters": 8992,
                        "id": 9004,
                        "nodeType": "Return",
                        "src": "4254:7:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    9008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9008,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "4289:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 9065,
                      "src": "4281:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4281:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9012,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9009,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8986,
                      "src": "4302:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 9010,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8990,
                      "src": "4321:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4302:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4281:54:21"
                },
                {
                  "assignments": [
                    9014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9014,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "4351:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 9065,
                      "src": "4346:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9013,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4346:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9015,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4346:18:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9016,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8988,
                      "src": "4378:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 9017,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4391:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 9018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "4391:32:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4378:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9035,
                    "nodeType": "Block",
                    "src": "4495:55:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 9033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9028,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9014,
                            "src": "4509:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9029,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4525:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4525:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 9031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4538:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4525:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4509:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9034,
                        "nodeType": "ExpressionStatement",
                        "src": "4509:30:21"
                      }
                    ]
                  },
                  "id": 9036,
                  "nodeType": "IfStatement",
                  "src": "4374:176:21",
                  "trueBody": {
                    "id": 9027,
                    "nodeType": "Block",
                    "src": "4425:64:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 9025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9020,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9014,
                            "src": "4439:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9021,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4455:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4455:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 9023,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9008,
                              "src": "4468:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4455:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4439:39:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9026,
                        "nodeType": "ExpressionStatement",
                        "src": "4439:39:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9038,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9014,
                        "src": "4567:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 9039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4582:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 9037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4559:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9041,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:43:21"
                },
                {
                  "assignments": [
                    9043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9043,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "4621:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 9065,
                      "src": "4613:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9042,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4613:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9054,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9044,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8984,
                        "src": "4637:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4670:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4662:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4662:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4662:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4637:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 9052,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8984,
                      "src": "4700:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4637:84:21",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9050,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "4675:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4675:22:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4613:108:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9058,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8988,
                        "src": "4768:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9059,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4779:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4779:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9061,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9043,
                        "src": "4791:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9062,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9008,
                        "src": "4806:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9055,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4731:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 9057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "4731:36:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 9063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:86:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9064,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:86:21"
                }
              ]
            },
            "documentation": {
              "id": 8982,
              "nodeType": "StructuredDocumentation",
              "src": "3889:79:21",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3982:20:21",
            "parameters": {
              "id": 8991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8984,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "4020:21:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9066,
                  "src": "4012:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8986,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "4059:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9066,
                  "src": "4051:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8988,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4093:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9066,
                  "src": "4085:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8990,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "4120:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 9066,
                  "src": "4112:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4002:138:21"
            },
            "returnParameters": {
              "id": 8992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4158:0:21"
            },
            "scope": 9067,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8788,
              "name": "ERC1155Base",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7181,
              "src": "871:11:21"
            },
            "id": 8789,
            "nodeType": "InheritanceSpecifier",
            "src": "871:11:21"
          },
          {
            "baseName": {
              "id": 8790,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "884:11:21"
            },
            "id": 8791,
            "nodeType": "InheritanceSpecifier",
            "src": "884:11:21"
          },
          {
            "baseName": {
              "id": 8792,
              "name": "SignatureMintERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40325,
              "src": "897:20:21"
            },
            "id": 8793,
            "nodeType": "InheritanceSpecifier",
            "src": "897:20:21"
          }
        ],
        "canonicalName": "ERC1155SignatureMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8787,
          "nodeType": "StructuredDocumentation",
          "src": "245:591:21",
          "text": "      BASE:      ERC1155Base\n      EXTENSION: SignatureMintERC1155\n  The `ERC1155SignatureMint` contract uses the `ERC1155Base` contract, along with the `SignatureMintERC1155` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC1155` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9067,
          40325,
          51020,
          80057,
          39318,
          50580,
          7181,
          34762,
          38148,
          37994,
          50395,
          34496,
          37872,
          50168,
          39646,
          50644,
          31290,
          31146,
          38400,
          50418,
          34723,
          49679,
          26755,
          31081,
          31059
        ],
        "name": "ERC1155SignatureMint",
        "nameLocation": "847:20:21",
        "scope": 9068,
        "usedErrors": [
          38005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 21
}