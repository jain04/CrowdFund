{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTotalMintedInLifetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600854610100900460ff1615808015620000335750600854600160ff909116105b8062000063575062000050306200013d60201b620011f31760201c565b15801562000063575060085460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6008805460ff191660011790558015620000ef576008805461ff0019166101001790555b801562000136576008805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b613743806200015c6000396000f3fe6080604052600436106101c55760003560e01c806391d14854116100f357806391d1485414610465578063938e3d7b1461048557806395d89b41146104a557806398590ef9146104ba578063a1699dc8146104da578063a217fddf14610511578063a32fa5b314610526578063a457c2d714610546578063a9059cbb14610566578063b6f10c7914610586578063c1b606e2146105a6578063ca15c873146105e5578063d45573f614610605578063d547741f1461063c578063dd62ed3e1461065c578063e57553da1461067c578063e8a3d4851461069f578063eac449d9146106b4578063f28083c3146106d457600080fd5b806306fdde03146101ca578063079fe40e146101f5578063095ea7b31461022257806318160ddd146102525780631e7ac4881461027157806323b872dd14610293578063248a9ca3146102b35780632f2ff15d146102e0578063313ce5671461030057806336568abe1461031c578063395093511461033c578063449a52f81461035c578063572b6c051461037c5780635f34ff381461039c5780636f4f2837146103bc57806370a08231146103dc5780637e54523c146104125780638f0fefbb146104325780639010d07c14610445575b600080fd5b3480156101d657600080fd5b506101df6106f4565b6040516101ec9190612ede565b60405180910390f35b34801561020157600080fd5b5061020a610786565b6040516001600160a01b0390911681526020016101ec565b34801561022e57600080fd5b5061024261023d366004612f0d565b610795565b60405190151581526020016101ec565b34801561025e57600080fd5b5060d6545b6040519081526020016101ec565b34801561027d57600080fd5b5061029161028c366004612f0d565b6107b9565b005b34801561029f57600080fd5b506102426102ae366004612f37565b6107f4565b3480156102bf57600080fd5b506102636102ce366004612f73565b60009081526006602052604090205490565b3480156102ec57600080fd5b506102916102fb366004612f8c565b610824565b34801561030c57600080fd5b50604051601281526020016101ec565b34801561032857600080fd5b50610291610337366004612f8c565b6108ba565b34801561034857600080fd5b50610242610357366004612f0d565b610919565b34801561036857600080fd5b50610291610377366004612f0d565b610945565b34801561038857600080fd5b50610242610397366004612fb8565b6109a3565b3480156103a857600080fd5b506102916103b736600461311a565b6109c1565b3480156103c857600080fd5b506102916103d7366004612fb8565b610b8d565b3480156103e857600080fd5b506102636103f7366004612fb8565b6001600160a01b0316600090815260d4602052604090205490565b34801561041e57600080fd5b5061029161042d366004612f0d565b610bbd565b61020a610440366004613209565b610beb565b34801561045157600080fd5b5061020a610460366004613295565b610cf6565b34801561047157600080fd5b50610242610480366004612f8c565b610de5565b34801561049157600080fd5b506102916104a03660046132b7565b610e10565b3480156104b157600080fd5b506101df610e3d565b3480156104c657600080fd5b506102916104d5366004612f0d565b610e4c565b3480156104e657600080fd5b506102636104f5366004612fb8565b6001600160a01b03166000908152610106602052604090205490565b34801561051d57600080fd5b50610263600081565b34801561053257600080fd5b50610242610541366004612f8c565b610e8b565b34801561055257600080fd5b50610242610561366004612f0d565b610ee1565b34801561057257600080fd5b50610242610581366004612f0d565b610f72565b34801561059257600080fd5b506102916105a13660046132eb565b610f8a565b3480156105b257600080fd5b506105c66105c1366004613209565b61100b565b6040805192151583526001600160a01b039091166020830152016101ec565b3480156105f157600080fd5b50610263610600366004612f73565b61104e565b34801561061157600080fd5b5061061a6110d7565b604080516001600160a01b03909316835261ffff9091166020830152016101ec565b34801561064857600080fd5b50610291610657366004612f8c565b6110f4565b34801561066857600080fd5b5061026361067736600461330c565b61110d565b34801561068857600080fd5b50610691611138565b6040516101ec929190613336565b3480156106ab57600080fd5b506101df61114c565b3480156106c057600080fd5b506102916106cf366004612f0d565b6111da565b3480156106e057600080fd5b5060045460ff166040516101ec9190613365565b606060d780546107039061338d565b80601f016020809104026020016040519081016040528092919081815260200182805461072f9061338d565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b5050505050905090565b6001546001600160a01b031690565b6000806107a0611202565b90506107ad818585611211565b60019150505b92915050565b6107c1611335565b6107e65760405162461bcd60e51b81526004016107dd906133c2565b60405180910390fd5b6107f08282611343565b5050565b6000806107ff611202565b905061080c8582856113f3565b61081785858561146d565b60019150505b9392505050565b60008281526006602052604090205461083d9033611634565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16156108b05760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016107dd565b6107f082826116b4565b336001600160a01b0382161461090f5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016107dd565b6107f082826116c8565b600080610924611202565b90506107ad818585610936858961110d565b6109409190613400565b611211565b61095f6000805160206136ce833981519152610480611202565b6109995760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b60448201526064016107dd565b6107f0828261171f565b6001600160a01b03166000908152606d602052604090205460ff1690565b600854610100900460ff16158080156109e15750600854600160ff909116105b80610a0257506109f0306111f3565b158015610a02575060085460ff166001145b610a655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107dd565b6008805460ff191660011790558015610a88576008805461ff0019166101001790555b610a9185611764565b610a9b888861179c565b610aa4886117ea565b610aac61183d565b610ab58661186e565b610ac060008a6116b4565b610ad86000805160206136ce8339815191528a6116b4565b610af060008051602061368e8339815191528a6116b4565b610b086000805160206136ae8339815191528a6116b4565b610b206000805160206136ae8339815191528061194f565b610b3382846001600160801b0316611343565b610b3c84611997565b8015610b82576008805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b610b95611335565b610bb15760405162461bcd60e51b81526004016107dd906133c2565b610bba81611997565b50565b610bc5611335565b610be15760405162461bcd60e51b81526004016107dd906133c2565b6107f082826119e1565b600060026009541415610c405760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107dd565b6002600955610c50848484611a33565b90506000610c616020860186612fb8565b9050610c90610c766040870160208801612fb8565b610c8660a0880160808901612fb8565b8760600135611bcc565b610c9e81866040013561171f565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610ce19190613418565b60405180910390a35060016009559392505050565b60008281526007602052604081205481805b82811015610ddc5760008681526007602090815260408083208484526001019091529020546001600160a01b031615610d855784821415610d735760008681526007602090815260408083209383526001909301905220546001600160a01b031692506107b3915050565b610d7e600183613400565b9150610dca565b610d90866000610de5565b8015610db75750600086815260076020908152604080832083805260020190915290205481145b15610dca57610dc7600183613400565b91505b610dd5600182613400565b9050610d08565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e18611335565b610e345760405162461bcd60e51b81526004016107dd906133c2565b610bba8161186e565b606060d880546107039061338d565b6000610e56611202565b9050826001600160a01b0316816001600160a01b031614610e7c57610e7c8382846113f3565b610e868383611d78565b505050565b600082815260056020908152604080832083805290915281205460ff16610ed8575060008281526005602090815260408083206001600160a01b038516845290915290205460ff166107b3565b50600192915050565b600080610eec611202565b90506000610efa828661110d565b905083811015610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107dd565b610f678286868403611211565b506001949350505050565b600080610f7d611202565b90506107ad81858561146d565b610f92611335565b610fae5760405162461bcd60e51b81526004016107dd906133c2565b6004805482919060ff191660018381811115610fcc57610fcc61334f565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516110009190613365565b60405180910390a150565b600080611019858585611ec0565b60e0860135600090815260d3602052604090205490915060ff16158015611044575061104481611f24565b9150935093915050565b600081815260076020526040812054815b818110156110b25760008481526007602090815260408083208484526001019091529020546001600160a01b0316156110a05761109d600184613400565b92505b6110ab600182613400565b905061105f565b506110be836000610de5565b156110d1576110ce600183613400565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b60008281526006602052604090205461090f9033611634565b6001600160a01b03918216600090815260d56020908152604080832093909416825291909152205490565b6002546003546001600160a01b0390911691565b600080546111599061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546111859061338d565b80156111d25780601f106111a7576101008083540402835291602001916111d2565b820191906000526020600020905b8154815290600101906020018083116111b557829003601f168201915b505050505081565b6000805160206136ae833981519152610e7c8133611634565b6001600160a01b03163b151590565b600061120c611f3e565b905090565b6001600160a01b0383166112735760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107dd565b6001600160a01b0382166112d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107dd565b6001600160a01b03838116600081815260d5602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061120c81610480611202565b6127108111156113875760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107dd565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006113ff848461110d565b90506000198114611467578181101561145a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107dd565b6114678484848403611211565b50505050565b6001600160a01b0383166114d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107dd565b6001600160a01b0382166115335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107dd565b61153e838383611f60565b6001600160a01b038316600090815260d46020526040902054818110156115b65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107dd565b6001600160a01b03808516600090815260d460205260408082208585039055918516815290812080548492906115ed908490613400565b92505081905550826001600160a01b0316846001600160a01b03166000805160206136ee8339815191528460405161162791815260200190565b60405180910390a3611467565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166107f057611672816001600160a01b03166014612062565b61167d836020612062565b60405160200161168e9291906134ae565b60408051601f198184030181529082905262461bcd60e51b82526107dd91600401612ede565b6116be82826121fd565b6107f08282612258565b6116d282826122c5565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6117298282612327565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516113e791815260200190565b600854610100900460ff1661178b5760405162461bcd60e51b81526004016107dd9061351b565b611793612400565b610bba81612427565b600854610100900460ff166117c35760405162461bcd60e51b81526004016107dd9061351b565b81516117d69060d7906020850190612ded565b508051610e869060d8906020840190612ded565b600854610100900460ff166118115760405162461bcd60e51b81526004016107dd9061351b565b61183481604051806040016040528060018152602001603160f81b8152506124b6565b610bba816124e7565b600854610100900460ff166118645760405162461bcd60e51b81526004016107dd9061351b565b61186c61250e565b565b600080805461187c9061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546118a89061338d565b80156118f55780601f106118ca576101008083540402835291602001916118f5565b820191906000526020600020905b8154815290600101906020018083116118d857829003601f168201915b5050855193945061191193600093506020870192509050612ded565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611943929190613566565b60405180910390a15050565b600082815260066020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906119439084908490613336565b600080611a4185858561100b565b9250905080611a845760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b60448201526064016107dd565b42611a9560c0870160a08801613594565b6001600160801b031611158015611ac45750611ab760e0860160c08701613594565b6001600160801b03164211155b611b025760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107dd565b6000611b116020870187612fb8565b6001600160a01b03161415611b5e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b60448201526064016107dd565b6000856040013511611ba55760405162461bcd60e51b815260206004820152601060248201526f4d696e74696e67207a65726f2071747960801b60448201526064016107dd565b5060e090930135600090815260d360205260409020805460ff191660011790555090919050565b80611c08573415610e865760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016107dd565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c385750348114611c3c565b5034155b80611c7d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b60448201526064016107dd565b60006001600160a01b03851615611c945784611c9c565b611c9c610786565b90506000806000611caf60045460ff1690565b90506001816001811115611cc557611cc561334f565b1415611cdc57611cd3611138565b93509150611d0a565b6000611ce66110d7565b9093509050612710611cfc61ffff8316896135af565b611d0691906135ce565b9350505b82861015611d3f5760405162461bcd60e51b815260206004820152600260248201526110a360f11b60448201526064016107dd565b611d5287611d4b611202565b848661253c565b611d6e87611d5e611202565b86611d69878b6135f0565b61253c565b5050505050505050565b6001600160a01b038216611dd85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107dd565b611de482600083611f60565b6001600160a01b038216600090815260d4602052604090205481811015611e585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107dd565b6001600160a01b038316600090815260d460205260408120838303905560d68054849290611e879084906135f0565b90915550506040518281526000906001600160a01b038516906000805160206136ee8339815191529060200160405180910390a3505050565b6000611f1c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f169250611f0a9150889050612586565b8051906020012061267a565b906126c8565b949350505050565b60006107b36000805160206136ce83398151915283610de5565b6000611f49336109a3565b15611f5b575060131936013560601c90565b503390565b611f7960008051602061368e8339815191526000610de5565b158015611f8e57506001600160a01b03831615155b8015611fa257506001600160a01b03821615155b1561202157611fbf60008051602061368e83398151915284610de5565b80611fdd5750611fdd60008051602061368e83398151915283610de5565b6120215760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b60448201526064016107dd565b6001600160a01b038316610e86576001600160a01b0382166000908152610106602052604081208054839290612058908490613400565b9091555050505050565b606060006120718360026135af565b61207c906002613400565b6001600160401b0381111561209357612093612fd3565b6040519080825280601f01601f1916602001820160405280156120bd576020820181803683370190505b509050600360fc1b816000815181106120d8576120d8613607565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061210757612107613607565b60200101906001600160f81b031916908160001a905350600061212b8460026135af565b612136906001613400565b90505b60018111156121ae576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061216a5761216a613607565b1a60f81b82828151811061218057612180613607565b60200101906001600160f81b031916908160001a90535060049490941c936121a78161361d565b9050612139565b50831561081d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107dd565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600760205260408120805491600191906122778385613400565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6122cf8282611634565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b03821661237d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107dd565b61238960008383611f60565b8060d6600082825461239b9190613400565b90915550506001600160a01b038216600090815260d46020526040812080548392906123c8908490613400565b90915550506040518181526001600160a01b038316906000906000805160206136ee8339815191529060200160405180910390a35050565b600854610100900460ff1661186c5760405162461bcd60e51b81526004016107dd9061351b565b600854610100900460ff1661244e5760405162461bcd60e51b81526004016107dd9061351b565b60005b81518110156107f0576001606d600084848151811061247257612472613607565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806124ae81613634565b915050612451565b600854610100900460ff166124dd5760405162461bcd60e51b81526004016107dd9061351b565b6107f082826126ec565b600854610100900460ff16610bba5760405162461bcd60e51b81526004016107dd9061351b565b600854610100900460ff166125355760405162461bcd60e51b81526004016107dd9061351b565b6001600955565b8061254657611467565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561257a57612575828261272d565b611467565b611467848484846127cf565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16125b66020840184612fb8565b6125c66040850160208601612fb8565b604085013560608601356125e060a0880160808901612fb8565b6125f060c0890160a08a01613594565b61260060e08a0160c08b01613594565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006107b3612687612828565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006126d7858561289c565b915091506126e4816128e2565b509392505050565b600854610100900460ff166127135760405162461bcd60e51b81526004016107dd9061351b565b815160209283012081519190920120609f9190915560a055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461277a576040519150601f19603f3d011682016040523d82523d6000602084013e61277f565b606091505b5050905080610e865760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016107dd565b816001600160a01b0316836001600160a01b031614156127ee57611467565b6001600160a01b038316301415612813576125756001600160a01b0385168383612a98565b6114676001600160a01b038516848484612aee565b600061120c7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612857609f5490565b60a080546040805160208082019690965280820194909452606084019190915246608084015230838301528051808403909201825260c0909201909152805191012090565b6000808251604114156128d35760208301516040840151606085015160001a6128c787828585612b26565b945094505050506128db565b506000905060025b9250929050565b60008160048111156128f6576128f661334f565b14156128ff5750565b60018160048111156129135761291361334f565b141561295c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107dd565b60028160048111156129705761297061334f565b14156129be5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107dd565b60038160048111156129d2576129d261334f565b1415612a2b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107dd565b6004816004811115612a3f57612a3f61334f565b1415610bba5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107dd565b610e868363a9059cbb60e01b8484604051602401612ab7929190613336565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c09565b6040516001600160a01b03808516602483015283166044820152606481018290526114679085906323b872dd60e01b90608401612ab7565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612b535750600090506003612c00565b8460ff16601b14158015612b6b57508460ff16601c14155b15612b7c5750600090506004612c00565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612bd0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612bf957600060019250925050612c00565b9150600090505b94509492505050565b6000612c5e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612cdb9092919063ffffffff16565b805190915015610e865780806020019051810190612c7c919061364f565b610e865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107dd565b6060611f1c848460008585612cef856111f3565b612d3b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107dd565b600080866001600160a01b03168587604051612d579190613671565b60006040518083038185875af1925050503d8060008114612d94576040519150601f19603f3d011682016040523d82523d6000602084013e612d99565b606091505b5091509150612da9828286612db4565b979650505050505050565b60608315612dc357508161081d565b825115612dd35782518084602001fd5b8160405162461bcd60e51b81526004016107dd9190612ede565b828054612df99061338d565b90600052602060002090601f016020900481019282612e1b5760008555612e61565b82601f10612e3457805160ff1916838001178555612e61565b82800160010185558215612e61579182015b82811115612e61578251825591602001919060010190612e46565b50612e6d929150612e71565b5090565b5b80821115612e6d5760008155600101612e72565b60005b83811015612ea1578181015183820152602001612e89565b838111156114675750506000910152565b60008151808452612eca816020860160208601612e86565b601f01601f19169290920160200192915050565b60208152600061081d6020830184612eb2565b80356001600160a01b0381168114612f0857600080fd5b919050565b60008060408385031215612f2057600080fd5b612f2983612ef1565b946020939093013593505050565b600080600060608486031215612f4c57600080fd5b612f5584612ef1565b9250612f6360208501612ef1565b9150604084013590509250925092565b600060208284031215612f8557600080fd5b5035919050565b60008060408385031215612f9f57600080fd5b82359150612faf60208401612ef1565b90509250929050565b600060208284031215612fca57600080fd5b61081d82612ef1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561301157613011612fd3565b604052919050565b600082601f83011261302a57600080fd5b81356001600160401b0381111561304357613043612fd3565b613056601f8201601f1916602001612fe9565b81815284602083860101111561306b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261309957600080fd5b813560206001600160401b038211156130b4576130b4612fd3565b8160051b6130c3828201612fe9565b92835284810182019282810190878511156130dd57600080fd5b83870192505b84831015612da9576130f483612ef1565b825291830191908301906130e3565b80356001600160801b0381168114612f0857600080fd5b600080600080600080600080610100898b03121561313757600080fd5b61314089612ef1565b975060208901356001600160401b038082111561315c57600080fd5b6131688c838d01613019565b985060408b013591508082111561317e57600080fd5b61318a8c838d01613019565b975060608b01359150808211156131a057600080fd5b6131ac8c838d01613019565b965060808b01359150808211156131c257600080fd5b506131cf8b828c01613088565b9450506131de60a08a01612ef1565b92506131ec60c08a01613103565b91506131fa60e08a01612ef1565b90509295985092959890939650565b600080600083850361012081121561322057600080fd5b6101008082121561323057600080fd5b85945084013590506001600160401b038082111561324d57600080fd5b818601915086601f83011261326157600080fd5b81358181111561327057600080fd5b87602082850101111561328257600080fd5b6020830194508093505050509250925092565b600080604083850312156132a857600080fd5b50508035926020909101359150565b6000602082840312156132c957600080fd5b81356001600160401b038111156132df57600080fd5b611f1c84828501613019565b6000602082840312156132fd57600080fd5b81356002811061081d57600080fd5b6000806040838503121561331f57600080fd5b61332883612ef1565b9150612faf60208401612ef1565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b602081016002831061338757634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c908216806133a157607f821691505b602082108114156110d157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613413576134136133ea565b500190565b61010081016001600160a01b038061342f85612ef1565b1683528061343f60208601612ef1565b16602084015260408401356040840152606084013560608401528061346660808601612ef1565b1660808401525061347960a08401613103565b6001600160801b0381811660a08501528061349660c08701613103565b1660c0850152505060e083013560e083015292915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516134de816015850160208801612e86565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161350f816026840160208801612e86565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006135796040830185612eb2565b828103602084015261358b8185612eb2565b95945050505050565b6000602082840312156135a657600080fd5b61081d82613103565b60008160001904831182151516156135c9576135c96133ea565b500290565b6000826135eb57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015613602576136026133ea565b500390565b634e487b7160e01b600052603260045260246000fd5b60008161362c5761362c6133ea565b506000190190565b6000600019821415613648576136486133ea565b5060010190565b60006020828403121561366157600080fd5b8151801515811461081d57600080fd5b60008251613683818460208701612e86565b919091019291505056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c5f9ab9bb2cf9ff7f7a2364350d49525d2e4a91f2905045a152701e475d83bcf64736f6c634300080c0033",
    "sourceMap": "1743:8034:383:-:0;;;3088:28;;;;;;;;;-1:-1:-1;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1743:8034:383;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1743:8034:383;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101c55760003560e01c806391d14854116100f357806391d1485414610465578063938e3d7b1461048557806395d89b41146104a557806398590ef9146104ba578063a1699dc8146104da578063a217fddf14610511578063a32fa5b314610526578063a457c2d714610546578063a9059cbb14610566578063b6f10c7914610586578063c1b606e2146105a6578063ca15c873146105e5578063d45573f614610605578063d547741f1461063c578063dd62ed3e1461065c578063e57553da1461067c578063e8a3d4851461069f578063eac449d9146106b4578063f28083c3146106d457600080fd5b806306fdde03146101ca578063079fe40e146101f5578063095ea7b31461022257806318160ddd146102525780631e7ac4881461027157806323b872dd14610293578063248a9ca3146102b35780632f2ff15d146102e0578063313ce5671461030057806336568abe1461031c578063395093511461033c578063449a52f81461035c578063572b6c051461037c5780635f34ff381461039c5780636f4f2837146103bc57806370a08231146103dc5780637e54523c146104125780638f0fefbb146104325780639010d07c14610445575b600080fd5b3480156101d657600080fd5b506101df6106f4565b6040516101ec9190612ede565b60405180910390f35b34801561020157600080fd5b5061020a610786565b6040516001600160a01b0390911681526020016101ec565b34801561022e57600080fd5b5061024261023d366004612f0d565b610795565b60405190151581526020016101ec565b34801561025e57600080fd5b5060d6545b6040519081526020016101ec565b34801561027d57600080fd5b5061029161028c366004612f0d565b6107b9565b005b34801561029f57600080fd5b506102426102ae366004612f37565b6107f4565b3480156102bf57600080fd5b506102636102ce366004612f73565b60009081526006602052604090205490565b3480156102ec57600080fd5b506102916102fb366004612f8c565b610824565b34801561030c57600080fd5b50604051601281526020016101ec565b34801561032857600080fd5b50610291610337366004612f8c565b6108ba565b34801561034857600080fd5b50610242610357366004612f0d565b610919565b34801561036857600080fd5b50610291610377366004612f0d565b610945565b34801561038857600080fd5b50610242610397366004612fb8565b6109a3565b3480156103a857600080fd5b506102916103b736600461311a565b6109c1565b3480156103c857600080fd5b506102916103d7366004612fb8565b610b8d565b3480156103e857600080fd5b506102636103f7366004612fb8565b6001600160a01b0316600090815260d4602052604090205490565b34801561041e57600080fd5b5061029161042d366004612f0d565b610bbd565b61020a610440366004613209565b610beb565b34801561045157600080fd5b5061020a610460366004613295565b610cf6565b34801561047157600080fd5b50610242610480366004612f8c565b610de5565b34801561049157600080fd5b506102916104a03660046132b7565b610e10565b3480156104b157600080fd5b506101df610e3d565b3480156104c657600080fd5b506102916104d5366004612f0d565b610e4c565b3480156104e657600080fd5b506102636104f5366004612fb8565b6001600160a01b03166000908152610106602052604090205490565b34801561051d57600080fd5b50610263600081565b34801561053257600080fd5b50610242610541366004612f8c565b610e8b565b34801561055257600080fd5b50610242610561366004612f0d565b610ee1565b34801561057257600080fd5b50610242610581366004612f0d565b610f72565b34801561059257600080fd5b506102916105a13660046132eb565b610f8a565b3480156105b257600080fd5b506105c66105c1366004613209565b61100b565b6040805192151583526001600160a01b039091166020830152016101ec565b3480156105f157600080fd5b50610263610600366004612f73565b61104e565b34801561061157600080fd5b5061061a6110d7565b604080516001600160a01b03909316835261ffff9091166020830152016101ec565b34801561064857600080fd5b50610291610657366004612f8c565b6110f4565b34801561066857600080fd5b5061026361067736600461330c565b61110d565b34801561068857600080fd5b50610691611138565b6040516101ec929190613336565b3480156106ab57600080fd5b506101df61114c565b3480156106c057600080fd5b506102916106cf366004612f0d565b6111da565b3480156106e057600080fd5b5060045460ff166040516101ec9190613365565b606060d780546107039061338d565b80601f016020809104026020016040519081016040528092919081815260200182805461072f9061338d565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b5050505050905090565b6001546001600160a01b031690565b6000806107a0611202565b90506107ad818585611211565b60019150505b92915050565b6107c1611335565b6107e65760405162461bcd60e51b81526004016107dd906133c2565b60405180910390fd5b6107f08282611343565b5050565b6000806107ff611202565b905061080c8582856113f3565b61081785858561146d565b60019150505b9392505050565b60008281526006602052604090205461083d9033611634565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16156108b05760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016107dd565b6107f082826116b4565b336001600160a01b0382161461090f5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016107dd565b6107f082826116c8565b600080610924611202565b90506107ad818585610936858961110d565b6109409190613400565b611211565b61095f6000805160206136ce833981519152610480611202565b6109995760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b60448201526064016107dd565b6107f0828261171f565b6001600160a01b03166000908152606d602052604090205460ff1690565b600854610100900460ff16158080156109e15750600854600160ff909116105b80610a0257506109f0306111f3565b158015610a02575060085460ff166001145b610a655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107dd565b6008805460ff191660011790558015610a88576008805461ff0019166101001790555b610a9185611764565b610a9b888861179c565b610aa4886117ea565b610aac61183d565b610ab58661186e565b610ac060008a6116b4565b610ad86000805160206136ce8339815191528a6116b4565b610af060008051602061368e8339815191528a6116b4565b610b086000805160206136ae8339815191528a6116b4565b610b206000805160206136ae8339815191528061194f565b610b3382846001600160801b0316611343565b610b3c84611997565b8015610b82576008805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b610b95611335565b610bb15760405162461bcd60e51b81526004016107dd906133c2565b610bba81611997565b50565b610bc5611335565b610be15760405162461bcd60e51b81526004016107dd906133c2565b6107f082826119e1565b600060026009541415610c405760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107dd565b6002600955610c50848484611a33565b90506000610c616020860186612fb8565b9050610c90610c766040870160208801612fb8565b610c8660a0880160808901612fb8565b8760600135611bcc565b610c9e81866040013561171f565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610ce19190613418565b60405180910390a35060016009559392505050565b60008281526007602052604081205481805b82811015610ddc5760008681526007602090815260408083208484526001019091529020546001600160a01b031615610d855784821415610d735760008681526007602090815260408083209383526001909301905220546001600160a01b031692506107b3915050565b610d7e600183613400565b9150610dca565b610d90866000610de5565b8015610db75750600086815260076020908152604080832083805260020190915290205481145b15610dca57610dc7600183613400565b91505b610dd5600182613400565b9050610d08565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610e18611335565b610e345760405162461bcd60e51b81526004016107dd906133c2565b610bba8161186e565b606060d880546107039061338d565b6000610e56611202565b9050826001600160a01b0316816001600160a01b031614610e7c57610e7c8382846113f3565b610e868383611d78565b505050565b600082815260056020908152604080832083805290915281205460ff16610ed8575060008281526005602090815260408083206001600160a01b038516845290915290205460ff166107b3565b50600192915050565b600080610eec611202565b90506000610efa828661110d565b905083811015610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107dd565b610f678286868403611211565b506001949350505050565b600080610f7d611202565b90506107ad81858561146d565b610f92611335565b610fae5760405162461bcd60e51b81526004016107dd906133c2565b6004805482919060ff191660018381811115610fcc57610fcc61334f565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c1816040516110009190613365565b60405180910390a150565b600080611019858585611ec0565b60e0860135600090815260d3602052604090205490915060ff16158015611044575061104481611f24565b9150935093915050565b600081815260076020526040812054815b818110156110b25760008481526007602090815260408083208484526001019091529020546001600160a01b0316156110a05761109d600184613400565b92505b6110ab600182613400565b905061105f565b506110be836000610de5565b156110d1576110ce600183613400565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b60008281526006602052604090205461090f9033611634565b6001600160a01b03918216600090815260d56020908152604080832093909416825291909152205490565b6002546003546001600160a01b0390911691565b600080546111599061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546111859061338d565b80156111d25780601f106111a7576101008083540402835291602001916111d2565b820191906000526020600020905b8154815290600101906020018083116111b557829003601f168201915b505050505081565b6000805160206136ae833981519152610e7c8133611634565b6001600160a01b03163b151590565b600061120c611f3e565b905090565b6001600160a01b0383166112735760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107dd565b6001600160a01b0382166112d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107dd565b6001600160a01b03838116600081815260d5602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061120c81610480611202565b6127108111156113875760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107dd565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b60006113ff848461110d565b90506000198114611467578181101561145a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107dd565b6114678484848403611211565b50505050565b6001600160a01b0383166114d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107dd565b6001600160a01b0382166115335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107dd565b61153e838383611f60565b6001600160a01b038316600090815260d46020526040902054818110156115b65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107dd565b6001600160a01b03808516600090815260d460205260408082208585039055918516815290812080548492906115ed908490613400565b92505081905550826001600160a01b0316846001600160a01b03166000805160206136ee8339815191528460405161162791815260200190565b60405180910390a3611467565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166107f057611672816001600160a01b03166014612062565b61167d836020612062565b60405160200161168e9291906134ae565b60408051601f198184030181529082905262461bcd60e51b82526107dd91600401612ede565b6116be82826121fd565b6107f08282612258565b6116d282826122c5565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6117298282612327565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516113e791815260200190565b600854610100900460ff1661178b5760405162461bcd60e51b81526004016107dd9061351b565b611793612400565b610bba81612427565b600854610100900460ff166117c35760405162461bcd60e51b81526004016107dd9061351b565b81516117d69060d7906020850190612ded565b508051610e869060d8906020840190612ded565b600854610100900460ff166118115760405162461bcd60e51b81526004016107dd9061351b565b61183481604051806040016040528060018152602001603160f81b8152506124b6565b610bba816124e7565b600854610100900460ff166118645760405162461bcd60e51b81526004016107dd9061351b565b61186c61250e565b565b600080805461187c9061338d565b80601f01602080910402602001604051908101604052809291908181526020018280546118a89061338d565b80156118f55780601f106118ca576101008083540402835291602001916118f5565b820191906000526020600020905b8154815290600101906020018083116118d857829003601f168201915b5050855193945061191193600093506020870192509050612ded565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611943929190613566565b60405180910390a15050565b600082815260066020526040808220805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906119439084908490613336565b600080611a4185858561100b565b9250905080611a845760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b60448201526064016107dd565b42611a9560c0870160a08801613594565b6001600160801b031611158015611ac45750611ab760e0860160c08701613594565b6001600160801b03164211155b611b025760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b60448201526064016107dd565b6000611b116020870187612fb8565b6001600160a01b03161415611b5e5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b60448201526064016107dd565b6000856040013511611ba55760405162461bcd60e51b815260206004820152601060248201526f4d696e74696e67207a65726f2071747960801b60448201526064016107dd565b5060e090930135600090815260d360205260409020805460ff191660011790555090919050565b80611c08573415610e865760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016107dd565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c385750348114611c3c565b5034155b80611c7d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b60448201526064016107dd565b60006001600160a01b03851615611c945784611c9c565b611c9c610786565b90506000806000611caf60045460ff1690565b90506001816001811115611cc557611cc561334f565b1415611cdc57611cd3611138565b93509150611d0a565b6000611ce66110d7565b9093509050612710611cfc61ffff8316896135af565b611d0691906135ce565b9350505b82861015611d3f5760405162461bcd60e51b815260206004820152600260248201526110a360f11b60448201526064016107dd565b611d5287611d4b611202565b848661253c565b611d6e87611d5e611202565b86611d69878b6135f0565b61253c565b5050505050505050565b6001600160a01b038216611dd85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107dd565b611de482600083611f60565b6001600160a01b038216600090815260d4602052604090205481811015611e585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107dd565b6001600160a01b038316600090815260d460205260408120838303905560d68054849290611e879084906135f0565b90915550506040518281526000906001600160a01b038516906000805160206136ee8339815191529060200160405180910390a3505050565b6000611f1c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f169250611f0a9150889050612586565b8051906020012061267a565b906126c8565b949350505050565b60006107b36000805160206136ce83398151915283610de5565b6000611f49336109a3565b15611f5b575060131936013560601c90565b503390565b611f7960008051602061368e8339815191526000610de5565b158015611f8e57506001600160a01b03831615155b8015611fa257506001600160a01b03821615155b1561202157611fbf60008051602061368e83398151915284610de5565b80611fdd5750611fdd60008051602061368e83398151915283610de5565b6120215760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b60448201526064016107dd565b6001600160a01b038316610e86576001600160a01b0382166000908152610106602052604081208054839290612058908490613400565b9091555050505050565b606060006120718360026135af565b61207c906002613400565b6001600160401b0381111561209357612093612fd3565b6040519080825280601f01601f1916602001820160405280156120bd576020820181803683370190505b509050600360fc1b816000815181106120d8576120d8613607565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061210757612107613607565b60200101906001600160f81b031916908160001a905350600061212b8460026135af565b612136906001613400565b90505b60018111156121ae576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061216a5761216a613607565b1a60f81b82828151811061218057612180613607565b60200101906001600160f81b031916908160001a90535060049490941c936121a78161361d565b9050612139565b50831561081d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107dd565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600760205260408120805491600191906122778385613400565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6122cf8282611634565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b03821661237d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107dd565b61238960008383611f60565b8060d6600082825461239b9190613400565b90915550506001600160a01b038216600090815260d46020526040812080548392906123c8908490613400565b90915550506040518181526001600160a01b038316906000906000805160206136ee8339815191529060200160405180910390a35050565b600854610100900460ff1661186c5760405162461bcd60e51b81526004016107dd9061351b565b600854610100900460ff1661244e5760405162461bcd60e51b81526004016107dd9061351b565b60005b81518110156107f0576001606d600084848151811061247257612472613607565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806124ae81613634565b915050612451565b600854610100900460ff166124dd5760405162461bcd60e51b81526004016107dd9061351b565b6107f082826126ec565b600854610100900460ff16610bba5760405162461bcd60e51b81526004016107dd9061351b565b600854610100900460ff166125355760405162461bcd60e51b81526004016107dd9061351b565b6001600955565b8061254657611467565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561257a57612575828261272d565b611467565b611467848484846127cf565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e16125b66020840184612fb8565b6125c66040850160208601612fb8565b604085013560608601356125e060a0880160808901612fb8565b6125f060c0890160a08a01613594565b61260060e08a0160c08b01613594565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006107b3612687612828565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006126d7858561289c565b915091506126e4816128e2565b509392505050565b600854610100900460ff166127135760405162461bcd60e51b81526004016107dd9061351b565b815160209283012081519190920120609f9190915560a055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461277a576040519150601f19603f3d011682016040523d82523d6000602084013e61277f565b606091505b5050905080610e865760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016107dd565b816001600160a01b0316836001600160a01b031614156127ee57611467565b6001600160a01b038316301415612813576125756001600160a01b0385168383612a98565b6114676001600160a01b038516848484612aee565b600061120c7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612857609f5490565b60a080546040805160208082019690965280820194909452606084019190915246608084015230838301528051808403909201825260c0909201909152805191012090565b6000808251604114156128d35760208301516040840151606085015160001a6128c787828585612b26565b945094505050506128db565b506000905060025b9250929050565b60008160048111156128f6576128f661334f565b14156128ff5750565b60018160048111156129135761291361334f565b141561295c5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016107dd565b60028160048111156129705761297061334f565b14156129be5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107dd565b60038160048111156129d2576129d261334f565b1415612a2b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107dd565b6004816004811115612a3f57612a3f61334f565b1415610bba5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107dd565b610e868363a9059cbb60e01b8484604051602401612ab7929190613336565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c09565b6040516001600160a01b03808516602483015283166044820152606481018290526114679085906323b872dd60e01b90608401612ab7565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115612b535750600090506003612c00565b8460ff16601b14158015612b6b57508460ff16601c14155b15612b7c5750600090506004612c00565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612bd0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612bf957600060019250925050612c00565b9150600090505b94509492505050565b6000612c5e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612cdb9092919063ffffffff16565b805190915015610e865780806020019051810190612c7c919061364f565b610e865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107dd565b6060611f1c848460008585612cef856111f3565b612d3b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107dd565b600080866001600160a01b03168587604051612d579190613671565b60006040518083038185875af1925050503d8060008114612d94576040519150601f19603f3d011682016040523d82523d6000602084013e612d99565b606091505b5091509150612da9828286612db4565b979650505050505050565b60608315612dc357508161081d565b825115612dd35782518084602001fd5b8160405162461bcd60e51b81526004016107dd9190612ede565b828054612df99061338d565b90600052602060002090601f016020900481019282612e1b5760008555612e61565b82601f10612e3457805160ff1916838001178555612e61565b82800160010185558215612e61579182015b82811115612e61578251825591602001919060010190612e46565b50612e6d929150612e71565b5090565b5b80821115612e6d5760008155600101612e72565b60005b83811015612ea1578181015183820152602001612e89565b838111156114675750506000910152565b60008151808452612eca816020860160208601612e86565b601f01601f19169290920160200192915050565b60208152600061081d6020830184612eb2565b80356001600160a01b0381168114612f0857600080fd5b919050565b60008060408385031215612f2057600080fd5b612f2983612ef1565b946020939093013593505050565b600080600060608486031215612f4c57600080fd5b612f5584612ef1565b9250612f6360208501612ef1565b9150604084013590509250925092565b600060208284031215612f8557600080fd5b5035919050565b60008060408385031215612f9f57600080fd5b82359150612faf60208401612ef1565b90509250929050565b600060208284031215612fca57600080fd5b61081d82612ef1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561301157613011612fd3565b604052919050565b600082601f83011261302a57600080fd5b81356001600160401b0381111561304357613043612fd3565b613056601f8201601f1916602001612fe9565b81815284602083860101111561306b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261309957600080fd5b813560206001600160401b038211156130b4576130b4612fd3565b8160051b6130c3828201612fe9565b92835284810182019282810190878511156130dd57600080fd5b83870192505b84831015612da9576130f483612ef1565b825291830191908301906130e3565b80356001600160801b0381168114612f0857600080fd5b600080600080600080600080610100898b03121561313757600080fd5b61314089612ef1565b975060208901356001600160401b038082111561315c57600080fd5b6131688c838d01613019565b985060408b013591508082111561317e57600080fd5b61318a8c838d01613019565b975060608b01359150808211156131a057600080fd5b6131ac8c838d01613019565b965060808b01359150808211156131c257600080fd5b506131cf8b828c01613088565b9450506131de60a08a01612ef1565b92506131ec60c08a01613103565b91506131fa60e08a01612ef1565b90509295985092959890939650565b600080600083850361012081121561322057600080fd5b6101008082121561323057600080fd5b85945084013590506001600160401b038082111561324d57600080fd5b818601915086601f83011261326157600080fd5b81358181111561327057600080fd5b87602082850101111561328257600080fd5b6020830194508093505050509250925092565b600080604083850312156132a857600080fd5b50508035926020909101359150565b6000602082840312156132c957600080fd5b81356001600160401b038111156132df57600080fd5b611f1c84828501613019565b6000602082840312156132fd57600080fd5b81356002811061081d57600080fd5b6000806040838503121561331f57600080fd5b61332883612ef1565b9150612faf60208401612ef1565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b602081016002831061338757634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c908216806133a157607f821691505b602082108114156110d157634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613413576134136133ea565b500190565b61010081016001600160a01b038061342f85612ef1565b1683528061343f60208601612ef1565b16602084015260408401356040840152606084013560608401528061346660808601612ef1565b1660808401525061347960a08401613103565b6001600160801b0381811660a08501528061349660c08701613103565b1660c0850152505060e083013560e083015292915050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b8152600083516134de816015850160208801612e86565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161350f816026840160208801612e86565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006135796040830185612eb2565b828103602084015261358b8185612eb2565b95945050505050565b6000602082840312156135a657600080fd5b61081d82613103565b60008160001904831182151516156135c9576135c96133ea565b500290565b6000826135eb57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015613602576136026133ea565b500390565b634e487b7160e01b600052603260045260246000fd5b60008161362c5761362c6133ea565b506000190190565b6000600019821415613648576136486133ea565b5060010190565b60006020828403121561366157600080fd5b8151801515811461081d57600080fd5b60008251613683818460208701612e86565b919091019291505056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c5f9ab9bb2cf9ff7f7a2364350d49525d2e4a91f2905045a152701e475d83bcf64736f6c634300080c0033",
    "sourceMap": "1743:8034:383:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:447;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:136;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:641;;;911:51;;899:2;884:18;676:104:136;765:203:641;4770:197:447;;;;;;;;;;-1:-1:-1;4770:197:447;;;;;:::i;:::-;;:::i;:::-;;;1575:14:641;;1568:22;1550:41;;1538:2;1523:18;4770:197:447;1410:187:641;3581:106:447;;;;;;;;;;-1:-1:-1;3668:12:447;;3581:106;;;1748:25:641;;;1736:2;1721:18;3581:106:447;1602:177:641;2043:269:135;;;;;;;;;;-1:-1:-1;2043:269:135;;;;;:::i;:::-;;:::i;:::-;;5529:286:447;;;;;;;;;;-1:-1:-1;5529:286:447;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;3255:271;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;3430:91:447:-;;;;;;;;;;-1:-1:-1;3430:91:447;;3512:2;2885:36:641;;2873:2;2858:18;3430:91:447;2743:184:641;4466:217:133;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;6210:234:447:-;;;;;;;;;;-1:-1:-1;6210:234:447;;;;;:::i;:::-;;:::i;5398:163:383:-;;;;;;;;;;-1:-1:-1;5398:163:383;;;;;:::i;:::-;;:::i;918:134:304:-;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;3181:998:383:-;;;;;;;;;;-1:-1:-1;3181:998:383;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;3745:125:447:-;;;;;;;;;;-1:-1:-1;3745:125:447;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:447;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2821:255:135;;;;;;;;;;-1:-1:-1;2821:255:135;;;;;:::i;:::-;;:::i;4869:459:383:-;;;;;;:::i;:::-;;:::i;1643:633:134:-;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2704:102:447:-;;;;;;;;;;;;;:::i;5628:240:383:-;;;;;;;;;;-1:-1:-1;5628:240:383;;;;;:::i;:::-;;:::i;4455:133::-;;;;;;;;;;-1:-1:-1;4455:133:383;;;;;:::i;:::-;-1:-1:-1;;;;;4554:27:383;4528:7;4554:27;;;:19;:27;;;;;;;4455:133;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;6931:427:447:-;;;;;;;;;;-1:-1:-1;6931:427:447;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:447;;;;;:::i;:::-;;:::i;3455:243:135:-;;;;;;;;;;-1:-1:-1;3455:243:135;;;;;:::i;:::-;;:::i;1252:293:146:-;;;;;;;;;;-1:-1:-1;1252:293:146;;;;;:::i;:::-;;:::i;:::-;;;;8072:14:641;;8065:22;8047:41;;-1:-1:-1;;;;;8124:32:641;;;8119:2;8104:18;;8097:60;8020:18;1252:293:146;7879:284:641;2683:398:134;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;1058:147:135:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;8358:32:641;;;8340:51;;8439:6;8427:19;;;8422:2;8407:18;;8400:47;8313:18;1058:147:135;8168:285:641;3897:171:133;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;4313:149:447:-;;;;;;;;;;-1:-1:-1;4313:149:447;;;;;:::i;:::-;;:::i;1268:136:135:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;5998:127:383:-;;;;;;;;;;-1:-1:-1;5998:127:383;;;;;:::i;:::-;;:::i;1467:107:135:-;;;;;;;;;;-1:-1:-1;1552:15:135;;;;1467:107;;;;;;:::i;2493:98:447:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;4770:197:447:-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;2043:269:135:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:135;;;;;;;:::i;:::-;;;;;;;;2155:80;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;5529:286:447:-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;10418:2:641;3435:39:133;;;10400:21:641;10457:2;10437:18;;;10430:30;10496:31;10476:18;;;10469:59;10545:18;;3435:39:133;10216:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;10776:2:641;4594:36:133;;;10758:21:641;10815:2;10795:18;;;10788:30;-1:-1:-1;;;10834:18:641;;;10827:56;10900:18;;4594:36:133;10574:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;6210:234:447:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;5398:163:383:-;5475:34;-1:-1:-1;;;;;;;;;;;5496:12:383;:10;:12::i;5475:34::-;5467:58;;;;-1:-1:-1;;;5467:58:383;;11396:2:641;5467:58:383;;;11378:21:641;11435:2;11415:18;;;11408:30;-1:-1:-1;;;11454:18:641;;;11447:41;11505:18;;5467:58:383;11194:335:641;5467:58:383;5535:19;5543:2;5547:6;5535:7;:19::i;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3181:998:383:-;3134:13:436;;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;11736:2:641;3157:201:436;;;11718:21:641;11775:2;11755:18;;;11748:30;11814:34;11794:18;;;11787:62;-1:-1:-1;;;11865:18:641;;;11858:44;11919:19;;3157:201:436;11534:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3589:41:383::1;3611:18;3589:21;:41::i;:::-;3640:38;3663:5;3670:7;3640:22;:38::i;:::-;3688:32;3714:5;3688:25;:32::i;:::-;3730:24;:22;:24::i;:::-;3765:31;3783:12;3765:17;:31::i;:::-;3807:45;787:4:133;3838:13:383::0;3807:10:::1;:45::i;:::-;3862:38;-1:-1:-1::0;;;;;;;;;;;3886:13:383::1;3862:10;:38::i;:::-;3910:40;-1:-1:-1::0;;;;;;;;;;;3936:13:383::1;3910:10;:40::i;:::-;3961:38;-1:-1:-1::0;;;;;;;;;;;3985:13:383::1;3961:10;:38::i;:::-;4009:39;-1:-1:-1::0;;;;;;;;;;;2615:24:383;4009:13:::1;:39::i;:::-;4059:61;4081:21;4104:15;-1:-1:-1::0;;;;;4059:61:383::1;:21;:61::i;:::-;4130:42;4157:14;4130:26;:42::i;:::-;3483:14:436::0;3479:99;;;3513:13;:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;2885:36:641;;3553:14:436;;2873:2:641;2858:18;3553:14:436;;;;;;;3479:99;3101:483;3181:998:383;;;;;;;;:::o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;:::-;1189:228;:::o;2821:255:135:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:135;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;4869:459:383:-;5021:14;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;12350:2:641;2561:63:438;;;12332:21:641;12389:2;12369:18;;;12362:30;12428:33;12408:18;;;12401:61;12479:18;;2561:63:438;12148:355:641;2561:63:438;1815:1;2699:7;:18;5060:33:383::1;5076:4:::0;5082:10;;5060:15:::1;:33::i;:::-;5051:42:::0;-1:-1:-1;5103:16:383::1;5122:7;;::::0;::::1;:4:::0;:7:::1;:::i;:::-;5103:26:::0;-1:-1:-1;5140:74:383::1;5161:25;::::0;;;::::1;::::0;::::1;;:::i;:::-;5188:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;5203:4;:10;;;5140:20;:74::i;:::-;5224:32;5232:8;5242:4;:13;;;5224:7;:32::i;:::-;5306:8;-1:-1:-1::0;;;;;5272:49:383::1;5298:6;-1:-1:-1::0;;;;;5272:49:383::1;;5316:4;5272:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;1772:1:438;2872:7;:22;4869:459:383;;-1:-1:-1;;;4869:459:383:o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2704:102:447:-;2760:13;2792:7;2785:14;;;;;:::i;5628:240:383:-;5704:14;5721:12;:10;:12::i;:::-;5704:29;;5757:6;-1:-1:-1;;;;;5747:16:383;:6;-1:-1:-1;;;;;5747:16:383;;5743:87;;5779:40;5795:6;5803;5811:7;5779:15;:40::i;:::-;5839:22;5845:6;5853:7;5839:5;:22::i;:::-;5694:174;5628:240;;:::o;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;6931:427:447:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:447;;13651:2:641;7140:85:447;;;13633:21:641;13690:2;13670:18;;;13663:30;13729:34;13709:18;;;13702:62;-1:-1:-1;;;13780:18:641;;;13773:35;13825:19;;7140:85:447;13449:401:641;7140:85:447;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:447;;6931:427;-1:-1:-1;;;;6931:427:447:o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;3455:243:135:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:135;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:135;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;1252:293:146:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:146;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:135:-;1153:20;;-1:-1:-1;;;;;1153:20:135;;;-1:-1:-1;;;1182:14:135;;;;;;1058:147::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;4313:149:447:-;-1:-1:-1;;;;;4428:18:447;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;1268:136:135:-;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:135;;;;1268:136::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5998:127:383:-;-1:-1:-1;;;;;;;;;;;931:28:133;942:4;948:10;931;:28::i;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;9311:231:383:-;9460:14;9497:38;:36;:38::i;:::-;9490:45;;9311:231;:::o;10447:370:447:-;-1:-1:-1;;;;;10578:19:447;;10570:68;;;;-1:-1:-1;;;10570:68:447;;14057:2:641;10570:68:447;;;14039:21:641;14096:2;14076:18;;;14069:30;14135:34;14115:18;;;14108:62;-1:-1:-1;;;14186:18:641;;;14179:34;14230:19;;10570:68:447;13855:400:641;10570:68:447;-1:-1:-1;;;;;10656:21:447;;10648:68;;;;-1:-1:-1;;;10648:68:447;;14462:2:641;10648:68:447;;;14444:21:641;14501:2;14481:18;;;14474:30;14540:34;14520:18;;;14513:62;-1:-1:-1;;;14591:18:641;;;14584:32;14633:19;;10648:68:447;14260:398:641;10648:68:447;-1:-1:-1;;;;;10727:18:447;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1748:25:641;;;10778:32:447;;1721:18:641;10778:32:447;;;;;;;10447:370;;;:::o;8473:137:383:-;8539:4;8562:41;8539:4;8590:12;:10;:12::i;2371:375:135:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:135;;14865:2:641;2521:25:135;;;14847:21:641;14904:2;14884:18;;;14877:30;-1:-1:-1;;;14923:18:641;;;14916:45;14978:18;;2521:25:135;14663:339:641;2477:80:135;2567:14;:40;;-1:-1:-1;;;;;;2617:44:135;-1:-1:-1;;;2567:40:135;;;;-1:-1:-1;;;;;;2617:44:135;;-1:-1:-1;;;;;2617:44:135;;;;;;;;2677:62;;1748:25:641;;;2677:62:135;;1736:2:641;1721:18;2677:62:135;;;;;;;;2371:375;;:::o;11098:441:447:-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:447;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:447;;15209:2:641;11347:68:447;;;15191:21:641;15248:2;15228:18;;;15221:30;15287:31;15267:18;;;15260:59;15336:18;;11347:68:447;15007:353:641;11347:68:447;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:447;;7930:68;;;;-1:-1:-1;;;7930:68:447;;15567:2:641;7930:68:447;;;15549:21:641;15606:2;15586:18;;;15579:30;15645:34;15625:18;;;15618:62;-1:-1:-1;;;15696:18:641;;;15689:35;15741:19;;7930:68:447;15365:401:641;7930:68:447;-1:-1:-1;;;;;8016:16:447;;8008:64;;;;-1:-1:-1;;;8008:64:447;;15973:2:641;8008:64:447;;;15955:21:641;16012:2;15992:18;;;15985:30;16051:34;16031:18;;;16024:62;-1:-1:-1;;;16102:18:641;;;16095:33;16145:19;;8008:64:447;15771:399:641;8008:64:447;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;-1:-1:-1;;;;;8154:15:447;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:447;;16377:2:641;8179:72:447;;;16359:21:641;16416:2;16396:18;;;16389:30;16455:34;16435:18;;;16428:62;-1:-1:-1;;;16506:18:641;;;16499:36;16552:19;;8179:72:447;16175:402:641;8179:72:447;-1:-1:-1;;;;;8285:15:447;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:447;8391:4;-1:-1:-1;;;;;8382:26:447;-1:-1:-1;;;;;;;;;;;8401:6:447;8382:26;;;;1748:25:641;;1736:2;1721:18;;1602:177;8382:26:447;;;;;;;;8419:37;5628:240:383;5557:495:133;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;2043:269:135;;:::o;6364:133:383:-;6430:19;6436:3;6441:7;6430:5;:19::i;:::-;6477:3;-1:-1:-1;;;;;6464:26:383;;6482:7;6464:26;;;;1748:25:641;;1736:2;1721:18;;1602:177;470:194:304;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2269:159:447:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2381:13:447;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:447;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;854:176:146:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;946:25:146::1;960:5;946:25;;;;;;;;;;;;;-1:-1:-1::0;;;946:25:146::1;;::::0;:13:::1;:25::i;:::-;981:42;1017:5;981:35;:42::i;1853:111:438:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4743:245:133:-;4826:25;4854:19;;;:13;:19;;;;;;;;4883:31;;;;4929:52;;4854:19;;4905:9;;4854:19;;4868:4;;4929:52;;4826:25;4929:52;4816:172;4743:245;;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;3129:261:135:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:135;-1:-1:-1;;;;;3268:44:135;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;1792:561:146:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:146;-1:-1:-1;1937:44:146;1992:35;;;;-1:-1:-1;;;1992:35:146;;18373:2:641;1992:35:146;;;18355:21:641;18412:2;18392:18;;;18385:30;-1:-1:-1;;;18431:18:641;;;18424:45;18486:18;;1992:35:146;18171:339:641;1992:35:146;2089:15;2058:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2058:46:146;;;:94;;;;-1:-1:-1;2127:25:146;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2108:44:146;:15;:44;;2058:94;2037:156;;;;-1:-1:-1;;;2037:156:146;;18908:2:641;2037:156:146;;;18890:21:641;18947:2;18927:18;;;18920:30;-1:-1:-1;;;18966:18:641;;;18959:45;19021:18;;2037:156:146;18706:339:641;2037:156:146;2230:1;2211:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2211:21:146;;;2203:53;;;;-1:-1:-1;;;2203:53:146;;19252:2:641;2203:53:146;;;19234:21:641;19291:2;19271:18;;;19264:30;-1:-1:-1;;;19310:18:641;;;19303:49;19369:18;;2203:53:146;19050:343:641;2203:53:146;2290:1;2274:4;:13;;;:17;2266:46;;;;-1:-1:-1;;;2266:46:146;;19600:2:641;2266:46:146;;;19582:21:641;19639:2;19619:18;;;19612:30;-1:-1:-1;;;19658:18:641;;;19651:46;19714:18;;2266:46:146;19398:340:641;2266:46:146;-1:-1:-1;2330:8:146;;;;;2323:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2323:23:146;2342:4;2323:23;;;-1:-1:-1;1792:561:146;;;-1:-1:-1;1792:561:146:o;6588:1264:383:-;6737:11;6733:95;;6772:9;:14;6764:33;;;;-1:-1:-1;;;6764:33:383;;19945:2:641;6764:33:383;;;19927:21:641;19984:1;19964:18;;;19957:29;-1:-1:-1;;;20002:18:641;;;19995:36;20048:18;;6764:33:383;19743:329:641;6733:95:383;6838:18;-1:-1:-1;;;;;6870:45:383;;397:42:277;6870:45:383;6866:172;;;-1:-1:-1;6947:9:383;:19;;6866:172;;;-1:-1:-1;7013:9:383;:14;6866:172;7055:13;7047:43;;;;-1:-1:-1;;;7047:43:383;;20279:2:641;7047:43:383;;;20261:21:641;20318:2;20298:18;;;20291:30;-1:-1:-1;;;20337:18:641;;;20330:47;20394:18;;7047:43:383;20077:341:641;7047:43:383;7101:21;-1:-1:-1;;;;;7125:35:383;;;:84;;7188:21;7125:84;;;7163:22;:20;:22::i;:::-;7101:108;;7220:12;7242:20;7273:23;7299:20;1552:15:135;;;;;1467:107;7299:20:383;7273:46;-1:-1:-1;7344:20:383;7333:7;:31;;;;;;;;:::i;:::-;;7329:284;;;7403:24;:22;:24::i;:::-;7380:47;-1:-1:-1;7380:47:383;-1:-1:-1;7329:284:383;;;7458:21;7526:20;:18;:20::i;:::-;7493:53;;-1:-1:-1;7493:53:383;-1:-1:-1;2726:6:383;7568:23;;;;:6;:23;:::i;:::-;7567:35;;;;:::i;:::-;7560:42;;7444:169;7329:284;7641:4;7631:6;:14;;7623:29;;;;-1:-1:-1;;;7623:29:383;;21020:2:641;7623:29:383;;;21002:21:641;21059:1;21039:18;;;21032:29;-1:-1:-1;;;21077:18:641;;;21070:32;21119:18;;7623:29:383;20818:325:641;7623:29:383;7663:81;7700:9;7711:12;:10;:12::i;:::-;7725;7739:4;7663:36;:81::i;:::-;7754:91;7791:9;7802:12;:10;:12::i;:::-;7816:13;7831;7840:4;7831:6;:13;:::i;:::-;7754:36;:91::i;:::-;6723:1129;;;;;6588:1264;;;:::o;9448:576:447:-;-1:-1:-1;;;;;9531:21:447;;9523:67;;;;-1:-1:-1;;;9523:67:447;;21480:2:641;9523:67:447;;;21462:21:641;21519:2;21499:18;;;21492:30;21558:34;21538:18;;;21531:62;-1:-1:-1;;;21609:18:641;;;21602:31;21650:19;;9523:67:447;21278:397:641;9523:67:447;9601:49;9622:7;9639:1;9643:6;9601:20;:49::i;:::-;-1:-1:-1;;;;;9686:18:447;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:447;;21882:2:641;9714:71:447;;;21864:21:641;21921:2;21901:18;;;21894:30;21960:34;21940:18;;;21933:62;-1:-1:-1;;;22011:18:641;;;22004:32;22053:19;;9714:71:447;21680:398:641;9714:71:447;-1:-1:-1;;;;;9819:18:447;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:447;;1748:25:641;;;9947:1:447;;-1:-1:-1;;;;;9921:37:447;;;-1:-1:-1;;;;;;;;;;;9921:37:447;1736:2:641;1721:18;9921:37:447;;;;;;;5694:174:383;5628:240;;:::o;2427:204:146:-;2529:7;2555:69;2613:10;;2555:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2555:49:146;;-1:-1:-1;2582:20:146;;-1:-1:-1;2597:4:146;;-1:-1:-1;2582:14:146;:20::i;:::-;2572:31;;;;;;2555:16;:49::i;:::-;:57;;:69::i;:::-;2548:76;2427:204;-1:-1:-1;;;;2427:204:146:o;9168:137:383:-;9246:4;9269:29;-1:-1:-1;;;;;;;;;;;9290:7:383;9269;:29::i;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;9311:231:383:o;7895:483::-;8085:34;-1:-1:-1;;;;;;;;;;;8116:1:383;8085:7;:34::i;:::-;8084:35;:57;;;;-1:-1:-1;;;;;;8123:18:383;;;;8084:57;:77;;;;-1:-1:-1;;;;;;8145:16:383;;;;8084:77;8080:200;;;8185:28;-1:-1:-1;;;;;;;;;;;8208:4:383;8185:7;:28::i;:::-;:58;;;;8217:26;-1:-1:-1;;;;;;;;;;;8240:2:383;8217:7;:26::i;:::-;8177:92;;;;-1:-1:-1;;;8177:92:383;;22285:2:641;8177:92:383;;;22267:21:641;22324:2;22304:18;;;22297:30;-1:-1:-1;;;22343:18:641;;;22336:51;22404:18;;8177:92:383;22083:345:641;8177:92:383;-1:-1:-1;;;;;8294:18:383;;8290:82;;-1:-1:-1;;;;;8328:23:383;;;;;;:19;:23;;;;;:33;;8355:6;;8328:23;:33;;8355:6;;8328:33;:::i;:::-;;;;-1:-1:-1;;7895:483:383;;;:::o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;22908:2:641;1913:55:285;;;22890:21:641;;;22927:18;;;22920:30;22986:34;22966:18;;;22959:62;23038:18;;1913:55:285;22706:356:641;5036:168:133;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;8739:389:447:-;-1:-1:-1;;;;;8822:21:447;;8814:65;;;;-1:-1:-1;;;8814:65:447;;23269:2:641;8814:65:447;;;23251:21:641;23308:2;23288:18;;;23281:30;23347:33;23327:18;;;23320:61;23398:18;;8814:65:447;23067:355:641;8814:65:447;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:447;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:447;;1748:25:641;;;-1:-1:-1;;;;;9025:37:447;;;9042:1;;-1:-1:-1;;;;;;;;;;;9025:37:447;1736:2:641;1721:18;9025:37:447;;;;;;;2043:269:135;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2306:147:470::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:38:470::1;2432:4;2438:7;2408:23;:38::i;1036:88:146:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;1970:109:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;:::-;703:173;;;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;2703:446:146:-;2777:12;509:207;2874:7;;;;:4;:7;:::i;:::-;2899:25;;;;;;;;:::i;:::-;2942:13;;;;2973:10;;;;3001:13;;;;;;;;:::i;:::-;3032:27;;;;;;;;:::i;:::-;3077:25;;;;;;;;:::i;:::-;2820:322;;;;;;23938:25:641;;;;-1:-1:-1;;;;;24037:15:641;;;24017:18;;;24010:43;24089:15;;;24069:18;;;24062:43;24121:18;;;24114:34;;;;24164:19;;;24157:35;;;;24229:15;;;24208:19;;;24201:44;-1:-1:-1;;;;;24320:15:641;;;3120:8:146;24299:19:641;;;24292:44;;;;24373:15;;24352:19;;;24345:44;3120:8:146;;;24405:19:641;;;24398:35;23910:19;;2820:322:146;;;;;;;;;;;;2801:341;;2703:446;;;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;25269:27:641;25312:11;;;25305:27;;;25348:12;;;25341:28;;;8674:7:469;;25385:12:641;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:469;3781:227;-1:-1:-1;;;3781:227:469:o;2459:297:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;24856:2:641;2758:48:277;;;24838:21:641;24895:2;24875:18;;;24868:30;-1:-1:-1;;;24914:18:641;;;24907:58;24982:18;;2758:48:277;24654:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;;3184:73;;;;;;;27566:25:641;;;;27607:18;;;27600:34;;;;27650:18;;;27643:34;;;;3228:13:470;27693:18:641;;;27686:34;3251:4:470;27736:19:641;;;27729:61;3184:73:470;;;;;;;;;;27538:19:641;;;;3184:73:470;;;3174:84;;;;;;3008:257;2265:730:469;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:469;;-1:-1:-1;2942:35:469;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;25610:2:641;788:34:469;;;25592:21:641;25649:2;25629:18;;;25622:30;-1:-1:-1;;;25668:18:641;;;25661:54;25732:18;;788:34:469;25408:348:641;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;25963:2:641;903:41:469;;;25945:21:641;26002:2;25982:18;;;25975:30;26041:33;26021:18;;;26014:61;26092:18;;903:41:469;25761:355:641;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;26323:2:641;1020:44:469;;;26305:21:641;26362:2;26342:18;;;26335:30;26401:34;26381:18;;;26374:62;-1:-1:-1;;;26452:18:641;;;26445:32;26494:19;;1020:44:469;26121:398:641;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;26726:2:641;1140:44:469;;;26708:21:641;26765:2;26745:18;;;26738:30;26804:34;26784:18;;;26777:62;-1:-1:-1;;;26855:18:641;;;26848:32;26897:19;;1140:44:469;26524:398:641;729:205:321;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;27185:15:641;;;1105:68:321;;;27167:34:641;27237:15;;27217:18;;;27210:43;27269:18;;;27262:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;27102:18:641;;1105:68:321;26927:375:641;5189:1603:469;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;28028:25:641;;;28101:4;28089:17;;28069:18;;;28062:45;;;;28123:18;;;28116:34;;;28166:18;;;28159:34;;;6603:24:469;;28000:19:641;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;28688:2:641;3839:85:321;;;28670:21:641;28727:2;28707:18;;;28700:30;28766:34;28746:18;;;28739:62;-1:-1:-1;;;28817:18:641;;;28810:40;28867:19;;3839:85:321;28486:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;29506:2:641;5194:60:281;;;29488:21:641;29545:2;29525:18;;;29518:30;29584:31;29564:18;;;29557:59;29633:18;;5194:60:281;29304:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:258:641;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:641;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:641;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:641:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:173::-;1041:20;;-1:-1:-1;;;;;1090:31:641;;1080:42;;1070:70;;1136:1;1133;1126:12;1070:70;973:173;;;:::o;1151:254::-;1219:6;1227;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;1395:2;1380:18;;;;1367:32;;-1:-1:-1;;;1151:254:641:o;1784:328::-;1861:6;1869;1877;1930:2;1918:9;1909:7;1905:23;1901:32;1898:52;;;1946:1;1943;1936:12;1898:52;1969:29;1988:9;1969:29;:::i;:::-;1959:39;;2017:38;2051:2;2040:9;2036:18;2017:38;:::i;:::-;2007:48;;2102:2;2091:9;2087:18;2074:32;2064:42;;1784:328;;;;;:::o;2117:180::-;2176:6;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;-1:-1:-1;2268:23:641;;2117:180;-1:-1:-1;2117:180:641:o;2484:254::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2665:9;2652:23;2642:33;;2694:38;2728:2;2717:9;2713:18;2694:38;:::i;:::-;2684:48;;2484:254;;;;;:::o;2932:186::-;2991:6;3044:2;3032:9;3023:7;3019:23;3015:32;3012:52;;;3060:1;3057;3050:12;3012:52;3083:29;3102:9;3083:29;:::i;3123:127::-;3184:10;3179:3;3175:20;3172:1;3165:31;3215:4;3212:1;3205:15;3239:4;3236:1;3229:15;3255:275;3326:2;3320:9;3391:2;3372:13;;-1:-1:-1;;3368:27:641;3356:40;;-1:-1:-1;;;;;3411:34:641;;3447:22;;;3408:62;3405:88;;;3473:18;;:::i;:::-;3509:2;3502:22;3255:275;;-1:-1:-1;3255:275:641:o;3535:531::-;3578:5;3631:3;3624:4;3616:6;3612:17;3608:27;3598:55;;3649:1;3646;3639:12;3598:55;3685:6;3672:20;-1:-1:-1;;;;;3707:2:641;3704:26;3701:52;;;3733:18;;:::i;:::-;3777:55;3820:2;3801:13;;-1:-1:-1;;3797:27:641;3826:4;3793:38;3777:55;:::i;:::-;3857:2;3848:7;3841:19;3903:3;3896:4;3891:2;3883:6;3879:15;3875:26;3872:35;3869:55;;;3920:1;3917;3910:12;3869:55;3985:2;3978:4;3970:6;3966:17;3959:4;3950:7;3946:18;3933:55;4033:1;4008:16;;;4026:4;4004:27;3997:38;;;;4012:7;3535:531;-1:-1:-1;;;3535:531:641:o;4071:718::-;4125:5;4178:3;4171:4;4163:6;4159:17;4155:27;4145:55;;4196:1;4193;4186:12;4145:55;4232:6;4219:20;4258:4;-1:-1:-1;;;;;4277:2:641;4274:26;4271:52;;;4303:18;;:::i;:::-;4349:2;4346:1;4342:10;4372:28;4396:2;4392;4388:11;4372:28;:::i;:::-;4434:15;;;4504;;;4500:24;;;4465:12;;;;4536:15;;;4533:35;;;4564:1;4561;4554:12;4533:35;4600:2;4592:6;4588:15;4577:26;;4612:148;4628:6;4623:3;4620:15;4612:148;;;4694:23;4713:3;4694:23;:::i;:::-;4682:36;;4645:12;;;;4738;;;;4612:148;;4794:173;4862:20;;-1:-1:-1;;;;;4911:31:641;;4901:42;;4891:70;;4957:1;4954;4947:12;4972:1270;5149:6;5157;5165;5173;5181;5189;5197;5205;5258:3;5246:9;5237:7;5233:23;5229:33;5226:53;;;5275:1;5272;5265:12;5226:53;5298:29;5317:9;5298:29;:::i;:::-;5288:39;;5378:2;5367:9;5363:18;5350:32;-1:-1:-1;;;;;5442:2:641;5434:6;5431:14;5428:34;;;5458:1;5455;5448:12;5428:34;5481:50;5523:7;5514:6;5503:9;5499:22;5481:50;:::i;:::-;5471:60;;5584:2;5573:9;5569:18;5556:32;5540:48;;5613:2;5603:8;5600:16;5597:36;;;5629:1;5626;5619:12;5597:36;5652:52;5696:7;5685:8;5674:9;5670:24;5652:52;:::i;:::-;5642:62;;5757:2;5746:9;5742:18;5729:32;5713:48;;5786:2;5776:8;5773:16;5770:36;;;5802:1;5799;5792:12;5770:36;5825:52;5869:7;5858:8;5847:9;5843:24;5825:52;:::i;:::-;5815:62;;5930:3;5919:9;5915:19;5902:33;5886:49;;5960:2;5950:8;5947:16;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;6081:39;6115:3;6104:9;6100:19;6081:39;:::i;:::-;6071:49;;6139:39;6173:3;6162:9;6158:19;6139:39;:::i;:::-;6129:49;;6197:39;6231:3;6220:9;6216:19;6197:39;:::i;:::-;6187:49;;4972:1270;;;;;;;;;;;:::o;6247:765::-;6358:6;6366;6374;6418:9;6409:7;6405:23;6448:3;6444:2;6440:12;6437:32;;;6465:1;6462;6455:12;6437:32;6488:3;6511:2;6507;6503:11;6500:31;;;6527:1;6524;6517:12;6500:31;6550:9;;-1:-1:-1;6595:18:641;;6582:32;;-1:-1:-1;;;;;;6663:14:641;;;6660:34;;;6690:1;6687;6680:12;6660:34;6728:6;6717:9;6713:22;6703:32;;6773:7;6766:4;6762:2;6758:13;6754:27;6744:55;;6795:1;6792;6785:12;6744:55;6835:2;6822:16;6861:2;6853:6;6850:14;6847:34;;;6877:1;6874;6867:12;6847:34;6924:7;6917:4;6908:6;6904:2;6900:15;6896:26;6893:39;6890:59;;;6945:1;6942;6935:12;6890:59;6976:4;6972:2;6968:13;6958:23;;7000:6;6990:16;;;;;6247:765;;;;;:::o;7017:248::-;7085:6;7093;7146:2;7134:9;7125:7;7121:23;7117:32;7114:52;;;7162:1;7159;7152:12;7114:52;-1:-1:-1;;7185:23:641;;;7255:2;7240:18;;;7227:32;;-1:-1:-1;7017:248:641:o;7270:322::-;7339:6;7392:2;7380:9;7371:7;7367:23;7363:32;7360:52;;;7408:1;7405;7398:12;7360:52;7448:9;7435:23;-1:-1:-1;;;;;7473:6:641;7470:30;7467:50;;;7513:1;7510;7503:12;7467:50;7536;7578:7;7569:6;7558:9;7554:22;7536:50;:::i;7597:277::-;7677:6;7730:2;7718:9;7709:7;7705:23;7701:32;7698:52;;;7746:1;7743;7736:12;7698:52;7785:9;7772:23;7824:1;7817:5;7814:12;7804:40;;7840:1;7837;7830:12;8458:260;8526:6;8534;8587:2;8575:9;8566:7;8562:23;8558:32;8555:52;;;8603:1;8600;8593:12;8555:52;8626:29;8645:9;8626:29;:::i;:::-;8616:39;;8674:38;8708:2;8697:9;8693:18;8674:38;:::i;8723:274::-;-1:-1:-1;;;;;8915:32:641;;;;8897:51;;8979:2;8964:18;;8957:34;8885:2;8870:18;;8723:274::o;9002:127::-;9063:10;9058:3;9054:20;9051:1;9044:31;9094:4;9091:1;9084:15;9118:4;9115:1;9108:15;9134:349;9287:2;9272:18;;9320:1;9309:13;;9299:144;;9365:10;9360:3;9356:20;9353:1;9346:31;9400:4;9397:1;9390:15;9428:4;9425:1;9418:15;9299:144;9452:25;;;9134:349;:::o;9488:380::-;9567:1;9563:12;;;;9610;;;9631:61;;9685:4;9677:6;9673:17;9663:27;;9631:61;9738:2;9730:6;9727:14;9707:18;9704:38;9701:161;;;9784:10;9779:3;9775:20;9772:1;9765:31;9819:4;9816:1;9809:15;9847:4;9844:1;9837:15;9873:338;10075:2;10057:21;;;10114:2;10094:18;;;10087:30;-1:-1:-1;;;10148:2:641;10133:18;;10126:44;10202:2;10187:18;;9873:338::o;10929:127::-;10990:10;10985:3;10981:20;10978:1;10971:31;11021:4;11018:1;11011:15;11045:4;11042:1;11035:15;11061:128;11101:3;11132:1;11128:6;11125:1;11122:13;11119:39;;;11138:18;;:::i;:::-;-1:-1:-1;11174:9:641;;11061:128::o;12508:936::-;12704:3;12689:19;;-1:-1:-1;;;;;12727:19:641;12777:26;12796:6;12777:26;:::i;:::-;12773:35;12762:9;12755:54;12890:2;12851:37;12882:4;12874:6;12870:17;12851:37;:::i;:::-;12847:46;12840:4;12829:9;12825:20;12818:76;12957:4;12949:6;12945:17;12932:31;12925:4;12914:9;12910:20;12903:61;13027:4;13019:6;13015:17;13002:31;12995:4;12984:9;12980:20;12973:61;13115:2;13076:37;13107:4;13099:6;13095:17;13076:37;:::i;:::-;13072:46;13065:4;13054:9;13050:20;13043:76;;13148:37;13179:4;13171:6;13167:17;13148:37;:::i;:::-;-1:-1:-1;;;;;13261:21:641;;;13254:4;13239:20;;13232:51;13204:19;13325:37;13356:4;13344:17;;13325:37;:::i;:::-;13321:46;13314:4;13303:9;13299:20;13292:76;;;13431:4;13423:6;13419:17;13406:31;13399:4;13388:9;13384:20;13377:61;12508:936;;;;:::o;16582:784::-;-1:-1:-1;;;16988:3:641;16981:36;16963:3;17046:6;17040:13;17062:62;17117:6;17112:2;17107:3;17103:12;17096:4;17088:6;17084:17;17062:62;:::i;:::-;-1:-1:-1;;;17183:2:641;17143:16;;;17175:11;;;17168:40;17233:13;;17255:63;17233:13;17304:2;17296:11;;17289:4;17277:17;;17255:63;:::i;:::-;17338:17;17357:2;17334:26;;16582:784;-1:-1:-1;;;;16582:784:641:o;17371:407::-;17573:2;17555:21;;;17612:2;17592:18;;;17585:30;17651:34;17646:2;17631:18;;17624:62;-1:-1:-1;;;17717:2:641;17702:18;;17695:41;17768:3;17753:19;;17371:407::o;17783:383::-;17980:2;17969:9;17962:21;17943:4;18006:45;18047:2;18036:9;18032:18;18024:6;18006:45;:::i;:::-;18099:9;18091:6;18087:22;18082:2;18071:9;18067:18;18060:50;18127:33;18153:6;18145;18127:33;:::i;:::-;18119:41;17783:383;-1:-1:-1;;;;;17783:383:641:o;18515:186::-;18574:6;18627:2;18615:9;18606:7;18602:23;18598:32;18595:52;;;18643:1;18640;18633:12;18595:52;18666:29;18685:9;18666:29;:::i;20423:168::-;20463:7;20529:1;20525;20521:6;20517:14;20514:1;20511:21;20506:1;20499:9;20492:17;20488:45;20485:71;;;20536:18;;:::i;:::-;-1:-1:-1;20576:9:641;;20423:168::o;20596:217::-;20636:1;20662;20652:132;;20706:10;20701:3;20697:20;20694:1;20687:31;20741:4;20738:1;20731:15;20769:4;20766:1;20759:15;20652:132;-1:-1:-1;20798:9:641;;20596:217::o;21148:125::-;21188:4;21216:1;21213;21210:8;21207:34;;;21221:18;;:::i;:::-;-1:-1:-1;21258:9:641;;21148:125::o;22433:127::-;22494:10;22489:3;22485:20;22482:1;22475:31;22525:4;22522:1;22515:15;22549:4;22546:1;22539:15;22565:136;22604:3;22632:5;22622:39;;22641:18;;:::i;:::-;-1:-1:-1;;;22677:18:641;;22565:136::o;23427:135::-;23466:3;-1:-1:-1;;23487:17:641;;23484:43;;;23507:18;;:::i;:::-;-1:-1:-1;23554:1:641;23543:13;;23427:135::o;28204:277::-;28271:6;28324:2;28312:9;28303:7;28299:23;28295:32;28292:52;;;28340:1;28337;28330:12;28292:52;28372:9;28366:16;28425:5;28418:13;28411:21;28404:5;28401:32;28391:60;;28447:1;28444;28437:12;29662:274;29791:3;29829:6;29823:13;29845:53;29891:6;29886:3;29879:4;29871:6;29867:17;29845:53;:::i;:::-;29914:16;;;;;29662:274;-1:-1:-1;;29662:274:641:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancel(address,uint256)": "98590ef9",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getTotalMintedInLifetime(address)": "a1699dc8",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,uint128,address)": "5f34ff38",
    "isTrustedForwarder(address)": "572b6c05",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "name()": "06fdde03",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revoke(address,uint256)": "eac449d9",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTotalMintedInLifetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:description\":\"This contract is a loyalty points contract. Each token represents a loyalty point. Loyalty points can                      be cancelled (i.e. 'burned') by its owner or an approved operator. Loyalty points can be revoked                      (i.e. 'burned') without its owner's approval, by an admin of the contract.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,uint128,address)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"REVOKE_ROLE\":{\"details\":\"Only REVOKE_ROLE holders can revoke a loyalty card.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"},\"_mintedToInLifetime\":{\"details\":\"Mapping from token owner => total tokens minted to them in the contract's lifetime.\"}},\"title\":\"LoyaltyPoints\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(address,uint256)\":{\"notice\":\"Burns `amount` of tokens. See {ERC20-_burn}.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getTotalMintedInLifetime(address)\":{\"notice\":\"Returns the total tokens minted to `owner` in the contract's lifetime.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"mintTo(address,uint256)\":{\"notice\":\"Mints `amount` of tokens to the recipient `to`.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens to a recipeint using a signature from an authorized party.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revoke(address,uint256)\":{\"notice\":\"Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/unaudited/LoyaltyPoints.sol\":\"LoyaltyPoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/SignatureMintERC20Upgradeable.sol\":{\"keccak256\":\"0x314429da21f4f15ef3f2c510dffb08884fcd602e3e53c70dd51aa6e231ad6838\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6098efdc3794ac758f7f073d8890a9d297ba79f55110f79e0ad378168576d893\",\"dweb:/ipfs/QmZcpL65TpuWtGoW7J9a2M5Rmv2mgDhTi1dh1YbURvPvfZ\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5\",\"dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP\"]},\"contracts/interfaces/ILoyaltyPoints.sol\":{\"keccak256\":\"0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8\",\"dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/unaudited/LoyaltyPoints.sol\":{\"keccak256\":\"0xc57afaaa5f2298376b7972f1570c6e31951a555a667444a81f2da4ef8ebbc2ce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e33f61298b2627dfc83d8e99140dd713cc4e74c81bfc388e2e14bfd608140bb\",\"dweb:/ipfs/QmZY88VTamBcvM5wEDimgAsKUjKSySvugToMrG2Neae4ze\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalMintedInLifetime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,uint128,address)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancel(address,uint256)": {
            "notice": "Burns `amount` of tokens. See {ERC20-_burn}."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getTotalMintedInLifetime(address)": {
            "notice": "Returns the total tokens minted to `owner` in the contract's lifetime."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "mintTo(address,uint256)": {
            "notice": "Mints `amount` of tokens to the recipient `to`."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens to a recipeint using a signature from an authorized party."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revoke(address,uint256)": {
            "notice": "Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/unaudited/LoyaltyPoints.sol": "LoyaltyPoints"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20Upgradeable.sol": {
        "keccak256": "0x314429da21f4f15ef3f2c510dffb08884fcd602e3e53c70dd51aa6e231ad6838",
        "urls": [
          "bzz-raw://6098efdc3794ac758f7f073d8890a9d297ba79f55110f79e0ad378168576d893",
          "dweb:/ipfs/QmZcpL65TpuWtGoW7J9a2M5Rmv2mgDhTi1dh1YbURvPvfZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15",
        "urls": [
          "bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5",
          "dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/ILoyaltyPoints.sol": {
        "keccak256": "0xb6496ef2bd4228f05b3af9479011c467e1942d7621fe0d6cae6afc20c9d32f94",
        "urls": [
          "bzz-raw://4afa2a9db584234c9e085e74afaea62e1cc8373d0f00a9658fd53a67ecf717d8",
          "dweb:/ipfs/QmXnByJbn2MGhccVnUgbtaUky7SnkMmgt3183fJuXFRWHa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/unaudited/LoyaltyPoints.sol": {
        "keccak256": "0xc57afaaa5f2298376b7972f1570c6e31951a555a667444a81f2da4ef8ebbc2ce",
        "urls": [
          "bzz-raw://8e33f61298b2627dfc83d8e99140dd713cc4e74c81bfc388e2e14bfd608140bb",
          "dweb:/ipfs/QmZY88VTamBcvM5wEDimgAsKUjKSySvugToMrG2Neae4ze"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/unaudited/LoyaltyPoints.sol",
    "id": 100324,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "ECDSAUpgradeable": [
        158725
      ],
      "EIP712Upgradeable": [
        158875
      ],
      "ERC20Upgradeable": [
        154374
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC20": [
        31216
      ],
      "IERC20MetadataUpgradeable": [
        155198
      ],
      "IERC20Upgradeable": [
        154452
      ],
      "ILoyaltyPoints": [
        55250
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPlatformFee": [
        50559
      ],
      "IPrimarySale": [
        50580
      ],
      "ISignatureMintERC20": [
        51075
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "LoyaltyPoints": [
        100323
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PlatformFee": [
        39256
      ],
      "PrimarySale": [
        39318
      ],
      "ReentrancyGuardUpgradeable": [
        152055
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureMintERC20Upgradeable": [
        40958
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9739:383",
    "nodes": [
      {
        "id": 99737,
        "nodeType": "PragmaDirective",
        "src": "39:24:383",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 99738,
        "nodeType": "ImportDirective",
        "src": "740:42:383",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILoyaltyPoints.sol",
        "file": "../interfaces/ILoyaltyPoints.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 55251,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99739,
        "nodeType": "ImportDirective",
        "src": "792:78:383",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 154375,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99740,
        "nodeType": "ImportDirective",
        "src": "879:40:383",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99741,
        "nodeType": "ImportDirective",
        "src": "935:56:383",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20Upgradeable.sol",
        "file": "../extension/SignatureMintERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 40959,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99742,
        "nodeType": "ImportDirective",
        "src": "992:43:383",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99743,
        "nodeType": "ImportDirective",
        "src": "1036:38:383",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99744,
        "nodeType": "ImportDirective",
        "src": "1075:38:383",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99745,
        "nodeType": "ImportDirective",
        "src": "1114:38:383",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 39257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99746,
        "nodeType": "ImportDirective",
        "src": "1153:48:383",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99747,
        "nodeType": "ImportDirective",
        "src": "1202:70:383",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99748,
        "nodeType": "ImportDirective",
        "src": "1273:85:383",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100324,
        "sourceUnit": 152056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100323,
        "nodeType": "ContractDefinition",
        "src": "1743:8034:383",
        "nodes": [
          {
            "id": 99773,
            "nodeType": "VariableDeclaration",
            "src": "2299:67:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99768,
              "nodeType": "StructuredDocumentation",
              "src": "2185:109:383",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2324:13:383",
            "scope": 100323,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99769,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2299:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 99771,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2350:15:383",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 99770,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2340:9:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99772,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2340:26:383",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99779,
            "nodeType": "VariableDeclaration",
            "src": "2442:63:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99774,
              "nodeType": "StructuredDocumentation",
              "src": "2372:65:383",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2467:11:383",
            "scope": 100323,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99775,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2442:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 99777,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2491:13:383",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 99776,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2481:9:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99778,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2481:24:383",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99785,
            "nodeType": "VariableDeclaration",
            "src": "2576:63:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99780,
              "nodeType": "StructuredDocumentation",
              "src": "2511:60:383",
              "text": "@dev Only REVOKE_ROLE holders can revoke a loyalty card."
            },
            "mutability": "constant",
            "name": "REVOKE_ROLE",
            "nameLocation": "2601:11:383",
            "scope": 100323,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 99781,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2576:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5245564f4b455f524f4c45",
                  "id": 99783,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2625:13:383",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  },
                  "value": "REVOKE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_5297e68f3a27f04914f2c6db0ad63b5e5c8173cebcc1a5341df045cf6dad7adc",
                    "typeString": "literal_string \"REVOKE_ROLE\""
                  }
                ],
                "id": 99782,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2615:9:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 99784,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2615:24:383",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 99789,
            "nodeType": "VariableDeclaration",
            "src": "2691:41:383",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 99786,
              "nodeType": "StructuredDocumentation",
              "src": "2646:40:383",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2716:7:383",
            "scope": 100323,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99787,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2691:7:383",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 99788,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2726:6:383",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 99794,
            "nodeType": "VariableDeclaration",
            "src": "2836:55:383",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 99790,
              "nodeType": "StructuredDocumentation",
              "src": "2739:92:383",
              "text": "@dev Mapping from token owner => total tokens minted to them in the contract's lifetime."
            },
            "mutability": "mutable",
            "name": "_mintedToInLifetime",
            "nameLocation": "2872:19:383",
            "scope": 100323,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 99793,
              "keyType": {
                "id": 99791,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2844:7:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2836:27:383",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 99792,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2855:7:383",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 99800,
            "nodeType": "FunctionDefinition",
            "src": "3088:28:383",
            "nodes": [],
            "body": {
              "id": 99799,
              "nodeType": "Block",
              "src": "3114:2:383",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 99797,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99796,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3102:11:383"
                },
                "nodeType": "ModifierInvocation",
                "src": "3102:11:383"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 99795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3099:2:383"
            },
            "returnParameters": {
              "id": 99798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99878,
            "nodeType": "FunctionDefinition",
            "src": "3181:998:383",
            "nodes": [],
            "body": {
              "id": 99877,
              "nodeType": "Block",
              "src": "3504:675:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99824,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99812,
                        "src": "3611:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 99823,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "3589:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 99825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:41:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99826,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:41:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99828,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99805,
                        "src": "3663:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 99829,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99807,
                        "src": "3670:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99827,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153828,
                      "src": "3640:22:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 99830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99831,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:38:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99833,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99805,
                        "src": "3714:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99832,
                      "name": "__SignatureMintERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40783,
                      "src": "3688:25:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 99834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:32:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99835,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:32:383"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99836,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152019,
                      "src": "3730:22:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3730:24:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99838,
                  "nodeType": "ExpressionStatement",
                  "src": "3730:24:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99840,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99809,
                        "src": "3783:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 99839,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "3765:17:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 99841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:31:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99842,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:31:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99844,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3818:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99845,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99803,
                        "src": "3838:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99843,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3807:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:45:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99847,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:45:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99849,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99779,
                        "src": "3873:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99850,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99803,
                        "src": "3886:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99848,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3862:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99852,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:38:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99854,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99773,
                        "src": "3921:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99855,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99803,
                        "src": "3936:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99853,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3910:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3910:40:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99857,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:40:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99859,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99785,
                        "src": "3972:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99860,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99803,
                        "src": "3985:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99858,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3961:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 99861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3961:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99862,
                  "nodeType": "ExpressionStatement",
                  "src": "3961:38:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99864,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99785,
                        "src": "4023:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 99865,
                        "name": "REVOKE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99785,
                        "src": "4036:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 99863,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38607,
                      "src": "4009:13:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 99866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:39:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99867,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:39:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99869,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99818,
                        "src": "4081:21:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99870,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99816,
                        "src": "4104:15:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 99868,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39163,
                      "src": "4059:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:61:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99872,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:61:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99874,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99814,
                        "src": "4157:14:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 99873,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "4130:26:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 99875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:42:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99876,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:42:383"
                }
              ]
            },
            "documentation": {
              "id": 99801,
              "nodeType": "StructuredDocumentation",
              "src": "3122:54:383",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "5f34ff38",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99820,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3492:11:383"
                },
                "nodeType": "ModifierInvocation",
                "src": "3492:11:383"
              }
            ],
            "name": "initialize",
            "nameLocation": "3190:10:383",
            "parameters": {
              "id": 99819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99803,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3218:13:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3210:21:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99805,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3255:5:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3241:19:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99804,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99807,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3284:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3270:21:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3270:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99809,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3315:12:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3301:26:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:6:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99812,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3354:18:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3337:35:383",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99810,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3337:7:383",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99811,
                    "nodeType": "ArrayTypeName",
                    "src": "3337:9:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99814,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3390:14:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3382:22:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99816,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3422:15:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3414:23:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 99815,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99818,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3455:21:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99878,
                  "src": "3447:29:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3200:282:383"
            },
            "returnParameters": {
              "id": 99822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3504:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99891,
            "nodeType": "FunctionDefinition",
            "src": "4455:133:383",
            "nodes": [],
            "body": {
              "id": 99890,
              "nodeType": "Block",
              "src": "4537:51:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 99886,
                      "name": "_mintedToInLifetime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99794,
                      "src": "4554:19:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 99888,
                    "indexExpression": {
                      "id": 99887,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99881,
                      "src": "4574:6:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4554:27:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 99885,
                  "id": 99889,
                  "nodeType": "Return",
                  "src": "4547:34:383"
                }
              ]
            },
            "baseFunctions": [
              55225
            ],
            "documentation": {
              "id": 99879,
              "nodeType": "StructuredDocumentation",
              "src": "4368:82:383",
              "text": "@notice Returns the total tokens minted to `owner` in the contract's lifetime."
            },
            "functionSelector": "a1699dc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalMintedInLifetime",
            "nameLocation": "4464:24:383",
            "parameters": {
              "id": 99882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99881,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4497:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99891,
                  "src": "4489:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4488:16:383"
            },
            "returnParameters": {
              "id": 99885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99891,
                  "src": "4528:7:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4527:9:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99938,
            "nodeType": "FunctionDefinition",
            "src": "4869:459:383",
            "nodes": [],
            "body": {
              "id": 99937,
              "nodeType": "Block",
              "src": "5041:287:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 99909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99904,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99902,
                      "src": "5051:6:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99906,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99895,
                          "src": "5076:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 99907,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99897,
                          "src": "5082:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 99905,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40903,
                        "src": "5060:15:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$51040_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 99908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5060:33:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5051:42:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99910,
                  "nodeType": "ExpressionStatement",
                  "src": "5051:42:383"
                },
                {
                  "assignments": [
                    99912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99912,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "5111:8:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99937,
                      "src": "5103:16:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5103:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99915,
                  "initialValue": {
                    "expression": {
                      "id": 99913,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99895,
                      "src": "5122:4:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                        "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                      }
                    },
                    "id": 99914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51025,
                    "src": "5122:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5103:26:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 99917,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99895,
                          "src": "5161:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 99918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51027,
                        "src": "5161:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 99919,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99895,
                          "src": "5188:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 99920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51033,
                        "src": "5188:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 99921,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99895,
                          "src": "5203:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 99922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51031,
                        "src": "5203:10:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99916,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100168,
                      "src": "5140:20:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 99923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5140:74:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99924,
                  "nodeType": "ExpressionStatement",
                  "src": "5140:74:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99926,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99912,
                        "src": "5232:8:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 99927,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99895,
                          "src": "5242:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 99928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51029,
                        "src": "5242:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99925,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100027,
                      "src": "5224:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5224:32:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99930,
                  "nodeType": "ExpressionStatement",
                  "src": "5224:32:383"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99932,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99902,
                        "src": "5298:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99933,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99912,
                        "src": "5306:8:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99934,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99895,
                        "src": "5316:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 99931,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51050,
                      "src": "5272:25:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$51040_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 99935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5272:49:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99936,
                  "nodeType": "EmitStatement",
                  "src": "5267:54:383"
                }
              ]
            },
            "baseFunctions": [
              51074
            ],
            "documentation": {
              "id": 99892,
              "nodeType": "StructuredDocumentation",
              "src": "4781:83:383",
              "text": "@notice Mints tokens to a recipeint using a signature from an authorized party."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99900,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99899,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152049,
                  "src": "4991:12:383"
                },
                "nodeType": "ModifierInvocation",
                "src": "4991:12:383"
              }
            ],
            "name": "mintWithSignature",
            "nameLocation": "4878:17:383",
            "parameters": {
              "id": 99898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99895,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "4917:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99938,
                  "src": "4896:25:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 99894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99893,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51040,
                      "src": "4896:11:383"
                    },
                    "referencedDeclaration": 51040,
                    "src": "4896:11:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$51040_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99897,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4938:10:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99938,
                  "src": "4923:25:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99896,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4895:54:383"
            },
            "returnParameters": {
              "id": 99903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99902,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "5029:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99938,
                  "src": "5021:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:16:383"
            },
            "scope": 100323,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 99961,
            "nodeType": "FunctionDefinition",
            "src": "5398:163:383",
            "nodes": [],
            "body": {
              "id": 99960,
              "nodeType": "Block",
              "src": "5457:104:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99948,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99779,
                            "src": "5483:11:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 99949,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                100309
                              ],
                              "referencedDeclaration": 100309,
                              "src": "5496:10:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 99950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5496:12:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99947,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38454,
                          "src": "5475:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 99951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5475:34:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 99952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5511:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 99946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5467:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5467:58:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99954,
                  "nodeType": "ExpressionStatement",
                  "src": "5467:58:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99956,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99941,
                        "src": "5543:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99957,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99943,
                        "src": "5547:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99955,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100027,
                      "src": "5535:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5535:19:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99959,
                  "nodeType": "ExpressionStatement",
                  "src": "5535:19:383"
                }
              ]
            },
            "baseFunctions": [
              55233
            ],
            "documentation": {
              "id": 99939,
              "nodeType": "StructuredDocumentation",
              "src": "5334:59:383",
              "text": "@notice Mints `amount` of tokens to the recipient `to`."
            },
            "functionSelector": "449a52f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "5407:6:383",
            "parameters": {
              "id": 99944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99941,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5422:2:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99961,
                  "src": "5414:10:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99943,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5434:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99961,
                  "src": "5426:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5426:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5413:28:383"
            },
            "returnParameters": {
              "id": 99945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5457:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 99991,
            "nodeType": "FunctionDefinition",
            "src": "5628:240:383",
            "nodes": [],
            "body": {
              "id": 99990,
              "nodeType": "Block",
              "src": "5694:174:383",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99970,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "5712:6:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 99990,
                      "src": "5704:14:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99969,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5704:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99973,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99971,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        100309
                      ],
                      "referencedDeclaration": 100309,
                      "src": "5721:10:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 99972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5721:12:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5704:29:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 99976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99974,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99970,
                      "src": "5747:6:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 99975,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99964,
                      "src": "5757:6:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5747:16:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99984,
                  "nodeType": "IfStatement",
                  "src": "5743:87:383",
                  "trueBody": {
                    "id": 99983,
                    "nodeType": "Block",
                    "src": "5765:65:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 99978,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99964,
                              "src": "5795:6:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99979,
                              "name": "caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99970,
                              "src": "5803:6:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99980,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99966,
                              "src": "5811:7:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 99977,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154346,
                            "src": "5779:15:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 99981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5779:40:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99982,
                        "nodeType": "ExpressionStatement",
                        "src": "5779:40:383"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99986,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99964,
                        "src": "5845:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99987,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99966,
                        "src": "5853:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99985,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154258,
                      "src": "5839:5:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5839:22:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99989,
                  "nodeType": "ExpressionStatement",
                  "src": "5839:22:383"
                }
              ]
            },
            "baseFunctions": [
              55241
            ],
            "documentation": {
              "id": 99962,
              "nodeType": "StructuredDocumentation",
              "src": "5567:56:383",
              "text": "@notice Burns `amount` of tokens. See {ERC20-_burn}."
            },
            "functionSelector": "98590ef9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "5637:6:383",
            "parameters": {
              "id": 99967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99964,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5652:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99991,
                  "src": "5644:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5644:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99966,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5668:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 99991,
                  "src": "5660:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5643:33:383"
            },
            "returnParameters": {
              "id": 99968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5694:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100008,
            "nodeType": "FunctionDefinition",
            "src": "5998:127:383",
            "nodes": [],
            "body": {
              "id": 100007,
              "nodeType": "Block",
              "src": "6086:39:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100003,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99994,
                        "src": "6102:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100004,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99996,
                        "src": "6110:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100002,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154258,
                      "src": "6096:5:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6096:22:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100006,
                  "nodeType": "ExpressionStatement",
                  "src": "6096:22:383"
                }
              ]
            },
            "baseFunctions": [
              55249
            ],
            "documentation": {
              "id": 99992,
              "nodeType": "StructuredDocumentation",
              "src": "5874:119:383",
              "text": "@notice Burns `amount` of tokens from `owner`'s balance (without requiring approval from owner). See {ERC20-_burn}."
            },
            "functionSelector": "eac449d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99999,
                    "name": "REVOKE_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99785,
                    "src": "6073:11:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 100000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99998,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38436,
                  "src": "6064:8:383"
                },
                "nodeType": "ModifierInvocation",
                "src": "6064:21:383"
              }
            ],
            "name": "revoke",
            "nameLocation": "6007:6:383",
            "parameters": {
              "id": 99997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99994,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6022:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100008,
                  "src": "6014:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99996,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6038:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100008,
                  "src": "6030:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6013:33:383"
            },
            "returnParameters": {
              "id": 100001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6086:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 100027,
            "nodeType": "FunctionDefinition",
            "src": "6364:133:383",
            "nodes": [],
            "body": {
              "id": 100026,
              "nodeType": "Block",
              "src": "6420:77:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100017,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100011,
                        "src": "6436:3:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100018,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100013,
                        "src": "6441:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100016,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154186,
                      "src": "6430:5:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6430:19:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100020,
                  "nodeType": "ExpressionStatement",
                  "src": "6430:19:383"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 100022,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100011,
                        "src": "6477:3:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100023,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100013,
                        "src": "6482:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100021,
                      "name": "TokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55217,
                      "src": "6464:12:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6464:26:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100025,
                  "nodeType": "EmitStatement",
                  "src": "6459:31:383"
                }
              ]
            },
            "documentation": {
              "id": 100009,
              "nodeType": "StructuredDocumentation",
              "src": "6318:41:383",
              "text": "@dev Mints `amount` of tokens to `to`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTo",
            "nameLocation": "6373:7:383",
            "parameters": {
              "id": 100014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100011,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6389:3:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100027,
                  "src": "6381:11:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6381:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100013,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6402:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100027,
                  "src": "6394:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6394:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6380:30:383"
            },
            "returnParameters": {
              "id": 100015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6420:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100168,
            "nodeType": "FunctionDefinition",
            "src": "6588:1264:383",
            "nodes": [],
            "body": {
              "id": 100167,
              "nodeType": "Block",
              "src": "6723:1129:383",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100037,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100034,
                      "src": "6737:6:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6747:1:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6737:11:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100050,
                  "nodeType": "IfStatement",
                  "src": "6733:95:383",
                  "trueBody": {
                    "id": 100049,
                    "nodeType": "Block",
                    "src": "6750:78:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 100041,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6772:3:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100042,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6772:9:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 100043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6785:1:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6772:14:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 100045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6788:8:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 100040,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6764:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6764:33:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100047,
                        "nodeType": "ExpressionStatement",
                        "src": "6764:33:383"
                      },
                      {
                        "functionReturnParameters": 100036,
                        "id": 100048,
                        "nodeType": "Return",
                        "src": "6811:7:383"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    100052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100052,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "6843:13:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100167,
                      "src": "6838:18:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 100051,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6838:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100053,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6838:18:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100054,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100032,
                      "src": "6870:9:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100055,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "6883:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "6883:32:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6870:45:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100073,
                    "nodeType": "Block",
                    "src": "6983:55:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 100071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100066,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100052,
                            "src": "6997:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100067,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7013:3:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "7013:9:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 100069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7026:1:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7013:14:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6997:30:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100072,
                        "nodeType": "ExpressionStatement",
                        "src": "6997:30:383"
                      }
                    ]
                  },
                  "id": 100074,
                  "nodeType": "IfStatement",
                  "src": "6866:172:383",
                  "trueBody": {
                    "id": 100065,
                    "nodeType": "Block",
                    "src": "6917:60:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 100063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100058,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100052,
                            "src": "6931:13:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100059,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6947:3:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 100060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6947:9:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 100061,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100034,
                              "src": "6960:6:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6947:19:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6931:35:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100064,
                        "nodeType": "ExpressionStatement",
                        "src": "6931:35:383"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100076,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100052,
                        "src": "7055:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 100077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 100075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7047:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7047:43:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100079,
                  "nodeType": "ExpressionStatement",
                  "src": "7047:43:383"
                },
                {
                  "assignments": [
                    100081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100081,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "7109:13:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100167,
                      "src": "7101:21:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100080,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7101:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100092,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100082,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100030,
                        "src": "7125:21:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7158:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7150:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7150:7:383",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7150:10:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7125:35:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 100090,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100030,
                      "src": "7188:21:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 100091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7125:84:383",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 100088,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "7163:20:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 100089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7163:22:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7101:108:383"
                },
                {
                  "assignments": [
                    100094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100094,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "7228:4:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100167,
                      "src": "7220:12:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100093,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7220:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100095,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7220:12:383"
                },
                {
                  "assignments": [
                    100097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100097,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "7250:12:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100167,
                      "src": "7242:20:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100096,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7242:7:383",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100098,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7242:20:383"
                },
                {
                  "assignments": [
                    100101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100101,
                      "mutability": "mutable",
                      "name": "feeType",
                      "nameLocation": "7289:7:383",
                      "nodeType": "VariableDeclaration",
                      "scope": 100167,
                      "src": "7273:23:383",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      },
                      "typeName": {
                        "id": 100100,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100099,
                          "name": "PlatformFeeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50522,
                          "src": "7273:15:383"
                        },
                        "referencedDeclaration": 50522,
                        "src": "7273:15:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                          "typeString": "enum IPlatformFee.PlatformFeeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100104,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100102,
                      "name": "getPlatformFeeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39105,
                      "src": "7299:18:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_PlatformFeeType_$50522_$",
                        "typeString": "function () view returns (enum IPlatformFee.PlatformFeeType)"
                      }
                    },
                    "id": 100103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7299:20:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:46:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                      "typeString": "enum IPlatformFee.PlatformFeeType"
                    },
                    "id": 100108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100105,
                      "name": "feeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100101,
                      "src": "7333:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 100106,
                        "name": "PlatformFeeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50522,
                        "src": "7344:15:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PlatformFeeType_$50522_$",
                          "typeString": "type(enum IPlatformFee.PlatformFeeType)"
                        }
                      },
                      "id": 100107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Flat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50521,
                      "src": "7344:20:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PlatformFeeType_$50522",
                        "typeString": "enum IPlatformFee.PlatformFeeType"
                      }
                    },
                    "src": "7333:31:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100136,
                    "nodeType": "Block",
                    "src": "7444:169:383",
                    "statements": [
                      {
                        "assignments": [
                          100118
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 100118,
                            "mutability": "mutable",
                            "name": "platformFeeBps",
                            "nameLocation": "7465:14:383",
                            "nodeType": "VariableDeclaration",
                            "scope": 100136,
                            "src": "7458:21:383",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 100117,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "7458:6:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100119,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7458:21:383"
                      },
                      {
                        "expression": {
                          "id": 100125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 100120,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100097,
                                "src": "7494:12:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 100121,
                                "name": "platformFeeBps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100118,
                                "src": "7508:14:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 100122,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7493:30:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100123,
                              "name": "getPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39082,
                              "src": "7526:18:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                                "typeString": "function () view returns (address,uint16)"
                              }
                            },
                            "id": 100124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7526:20:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                              "typeString": "tuple(address,uint16)"
                            }
                          },
                          "src": "7493:53:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100126,
                        "nodeType": "ExpressionStatement",
                        "src": "7493:53:383"
                      },
                      {
                        "expression": {
                          "id": 100134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 100127,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100094,
                            "src": "7560:4:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 100130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 100128,
                                    "name": "_price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100034,
                                    "src": "7568:6:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 100129,
                                    "name": "platformFeeBps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100118,
                                    "src": "7577:14:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "7568:23:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 100131,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7567:25:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 100132,
                              "name": "MAX_BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99789,
                              "src": "7595:7:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7567:35:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7560:42:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100135,
                        "nodeType": "ExpressionStatement",
                        "src": "7560:42:383"
                      }
                    ]
                  },
                  "id": 100137,
                  "nodeType": "IfStatement",
                  "src": "7329:284:383",
                  "trueBody": {
                    "id": 100116,
                    "nodeType": "Block",
                    "src": "7366:72:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 100114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 100109,
                                "name": "feeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100097,
                                "src": "7381:12:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 100110,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100094,
                                "src": "7395:4:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 100111,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7380:20:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100112,
                              "name": "getFlatPlatformFeeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39095,
                              "src": "7403:22:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint256_$",
                                "typeString": "function () view returns (address,uint256)"
                              }
                            },
                            "id": 100113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7403:24:383",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "7380:47:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100115,
                        "nodeType": "ExpressionStatement",
                        "src": "7380:47:383"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100139,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100034,
                          "src": "7631:6:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 100140,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100094,
                          "src": "7641:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7631:14:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2146",
                        "id": 100142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7647:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5ad93706ea377a27905624f1d8150ee2e566c85364e39741eb9fae4dfa34a29",
                          "typeString": "literal_string \"!F\""
                        },
                        "value": "!F"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5ad93706ea377a27905624f1d8150ee2e566c85364e39741eb9fae4dfa34a29",
                          "typeString": "literal_string \"!F\""
                        }
                      ],
                      "id": 100138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7623:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7623:29:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100144,
                  "nodeType": "ExpressionStatement",
                  "src": "7623:29:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100148,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100032,
                        "src": "7700:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100149,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100309
                          ],
                          "referencedDeclaration": 100309,
                          "src": "7711:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7711:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100151,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100097,
                        "src": "7725:12:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100152,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100094,
                        "src": "7739:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100145,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "7663:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "7663:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:81:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100154,
                  "nodeType": "ExpressionStatement",
                  "src": "7663:81:383"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100158,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100032,
                        "src": "7791:9:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100159,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100309
                          ],
                          "referencedDeclaration": 100309,
                          "src": "7802:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7802:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100161,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100081,
                        "src": "7816:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100162,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100034,
                          "src": "7831:6:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 100163,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100094,
                          "src": "7840:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7831:13:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100155,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "7754:19:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 100157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "7754:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 100165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7754:91:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100166,
                  "nodeType": "ExpressionStatement",
                  "src": "7754:91:383"
                }
              ]
            },
            "documentation": {
              "id": 100028,
              "nodeType": "StructuredDocumentation",
              "src": "6503:80:383",
              "text": "@dev Collects and distributes the primary sale value of tokens being minted."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "6597:20:383",
            "parameters": {
              "id": 100035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100030,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "6635:21:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100168,
                  "src": "6627:29:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6627:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100032,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "6674:9:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100168,
                  "src": "6666:17:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100034,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "6701:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100168,
                  "src": "6693:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6693:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6617:96:383"
            },
            "returnParameters": {
              "id": 100036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6723:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100239,
            "nodeType": "FunctionDefinition",
            "src": "7895:483:383",
            "nodes": [],
            "body": {
              "id": 100238,
              "nodeType": "Block",
              "src": "8015:363:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100182,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100171,
                        "src": "8052:4:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100183,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100173,
                        "src": "8058:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100175,
                        "src": "8062:6:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100179,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8025:5:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LoyaltyPoints_$100323_$",
                          "typeString": "type(contract super LoyaltyPoints)"
                        }
                      },
                      "id": 100181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154357,
                      "src": "8025:26:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8025:44:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100186,
                  "nodeType": "ExpressionStatement",
                  "src": "8025:44:383"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 100208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 100201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8084:35:383",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 100188,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99773,
                              "src": "8093:13:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 100191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8116:1:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 100190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8108:7:383",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100189,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8108:7:383",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 100192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8108:10:383",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 100187,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "8085:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 100193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8085:34:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 100200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100195,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100171,
                          "src": "8123:4:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 100198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8139:1:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8131:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 100196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8131:7:383",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8131:10:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8123:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8084:57:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 100207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 100202,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100173,
                        "src": "8145:2:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8159:1:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8151:7:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8151:7:383",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8151:10:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8145:16:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8084:77:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100223,
                  "nodeType": "IfStatement",
                  "src": "8080:200:383",
                  "trueBody": {
                    "id": 100222,
                    "nodeType": "Block",
                    "src": "8163:117:383",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 100218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 100211,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99773,
                                    "src": "8193:13:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 100212,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100171,
                                    "src": "8208:4:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100210,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "8185:7:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 100213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8185:28:383",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 100215,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99773,
                                    "src": "8225:13:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 100216,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100173,
                                    "src": "8240:2:383",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 100214,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "8217:7:383",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 100217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8217:26:383",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8185:58:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 100219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8245:23:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 100209,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8177:7:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8177:92:383",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100221,
                        "nodeType": "ExpressionStatement",
                        "src": "8177:92:383"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 100224,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100171,
                      "src": "8294:4:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 100227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8310:1:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8302:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8302:7:383",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8302:10:383",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8294:18:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100237,
                  "nodeType": "IfStatement",
                  "src": "8290:82:383",
                  "trueBody": {
                    "id": 100236,
                    "nodeType": "Block",
                    "src": "8314:58:383",
                    "statements": [
                      {
                        "expression": {
                          "id": 100234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 100230,
                              "name": "_mintedToInLifetime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99794,
                              "src": "8328:19:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 100232,
                            "indexExpression": {
                              "id": 100231,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100173,
                              "src": "8348:2:383",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8328:23:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 100233,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100175,
                            "src": "8355:6:383",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8328:33:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100235,
                        "nodeType": "ExpressionStatement",
                        "src": "8328:33:383"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              154357
            ],
            "documentation": {
              "id": 100169,
              "nodeType": "StructuredDocumentation",
              "src": "7858:32:383",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "7904:20:383",
            "overrides": {
              "id": 100177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8006:8:383"
            },
            "parameters": {
              "id": 100176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100171,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7942:4:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100239,
                  "src": "7934:12:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7934:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100173,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7964:2:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100239,
                  "src": "7956:10:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7956:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100175,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7984:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100239,
                  "src": "7976:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7976:7:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7924:72:383"
            },
            "returnParameters": {
              "id": 100178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8015:0:383"
            },
            "scope": 100323,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100253,
            "nodeType": "FunctionDefinition",
            "src": "8473:137:383",
            "nodes": [],
            "body": {
              "id": 100252,
              "nodeType": "Block",
              "src": "8545:65:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100247,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "8570:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100248,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100309
                          ],
                          "referencedDeclaration": 100309,
                          "src": "8590:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8590:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100246,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "8562:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8562:41:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100245,
                  "id": 100251,
                  "nodeType": "Return",
                  "src": "8555:48:383"
                }
              ]
            },
            "baseFunctions": [
              39255
            ],
            "documentation": {
              "id": 100240,
              "nodeType": "StructuredDocumentation",
              "src": "8384:84:383",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "8482:22:383",
            "overrides": {
              "id": 100242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8521:8:383"
            },
            "parameters": {
              "id": 100241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8504:2:383"
            },
            "returnParameters": {
              "id": 100245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100244,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100253,
                  "src": "8539:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100243,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8539:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8538:6:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100267,
            "nodeType": "FunctionDefinition",
            "src": "8710:142:383",
            "nodes": [],
            "body": {
              "id": 100266,
              "nodeType": "Block",
              "src": "8787:65:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100261,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "8812:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100262,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100309
                          ],
                          "referencedDeclaration": 100309,
                          "src": "8832:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8832:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100260,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "8804:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8804:41:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100259,
                  "id": 100265,
                  "nodeType": "Return",
                  "src": "8797:48:383"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 100254,
              "nodeType": "StructuredDocumentation",
              "src": "8616:89:383",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "8719:27:383",
            "overrides": {
              "id": 100256,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8763:8:383"
            },
            "parameters": {
              "id": 100255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8746:2:383"
            },
            "returnParameters": {
              "id": 100259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100267,
                  "src": "8781:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8780:6:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100281,
            "nodeType": "FunctionDefinition",
            "src": "8947:133:383",
            "nodes": [],
            "body": {
              "id": 100280,
              "nodeType": "Block",
              "src": "9015:65:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100275,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "9040:18:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 100276,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            100309
                          ],
                          "referencedDeclaration": 100309,
                          "src": "9060:10:383",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 100277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9060:12:383",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100274,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "9032:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9032:41:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100273,
                  "id": 100279,
                  "nodeType": "Return",
                  "src": "9025:48:383"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 100268,
              "nodeType": "StructuredDocumentation",
              "src": "8858:84:383",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "8956:18:383",
            "overrides": {
              "id": 100270,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8991:8:383"
            },
            "parameters": {
              "id": 100269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8974:2:383"
            },
            "returnParameters": {
              "id": 100273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100281,
                  "src": "9009:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9009:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9008:6:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100296,
            "nodeType": "FunctionDefinition",
            "src": "9168:137:383",
            "nodes": [],
            "body": {
              "id": 100295,
              "nodeType": "Block",
              "src": "9252:53:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100291,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99779,
                        "src": "9277:11:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 100292,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100284,
                        "src": "9290:7:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100290,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "9269:7:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 100293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9269:29:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100289,
                  "id": 100294,
                  "nodeType": "Return",
                  "src": "9262:36:383"
                }
              ]
            },
            "baseFunctions": [
              40833
            ],
            "documentation": {
              "id": 100282,
              "nodeType": "StructuredDocumentation",
              "src": "9086:77:383",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9177:19:383",
            "overrides": {
              "id": 100286,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9228:8:383"
            },
            "parameters": {
              "id": 100285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100284,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "9205:7:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100296,
                  "src": "9197:15:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9197:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9196:17:383"
            },
            "returnParameters": {
              "id": 100289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100296,
                  "src": "9246:4:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100287,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9245:6:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 100309,
            "nodeType": "FunctionDefinition",
            "src": "9311:231:383",
            "nodes": [],
            "body": {
              "id": 100308,
              "nodeType": "Block",
              "src": "9480:62:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100304,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "9497:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "9497:36:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9497:38:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 100303,
                  "id": 100307,
                  "nodeType": "Return",
                  "src": "9490:45:383"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9320:10:383",
            "overrides": {
              "id": 100300,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100298,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "9396:18:383"
                },
                {
                  "id": 100299,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "9416:25:383"
                }
              ],
              "src": "9387:55:383"
            },
            "parameters": {
              "id": 100297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9330:2:383"
            },
            "returnParameters": {
              "id": 100303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100302,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9468:6:383",
                  "nodeType": "VariableDeclaration",
                  "scope": 100309,
                  "src": "9460:14:383",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:7:383",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9459:16:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 100322,
            "nodeType": "FunctionDefinition",
            "src": "9548:227:383",
            "nodes": [],
            "body": {
              "id": 100321,
              "nodeType": "Block",
              "src": "9715:60:383",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100317,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "9732:25:383",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 100318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "9732:34:383",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 100319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:36:383",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 100316,
                  "id": 100320,
                  "nodeType": "Return",
                  "src": "9725:43:383"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9557:8:383",
            "overrides": {
              "id": 100313,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100311,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "9631:18:383"
                },
                {
                  "id": 100312,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "9651:25:383"
                }
              ],
              "src": "9622:55:383"
            },
            "parameters": {
              "id": 100310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9565:2:383"
            },
            "returnParameters": {
              "id": 100316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100322,
                  "src": "9695:14:383",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100314,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9695:5:383",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9694:16:383"
            },
            "scope": 100323,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 99750,
              "name": "ILoyaltyPoints",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55250,
              "src": "1773:14:383"
            },
            "id": 99751,
            "nodeType": "InheritanceSpecifier",
            "src": "1773:14:383"
          },
          {
            "baseName": {
              "id": 99752,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1793:16:383"
            },
            "id": 99753,
            "nodeType": "InheritanceSpecifier",
            "src": "1793:16:383"
          },
          {
            "baseName": {
              "id": 99754,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "1815:11:383"
            },
            "id": 99755,
            "nodeType": "InheritanceSpecifier",
            "src": "1815:11:383"
          },
          {
            "baseName": {
              "id": 99756,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39256,
              "src": "1832:11:383"
            },
            "id": 99757,
            "nodeType": "InheritanceSpecifier",
            "src": "1832:11:383"
          },
          {
            "baseName": {
              "id": 99758,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1849:21:383"
            },
            "id": 99759,
            "nodeType": "InheritanceSpecifier",
            "src": "1849:21:383"
          },
          {
            "baseName": {
              "id": 99760,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152055,
              "src": "1876:26:383"
            },
            "id": 99761,
            "nodeType": "InheritanceSpecifier",
            "src": "1876:26:383"
          },
          {
            "baseName": {
              "id": 99762,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1908:25:383"
            },
            "id": 99763,
            "nodeType": "InheritanceSpecifier",
            "src": "1908:25:383"
          },
          {
            "baseName": {
              "id": 99764,
              "name": "SignatureMintERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40958,
              "src": "1939:29:383"
            },
            "id": 99765,
            "nodeType": "InheritanceSpecifier",
            "src": "1939:29:383"
          },
          {
            "baseName": {
              "id": 99766,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154374,
              "src": "1974:16:383"
            },
            "id": 99767,
            "nodeType": "InheritanceSpecifier",
            "src": "1974:16:383"
          }
        ],
        "canonicalName": "LoyaltyPoints",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 99749,
          "nodeType": "StructuredDocumentation",
          "src": "1360:381:383",
          "text": "  @title LoyaltyPoints\n  @custom:description This contract is a loyalty points contract. Each token represents a loyalty point. Loyalty points can\n                      be cancelled (i.e. 'burned') by its owner or an approved operator. Loyalty points can be revoked\n                      (i.e. 'burned') without its owner's approval, by an admin of the contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100323,
          154374,
          155198,
          154452,
          40958,
          51075,
          158875,
          75765,
          157714,
          152055,
          151869,
          39046,
          38747,
          50516,
          50491,
          39256,
          50559,
          39318,
          50580,
          34723,
          49679,
          55250
        ],
        "name": "LoyaltyPoints",
        "nameLocation": "1752:13:383",
        "scope": 100324,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 383
}