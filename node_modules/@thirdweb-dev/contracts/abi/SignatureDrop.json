{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdMinted",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropSinglePhase.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxClaimableSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantityLimitPerWallet",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "_condition",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC721.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropSinglePhase.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50615e1280620000216000396000f3fe6080604052600436106102d85760003560e01c80638da5cb5b116101825780638da5cb5b146107385780639010d07c1461075657806391d1485414610776578063938e3d7b1461079657806395d89b41146107b65780639bcf7a15146107cb5780639fc4d68f146107eb578063a05112fc1461080b578063a0a8e4601461082b578063a217fddf14610847578063a22cb4651461085c578063a2309ff81461087c578063a32fa5b314610892578063ac9650d8146108b2578063b24f2d39146108df578063b6f10c791461090e578063b88d4fde1461092e578063c87b56dd1461094e578063ca15c8731461096e578063cb2ef6f71461098e578063ce805642146109b1578063d37c353b146109d1578063d45573f6146109f1578063d547741f14610a06578063d637ed5914610a26578063e159163414610a4f578063e57553da14610a6f578063e715032214610a93578063e8a3d48514610ab3578063e985e9c514610ac8578063eec8897c14610b12578063f28083c314610b3257600080fd5b806301ffc9a7146102dd57806306fdde0314610312578063079fe40e14610334578063081812fc14610361578063095ea7b31461038157806313af4035146103a357806318160ddd146103c35780631e7ac488146103e857806323b872dd146104085780632419f51b14610428578063248a9ca314610448578063252e82e8146104755780632a55205a146104b45780632f2ff15d146104e257806335b65e1f1461050257806336568abe146105465780633b1475a714610566578063426cfaf31461057b57806342842e0e1461059b57806342966c68146105bb578063439c7be5146105db578063492e224b146105ee5780634cc157df1461060e578063572b6c0514610650578063600dd5ea146106705780636352211e1461069057806363b45e2d146106b05780636f4f2837146106c557806370a08231146106e55780637e54523c1461070557806384bb1e4214610725575b600080fd5b3480156102e957600080fd5b506102fd6102f8366004614c47565b610b52565b60405190151581526020015b60405180910390f35b34801561031e57600080fd5b50610327610b7e565b6040516103099190614cbc565b34801561034057600080fd5b50610349610c11565b6040516001600160a01b039091168152602001610309565b34801561036d57600080fd5b5061034961037c366004614cdc565b610c20565b34801561038d57600080fd5b506103a161039c366004614d11565b610c65565b005b3480156103af57600080fd5b506103a16103be366004614d3b565b610cfe565b3480156103cf57600080fd5b506101175461011654035b604051908152602001610309565b3480156103f457600080fd5b506103a1610403366004614d11565b610d37565b34801561041457600080fd5b506103a1610423366004614d56565b610d69565b34801561043457600080fd5b506103da610443366004614cdc565b610d74565b34801561045457600080fd5b506103da610463366004614cdc565b6000908152600d602052604090205490565b34801561048157600080fd5b50610495610490366004614dd3565b610de2565b6040805192151583526001600160a01b03909116602083015201610309565b3480156104c057600080fd5b506104d46104cf366004614e44565b610e26565b604051610309929190614e66565b3480156104ee57600080fd5b506103a16104fd366004614e7f565b610e63565b34801561050e57600080fd5b506103da61051d366004614d3b565b60175460009081526018602090815260408083206001600160a01b039094168352929052205490565b34801561055257600080fd5b506103a1610561366004614e7f565b610ef9565b34801561057257600080fd5b50600b546103da565b34801561058757600080fd5b506103a1610596366004614eb9565b610f58565b3480156105a757600080fd5b506103a16105b6366004614d56565b61116f565b3480156105c757600080fd5b506103a16105d6366004614cdc565b61118a565b6103496105e9366004614dd3565b611195565b3480156105fa57600080fd5b506102fd610609366004614cdc565b6112cf565b34801561061a57600080fd5b5061062e610629366004614cdc565b6112f5565b604080516001600160a01b03909316835261ffff909116602083015201610309565b34801561065c57600080fd5b506102fd61066b366004614d3b565b611364565b34801561067c57600080fd5b506103a161068b366004614d11565b611382565b34801561069c57600080fd5b506103496106ab366004614cdc565b6113b0565b3480156106bc57600080fd5b506009546103da565b3480156106d157600080fd5b506103a16106e0366004614d3b565b6113c2565b3480156106f157600080fd5b506103da610700366004614d3b565b6113ef565b34801561071157600080fd5b506103a1610720366004614d11565b61143e565b6103a1610733366004614fe5565b61146c565b34801561074457600080fd5b506007546001600160a01b0316610349565b34801561076257600080fd5b50610349610771366004614e44565b611573565b34801561078257600080fd5b506102fd610791366004614e7f565b611662565b3480156107a257600080fd5b506103a16107b136600461507b565b61168d565b3480156107c257600080fd5b506103276116ba565b3480156107d757600080fd5b506103a16107e63660046150af565b6116ca565b3480156107f757600080fd5b506103276108063660046150d4565b6116f9565b34801561081757600080fd5b50610327610826366004614cdc565b61187a565b34801561083757600080fd5b5060405160058152602001610309565b34801561085357600080fd5b506103da600081565b34801561086857600080fd5b506103a1610877366004615112565b611914565b34801561088857600080fd5b50610116546103da565b34801561089e57600080fd5b506102fd6108ad366004614e7f565b6119e8565b3480156108be57600080fd5b506108d26108cd36600461512e565b611a3e565b60405161030991906151a2565b3480156108eb57600080fd5b5060045461010081046001600160a01b031690600160a81b900461ffff1661062e565b34801561091a57600080fd5b506103a1610929366004615204565b611b32565b34801561093a57600080fd5b506103a1610949366004615225565b611bb3565b34801561095a57600080fd5b50610327610969366004614cdc565b611c04565b34801561097a57600080fd5b506103da610989366004614cdc565b611c73565b34801561099a57600080fd5b506c05369676e617475726544726f7609c1b6103da565b3480156109bd57600080fd5b506103276109cc3660046150d4565b611cfc565b3480156109dd57600080fd5b506103da6109ec36600461528c565b611d8a565b3480156109fd57600080fd5b5061062e611e22565b348015610a1257600080fd5b506103a1610a21366004614e7f565b611e3f565b348015610a3257600080fd5b50610a3b611e58565b604051610309989796959493929190615305565b348015610a5b57600080fd5b506103a1610a6a3660046153ec565b611f17565b348015610a7b57600080fd5b506104d46002546003546001600160a01b0390911691565b348015610a9f57600080fd5b50610327610aae3660046154fe565b612104565b348015610abf57600080fd5b50610327612179565b348015610ad457600080fd5b506102fd610ae336600461554c565b6001600160a01b03918216600090815261011d6020908152604080832093909416825291909152205460ff1690565b348015610b1e57600080fd5b506102fd610b2d366004615576565b612186565b348015610b3e57600080fd5b5060045460ff1660405161030991906155fd565b6000610b5d82612531565b80610b78575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101188054610b8e90615625565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba90615625565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610c2b82612581565b610c48576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011c60205260409020546001600160a01b031690565b6000610c70826113b0565b9050806001600160a01b0316836001600160a01b03161415610ca55760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610cb76125af565b6001600160a01b031614610cee57610cd181610ae36125af565b610cee576040516367d9dca160e11b815260040160405180910390fd5b610cf98383836125be565b505050565b610d0661261b565b610d2b5760405162461bcd60e51b8152600401610d229061565a565b60405180910390fd5b610d3481612629565b50565b610d3f61261b565b610d5b5760405162461bcd60e51b8152600401610d229061565a565b610d65828261267b565b5050565b610cf9838383612709565b6000610d7f60095490565b8210610dbd5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610d22565b60098281548110610dd057610dd0615682565b90600052602060002001549050919050565b600080610df0858585612915565b6101408601356000908152604d602052604090205490915060ff16158015610e1c5750610e1c8161297b565b9150935093915050565b600080600080610e35866112f5565b90945084925061ffff169050612710610e4e82876156ae565b610e5891906156e3565b925050509250929050565b6000828152600d6020526040902054610e7c903361298a565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610eef5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610d22565b610d658282612a0a565b336001600160a01b03821614610f4e5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610d22565b610d658282612a1e565b610f6061261b565b610f7c5760405162461bcd60e51b8152600401610d229061565a565b6017546011548215610fcd57506000610f93612a75565b60405160609190911b6001600160601b03191660208201524360348201526054016040516020818303038152906040528051906020012091505b83602001358111156110165760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610d22565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c001602081019061106d9190614d3b565b6001600160a01b0316815260200161108860e08701876156f7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051600f90815560208083015160105560408301516011556060830151601255608083015160135560a083015160145560c0830151601580546001600160a01b0319166001600160a01b0390921691909117905560e08301518051611127926016920190614b98565b50505060178290556040517f6dab9d7d05d468100139089b2516cb8ff286c3972ff070d3b509e371f0d0d4b89061116190869086906157ab565b60405180910390a150505050565b610cf983838360405180602001604052806000815250611bb3565b610d34816001612a7f565b61011654600b54600091906111ae60a087013583615842565b11156111cc5760405162461bcd60e51b8152600401610d229061585a565b6111d7858585612c63565b915060006111e86020870187614d3b565b905061121d6111fd6080880160608901614d3b565b60a08801356112136101008a0160e08b01614d3b565b8960c00135612dec565b600061122f6040880160208901614d3b565b6001600160a01b0316141580156112495750604086013515155b1561126c5761126c826112626040890160208a01614d3b565b8860400135612f2c565b61127a818760a00135612fd3565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c896040516112be919061587b565b60405180910390a450509392505050565b600081815260086020526040812080548291906112eb90615625565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561133c578051602082015161135a565b60045461010081046001600160a01b031690600160a81b900461ffff165b9250925050915091565b6001600160a01b031660009081526080602052604090205460ff1690565b61138a61261b565b6113a65760405162461bcd60e51b8152600401610d229061565a565b610d658282612fed565b60006113bb82613079565b5192915050565b6113ca61261b565b6113e65760405162461bcd60e51b8152600401610d229061565a565b610d3481613196565b60006001600160a01b038216611418576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011b60205260409020546001600160401b031690565b61144661261b565b6114625760405162461bcd60e51b8152600401610d229061565a565b610d6582826131e0565b61147a86868686868661323e565b601754611491611488612a75565b87878787612186565b5085600f60020160008282546114a79190615842565b9091555050600081815260186020526040812087916114c4612a75565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114f39190615842565b9091555061150690506000878787612dec565b60006115128888613276565b905080886001600160a01b0316611527612a75565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68a60405161156191815260200190565b60405180910390a45050505050505050565b6000828152600e602052604081205481805b82811015611659576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561160257848214156115f0576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610b78915050565b6115fb600183615842565b9150611647565b61160d866000611662565b801561163457506000868152600e6020908152604080832083805260020190915290205481145b1561164757611644600183615842565b91505b611652600182615842565b9050611585565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61169561261b565b6116b15760405162461bcd60e51b8152600401610d229061565a565b610d3481613284565b60606101198054610b8e90615625565b6116d261261b565b6116ee5760405162461bcd60e51b8152600401610d229061565a565b610cf9838383612f2c565b60008381526008602052604081208054606092919061171790615625565b80601f016020809104026020016040519081016040528092919081815260200182805461174390615625565b80156117905780601f1061176557610100808354040283529160200191611790565b820191906000526020600020905b81548152906001019060200180831161177357829003601f168201915b505050505090508051600014156117dd5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610d22565b600080828060200190518101906117f49190615989565b91509150611803828787612104565b9350808487874660405160200161181d9493929190615a09565b60405160208183030381529060405280519060200120146118705760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610d22565b5050509392505050565b6008602052600090815260409020805461189390615625565b80601f01602080910402602001604051908101604052809291908181526020018280546118bf90615625565b801561190c5780601f106118e15761010080835404028352916020019161190c565b820191906000526020600020905b8154815290600101906020018083116118ef57829003601f168201915b505050505081565b61191c6125af565b6001600160a01b0316826001600160a01b0316141561194e5760405163b06307db60e01b815260040160405180910390fd5b8061011d600061195c6125af565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556119a06125af565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119dc911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611a3557506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610b78565b50600192915050565b6060816001600160401b03811115611a5857611a58614f22565b604051908082528060200260200182016040528015611a8b57816020015b6060815260200190600190039081611a765790505b50905060005b82811015611b2b57611afb30858584818110611aaf57611aaf615682565b9050602002810190611ac191906156f7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061335a92505050565b828281518110611b0d57611b0d615682565b60200260200101819052508080611b2390615a32565b915050611a91565b5092915050565b611b3a61261b565b611b565760405162461bcd60e51b8152600401610d229061565a565b6004805482919060ff191660018381811115611b7457611b746155e7565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611ba891906155fd565b60405180910390a150565b611bbe848484612709565b611bd0836001600160a01b031661344c565b15611bfe57611be18484848461345b565b611bfe576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611c118361354a565b5090506000611c1f8461364f565b9050611c2a826112cf565b15611c585780604051602001611c409190615a4d565b60405160208183030381529060405292505050919050565b80611c62856137b0565b604051602001611c40929190615a72565b6000818152600e6020526040812054815b81811015611cd7576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611cc557611cc2600184615842565b92505b611cd0600182615842565b9050611c84565b50611ce3836000611662565b15611cf657611cf3600183615842565b91505b50919050565b606061014954611d0c813361298a565b6000611d1786610d74565b9050611d248186866116f9565b9250611d3f81604051806020016040528060008152506138ad565b611d4981846138cc565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611d799190614cbc565b60405180910390a250509392505050565b60008115611e0b57600080611da184860186615aa1565b915091508151600014158015611db657508015155b15611e0857611e0888600b54611dcc9190615842565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506138ad92505050565b50505b611e1886868686866138eb565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d6020526040902054610f4e903361298a565b600f8054601054601154601254601354601454601554601680549798969795969495939492936001600160a01b039092169291611e9490615625565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec090615625565b8015611f0d5780601f10611ee257610100808354040283529160200191611f0d565b820191906000526020600020905b815481529060010190602001808311611ef057829003601f168201915b5050505050905088565b600054610100900460ff1615808015611f375750600054600160ff909116105b80611f585750611f463061344c565b158015611f58575060005460ff166001145b611fbb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d22565b6000805460ff191660011790558015611fde576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612029896139f5565b6120338c8c613a2d565b61203b613a5e565b6120448a613284565b61204d8d612629565b61205860008e612a0a565b612062818e612a0a565b61206c828e612a0a565b612077826000612a0a565b61208a84866001600160801b031661267b565b61209d87876001600160801b0316612fed565b6120a688613196565b610148919091556101495580156120f7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561217057600085858360405160200161213993929190615ae5565b60408051601f19818403018152919052805160209182012088840182015118858401820152612169915082615842565b905061211a565b50509392505050565b6001805461189390615625565b6040805161010081018252600f805482526010546020830152601154928201929092526012546060820152601354608082015260145460a08201526015546001600160a01b031660c082015260168054600093849392909160e0840191906121ed90615625565b80601f016020809104026020016040519081016040528092919081815260200182805461221990615625565b80156122665780601f1061223b57610100808354040283529160200191612266565b820191906000526020600020905b81548152906001019060200180831161224957829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156123465761234261229e8780615af7565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c0135906122f3908d0160608e01614d3b565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613ad5565b5094505b84156123cb57602086013561235b5782612361565b85602001355b925060001986604001351415612377578161237d565b85604001355b91506000198660400135141580156123ae575060006123a26080880160608901614d3b565b6001600160a01b031614155b6123b857806123c8565b6123c86080870160608801614d3b565b90505b60175460009081526018602090815260408083206001600160a01b03808f168552925290912054908981169083161415806124065750828814155b156124465760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610d22565b89158061245b575083612459828c615842565b115b156124915760405162461bcd60e51b8152600401610d22906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516124a69190615842565b11156124e15760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610d22565b84514210156125235760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610d22565b505050505095945050505050565b60006001600160e01b031982166380ac58cd60e01b148061256257506001600160e01b03198216635b5e139f60e01b145b80610b7857506301ffc9a760e01b6001600160e01b0319831614610b78565b60006101165482108015610b78575050600090815261011a6020526040902054600160e01b900460ff161590565b60006125b9613ba3565b905090565b600082815261011c602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006125b9816107916125af565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561269d5760405162461bcd60e51b8152600401610d2290615b40565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b600061271482613079565b9050836001600160a01b031681600001516001600160a01b03161461274b5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b031661275f6125af565b6001600160a01b0316148061277b575061277b85610ae36125af565b806127a657506127896125af565b6001600160a01b031661279b84610c20565b6001600160a01b0316145b9050806127c657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127ed57604051633a954ecd60e21b815260040160405180910390fd5b6127fa8585856001613bc5565b612806600084876125be565b6001600160a01b03858116600090815261011b6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011a90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128dc576101165482146128dc57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615dbd83398151915260405160405180910390a45050505050565b600061297183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061296b925061295f9150889050613c63565b80519060200120613daa565b90613df8565b90505b9392505050565b6000610b786101495483611662565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610d65576129c8816001600160a01b03166014613e1c565b6129d3836020613e1c565b6040516020016129e4929190615b69565b60408051601f198184030181529082905262461bcd60e51b8252610d2291600401614cbc565b612a148282613fb7565b610d658282614012565b612a28828261407f565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b60006125b96125af565b6000612a8a83613079565b80519091508215612b12576000816001600160a01b0316612aa96125af565b6001600160a01b03161480612ac55750612ac582610ae36125af565b80612af05750612ad36125af565b6001600160a01b0316612ae586610c20565b6001600160a01b0316145b905080612b1057604051632ce44b5f60e11b815260040160405180910390fd5b505b612b20816000866001613bc5565b612b2c600085836125be565b6001600160a01b03808216600081815261011b602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011a909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612c2957610116548214612c2957805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615dbd833981519152908390a45050610117805460010190555050565b600080612c71858585610de2565b9250905080612cb05760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610d22565b42612cc361012087016101008801615bd6565b6001600160801b03161180612cf15750612ce561014086016101208701615bd6565b6001600160801b031642115b15612d2c5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610d22565b6000612d3b6020870187614d3b565b6001600160a01b03161415612d885760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610d22565b60008560a0013511612dc45760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610d22565b50610140909301356000908152604d60205260409020805460ff191660011790555090919050565b80612e14573415612e0f5760405162461bcd60e51b8152600401610d2290615bf1565b611bfe565b600080612e1f611e22565b909250905060006001600160a01b03871615612e3b5786612e43565b612e43610c11565b90506000612e5185886156ae565b90506000612710612e6661ffff8616846156ae565b612e7091906156e3565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612ed457813414612ecf5760405162461bcd60e51b815260206004820152600660248201526521507269636560d01b6044820152606401610d22565b612ef2565b3415612ef25760405162461bcd60e51b8152600401610d2290615bf1565b612f0587612efe6125af565b87846140e1565b612f2187612f116125af565b85612f1c8587615c11565b6140e1565b505050505050505050565b612710811115612f4e5760405162461bcd60e51b8152600401610d2290615b40565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610d65828260405180602001604052806000815250614126565b61271081111561300f5760405162461bcd60e51b8152600401610d2290615b40565b60048054610100600160b81b0319166101006001600160a01b03851690810261ffff60a81b191691909117600160a81b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126fd565b6040805160608101825260008082526020820181905291810191909152816101165481101561317d57600081815261011a6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061317b5780516001600160a01b031615613111579392505050565b5060001901600081815261011a6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215613176579392505050565b613111565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132329084908490614e66565b60405180910390a15050565b600b5485610116546132509190615842565b111561326e5760405162461bcd60e51b8152600401610d229061585a565b505050505050565b61011654610b788383612fd3565b60006001805461329390615625565b80601f01602080910402602001604051908101604052809291908181526020018280546132bf90615625565b801561330c5780601f106132e15761010080835404028352916020019161330c565b820191906000526020600020905b8154815290600101906020018083116132ef57829003601f168201915b5050855193945061332893600193506020870192509050614b98565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613232929190615c28565b60606133658361344c565b6133c05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d22565b600080846001600160a01b0316846040516133db9190615c4d565b600060405180830381855af49150503d8060008114613416576040519150601f19603f3d011682016040523d82523d6000602084013e61341b565b606091505b50915091506134438282604051806060016040528060278152602001615d96602791396142d0565b95945050505050565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134746125af565b8786866040518563ffffffff1660e01b81526004016134969493929190615c69565b6020604051808303816000875af19250505080156134d1575060408051601f3d908101601f191682019092526134ce91810190615c9c565b60015b61352c573d8080156134ff576040519150601f19603f3d011682016040523d82523d6000602084013e613504565b606091505b508051613524576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600080600061355860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156135a857602002820191906000526020600020905b815481526020019060010190808311613594575b5050505050905060005b82811015613614578181815181106135cc576135cc615682565b6020026020010151861015613602578093508181815181106135f0576135f0615682565b60200260200101519450505050915091565b61360d600182615842565b90506135b2565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610d22565b6060600061365c60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136ac57602002820191906000526020600020905b815481526020019060010190808311613698575b5050505050905060005b82811015613614578181815181106136d0576136d0615682565b602002602001015185101561379e57600a60008383815181106136f5576136f5615682565b60200260200101518152602001908152602001600020805461371690615625565b80601f016020809104026020016040519081016040528092919081815260200182805461374290615625565b801561378f5780601f106137645761010080835404028352916020019161378f565b820191906000526020600020905b81548152906001019060200180831161377257829003601f168201915b50505050509350505050919050565b6137a9600182615842565b90506136b6565b6060816137d45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156137fe57806137e881615a32565b91506137f79050600a836156e3565b91506137d8565b6000816001600160401b0381111561381857613818614f22565b6040519080825280601f01601f191660200182016040528015613842576020820181803683370190505b5090505b841561354257613857600183615c11565b9150613864600a86615cb9565b61386f906030615842565b60f81b81838151811061388457613884615682565b60200101906001600160f81b031916908160001a9053506138a6600a866156e3565b9450613846565b60008281526008602090815260409091208251610cf992840190614b98565b6000828152600a602090815260409091208251610cf992840190614b98565b60006138f5614309565b6139115760405162461bcd60e51b8152600401610d229061565a565b856139465760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610d22565b6000600b54905061398e818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061431a92505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016139c48a84615842565b6139ce9190615c11565b888888886040516139e3959493929190615ccd565b60405180910390a25095945050505050565b600054610100900460ff16613a1c5760405162461bcd60e51b8152600401610d2290615d06565b613a24614387565b610d34816143ae565b600054610100900460ff16613a545760405162461bcd60e51b8152600401610d2290615d06565b610d65828261443d565b600054610100900460ff16613a855760405162461bcd60e51b8152600401610d2290615d06565b613ad3604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b815250614498565b565b6000808281805b8751811015613b9757613af06002836156ae565b91506000888281518110613b0657613b06615682565b60200260200101519050808411613b48576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613b84565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613b819190615842565b92505b5080613b8f81615a32565b915050613adc565b50941495939450505050565b6000613bae33611364565b15613bc0575060131936013560601c90565b503390565b613bd3610148546000611662565b158015613be857506001600160a01b03841615155b8015613bfc57506001600160a01b03831615155b15611bfe57613c0e6101485485611662565b158015613c255750613c236101485484611662565b155b15611bfe5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610d22565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613c936020840184614d3b565b613ca36040850160208601614d3b565b6040850135613cb86080870160608801614d3b565b613cc560808801886156f7565b604051613cd3929190615d51565b60405190819003902060a088013560c0890135613cf76101008b0160e08c01614d3b565b613d096101208c016101008d01615bd6565b613d1b6101408d016101208e01615bd6565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610b78613db76144c9565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613e078585614544565b91509150613e148161458a565b509392505050565b60606000613e2b8360026156ae565b613e36906002615842565b6001600160401b03811115613e4d57613e4d614f22565b6040519080825280601f01601f191660200182016040528015613e77576020820181803683370190505b509050600360fc1b81600081518110613e9257613e92615682565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613ec157613ec1615682565b60200101906001600160f81b031916908160001a9053506000613ee58460026156ae565b613ef0906001615842565b90505b6001811115613f68576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613f2457613f24615682565b1a60f81b828281518110613f3a57613f3a615682565b60200101906001600160f81b031916908160001a90535060049490941c93613f6181615d61565b9050613ef3565b5083156129745760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d22565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e60205260408120805491600191906140318385615842565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b614089828261298a565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806140eb57611bfe565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561411a57612e0f8282614740565b611bfe848484846147e2565b610116546001600160a01b03841661415057604051622e076360e81b815260040160405180910390fd5b8261416e5760405163b562e8dd60e01b815260040160405180910390fd5b61417b6000858386613bc5565b6001600160a01b038416600081815261011b6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011a90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142169061344c565b1561428d575b60405182906001600160a01b03881690600090600080516020615dbd833981519152908290a4614255600087848060010195508761345b565b614272576040516368d2bf6b60e11b815260040160405180910390fd5b80821061421c5782610116541461428857600080fd5b6142c0565b5b6040516001830192906001600160a01b03881690600090600080516020615dbd833981519152908290a480821061428e575b5061011655611bfe600085838684565b606083156142df575081612974565b8251156142ef5782518084602001fd5b8160405162461bcd60e51b8152600401610d229190614cbc565b60006125b9610149546107916125af565b6000806143278486615842565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a60209081526040909120855192945084935061437e929091860190614b98565b50935093915050565b600054610100900460ff16613ad35760405162461bcd60e51b8152600401610d2290615d06565b600054610100900460ff166143d55760405162461bcd60e51b8152600401610d2290615d06565b60005b8151811015610d65576001608060008484815181106143f9576143f9615682565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061443581615a32565b9150506143d8565b600054610100900460ff166144645760405162461bcd60e51b8152600401610d2290615d06565b815161447890610118906020850190614b98565b50805161448d90610119906020840190614b98565b506000610116555050565b600054610100900460ff166144bf5760405162461bcd60e51b8152600401610d2290615d06565b610d65828261483b565b60006125b97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6144f860195490565b601a546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008082516041141561457b5760208301516040840151606085015160001a61456f8782858561487c565b94509450505050614583565b506000905060025b9250929050565b600081600481111561459e5761459e6155e7565b14156145a75750565b60018160048111156145bb576145bb6155e7565b14156146045760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610d22565b6002816004811115614618576146186155e7565b14156146665760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d22565b600381600481111561467a5761467a6155e7565b14156146d35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610d22565b60048160048111156146e7576146e76155e7565b1415610d345760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610d22565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461478d576040519150601f19603f3d011682016040523d82523d6000602084013e614792565b606091505b5050905080610cf95760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610d22565b816001600160a01b0316836001600160a01b0316141561480157611bfe565b6001600160a01b03831630141561482657612e0f6001600160a01b038516838361495f565b611bfe6001600160a01b0385168484846149b5565b600054610100900460ff166148625760405162461bcd60e51b8152600401610d2290615d06565b815160209283012081519190920120601991909155601a55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156148a95750600090506003614956565b8460ff16601b141580156148c157508460ff16601c14155b156148d25750600090506004614956565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614926573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661494f57600060019250925050614956565b9150600090505b94509492505050565b610cf98363a9059cbb60e01b848460405160240161497e929190614e66565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526149ed565b6040516001600160a01b0380851660248301528316604482015260648101829052611bfe9085906323b872dd60e01b9060840161497e565b6000614a42826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614abf9092919063ffffffff16565b805190915015610cf95780806020019051810190614a609190615d78565b610cf95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d22565b6060612971848460008585614ad38561344c565b614b1f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d22565b600080866001600160a01b03168587604051614b3b9190615c4d565b60006040518083038185875af1925050503d8060008114614b78576040519150601f19603f3d011682016040523d82523d6000602084013e614b7d565b606091505b5091509150614b8d8282866142d0565b979650505050505050565b828054614ba490615625565b90600052602060002090601f016020900481019282614bc65760008555614c0c565b82601f10614bdf57805160ff1916838001178555614c0c565b82800160010185558215614c0c579182015b82811115614c0c578251825591602001919060010190614bf1565b50614c18929150614c1c565b5090565b5b80821115614c185760008155600101614c1d565b6001600160e01b031981168114610d3457600080fd5b600060208284031215614c5957600080fd5b813561297481614c31565b60005b83811015614c7f578181015183820152602001614c67565b83811115611bfe5750506000910152565b60008151808452614ca8816020860160208601614c64565b601f01601f19169290920160200192915050565b6020815260006129746020830184614c90565b6001600160a01b03169052565b600060208284031215614cee57600080fd5b5035919050565b80356001600160a01b0381168114614d0c57600080fd5b919050565b60008060408385031215614d2457600080fd5b614d2d83614cf5565b946020939093013593505050565b600060208284031215614d4d57600080fd5b61297482614cf5565b600080600060608486031215614d6b57600080fd5b614d7484614cf5565b9250614d8260208501614cf5565b9150604084013590509250925092565b60008083601f840112614da457600080fd5b5081356001600160401b03811115614dbb57600080fd5b60208301915083602082850101111561458357600080fd5b600080600060408486031215614de857600080fd5b83356001600160401b0380821115614dff57600080fd5b908501906101608288031215614e1457600080fd5b90935060208501359080821115614e2a57600080fd5b50614e3786828701614d92565b9497909650939450505050565b60008060408385031215614e5757600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614e9257600080fd5b82359150614ea260208401614cf5565b90509250929050565b8015158114610d3457600080fd5b60008060408385031215614ecc57600080fd5b82356001600160401b03811115614ee257600080fd5b83016101008186031215614ef557600080fd5b91506020830135614f0581614eab565b809150509250929050565b600060808284031215611cf657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f6057614f60614f22565b604052919050565b60006001600160401b03821115614f8157614f81614f22565b50601f01601f191660200190565b600082601f830112614fa057600080fd5b8135614fb3614fae82614f68565b614f38565b818152846020838601011115614fc857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614ffe57600080fd5b61500787614cf5565b95506020870135945061501c60408801614cf5565b93506060870135925060808701356001600160401b038082111561503f57600080fd5b61504b8a838b01614f10565b935060a089013591508082111561506157600080fd5b5061506e89828a01614f8f565b9150509295509295509295565b60006020828403121561508d57600080fd5b81356001600160401b038111156150a357600080fd5b61354284828501614f8f565b6000806000606084860312156150c457600080fd5b83359250614d8260208501614cf5565b6000806000604084860312156150e957600080fd5b8335925060208401356001600160401b0381111561510657600080fd5b614e3786828701614d92565b6000806040838503121561512557600080fd5b614ef583614cf5565b6000806020838503121561514157600080fd5b82356001600160401b038082111561515857600080fd5b818501915085601f83011261516c57600080fd5b81358181111561517b57600080fd5b8660208260051b850101111561519057600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156151f757603f198886030184526151e5858351614c90565b945092850192908501906001016151c9565b5092979650505050505050565b60006020828403121561521657600080fd5b81356002811061297457600080fd5b6000806000806080858703121561523b57600080fd5b61524485614cf5565b935061525260208601614cf5565b92506040850135915060608501356001600160401b0381111561527457600080fd5b61528087828801614f8f565b91505092959194509250565b6000806000806000606086880312156152a457600080fd5b8535945060208601356001600160401b03808211156152c257600080fd5b6152ce89838a01614d92565b909650945060408801359150808211156152e757600080fd5b506152f488828901614d92565b969995985093965092949392505050565b60006101008a83528960208401528860408401528760608401528660808401528560a084015260018060a01b03851660c08401528060e084015261534b81840185614c90565b9b9a5050505050505050505050565b600082601f83011261536b57600080fd5b813560206001600160401b0382111561538657615386614f22565b8160051b615395828201614f38565b92835284810182019282810190878511156153af57600080fd5b83870192505b84831015614b8d576153c683614cf5565b825291830191908301906153b5565b80356001600160801b0381168114614d0c57600080fd5b6000806000806000806000806000806101408b8d03121561540c57600080fd5b6154158b614cf5565b995060208b01356001600160401b038082111561543157600080fd5b61543d8e838f01614f8f565b9a5060408d013591508082111561545357600080fd5b61545f8e838f01614f8f565b995060608d013591508082111561547557600080fd5b6154818e838f01614f8f565b985060808d013591508082111561549757600080fd5b506154a48d828e0161535a565b9650506154b360a08c01614cf5565b94506154c160c08c01614cf5565b93506154cf60e08c016153d5565b92506154de6101008c016153d5565b91506154ed6101208c01614cf5565b90509295989b9194979a5092959850565b60008060006040848603121561551357600080fd5b83356001600160401b038082111561552a57600080fd5b61553687838801614f8f565b94506020860135915080821115614e2a57600080fd5b6000806040838503121561555f57600080fd5b61556883614cf5565b9150614ea260208401614cf5565b600080600080600060a0868803121561558e57600080fd5b61559786614cf5565b9450602086013593506155ac60408701614cf5565b92506060860135915060808601356001600160401b038111156155ce57600080fd5b6155da88828901614f10565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061561f57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061563957607f821691505b60208210811415611cf657634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156156c8576156c8615698565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826156f2576156f26156cd565b500490565b6000808335601e1984360301811261570e57600080fd5b8301803591506001600160401b0382111561572857600080fd5b60200191503681900382131561458357600080fd5b6000808335601e1984360301811261575457600080fd5b83016020810192503590506001600160401b0381111561577357600080fd5b80360383131561458357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152823560408201526020830135606082015260408301356080820152606083013560a0820152608083013560c082015260a083013560e082015260006157f660c08501614cf5565b6001600160a01b0381166101008481019190915261581760e087018761573d565b92508161012086015261582f61014086018483615782565b9350505050612974602083018415159052565b6000821982111561585557615855615698565b500190565b60208082526007908201526621546f6b656e7360c81b604082015260600190565b602081526158946020820161588f84614cf5565b614ccf565b60006158a260208401614cf5565b6158af6040840182614ccf565b50604083013560608301526158c660608401614cf5565b6158d36080840182614ccf565b506158e1608084018461573d565b6101608060a08601526158f961018086018385615782565b925060a086013560c086015260c086013560e086015261591b60e08701614cf5565b915061010061592c81870184614ccf565b6159378188016153d5565b925050610120615951818701846001600160801b03169052565b61595c8188016153d5565b925050610140615976818701846001600160801b03169052565b9590950135939094019290925250919050565b6000806040838503121561599c57600080fd5b82516001600160401b038111156159b257600080fd5b8301601f810185136159c357600080fd5b80516159d1614fae82614f68565b8181528660208385010111156159e657600080fd5b6159f7826020830160208601614c64565b60209590950151949694955050505050565b60008551615a1b818460208a01614c64565b820184868237909301918252506020019392505050565b6000600019821415615a4657615a46615698565b5060010190565b60008251615a5f818460208701614c64565b600360fc1b920191825250600101919050565b60008351615a84818460208801614c64565b835190830190615a98818360208801614c64565b01949350505050565b60008060408385031215615ab457600080fd5b82356001600160401b03811115615aca57600080fd5b615ad685828601614f8f565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615b0e57600080fd5b8301803591506001600160401b03821115615b2857600080fd5b6020019150600581901b360382131561458357600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b99816015850160208801614c64565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bca816026840160208801614c64565b01602601949350505050565b600060208284031215615be857600080fd5b612974826153d5565b6020808252600690820152652156616c756560d01b604082015260600190565b600082821015615c2357615c23615698565b500390565b604081526000615c3b6040830185614c90565b82810360208401526134438185614c90565b60008251615c5f818460208701614c64565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e1890830184614c90565b600060208284031215615cae57600080fd5b815161297481614c31565b600082615cc857615cc86156cd565b500690565b858152606060208201526000615ce7606083018688615782565b8281036040840152615cfa818587615782565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615d7057615d70615698565b506000190190565b600060208284031215615d8a57600080fd5b815161297481614eab56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c18137c499b14a21341f14d50bfeae5e111040f1068bbc09877934a2858beef464736f6c634300080c0033",
    "sourceMap": "1694:12027:344:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102d85760003560e01c80638da5cb5b116101825780638da5cb5b146107385780639010d07c1461075657806391d1485414610776578063938e3d7b1461079657806395d89b41146107b65780639bcf7a15146107cb5780639fc4d68f146107eb578063a05112fc1461080b578063a0a8e4601461082b578063a217fddf14610847578063a22cb4651461085c578063a2309ff81461087c578063a32fa5b314610892578063ac9650d8146108b2578063b24f2d39146108df578063b6f10c791461090e578063b88d4fde1461092e578063c87b56dd1461094e578063ca15c8731461096e578063cb2ef6f71461098e578063ce805642146109b1578063d37c353b146109d1578063d45573f6146109f1578063d547741f14610a06578063d637ed5914610a26578063e159163414610a4f578063e57553da14610a6f578063e715032214610a93578063e8a3d48514610ab3578063e985e9c514610ac8578063eec8897c14610b12578063f28083c314610b3257600080fd5b806301ffc9a7146102dd57806306fdde0314610312578063079fe40e14610334578063081812fc14610361578063095ea7b31461038157806313af4035146103a357806318160ddd146103c35780631e7ac488146103e857806323b872dd146104085780632419f51b14610428578063248a9ca314610448578063252e82e8146104755780632a55205a146104b45780632f2ff15d146104e257806335b65e1f1461050257806336568abe146105465780633b1475a714610566578063426cfaf31461057b57806342842e0e1461059b57806342966c68146105bb578063439c7be5146105db578063492e224b146105ee5780634cc157df1461060e578063572b6c0514610650578063600dd5ea146106705780636352211e1461069057806363b45e2d146106b05780636f4f2837146106c557806370a08231146106e55780637e54523c1461070557806384bb1e4214610725575b600080fd5b3480156102e957600080fd5b506102fd6102f8366004614c47565b610b52565b60405190151581526020015b60405180910390f35b34801561031e57600080fd5b50610327610b7e565b6040516103099190614cbc565b34801561034057600080fd5b50610349610c11565b6040516001600160a01b039091168152602001610309565b34801561036d57600080fd5b5061034961037c366004614cdc565b610c20565b34801561038d57600080fd5b506103a161039c366004614d11565b610c65565b005b3480156103af57600080fd5b506103a16103be366004614d3b565b610cfe565b3480156103cf57600080fd5b506101175461011654035b604051908152602001610309565b3480156103f457600080fd5b506103a1610403366004614d11565b610d37565b34801561041457600080fd5b506103a1610423366004614d56565b610d69565b34801561043457600080fd5b506103da610443366004614cdc565b610d74565b34801561045457600080fd5b506103da610463366004614cdc565b6000908152600d602052604090205490565b34801561048157600080fd5b50610495610490366004614dd3565b610de2565b6040805192151583526001600160a01b03909116602083015201610309565b3480156104c057600080fd5b506104d46104cf366004614e44565b610e26565b604051610309929190614e66565b3480156104ee57600080fd5b506103a16104fd366004614e7f565b610e63565b34801561050e57600080fd5b506103da61051d366004614d3b565b60175460009081526018602090815260408083206001600160a01b039094168352929052205490565b34801561055257600080fd5b506103a1610561366004614e7f565b610ef9565b34801561057257600080fd5b50600b546103da565b34801561058757600080fd5b506103a1610596366004614eb9565b610f58565b3480156105a757600080fd5b506103a16105b6366004614d56565b61116f565b3480156105c757600080fd5b506103a16105d6366004614cdc565b61118a565b6103496105e9366004614dd3565b611195565b3480156105fa57600080fd5b506102fd610609366004614cdc565b6112cf565b34801561061a57600080fd5b5061062e610629366004614cdc565b6112f5565b604080516001600160a01b03909316835261ffff909116602083015201610309565b34801561065c57600080fd5b506102fd61066b366004614d3b565b611364565b34801561067c57600080fd5b506103a161068b366004614d11565b611382565b34801561069c57600080fd5b506103496106ab366004614cdc565b6113b0565b3480156106bc57600080fd5b506009546103da565b3480156106d157600080fd5b506103a16106e0366004614d3b565b6113c2565b3480156106f157600080fd5b506103da610700366004614d3b565b6113ef565b34801561071157600080fd5b506103a1610720366004614d11565b61143e565b6103a1610733366004614fe5565b61146c565b34801561074457600080fd5b506007546001600160a01b0316610349565b34801561076257600080fd5b50610349610771366004614e44565b611573565b34801561078257600080fd5b506102fd610791366004614e7f565b611662565b3480156107a257600080fd5b506103a16107b136600461507b565b61168d565b3480156107c257600080fd5b506103276116ba565b3480156107d757600080fd5b506103a16107e63660046150af565b6116ca565b3480156107f757600080fd5b506103276108063660046150d4565b6116f9565b34801561081757600080fd5b50610327610826366004614cdc565b61187a565b34801561083757600080fd5b5060405160058152602001610309565b34801561085357600080fd5b506103da600081565b34801561086857600080fd5b506103a1610877366004615112565b611914565b34801561088857600080fd5b50610116546103da565b34801561089e57600080fd5b506102fd6108ad366004614e7f565b6119e8565b3480156108be57600080fd5b506108d26108cd36600461512e565b611a3e565b60405161030991906151a2565b3480156108eb57600080fd5b5060045461010081046001600160a01b031690600160a81b900461ffff1661062e565b34801561091a57600080fd5b506103a1610929366004615204565b611b32565b34801561093a57600080fd5b506103a1610949366004615225565b611bb3565b34801561095a57600080fd5b50610327610969366004614cdc565b611c04565b34801561097a57600080fd5b506103da610989366004614cdc565b611c73565b34801561099a57600080fd5b506c05369676e617475726544726f7609c1b6103da565b3480156109bd57600080fd5b506103276109cc3660046150d4565b611cfc565b3480156109dd57600080fd5b506103da6109ec36600461528c565b611d8a565b3480156109fd57600080fd5b5061062e611e22565b348015610a1257600080fd5b506103a1610a21366004614e7f565b611e3f565b348015610a3257600080fd5b50610a3b611e58565b604051610309989796959493929190615305565b348015610a5b57600080fd5b506103a1610a6a3660046153ec565b611f17565b348015610a7b57600080fd5b506104d46002546003546001600160a01b0390911691565b348015610a9f57600080fd5b50610327610aae3660046154fe565b612104565b348015610abf57600080fd5b50610327612179565b348015610ad457600080fd5b506102fd610ae336600461554c565b6001600160a01b03918216600090815261011d6020908152604080832093909416825291909152205460ff1690565b348015610b1e57600080fd5b506102fd610b2d366004615576565b612186565b348015610b3e57600080fd5b5060045460ff1660405161030991906155fd565b6000610b5d82612531565b80610b78575063152a902d60e11b6001600160e01b03198316145b92915050565b60606101188054610b8e90615625565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba90615625565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b5050505050905090565b6006546001600160a01b031690565b6000610c2b82612581565b610c48576040516333d1c03960e21b815260040160405180910390fd5b50600090815261011c60205260409020546001600160a01b031690565b6000610c70826113b0565b9050806001600160a01b0316836001600160a01b03161415610ca55760405163250fdee360e21b815260040160405180910390fd5b806001600160a01b0316610cb76125af565b6001600160a01b031614610cee57610cd181610ae36125af565b610cee576040516367d9dca160e11b815260040160405180910390fd5b610cf98383836125be565b505050565b610d0661261b565b610d2b5760405162461bcd60e51b8152600401610d229061565a565b60405180910390fd5b610d3481612629565b50565b610d3f61261b565b610d5b5760405162461bcd60e51b8152600401610d229061565a565b610d65828261267b565b5050565b610cf9838383612709565b6000610d7f60095490565b8210610dbd5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610d22565b60098281548110610dd057610dd0615682565b90600052602060002001549050919050565b600080610df0858585612915565b6101408601356000908152604d602052604090205490915060ff16158015610e1c5750610e1c8161297b565b9150935093915050565b600080600080610e35866112f5565b90945084925061ffff169050612710610e4e82876156ae565b610e5891906156e3565b925050509250929050565b6000828152600d6020526040902054610e7c903361298a565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1615610eef5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610d22565b610d658282612a0a565b336001600160a01b03821614610f4e5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610d22565b610d658282612a1e565b610f6061261b565b610f7c5760405162461bcd60e51b8152600401610d229061565a565b6017546011548215610fcd57506000610f93612a75565b60405160609190911b6001600160601b03191660208201524360348201526054016040516020818303038152906040528051906020012091505b83602001358111156110165760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610d22565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c001602081019061106d9190614d3b565b6001600160a01b0316815260200161108860e08701876156f7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051600f90815560208083015160105560408301516011556060830151601255608083015160135560a083015160145560c0830151601580546001600160a01b0319166001600160a01b0390921691909117905560e08301518051611127926016920190614b98565b50505060178290556040517f6dab9d7d05d468100139089b2516cb8ff286c3972ff070d3b509e371f0d0d4b89061116190869086906157ab565b60405180910390a150505050565b610cf983838360405180602001604052806000815250611bb3565b610d34816001612a7f565b61011654600b54600091906111ae60a087013583615842565b11156111cc5760405162461bcd60e51b8152600401610d229061585a565b6111d7858585612c63565b915060006111e86020870187614d3b565b905061121d6111fd6080880160608901614d3b565b60a08801356112136101008a0160e08b01614d3b565b8960c00135612dec565b600061122f6040880160208901614d3b565b6001600160a01b0316141580156112495750604086013515155b1561126c5761126c826112626040890160208a01614d3b565b8860400135612f2c565b61127a818760a00135612fd3565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c896040516112be919061587b565b60405180910390a450509392505050565b600081815260086020526040812080548291906112eb90615625565b9050119050919050565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561133c578051602082015161135a565b60045461010081046001600160a01b031690600160a81b900461ffff165b9250925050915091565b6001600160a01b031660009081526080602052604090205460ff1690565b61138a61261b565b6113a65760405162461bcd60e51b8152600401610d229061565a565b610d658282612fed565b60006113bb82613079565b5192915050565b6113ca61261b565b6113e65760405162461bcd60e51b8152600401610d229061565a565b610d3481613196565b60006001600160a01b038216611418576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b0316600090815261011b60205260409020546001600160401b031690565b61144661261b565b6114625760405162461bcd60e51b8152600401610d229061565a565b610d6582826131e0565b61147a86868686868661323e565b601754611491611488612a75565b87878787612186565b5085600f60020160008282546114a79190615842565b9091555050600081815260186020526040812087916114c4612a75565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114f39190615842565b9091555061150690506000878787612dec565b60006115128888613276565b905080886001600160a01b0316611527612a75565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68a60405161156191815260200190565b60405180910390a45050505050505050565b6000828152600e602052604081205481805b82811015611659576000868152600e602090815260408083208484526001019091529020546001600160a01b03161561160257848214156115f0576000868152600e602090815260408083209383526001909301905220546001600160a01b03169250610b78915050565b6115fb600183615842565b9150611647565b61160d866000611662565b801561163457506000868152600e6020908152604080832083805260020190915290205481145b1561164757611644600183615842565b91505b611652600182615842565b9050611585565b50505092915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61169561261b565b6116b15760405162461bcd60e51b8152600401610d229061565a565b610d3481613284565b60606101198054610b8e90615625565b6116d261261b565b6116ee5760405162461bcd60e51b8152600401610d229061565a565b610cf9838383612f2c565b60008381526008602052604081208054606092919061171790615625565b80601f016020809104026020016040519081016040528092919081815260200182805461174390615625565b80156117905780601f1061176557610100808354040283529160200191611790565b820191906000526020600020905b81548152906001019060200180831161177357829003601f168201915b505050505090508051600014156117dd5760405162461bcd60e51b8152602060048201526011602482015270139bdd1a1a5b99c81d1bc81c995d99585b607a1b6044820152606401610d22565b600080828060200190518101906117f49190615989565b91509150611803828787612104565b9350808487874660405160200161181d9493929190615a09565b60405160208183030381529060405280519060200120146118705760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610d22565b5050509392505050565b6008602052600090815260409020805461189390615625565b80601f01602080910402602001604051908101604052809291908181526020018280546118bf90615625565b801561190c5780601f106118e15761010080835404028352916020019161190c565b820191906000526020600020905b8154815290600101906020018083116118ef57829003601f168201915b505050505081565b61191c6125af565b6001600160a01b0316826001600160a01b0316141561194e5760405163b06307db60e01b815260040160405180910390fd5b8061011d600061195c6125af565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556119a06125af565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119dc911515815260200190565b60405180910390a35050565b6000828152600c6020908152604080832083805290915281205460ff16611a3557506000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610b78565b50600192915050565b6060816001600160401b03811115611a5857611a58614f22565b604051908082528060200260200182016040528015611a8b57816020015b6060815260200190600190039081611a765790505b50905060005b82811015611b2b57611afb30858584818110611aaf57611aaf615682565b9050602002810190611ac191906156f7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061335a92505050565b828281518110611b0d57611b0d615682565b60200260200101819052508080611b2390615a32565b915050611a91565b5092915050565b611b3a61261b565b611b565760405162461bcd60e51b8152600401610d229061565a565b6004805482919060ff191660018381811115611b7457611b746155e7565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611ba891906155fd565b60405180910390a150565b611bbe848484612709565b611bd0836001600160a01b031661344c565b15611bfe57611be18484848461345b565b611bfe576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611c118361354a565b5090506000611c1f8461364f565b9050611c2a826112cf565b15611c585780604051602001611c409190615a4d565b60405160208183030381529060405292505050919050565b80611c62856137b0565b604051602001611c40929190615a72565b6000818152600e6020526040812054815b81811015611cd7576000848152600e602090815260408083208484526001019091529020546001600160a01b031615611cc557611cc2600184615842565b92505b611cd0600182615842565b9050611c84565b50611ce3836000611662565b15611cf657611cf3600183615842565b91505b50919050565b606061014954611d0c813361298a565b6000611d1786610d74565b9050611d248186866116f9565b9250611d3f81604051806020016040528060008152506138ad565b611d4981846138cc565b857f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d84604051611d799190614cbc565b60405180910390a250509392505050565b60008115611e0b57600080611da184860186615aa1565b915091508151600014158015611db657508015155b15611e0857611e0888600b54611dcc9190615842565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506138ad92505050565b50505b611e1886868686866138eb565b9695505050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b6000828152600d6020526040902054610f4e903361298a565b600f8054601054601154601254601354601454601554601680549798969795969495939492936001600160a01b039092169291611e9490615625565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec090615625565b8015611f0d5780601f10611ee257610100808354040283529160200191611f0d565b820191906000526020600020905b815481529060010190602001808311611ef057829003601f168201915b5050505050905088565b600054610100900460ff1615808015611f375750600054600160ff909116105b80611f585750611f463061344c565b158015611f58575060005460ff166001145b611fbb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d22565b6000805460ff191660011790558015611fde576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612029896139f5565b6120338c8c613a2d565b61203b613a5e565b6120448a613284565b61204d8d612629565b61205860008e612a0a565b612062818e612a0a565b61206c828e612a0a565b612077826000612a0a565b61208a84866001600160801b031661267b565b61209d87876001600160801b0316612fed565b6120a688613196565b610148919091556101495580156120f7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b8251604080518083016020019091528181529060005b8181101561217057600085858360405160200161213993929190615ae5565b60408051601f19818403018152919052805160209182012088840182015118858401820152612169915082615842565b905061211a565b50509392505050565b6001805461189390615625565b6040805161010081018252600f805482526010546020830152601154928201929092526012546060820152601354608082015260145460a08201526015546001600160a01b031660c082015260168054600093849392909160e0840191906121ed90615625565b80601f016020809104026020016040519081016040528092919081815260200182805461221990615625565b80156122665780601f1061223b57610100808354040283529160200191612266565b820191906000526020600020905b81548152906001019060200180831161224957829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156123465761234261229e8780615af7565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c0135906122f3908d0160608e01614d3b565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613ad5565b5094505b84156123cb57602086013561235b5782612361565b85602001355b925060001986604001351415612377578161237d565b85604001355b91506000198660400135141580156123ae575060006123a26080880160608901614d3b565b6001600160a01b031614155b6123b857806123c8565b6123c86080870160608801614d3b565b90505b60175460009081526018602090815260408083206001600160a01b03808f168552925290912054908981169083161415806124065750828814155b156124465760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610d22565b89158061245b575083612459828c615842565b115b156124915760405162461bcd60e51b8152600401610d22906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516124a69190615842565b11156124e15760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610d22565b84514210156125235760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610d22565b505050505095945050505050565b60006001600160e01b031982166380ac58cd60e01b148061256257506001600160e01b03198216635b5e139f60e01b145b80610b7857506301ffc9a760e01b6001600160e01b0319831614610b78565b60006101165482108015610b78575050600090815261011a6020526040902054600160e01b900460ff161590565b60006125b9613ba3565b905090565b600082815261011c602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006125b9816107916125af565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61271081111561269d5760405162461bcd60e51b8152600401610d2290615b40565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b600061271482613079565b9050836001600160a01b031681600001516001600160a01b03161461274b5760405162a1148160e81b815260040160405180910390fd5b6000846001600160a01b031661275f6125af565b6001600160a01b0316148061277b575061277b85610ae36125af565b806127a657506127896125af565b6001600160a01b031661279b84610c20565b6001600160a01b0316145b9050806127c657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166127ed57604051633a954ecd60e21b815260040160405180910390fd5b6127fa8585856001613bc5565b612806600084876125be565b6001600160a01b03858116600090815261011b6020908152604080832080546001600160401b03198082166001600160401b039283166000190183161790925589861680865283862080549384169383166001908101841694909417905589865261011a90945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166128dc576101165482146128dc57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020615dbd83398151915260405160405180910390a45050505050565b600061297183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061296b925061295f9150889050613c63565b80519060200120613daa565b90613df8565b90505b9392505050565b6000610b786101495483611662565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff16610d65576129c8816001600160a01b03166014613e1c565b6129d3836020613e1c565b6040516020016129e4929190615b69565b60408051601f198184030181529082905262461bcd60e51b8252610d2291600401614cbc565b612a148282613fb7565b610d658282614012565b612a28828261407f565b6000828152600e602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b60006125b96125af565b6000612a8a83613079565b80519091508215612b12576000816001600160a01b0316612aa96125af565b6001600160a01b03161480612ac55750612ac582610ae36125af565b80612af05750612ad36125af565b6001600160a01b0316612ae586610c20565b6001600160a01b0316145b905080612b1057604051632ce44b5f60e11b815260040160405180910390fd5b505b612b20816000866001613bc5565b612b2c600085836125be565b6001600160a01b03808216600081815261011b602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b865261011a909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612c2957610116548214612c2957805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020615dbd833981519152908390a45050610117805460010190555050565b600080612c71858585610de2565b9250905080612cb05760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b6044820152606401610d22565b42612cc361012087016101008801615bd6565b6001600160801b03161180612cf15750612ce561014086016101208701615bd6565b6001600160801b031642115b15612d2c5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b6044820152606401610d22565b6000612d3b6020870187614d3b565b6001600160a01b03161415612d885760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610d22565b60008560a0013511612dc45760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610d22565b50610140909301356000908152604d60205260409020805460ff191660011790555090919050565b80612e14573415612e0f5760405162461bcd60e51b8152600401610d2290615bf1565b611bfe565b600080612e1f611e22565b909250905060006001600160a01b03871615612e3b5786612e43565b612e43610c11565b90506000612e5185886156ae565b90506000612710612e6661ffff8616846156ae565b612e7091906156e3565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612ed457813414612ecf5760405162461bcd60e51b815260206004820152600660248201526521507269636560d01b6044820152606401610d22565b612ef2565b3415612ef25760405162461bcd60e51b8152600401610d2290615bf1565b612f0587612efe6125af565b87846140e1565b612f2187612f116125af565b85612f1c8587615c11565b6140e1565b505050505050505050565b612710811115612f4e5760405162461bcd60e51b8152600401610d2290615b40565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610d65828260405180602001604052806000815250614126565b61271081111561300f5760405162461bcd60e51b8152600401610d2290615b40565b60048054610100600160b81b0319166101006001600160a01b03851690810261ffff60a81b191691909117600160a81b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020016126fd565b6040805160608101825260008082526020820181905291810191909152816101165481101561317d57600081815261011a6020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061317b5780516001600160a01b031615613111579392505050565b5060001901600081815261011a6020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215613176579392505050565b613111565b505b604051636f96cda160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906132329084908490614e66565b60405180910390a15050565b600b5485610116546132509190615842565b111561326e5760405162461bcd60e51b8152600401610d229061585a565b505050505050565b61011654610b788383612fd3565b60006001805461329390615625565b80601f01602080910402602001604051908101604052809291908181526020018280546132bf90615625565b801561330c5780601f106132e15761010080835404028352916020019161330c565b820191906000526020600020905b8154815290600101906020018083116132ef57829003601f168201915b5050855193945061332893600193506020870192509050614b98565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613232929190615c28565b60606133658361344c565b6133c05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d22565b600080846001600160a01b0316846040516133db9190615c4d565b600060405180830381855af49150503d8060008114613416576040519150601f19603f3d011682016040523d82523d6000602084013e61341b565b606091505b50915091506134438282604051806060016040528060278152602001615d96602791396142d0565b95945050505050565b6001600160a01b03163b151590565b6000836001600160a01b031663150b7a026134746125af565b8786866040518563ffffffff1660e01b81526004016134969493929190615c69565b6020604051808303816000875af19250505080156134d1575060408051601f3d908101601f191682019092526134ce91810190615c9c565b60015b61352c573d8080156134ff576040519150601f19603f3d011682016040523d82523d6000602084013e613504565b606091505b508051613524576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600080600061355860095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156135a857602002820191906000526020600020905b815481526020019060010190808311613594575b5050505050905060005b82811015613614578181815181106135cc576135cc615682565b6020026020010151861015613602578093508181815181106135f0576135f0615682565b60200260200101519450505050915091565b61360d600182615842565b90506135b2565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610d22565b6060600061365c60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156136ac57602002820191906000526020600020905b815481526020019060010190808311613698575b5050505050905060005b82811015613614578181815181106136d0576136d0615682565b602002602001015185101561379e57600a60008383815181106136f5576136f5615682565b60200260200101518152602001908152602001600020805461371690615625565b80601f016020809104026020016040519081016040528092919081815260200182805461374290615625565b801561378f5780601f106137645761010080835404028352916020019161378f565b820191906000526020600020905b81548152906001019060200180831161377257829003601f168201915b50505050509350505050919050565b6137a9600182615842565b90506136b6565b6060816137d45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156137fe57806137e881615a32565b91506137f79050600a836156e3565b91506137d8565b6000816001600160401b0381111561381857613818614f22565b6040519080825280601f01601f191660200182016040528015613842576020820181803683370190505b5090505b841561354257613857600183615c11565b9150613864600a86615cb9565b61386f906030615842565b60f81b81838151811061388457613884615682565b60200101906001600160f81b031916908160001a9053506138a6600a866156e3565b9450613846565b60008281526008602090815260409091208251610cf992840190614b98565b6000828152600a602090815260409091208251610cf992840190614b98565b60006138f5614309565b6139115760405162461bcd60e51b8152600401610d229061565a565b856139465760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610d22565b6000600b54905061398e818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061431a92505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016139c48a84615842565b6139ce9190615c11565b888888886040516139e3959493929190615ccd565b60405180910390a25095945050505050565b600054610100900460ff16613a1c5760405162461bcd60e51b8152600401610d2290615d06565b613a24614387565b610d34816143ae565b600054610100900460ff16613a545760405162461bcd60e51b8152600401610d2290615d06565b610d65828261443d565b600054610100900460ff16613a855760405162461bcd60e51b8152600401610d2290615d06565b613ad3604051806040016040528060138152602001725369676e61747572654d696e7445524337323160681b815250604051806040016040528060018152602001603160f81b815250614498565b565b6000808281805b8751811015613b9757613af06002836156ae565b91506000888281518110613b0657613b06615682565b60200260200101519050808411613b48576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613b84565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613b819190615842565b92505b5080613b8f81615a32565b915050613adc565b50941495939450505050565b6000613bae33611364565b15613bc0575060131936013560601c90565b503390565b613bd3610148546000611662565b158015613be857506001600160a01b03841615155b8015613bfc57506001600160a01b03831615155b15611bfe57613c0e6101485485611662565b158015613c255750613c236101485484611662565b155b15611bfe5760405162461bcd60e51b815260206004820152600e60248201526d215472616e736665722d526f6c6560901b6044820152606401610d22565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d44613c936020840184614d3b565b613ca36040850160208601614d3b565b6040850135613cb86080870160608801614d3b565b613cc560808801886156f7565b604051613cd3929190615d51565b60405190819003902060a088013560c0890135613cf76101008b0160e08c01614d3b565b613d096101208c016101008d01615bd6565b613d1b6101408d016101208e01615bd6565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b6000610b78613db76144c9565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613e078585614544565b91509150613e148161458a565b509392505050565b60606000613e2b8360026156ae565b613e36906002615842565b6001600160401b03811115613e4d57613e4d614f22565b6040519080825280601f01601f191660200182016040528015613e77576020820181803683370190505b509050600360fc1b81600081518110613e9257613e92615682565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613ec157613ec1615682565b60200101906001600160f81b031916908160001a9053506000613ee58460026156ae565b613ef0906001615842565b90505b6001811115613f68576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110613f2457613f24615682565b1a60f81b828281518110613f3a57613f3a615682565b60200101906001600160f81b031916908160001a90535060049490941c93613f6181615d61565b9050613ef3565b5083156129745760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d22565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600e60205260408120805491600191906140318385615842565b90915550506000928352600e6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b614089828261298a565b6000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b806140eb57611bfe565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561411a57612e0f8282614740565b611bfe848484846147e2565b610116546001600160a01b03841661415057604051622e076360e81b815260040160405180910390fd5b8261416e5760405163b562e8dd60e01b815260040160405180910390fd5b61417b6000858386613bc5565b6001600160a01b038416600081815261011b6020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b0181169092021790915585845261011a90925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501906142169061344c565b1561428d575b60405182906001600160a01b03881690600090600080516020615dbd833981519152908290a4614255600087848060010195508761345b565b614272576040516368d2bf6b60e11b815260040160405180910390fd5b80821061421c5782610116541461428857600080fd5b6142c0565b5b6040516001830192906001600160a01b03881690600090600080516020615dbd833981519152908290a480821061428e575b5061011655611bfe600085838684565b606083156142df575081612974565b8251156142ef5782518084602001fd5b8160405162461bcd60e51b8152600401610d229190614cbc565b60006125b9610149546107916125af565b6000806143278486615842565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a60209081526040909120855192945084935061437e929091860190614b98565b50935093915050565b600054610100900460ff16613ad35760405162461bcd60e51b8152600401610d2290615d06565b600054610100900460ff166143d55760405162461bcd60e51b8152600401610d2290615d06565b60005b8151811015610d65576001608060008484815181106143f9576143f9615682565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061443581615a32565b9150506143d8565b600054610100900460ff166144645760405162461bcd60e51b8152600401610d2290615d06565b815161447890610118906020850190614b98565b50805161448d90610119906020840190614b98565b506000610116555050565b600054610100900460ff166144bf5760405162461bcd60e51b8152600401610d2290615d06565b610d65828261483b565b60006125b97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6144f860195490565b601a546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008082516041141561457b5760208301516040840151606085015160001a61456f8782858561487c565b94509450505050614583565b506000905060025b9250929050565b600081600481111561459e5761459e6155e7565b14156145a75750565b60018160048111156145bb576145bb6155e7565b14156146045760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610d22565b6002816004811115614618576146186155e7565b14156146665760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d22565b600381600481111561467a5761467a6155e7565b14156146d35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610d22565b60048160048111156146e7576146e76155e7565b1415610d345760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610d22565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461478d576040519150601f19603f3d011682016040523d82523d6000602084013e614792565b606091505b5050905080610cf95760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610d22565b816001600160a01b0316836001600160a01b0316141561480157611bfe565b6001600160a01b03831630141561482657612e0f6001600160a01b038516838361495f565b611bfe6001600160a01b0385168484846149b5565b600054610100900460ff166148625760405162461bcd60e51b8152600401610d2290615d06565b815160209283012081519190920120601991909155601a55565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156148a95750600090506003614956565b8460ff16601b141580156148c157508460ff16601c14155b156148d25750600090506004614956565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614926573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661494f57600060019250925050614956565b9150600090505b94509492505050565b610cf98363a9059cbb60e01b848460405160240161497e929190614e66565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526149ed565b6040516001600160a01b0380851660248301528316604482015260648101829052611bfe9085906323b872dd60e01b9060840161497e565b6000614a42826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614abf9092919063ffffffff16565b805190915015610cf95780806020019051810190614a609190615d78565b610cf95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d22565b6060612971848460008585614ad38561344c565b614b1f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d22565b600080866001600160a01b03168587604051614b3b9190615c4d565b60006040518083038185875af1925050503d8060008114614b78576040519150601f19603f3d011682016040523d82523d6000602084013e614b7d565b606091505b5091509150614b8d8282866142d0565b979650505050505050565b828054614ba490615625565b90600052602060002090601f016020900481019282614bc65760008555614c0c565b82601f10614bdf57805160ff1916838001178555614c0c565b82800160010185558215614c0c579182015b82811115614c0c578251825591602001919060010190614bf1565b50614c18929150614c1c565b5090565b5b80821115614c185760008155600101614c1d565b6001600160e01b031981168114610d3457600080fd5b600060208284031215614c5957600080fd5b813561297481614c31565b60005b83811015614c7f578181015183820152602001614c67565b83811115611bfe5750506000910152565b60008151808452614ca8816020860160208601614c64565b601f01601f19169290920160200192915050565b6020815260006129746020830184614c90565b6001600160a01b03169052565b600060208284031215614cee57600080fd5b5035919050565b80356001600160a01b0381168114614d0c57600080fd5b919050565b60008060408385031215614d2457600080fd5b614d2d83614cf5565b946020939093013593505050565b600060208284031215614d4d57600080fd5b61297482614cf5565b600080600060608486031215614d6b57600080fd5b614d7484614cf5565b9250614d8260208501614cf5565b9150604084013590509250925092565b60008083601f840112614da457600080fd5b5081356001600160401b03811115614dbb57600080fd5b60208301915083602082850101111561458357600080fd5b600080600060408486031215614de857600080fd5b83356001600160401b0380821115614dff57600080fd5b908501906101608288031215614e1457600080fd5b90935060208501359080821115614e2a57600080fd5b50614e3786828701614d92565b9497909650939450505050565b60008060408385031215614e5757600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614e9257600080fd5b82359150614ea260208401614cf5565b90509250929050565b8015158114610d3457600080fd5b60008060408385031215614ecc57600080fd5b82356001600160401b03811115614ee257600080fd5b83016101008186031215614ef557600080fd5b91506020830135614f0581614eab565b809150509250929050565b600060808284031215611cf657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f6057614f60614f22565b604052919050565b60006001600160401b03821115614f8157614f81614f22565b50601f01601f191660200190565b600082601f830112614fa057600080fd5b8135614fb3614fae82614f68565b614f38565b818152846020838601011115614fc857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215614ffe57600080fd5b61500787614cf5565b95506020870135945061501c60408801614cf5565b93506060870135925060808701356001600160401b038082111561503f57600080fd5b61504b8a838b01614f10565b935060a089013591508082111561506157600080fd5b5061506e89828a01614f8f565b9150509295509295509295565b60006020828403121561508d57600080fd5b81356001600160401b038111156150a357600080fd5b61354284828501614f8f565b6000806000606084860312156150c457600080fd5b83359250614d8260208501614cf5565b6000806000604084860312156150e957600080fd5b8335925060208401356001600160401b0381111561510657600080fd5b614e3786828701614d92565b6000806040838503121561512557600080fd5b614ef583614cf5565b6000806020838503121561514157600080fd5b82356001600160401b038082111561515857600080fd5b818501915085601f83011261516c57600080fd5b81358181111561517b57600080fd5b8660208260051b850101111561519057600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156151f757603f198886030184526151e5858351614c90565b945092850192908501906001016151c9565b5092979650505050505050565b60006020828403121561521657600080fd5b81356002811061297457600080fd5b6000806000806080858703121561523b57600080fd5b61524485614cf5565b935061525260208601614cf5565b92506040850135915060608501356001600160401b0381111561527457600080fd5b61528087828801614f8f565b91505092959194509250565b6000806000806000606086880312156152a457600080fd5b8535945060208601356001600160401b03808211156152c257600080fd5b6152ce89838a01614d92565b909650945060408801359150808211156152e757600080fd5b506152f488828901614d92565b969995985093965092949392505050565b60006101008a83528960208401528860408401528760608401528660808401528560a084015260018060a01b03851660c08401528060e084015261534b81840185614c90565b9b9a5050505050505050505050565b600082601f83011261536b57600080fd5b813560206001600160401b0382111561538657615386614f22565b8160051b615395828201614f38565b92835284810182019282810190878511156153af57600080fd5b83870192505b84831015614b8d576153c683614cf5565b825291830191908301906153b5565b80356001600160801b0381168114614d0c57600080fd5b6000806000806000806000806000806101408b8d03121561540c57600080fd5b6154158b614cf5565b995060208b01356001600160401b038082111561543157600080fd5b61543d8e838f01614f8f565b9a5060408d013591508082111561545357600080fd5b61545f8e838f01614f8f565b995060608d013591508082111561547557600080fd5b6154818e838f01614f8f565b985060808d013591508082111561549757600080fd5b506154a48d828e0161535a565b9650506154b360a08c01614cf5565b94506154c160c08c01614cf5565b93506154cf60e08c016153d5565b92506154de6101008c016153d5565b91506154ed6101208c01614cf5565b90509295989b9194979a5092959850565b60008060006040848603121561551357600080fd5b83356001600160401b038082111561552a57600080fd5b61553687838801614f8f565b94506020860135915080821115614e2a57600080fd5b6000806040838503121561555f57600080fd5b61556883614cf5565b9150614ea260208401614cf5565b600080600080600060a0868803121561558e57600080fd5b61559786614cf5565b9450602086013593506155ac60408701614cf5565b92506060860135915060808601356001600160401b038111156155ce57600080fd5b6155da88828901614f10565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016002831061561f57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061563957607f821691505b60208210811415611cf657634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156156c8576156c8615698565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826156f2576156f26156cd565b500490565b6000808335601e1984360301811261570e57600080fd5b8301803591506001600160401b0382111561572857600080fd5b60200191503681900382131561458357600080fd5b6000808335601e1984360301811261575457600080fd5b83016020810192503590506001600160401b0381111561577357600080fd5b80360383131561458357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152823560408201526020830135606082015260408301356080820152606083013560a0820152608083013560c082015260a083013560e082015260006157f660c08501614cf5565b6001600160a01b0381166101008481019190915261581760e087018761573d565b92508161012086015261582f61014086018483615782565b9350505050612974602083018415159052565b6000821982111561585557615855615698565b500190565b60208082526007908201526621546f6b656e7360c81b604082015260600190565b602081526158946020820161588f84614cf5565b614ccf565b60006158a260208401614cf5565b6158af6040840182614ccf565b50604083013560608301526158c660608401614cf5565b6158d36080840182614ccf565b506158e1608084018461573d565b6101608060a08601526158f961018086018385615782565b925060a086013560c086015260c086013560e086015261591b60e08701614cf5565b915061010061592c81870184614ccf565b6159378188016153d5565b925050610120615951818701846001600160801b03169052565b61595c8188016153d5565b925050610140615976818701846001600160801b03169052565b9590950135939094019290925250919050565b6000806040838503121561599c57600080fd5b82516001600160401b038111156159b257600080fd5b8301601f810185136159c357600080fd5b80516159d1614fae82614f68565b8181528660208385010111156159e657600080fd5b6159f7826020830160208601614c64565b60209590950151949694955050505050565b60008551615a1b818460208a01614c64565b820184868237909301918252506020019392505050565b6000600019821415615a4657615a46615698565b5060010190565b60008251615a5f818460208701614c64565b600360fc1b920191825250600101919050565b60008351615a84818460208801614c64565b835190830190615a98818360208801614c64565b01949350505050565b60008060408385031215615ab457600080fd5b82356001600160401b03811115615aca57600080fd5b615ad685828601614f8f565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112615b0e57600080fd5b8301803591506001600160401b03821115615b2857600080fd5b6020019150600581901b360382131561458357600080fd5b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615b99816015850160208801614c64565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bca816026840160208801614c64565b01602601949350505050565b600060208284031215615be857600080fd5b612974826153d5565b6020808252600690820152652156616c756560d01b604082015260600190565b600082821015615c2357615c23615698565b500390565b604081526000615c3b6040830185614c90565b82810360208401526134438185614c90565b60008251615c5f818460208701614c64565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e1890830184614c90565b600060208284031215615cae57600080fd5b815161297481614c31565b600082615cc857615cc86156cd565b500690565b858152606060208201526000615ce7606083018688615782565b8281036040840152615cfa818587615782565b98975050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8183823760009101908152919050565b600081615d7057615d70615698565b506000190190565b600060208284031215615d8a57600080fd5b815161297481614eab56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c18137c499b14a21341f14d50bfeae5e111040f1068bbc09877934a2858beef464736f6c634300080c0033",
    "sourceMap": "1694:12027:344:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793:280;;;;;;;;;;-1:-1:-1;4793:280:344;;;;;:::i;:::-;;:::i;:::-;;;661:14:641;;654:22;636:41;;624:2;609:18;4793:280:344;;;;;;;;6619:98:391;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:136:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1712:32:641;;;1694:51;;1682:2;1667:18;676:104:136;1548:203:641;8087:200:391;;;;;;;;;;-1:-1:-1;8087:200:391;;;;;:::i;:::-;;:::i;7652:374::-;;;;;;;;;;-1:-1:-1;7652:374:391;;;;;:::i;:::-;;:::i;:::-;;1133:173:132;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;2807:306:391:-;;;;;;;;;;-1:-1:-1;3066:12:391;;3050:13;;:28;2807:306;;;2715:25:641;;;2703:2;2688:18;2807:306:391;2569:177:641;2043:269:135;;;;;;;;;;-1:-1:-1;2043:269:135;;;;;:::i;:::-;;:::i;8926:164:391:-;;;;;;;;;;-1:-1:-1;8926:164:391;;;;;:::i;:::-;;:::i;1277:203:114:-;;;;;;;;;;-1:-1:-1;1277:203:114;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;1252:293:148;;;;;;;;;;-1:-1:-1;1252:293:148;;;;;:::i;:::-;;:::i;:::-;;;;4701:14:641;;4694:22;4676:41;;-1:-1:-1;;;;;4753:32:641;;;4748:2;4733:18;;4726:60;4649:18;1252:293:148;4508:284:641;1421:347:139;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:133:-;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;5881:150:122:-;;;;;;;;;;-1:-1:-1;5881:150:122;;;;;:::i;:::-;6002:11;;5954:7;5980:34;;;:21;:34;;;;;;;;-1:-1:-1;;;;;5980:44:122;;;;;;;;;;;5881:150;4466:217:133;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;12159:106:344:-;;;;;;;;;;-1:-1:-1;12237:21:344;;12159:106;;2330:1219:122;;;;;;;;;;-1:-1:-1;2330:1219:122;;;;;:::i;:::-;;:::i;9156:179:391:-;;;;;;;;;;-1:-1:-1;9156:179:391;;;;;:::i;:::-;;:::i;12321:184:344:-;;;;;;;;;;-1:-1:-1;12321:184:344;;;;;:::i;:::-;;:::i;6947:947::-;;;;;;:::i;:::-;;:::i;3937:129:119:-;;;;;;;;;;-1:-1:-1;3937:129:119;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6430:32:641;;;6412:51;;6511:6;6499:19;;;6494:2;6479:18;;6472:47;6385:18;2008:381:139;6240:285:641;918:134:304;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;6434:123:391:-;;;;;;;;;;-1:-1:-1;6434:123:391;;;;;:::i;:::-;;:::i;980:96:114:-;;;;;;;;;;-1:-1:-1;1054:8:114;:15;980:96;;1189:228:136;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;3948:203:391:-;;;;;;;;;;-1:-1:-1;3948:203:391;;;;;:::i;:::-;;:::i;2821:255:135:-;;;;;;;;;;-1:-1:-1;2821:255:135;;;;;:::i;:::-;;:::i;1181:1086:122:-;;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;-1:-1:-1;944:6:132;;-1:-1:-1;;;;;944:6:132;871:86;;1643:633:134;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;6781:102:391:-;;;;;;;;;;;;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;1383:534:119:-;;;;;;;;;;-1:-1:-1;1383:534:119;;;;;:::i;:::-;;:::i;568:46::-;;;;;;;;;;-1:-1:-1;568:46:119;;;;;:::i;:::-;;:::i;5189:89:344:-;;;;;;;;;;-1:-1:-1;5189:89:344;;5269:1;10403:36:641;;10391:2;10376:18;5189:89:344;10261:184:641;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;8354:282:391;;;;;;;;;;-1:-1:-1;8354:282:391;;;;;:::i;:::-;;:::i;11933:144:344:-;;;;;;;;;;-1:-1:-1;12029:13:344;;11933:144;;2206:211:133;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;;;;;;;;;;-1:-1:-1;2599:16:139;;;;;-1:-1:-1;;;;;2599:16:139;;-1:-1:-1;;;2624:10:139;;;;2499:144;;3455:243:135;;;;;;;;;;-1:-1:-1;3455:243:135;;;;;:::i;:::-;;:::i;9401:360:391:-;;;;;;;;;;-1:-1:-1;9401:360:391;;;;;:::i;:::-;;:::i;4360:402:344:-;;;;;;;;;;-1:-1:-1;4360:402:344;;;;;:::i;:::-;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;5079:104:344:-;;;;;;;;;;-1:-1:-1;;;;5079:104:344;;6299:395;;;;;;;;;;-1:-1:-1;6299:395:344;;;;;:::i;:::-;;:::i;5652:540::-;;;;;;;;;;-1:-1:-1;5652:540:344;;;;;:::i;:::-;;:::i;1058:147:135:-;;;;;;;;;;;;;:::i;3897:171:133:-;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;463:36:122:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;2856:1257:344:-;;;;;;;;;;-1:-1:-1;2856:1257:344;;;;;:::i;:::-;;:::i;1268:136:135:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:135;;;;1268:136;2409:1283:119;;;;;;;;;;-1:-1:-1;2409:1283:119;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;8702:162:391:-;;;;;;;;;;-1:-1:-1;8702:162:391;;;;;:::i;:::-;-1:-1:-1;;;;;8822:25:391;;;8799:4;8822:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8702:162;3646:2154:122;;;;;;;;;;-1:-1:-1;3646:2154:122;;;;;:::i;:::-;;:::i;1467:107:135:-;;;;;;;;;;-1:-1:-1;1552:15:135;;;;1467:107;;;;;;:::i;4793:280:344:-;4947:4;4974:36;4998:11;4974:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;5014:52:344;;;4974:92;4967:99;4793:280;-1:-1:-1;;4793:280:344:o;6619:98:391:-;6673:13;6705:5;6698:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6619:98;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;8087:200:391:-;8155:7;8179:16;8187:7;8179;:16::i;:::-;8174:64;;8204:34;;-1:-1:-1;;;8204:34:391;;;;;;;;;;;8174:64;-1:-1:-1;8256:24:391;;;;:15;:24;;;;;;-1:-1:-1;;;;;8256:24:391;;8087:200::o;7652:374::-;7724:13;7740:35;7767:7;7740:26;:35::i;:::-;7724:51;;7795:5;-1:-1:-1;;;;;7789:11:391;:2;-1:-1:-1;;;;;7789:11:391;;7785:48;;;7809:24;;-1:-1:-1;;;7809:24:391;;;;;;;;;;;7785:48;7864:5;-1:-1:-1;;;;;7848:21:391;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7848:21:391;;7844:137;;7875:37;7892:5;7899:12;:10;:12::i;7875:37::-;7871:110;;7935:35;;-1:-1:-1;;;7935:35:391;;;;;;;;;;;7871:110;7991:28;8000:2;8004:7;8013:5;7991:8;:28::i;:::-;7714:312;7652:374;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2043:269:135:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:135;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;8926:164:391:-;9055:28;9065:4;9071:2;9075:7;9055:9;:28::i;1277:203:114:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:114;;19895:2:641;1407:23:114;;;19877:21:641;19934:2;19914:18;;;19907:30;-1:-1:-1;;;19953:18:641;;;19946:43;20006:18;;1407:23:114;19693:337:641;1360:81:114;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1252:293:148:-;1384:12;1398:14;1437:33;1453:4;1459:10;;1437:15;:33::i;:::-;1498:8;;;;1491:16;;;;:6;:16;;;;;;1428:42;;-1:-1:-1;1491:16:148;;1490:17;:48;;;;;1511:27;1531:6;1511:19;:27::i;:::-;1480:58;;1252:293;;;;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;20931:2:641;3435:39:133;;;20913:21:641;20970:2;20950:18;;;20943:30;21009:31;20989:18;;;20982:59;21058:18;;3435:39:133;20729:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;21289:2:641;4594:36:133;;;21271:21:641;21328:2;21308:18;;;21301:30;-1:-1:-1;;;21347:18:641;;;21340:56;21413:18;;4594:36:133;21087:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;2330:1219:122:-;2456:24;:22;:24::i;:::-;2451:80;;2496:24;;-1:-1:-1;;;2496:24:122;;;;;;;:::i;2451:80::-;2569:11;;2621:28;;2660:170;;;;-1:-1:-1;2725:1:122;2787:16;:14;:16::i;:::-;2770:48;;21644:2:641;21615:15;;;;-1:-1:-1;;;;;;21611:45:641;2770:48:122;;;21599:58:641;2805:12:122;21673::641;;;21666:28;21710:12;;2770:48:122;;;;;;;;;;;;2760:59;;;;;;2740:79;;2660:170;2867:10;:29;;;2844:20;:52;2840:111;;;2912:28;;-1:-1:-1;;;2912:28:122;;21935:2:641;2912:28:122;;;21917:21:641;21974:2;21954:18;;;21947:30;-1:-1:-1;;;21993:18:641;;;21986:48;22051:18;;2912:28:122;21733:342:641;2840:111:122;2978:450;;;;;;;;3023:10;:25;;;2978:450;;;;3082:10;:29;;;2978:450;;;;3140:20;2978:450;;;;3198:10;:33;;;2978:450;;;;3257:10;:21;;;2978:450;;;;3307:10;:24;;;2978:450;;;;3355:10;:19;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2978:450:122;;;;;3398:19;;;;:10;:19;:::i;:::-;2978:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2978:450:122;;-1:-1:-1;2961:467:122;;:14;:467;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2961:467:122;-1:-1:-1;;;;;2961:467:122;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;3438:11:122;:31;;;3485:57;;;;;;3507:10;;3519:22;;3485:57;:::i;:::-;;;;;;;;2441:1108;;2330:1219;;:::o;9156:179:391:-;9289:39;9306:4;9312:2;9316:7;9289:39;;;;;;;;;;;;:16;:39::i;12321:184:344:-;12478:20;12484:7;12493:4;12478:5;:20::i;6947:947::-;7132:13;;7191:21;;7078:14;;7132:13;7159:29;7175:13;;;;7132;7159:29;:::i;:::-;:53;7155:101;;;7228:17;;-1:-1:-1;;;7228:17:344;;;;;;;:::i;7155:101::-;7314:33;7330:4;7336:10;;7314:15;:33::i;:::-;7305:42;-1:-1:-1;7358:16:344;7377:7;;;;:4;:7;:::i;:::-;7358:26;-1:-1:-1;7420:97:344;7441:25;;;;;;;;:::i;:::-;7468:13;;;;7483;;;;;;;;:::i;:::-;7498:4;:18;;;7420:20;:97::i;:::-;7606:1;7573:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7573:35:344;;;:59;;;;-1:-1:-1;7612:15:344;;;;:20;;7573:59;7569:170;;;7648:80;7674:13;7689:21;;;;;;;;:::i;:::-;7712:4;:15;;;7648:25;:80::i;:::-;7773:34;7783:8;7793:4;:13;;;7773:9;:34::i;:::-;7867:13;7857:8;-1:-1:-1;;;;;7823:64:344;7849:6;-1:-1:-1;;;;;7823:64:344;;7882:4;7823:64;;;;;;:::i;:::-;;;;;;;;7098:796;;6947:947;;;;;:::o;3937:129:119:-;4002:4;4025:23;;;:13;:23;;;;;:30;;4002:4;;4025:23;:30;;;:::i;:::-;;;:34;4018:41;;3937:129;;;:::o;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;;;;-1:-1:-1;;;;;2270:16:139;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;6434:123:391:-;6498:7;6524:21;6537:7;6524:12;:21::i;:::-;:26;;6434:123;-1:-1:-1;;6434:123:391:o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;3948:203:391:-;4012:7;-1:-1:-1;;;;;4035:19:391;;4031:60;;4063:28;;-1:-1:-1;;;4063:28:391;;;;;;;;;;;4031:60;-1:-1:-1;;;;;;4116:19:391;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4116:27:391;;3948:203::o;2821:255:135:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:135;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;1181:1086:122:-;1434:85;1447:9;1458;1469;1480:14;1496:15;1513:5;1434:12;:85::i;:::-;1558:11;;1580:84;1592:16;:14;:16::i;:::-;1610:9;1621;1632:14;1648:15;1580:11;:84::i;:::-;;1741:9;1709:14;:28;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;1760:40:122;;;;:21;:40;;;;;1822:9;;1801:16;:14;:16::i;:::-;-1:-1:-1;;;;;1760:58:122;-1:-1:-1;;;;;1760:58:122;;;;;;;;;;;;;:71;;;;;;;:::i;:::-;;;;-1:-1:-1;1888:70:122;;-1:-1:-1;1917:1:122;1921:9;1932;1943:14;1888:20;:70::i;:::-;2015:20;2038:44;2061:9;2072;2038:22;:44::i;:::-;2015:67;;2141:12;2130:9;-1:-1:-1;;;;;2098:67:122;2112:16;:14;:16::i;:::-;-1:-1:-1;;;;;2098:67:122;;2155:9;2098:67;;;;2715:25:641;;2703:2;2688:18;;2569:177;2098:67:122;;;;;;;;1424:843;;1181:1086;;;;;;:::o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6781:102:391:-;6837:13;6869:7;6862:14;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;1383:534:119:-;1502:17;1522:23;;;:13;:23;;;;;1502:43;;1465:25;;1502:17;1522:23;1502:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:4;:11;1574:1;1559:16;1555:74;;;1591:27;;-1:-1:-1;;;1591:27:119;;26797:2:641;1591:27:119;;;26779:21:641;26836:2;26816:18;;;26809:30;-1:-1:-1;;;26855:18:641;;;26848:47;26912:18;;1591:27:119;26595:341:641;1555:74:119;1640:25;1667:22;1704:4;1693:34;;;;;;;;;;;;:::i;:::-;1639:88;;;;1759:34;1774:12;1788:4;;1759:14;:34::i;:::-;1738:56;;1878:14;1840:11;1853:4;;1859:13;1823:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1813:61;;;;;;:79;1805:105;;;;-1:-1:-1;;;1805:105:119;;28381:2:641;1805:105:119;;;28363:21:641;28420:2;28400:18;;;28393:30;-1:-1:-1;;;28439:18:641;;;28432:43;28492:18;;1805:105:119;28179:337:641;1805:105:119;1492:425;;;1383:534;;;;;:::o;568:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8354:282:391:-;8464:12;:10;:12::i;:::-;-1:-1:-1;;;;;8452:24:391;:8;-1:-1:-1;;;;;8452:24:391;;8448:54;;;8485:17;;-1:-1:-1;;;8485:17:391;;;;;;;;;;;8448:54;8558:8;8513:18;:32;8532:12;:10;:12::i;:::-;-1:-1:-1;;;;;8513:32:391;;;;;;;;;;;;;;;;;-1:-1:-1;8513:32:391;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8513:53:391;;;;;;;;;;;8596:12;:10;:12::i;:::-;-1:-1:-1;;;;;8581:48:391;;8620:8;8581:48;;;;661:14:641;654:22;636:41;;624:2;609:18;;496:187;8581:48:391;;;;;;;;8354:282;;:::o;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:243:135:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:135;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:135;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;9401:360:391:-;9562:28;9572:4;9578:2;9582:7;9562:9;:28::i;:::-;9604:15;:2;-1:-1:-1;;;;;9604:13:391;;:15::i;:::-;9600:155;;;9625:56;9656:4;9662:2;9666:7;9675:5;9625:30;:56::i;:::-;9621:134;;9704:40;;-1:-1:-1;;;9704:40:391;;;;;;;;;;;9621:134;9401:360;;;;:::o;4360:402:344:-;4426:13;4452:15;4473:21;4485:8;4473:11;:21::i;:::-;4451:43;;;4504:22;4529:21;4541:8;4529:11;:21::i;:::-;4504:46;;4565:25;4582:7;4565:16;:25::i;:::-;4561:195;;;4637:8;4620:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4606:46;;;;4360:402;;;:::o;4561:195::-;4714:8;4724:19;:8;:17;:19::i;:::-;4697:47;;;;;;;;;:::i;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;6299:395:344:-;6415:25;6386:10;;931:28:133;942:4;948:10;931;:28::i;:::-;6456:15:344::1;6474:25;6492:6;6474:17;:25::i;:::-;6456:43;;6523:27;6536:7;6545:4;;6523:12;:27::i;:::-;6509:41;;6561:30;6579:7;6561:30;;;;;;;;;;;::::0;:17:::1;:30::i;:::-;6601:33;6613:7;6622:11;6601;:33::i;:::-;6667:6;6650:37;6675:11;6650:37;;;;;;:::i;:::-;;;;;;;;6446:248;6299:395:::0;;;;;;:::o;5652:540::-;5799:15;5830:16;;5826:293;;5863:25;;5916:35;;;;5927:5;5916:35;:::i;:::-;5862:89;;;;5969:12;:19;5992:1;5969:24;;:48;;;;-1:-1:-1;5997:20:344;;;5969:48;5965:144;;;6037:57;6079:7;6055:21;;:31;;;;:::i;:::-;6088:5;;6037:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6037:17:344;;-1:-1:-1;;;6037:57:344:i;:::-;5848:271;;5826:293;6136:49;6151:7;6160:17;;6179:5;;6136:14;:49::i;:::-;6129:56;5652:540;-1:-1:-1;;;;;;5652:540:344:o;1058:147:135:-;1153:20;;-1:-1:-1;;;;;1153:20:135;;;-1:-1:-1;;;1182:14:135;;;;;;1058:147::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;463:36:122:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;463:36:122;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2856:1257:344:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;30701:2:641;3157:201:436;;;30683:21:641;30740:2;30720:18;;;30713:30;30779:34;30759:18;;;30752:62;-1:-1:-1;;;30830:18:641;;;30823:44;30884:19;;3157:201:436;30499:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3277:26:344::1;3335:24;3445:41;3467:18:::0;3445:21:::1;:41::i;:::-;3496:30;3511:5;3518:7;3496:14;:30::i;:::-;3536:28;:26;:28::i;:::-;3575:31;3593:12;3575:17;:31::i;:::-;3616:26;3628:13;3616:11;:26::i;:::-;3653:45;787:4:133;3684:13:344::0;3653:10:::1;:45::i;:::-;3708:38;3719:11;3732:13;3708:10;:38::i;:::-;3756:40;3767:13;3782;3756:10;:40::i;:::-;3806:37;3817:13;3840:1;3806:10;:37::i;:::-;3854:61;3876:21;3899:15;-1:-1:-1::0;;;;;3854:61:344::1;:21;:61::i;:::-;3925:56;3950:17;3969:11;-1:-1:-1::0;;;;;3925:56:344::1;:24;:56::i;:::-;3991:42;4018:14;3991:26;:42::i;:::-;4044:12;:28:::0;;;;4082:10:::1;:24:::0;3479:99:436;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;10403:36:641;;3553:14:436;;10391:2:641;10376:18;3553:14:436;;;;;;;3479:99;3101:483;2856:1257:344;;;;;;;;;;:::o;2409:1283:119:-;2602:11;;2768:4;2762:11;;2862:19;;;2883:2;2858:28;2845:42;;;2933:22;;;2762:11;2585:14;3029:657;3053:6;3049:1;:10;3029:657;;;3135:12;3177:3;;3182:1;3160:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3160:24:119;;;;;;;;;3150:35;;3160:24;3150:35;;;;3373:21;;;;;3367:28;3461:13;3631:23;;;;;3624:38;3061:7;;-1:-1:-1;3387:1:119;3061:7;:::i;:::-;;;3029:657;;;;2523:1169;2409:1283;;;;;:::o;565:34:116:-;;;;;;;:::i;3646:2154:122:-;3882:56;;;;;;;;3924:14;3882:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3882:56:122;;;;;;;;3855:15;;;;3882:56;3924:14;;3882:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3882:56:122;;;;-1:-1:-1;;;3969:40:122;;;;4040:31;;;;4105:26;;;;4146:28;;;;3882:56;;-1:-1:-1;3969:40:122;;4040:31;;4105:26;4146:42;4142:515;;4221:425;4257:21;:15;;:21;:::i;:::-;4221:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4296:28:122;;;;;;-1:-1:-1;4415:8:122;;4449:38;;;;;4513:29;;;;;4568:24;;;;;;;;:::i;:::-;4373:241;;-1:-1:-1;;;;;;32238:2:641;32274:15;;;32270:24;;4373:241:122;;;32258:37:641;32311:12;;;32304:28;;;;32348:12;;;32341:28;;;;32403:15;;;32399:24;32385:12;;;32378:46;32440:13;;4373:241:122;;;;;;;;;;;;4342:290;;;;;;4221:18;:425::i;:::-;-1:-1:-1;4204:442:122;-1:-1:-1;4142:515:122;4671:10;4667:534;;;4710:38;;;;:129;;4829:10;4710:129;;;4772:15;:38;;;4710:129;4697:142;;-1:-1:-1;;4866:15:122;:29;;;:50;;:127;;4983:10;4866:127;;;4935:15;:29;;;4866:127;4853:140;;-1:-1:-1;;5023:15:122;:29;;;:50;;:92;;;;-1:-1:-1;5113:1:122;5077:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5077:38:122;;;5023:92;:167;;5177:13;5023:167;;;5134:24;;;;;;;;:::i;:::-;5007:183;;4667:534;5266:11;;5211:30;5244:34;;;:21;:34;;;;;;;;-1:-1:-1;;;;;5244:44:122;;;;;;;;;;;;5303:26;;;;;;;;;:58;;;5351:10;5333:14;:28;;5303:58;5299:115;;;5377:26;;-1:-1:-1;;;5377:26:122;;32666:2:641;5377:26:122;;;32648:21:641;32705:2;32685:18;;;32678:30;-1:-1:-1;;;32724:18:641;;;32717:46;32780:18;;5377:26:122;32464:340:641;5299:115:122;5428:14;;;:67;;-1:-1:-1;5484:10:122;5447:34;5459:22;5447:9;:34;:::i;:::-;:47;5428:67;5424:112;;;5511:14;;-1:-1:-1;;;5511:14:122;;;;;;33011:2:641;32993:21;;;33050:1;33030:18;;;33023:29;-1:-1:-1;;;33083:2:641;33068:18;;33061:34;33127:2;33112:18;;32809:327;5424:112:122;5596:17;:36;;;5584:9;5550:17;:31;;;:43;;;;:::i;:::-;:82;5546:133;;;5648:20;;-1:-1:-1;;;5648:20:122;;33343:2:641;5648:20:122;;;33325:21:641;33382:2;33362:18;;;33355:30;-1:-1:-1;;;33401:18:641;;;33394:40;33451:18;;5648:20:122;33141:334:641;5546:133:122;5693:32;;5728:15;-1:-1:-1;5689:105:122;;;5759:24;;-1:-1:-1;;;5759:24:122;;33682:2:641;5759:24:122;;;33664:21:641;33721:2;33701:18;;;33694:30;-1:-1:-1;;;33740:18:641;;;33733:44;33794:18;;5759:24:122;33480:338:641;5689:105:122;3872:1928;;;;;3646:2154;;;;;;;:::o;3545:344:391:-;3669:4;-1:-1:-1;;;;;;3704:51:391;;-1:-1:-1;;;3704:51:391;;:126;;-1:-1:-1;;;;;;;3771:59:391;;-1:-1:-1;;;3771:59:391;3704:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;3846:36:391;1060:166:471;10007:172:391;10064:4;10127:13;;10117:7;:23;10087:85;;;;-1:-1:-1;;10145:20:391;;;;:11;:20;;;;;:27;-1:-1:-1;;;10145:27:391;;;;10144:28;;10007:172::o;13255:231:344:-;13404:14;13441:38;:36;:38::i;:::-;13434:45;;13255:231;:::o;18988:189:391:-;19098:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19098:29:391;-1:-1:-1;;;;;19098:29:391;;;;;;;;;19142:28;;19098:24;;19142:28;;;;;;;18988:189;;;:::o;10638:127:344:-;10694:4;10717:41;10694:4;10745:12;:10;:12::i;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:135:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:135;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:135;-1:-1:-1;;;2567:40:135;;;;-1:-1:-1;;;;;;2617:44:135;;-1:-1:-1;;;;;2617:44:135;;;;;;;;2677:62;;2715:25:641;;;2677:62:135;;2703:2:641;2688:18;2677:62:135;;;;;;;;2371:375;;:::o;14063:2082:391:-;14173:35;14211:21;14224:7;14211:12;:21::i;:::-;14173:59;;14269:4;-1:-1:-1;;;;;14247:26:391;:13;:18;;;-1:-1:-1;;;;;14247:26:391;;14243:67;;14282:28;;-1:-1:-1;;;14282:28:391;;;;;;;;;;;14243:67;14321:22;14363:4;-1:-1:-1;;;;;14347:20:391;:12;:10;:12::i;:::-;-1:-1:-1;;;;;14347:20:391;;:72;;;;14383:36;14400:4;14406:12;:10;:12::i;14383:36::-;14347:124;;;;14459:12;:10;:12::i;:::-;-1:-1:-1;;;;;14435:36:391;:20;14447:7;14435:11;:20::i;:::-;-1:-1:-1;;;;;14435:36:391;;14347:124;14321:151;;14488:17;14483:66;;14514:35;;-1:-1:-1;;;14514:35:391;;;;;;;;;;;14483:66;-1:-1:-1;;;;;14563:16:391;;14559:52;;14588:23;;-1:-1:-1;;;14588:23:391;;;;;;;;;;;14559:52;14622:43;14644:4;14650:2;14654:7;14663:1;14622:21;:43::i;:::-;14727:35;14744:1;14748:7;14757:4;14727:8;:35::i;:::-;-1:-1:-1;;;;;15052:18:391;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;15052:31:391;;;-1:-1:-1;;;;;15052:31:391;;;-1:-1:-1;;15052:31:391;;;;;;;15097:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15097:29:391;;;;;;;;;;;15175:20;;;:11;:20;;;;;;15209:18;;-1:-1:-1;;;;;;15241:49:391;;;;-1:-1:-1;;;15274:15:391;15241:49;;;;;;;;;;15560:11;;15619:24;;;;;15661:13;;15175:20;;15619:24;;15661:13;15657:377;;15868:13;;15853:11;:28;15849:171;;15905:20;;15973:28;;;;-1:-1:-1;;;;;15947:54:391;-1:-1:-1;;;15947:54:391;-1:-1:-1;;;;;;15947:54:391;;;-1:-1:-1;;;;;15905:20:391;;15947:54;;;;15849:171;15028:1016;;;16078:7;16074:2;-1:-1:-1;;;;;16059:27:391;16068:4;-1:-1:-1;;;;;16059:27:391;-1:-1:-1;;;;;;;;;;;16059:27:391;;;;;;;;;14163:1982;;14063:2082;;;:::o;2428:204:148:-;2530:7;2556:69;2614:10;;2556:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2556:49:148;;-1:-1:-1;2583:20:148;;-1:-1:-1;2598:4:148;;-1:-1:-1;2583:14:148;:20::i;:::-;2573:31;;;;;;2556:16;:49::i;:::-;:57;;:69::i;:::-;2549:76;;2428:204;;;;;;:::o;9945:136:344:-;10023:4;10046:28;10054:10;;10066:7;10046;:28::i;5557:495:133:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;2043:269:135;;:::o;13138:111:344:-;13204:7;13230:12;:10;:12::i;16522:2355:391:-;16601:35;16639:21;16652:7;16639:12;:21::i;:::-;16686:18;;16601:59;;-1:-1:-1;16715:284:391;;;;16748:22;16790:4;-1:-1:-1;;;;;16774:20:391;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16774:20:391;;:76;;;;16814:36;16831:4;16837:12;:10;:12::i;16814:36::-;16774:132;;;;16894:12;:10;:12::i;:::-;-1:-1:-1;;;;;16870:36:391;:20;16882:7;16870:11;:20::i;:::-;-1:-1:-1;;;;;16870:36:391;;16774:132;16748:159;;16927:17;16922:66;;16953:35;;-1:-1:-1;;;16953:35:391;;;;;;;;;;;16922:66;16734:265;16715:284;17009:51;17031:4;17045:1;17049:7;17058:1;17009:21;:51::i;:::-;17122:35;17139:1;17143:7;17152:4;17122:8;:35::i;:::-;-1:-1:-1;;;;;17481:18:391;;;17447:31;17481:18;;;:12;:18;;;;;;;;17513:24;;-1:-1:-1;;;;;;;;;;17513:24:391;;;;;;;;;-1:-1:-1;;;;;;17513:24:391;;;;17551:29;;;;;17536:1;17551:29;;;;;;;;-1:-1:-1;;;;;;17551:29:391;;;;;;;;;;17710:20;;;:11;:20;;;;;;17744;;-1:-1:-1;;;;17811:15:391;17778:49;;;-1:-1:-1;;;17778:49:391;-1:-1:-1;;;;;;17778:49:391;;;;;;;;;;17841:22;-1:-1:-1;;;17841:22:391;;;18129:11;;;18188:24;;;;;18230:13;;17481:18;;18188:24;;18230:13;18226:377;;18437:13;;18422:11;:28;18418:171;;18474:20;;18542:28;;;;-1:-1:-1;;;;;18516:54:391;-1:-1:-1;;;18516:54:391;-1:-1:-1;;;;;;18516:54:391;;;-1:-1:-1;;;;;18474:20:391;;18516:54;;;;18418:171;-1:-1:-1;;18628:35:391;;18655:7;;-1:-1:-1;18651:1:391;;-1:-1:-1;;;;;;18628:35:391;;;-1:-1:-1;;;;;;;;;;;18628:35:391;18651:1;;18628:35;-1:-1:-1;;18846:12:391;:14;;;;;;-1:-1:-1;;16522:2355:391:o;1792:562:148:-;1889:14;1915:12;1957:24;1964:4;1970:10;;1957:6;:24::i;:::-;1937:44;-1:-1:-1;1937:44:148;-1:-1:-1;1937:44:148;1992:60;;2020:21;;-1:-1:-1;;;2020:21:148;;35158:2:641;2020:21:148;;;35140::641;35197:2;35177:18;;;35170:30;-1:-1:-1;;;35216:18:641;;;35209:41;35267:18;;2020:21:148;34956:335:641;1992:60:148;2096:15;2066:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2066:45:148;;:92;;;-1:-1:-1;2133:25:148;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2115:43:148;:15;:43;2066:92;2062:144;;;2174:21;;-1:-1:-1;;;2174:21:148;;35689:2:641;2174:21:148;;;35671::641;35728:2;35708:18;;;35701:30;-1:-1:-1;;;35747:18:641;;;35740:41;35798:18;;2174:21:148;35487:335:641;2062:144:148;2242:1;2223:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2223:21:148;;;2215:53;;;;-1:-1:-1;;;2215:53:148;;36029:2:641;2215:53:148;;;36011:21:641;36068:2;36048:18;;;36041:30;-1:-1:-1;;;36087:18:641;;;36080:49;36146:18;;2215:53:148;35827:343:641;2215:53:148;2302:1;2286:4;:13;;;:17;2278:35;;;;-1:-1:-1;;;2278:35:148;;36377:2:641;2278:35:148;;;36359:21:641;36416:1;36396:18;;;36389:29;-1:-1:-1;;;36434:18:641;;;36427:35;36479:18;;2278:35:148;36175:328:641;2278:35:148;-1:-1:-1;2331:8:148;;;;;2324:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;2324:23:148;2343:4;2324:23;;;-1:-1:-1;1792:562:148;;;-1:-1:-1;1792:562:148:o;8498:1061:344:-;8698:19;8694:103;;8741:9;:14;8733:33;;;;-1:-1:-1;;;8733:33:344;;;;;;;:::i;:::-;8780:7;;8694:103;8808:28;8838:21;8863:20;:18;:20::i;:::-;8807:76;;-1:-1:-1;8807:76:344;-1:-1:-1;8894:21:344;-1:-1:-1;;;;;8918:35:344;;;:84;;8981:21;8918:84;;;8956:22;:20;:22::i;:::-;8894:108;-1:-1:-1;9013:18:344;9034:33;9053:14;9034:16;:33;:::i;:::-;9013:54;-1:-1:-1;9077:20:344;2592:6;9101:27;;;;9013:54;9101:27;:::i;:::-;9100:39;;;;:::i;:::-;9077:62;-1:-1:-1;;;;;;9154:45:344;;397:42:277;9154:45:344;9150:182;;;9236:10;9223:9;:23;9215:42;;;;-1:-1:-1;;;9215:42:344;;37044:2:641;9215:42:344;;;37026:21:641;37083:1;37063:18;;;37056:29;-1:-1:-1;;;37101:18:641;;;37094:36;37147:18;;9215:42:344;36842:329:641;9215:42:344;9150:182;;;9296:9;:14;9288:33;;;;-1:-1:-1;;;9288:33:344;;;;;;;:::i;:::-;9342:97;9379:9;9390:12;:10;:12::i;:::-;9404:20;9426:12;9342:36;:97::i;:::-;9449:103;9486:9;9497:12;:10;:12::i;:::-;9511:13;9526:25;9539:12;9526:10;:25;:::i;:::-;9449:36;:103::i;:::-;8684:875;;;;;8498:1061;;;;:::o;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;2715:25:641;;;4918:49:139;;4886:29;;4983:43;;2688:18:641;4983:43:139;;;;;;;4671:362;;;:::o;10258:102:391:-;10326:27;10336:2;10340:8;10326:27;;;;;;;;;;;;:9;:27::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;;3663:32:139;3617:36;-1:-1:-1;;;;;3617:36:139;;;;;-1:-1:-1;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;2715:25:641;;;3711:46:139;;2703:2:641;2688:18;3711:46:139;2569:177:641;5291:1086:391;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;5401:7:391;5483:13;;5476:4;:20;5472:841;;;5516:31;5550:17;;;:11;:17;;;;;;;;;5516:51;;;;;;;;;-1:-1:-1;;;;;5516:51:391;;;;-1:-1:-1;;;5516:51:391;;-1:-1:-1;;;;;5516:51:391;;;;;;;;-1:-1:-1;;;5516:51:391;;;;;;;;;;;;;;5585:714;;5634:14;;-1:-1:-1;;;;;5634:28:391;;5630:99;;5697:9;5291:1086;-1:-1:-1;;;5291:1086:391:o;5630:99::-;-1:-1:-1;;;6065:6:391;6109:17;;;;:11;:17;;;;;;;;;6097:29;;;;;;;;;-1:-1:-1;;;;;6097:29:391;;;;;-1:-1:-1;;;6097:29:391;;-1:-1:-1;;;;;6097:29:391;;;;;;;;-1:-1:-1;;;6097:29:391;;;;;;;;;;;;;6156:28;6152:107;;6223:9;5291:1086;-1:-1:-1;;;5291:1086:391:o;6152:107::-;6026:255;;;5498:815;5472:841;6339:31;;-1:-1:-1;;;6339:31:391;;;;;;;;;;;1499:170:136;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;3129:261:135:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:135;-1:-1:-1;;;;;3268:44:135;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;:::-;;;;;;;;3129:261;;:::o;8137:271:344:-;8368:21;;8355:9;8339:13;;:25;;;;:::i;:::-;:50;;8331:70;;;;-1:-1:-1;;;8331:70:344;;;;;;;:::i;:::-;8137:271;;;;;;:::o;9612:245::-;9790:13;;9813:37;9823:3;9828:21;9813:9;:37::i;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;37896:2:641;1226:88:466;;;37878:21:641;37935:2;37915:18;;;37908:30;37974:34;37954:18;;;37947:62;-1:-1:-1;;;38025:18:641;;;38018:36;38071:19;;1226:88:466;37694:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;19658:672:391:-;19816:4;19863:2;-1:-1:-1;;;;;19836:47:391;;19884:12;:10;:12::i;:::-;19898:4;19904:7;19913:5;19836:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19836:83:391;;;;;;;;-1:-1:-1;;19836:83:391;;;;;;;;;;;;:::i;:::-;;;19832:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20089:13:391;;20085:229;;20134:40;;-1:-1:-1;;;20134:40:391;;;;;;;;;;;20085:229;20274:6;20268:13;20259:6;20255:2;20251:15;20244:38;19832:492;-1:-1:-1;;;;;;19965:66:391;-1:-1:-1;;;19965:66:391;;-1:-1:-1;19832:492:391;19658:672;;;;;;:::o;1568:471:114:-;1630:15;1647:13;1672:25;1700:17;1054:8;:15;;980:96;1700:17;1672:45;;1727:24;1754:8;1727:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:9;1773:224;1797:17;1793:1;:21;1773:224;;;1853:7;1861:1;1853:10;;;;;;;;:::i;:::-;;;;;;;1842:8;:21;1838:149;;;1891:1;1883:9;;1920:7;1928:1;1920:10;;;;;;;;:::i;:::-;;;;;;;1910:20;;1949:23;;;1568:471;;;:::o;1838:149::-;1816:6;1821:1;1816:6;;:::i;:::-;;;1773:224;;;-1:-1:-1;2007:25:114;;-1:-1:-1;;;2007:25:114;;39330:2:641;2007:25:114;;;39312:21:641;39369:2;39349:18;;;39342:30;-1:-1:-1;;;39388:18:641;;;39381:45;39443:18;;2007:25:114;39128:339:641;2153:390:114;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;403:703:467;459:13;676:10;672:51;;-1:-1:-1;;702:10:467;;;;;;;;;;;;-1:-1:-1;;;702:10:467;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:467;;-1:-1:-1;848:2:467;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:467;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:467;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:467;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:467;;;;;;;;-1:-1:-1;1047:11:467;1056:2;1047:11;;:::i;:::-;;;919:150;;678:140:119;771:23;;;;:13;:23;;;;;;;;:40;;;;;;;;:::i;2628:117:114:-;2710:17;;;;:7;:17;;;;;;;;:28;;;;;;;;:::i;1254:592:125:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:125;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:125;;39791:2:641;1548:15:125;;;39773:21:641;39830:1;39810:18;;;39803:29;-1:-1:-1;;;39848:18:641;;;39841:35;39893:18;;1548:15:125;39589:328:641;1516:58:125;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:125;;-1:-1:-1;;;1669:55:125:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:125;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;470:194:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2137:151:391:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2241:40:391::1;2266:5;2273:7;2241:24;:40::i;920:122:148:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;994:41:148::1;;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:148::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;994:41:148::1;;::::0;:13:::1;:41::i;:::-;920:122::o:0;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;41002:19:641;;;41037:12;;;41030:28;;;41074:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;41002:19:641;;;41037:12;;;41030:28;;;41074:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;13255:231:344:o;12559:573::-;12904:33;12912:12;;12934:1;12904:7;:33::i;:::-;12903:34;:56;;;;-1:-1:-1;;;;;;12941:18:344;;;;12903:56;:76;;;;-1:-1:-1;;;;;;12963:16:344;;;;12903:76;12899:227;;;13000:27;13008:12;;13022:4;13000:7;:27::i;:::-;12999:28;:58;;;;;13032:25;13040:12;;13054:2;13032:7;:25::i;:::-;13031:26;12999:58;12995:121;;;13077:24;;-1:-1:-1;;;13077:24:344;;41299:2:641;13077:24:344;;;41281:21:641;41338:2;41318:18;;;41311:30;-1:-1:-1;;;41357:18:641;;;41350:44;41411:18;;13077:24:344;41097:338:641;2704:570:148;2778:12;512:270;2875:7;;;;:4;:7;:::i;:::-;2900:21;;;;;;;;:::i;:::-;2939:15;;;;2972:25;;;;;;;;:::i;:::-;3031:8;;;;:4;:8;:::i;:::-;3015:26;;;;;;;:::i;:::-;;;;;;;;;3059:13;;;;3090:18;;;;3126:13;;;;;;;;:::i;:::-;3157:27;;;;;;;;:::i;:::-;3202:25;;;;;;;;:::i;:::-;2821:446;;;;;;42173:25:641;;;;-1:-1:-1;;;;;42272:15:641;;;42252:18;;;42245:43;42324:15;;;42304:18;;;42297:43;42356:18;;;42349:34;;;;42420:15;;;42399:19;;;42392:44;42452:19;;;42445:35;;;;42496:19;;;42489:35;42540:19;;;42533:35;42605:15;;;42584:19;;;42577:44;-1:-1:-1;;;;;42696:15:641;;;3245:8:148;42675:19:641;;;42668:44;;;;42749:16;;42728:19;;;42721:45;3245:8:148;;;42782:19:641;;;42775:36;42145:19;;2821:446:148;;;;;;;;;;;;2802:465;;2704:570;;;:::o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;43582:27:641;43625:11;;;43618:27;;;43661:12;;;43654:28;;;8674:7:469;;43698:12:641;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;3781:227;3859:7;3879:17;3898:18;3920:27;3931:4;3937:9;3920:10;:27::i;:::-;3878:69;;;;3957:18;3969:5;3957:11;:18::i;:::-;-1:-1:-1;3992:9:469;3781:227;-1:-1:-1;;;3781:227:469:o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;43165:2:641;1913:55:285;;;43147:21:641;;;43184:18;;;43177:30;43243:34;43223:18;;;43216:62;43295:18;;1913:55:285;42963:356:641;5036:168:133;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;10720:1708:391:-;10861:13;;-1:-1:-1;;;;;10888:16:391;;10884:48;;10913:19;;-1:-1:-1;;;10913:19:391;;;;;;;;;;;10884:48;10946:13;10942:44;;10968:18;;-1:-1:-1;;;10968:18:391;;;;;;;;;;;10942:44;10997:61;11027:1;11031:2;11035:12;11049:8;10997:21;:61::i;:::-;-1:-1:-1;;;;;11329:16:391;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;11387:49:391;;-1:-1:-1;;;;;11329:44:391;;;;;;;11387:49;;;-1:-1:-1;;;;;;;;;11329:44:391;;;;;;11387:49;;;;;;;;;;;;;;;;11451:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11500:66:391;;;-1:-1:-1;;;11550:15:391;11500:66;;;;;;;;;;;;;11451:25;;11644:23;;;;11686:15;;:13;:15::i;:::-;11682:618;;;11721:308;11751:38;;11776:12;;-1:-1:-1;;;;;11751:38:391;;;11768:1;;-1:-1:-1;;;;;;;;;;;11751:38:391;11768:1;;11751:38;11816:69;11855:1;11859:2;11863:14;;;;;;11879:5;11816:30;:69::i;:::-;11811:172;;11920:40;;-1:-1:-1;;;11920:40:391;;;;;;;;;;;11811:172;12024:3;12009:12;:18;11721:308;;12108:12;12091:13;;:29;12087:43;;12122:8;;;12087:43;11682:618;;;12169:117;12199:40;;12224:14;;;;;-1:-1:-1;;;;;12199:40:391;;;12216:1;;-1:-1:-1;;;;;;;;;;;12199:40:391;12216:1;;12199:40;12281:3;12266:12;:18;12169:117;;11682:618;-1:-1:-1;12313:13:391;:28;12361:60;12390:1;12394:2;12398:12;12412:8;12361:60;:::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;11540:127:344:-;11604:4;11627:33;11635:10;;11647:12;:10;:12::i;2840:362:114:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:114;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:114;;-1:-1:-1;3159:36:114;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2294:202:391::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:13:391;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2431:17:391;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2644:7:391;2458:13:::1;:31:::0;-1:-1:-1;;2294:202:391:o;2306:147:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2408:38:470::1;2432:4;2438:7;2408:23;:38::i;2842:160::-:0;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;46066:25:641;;;46107:18;;;46100:34;;;46150:18;;;46143:34;;;3228:13:470;46193:18:641;;;46186:34;3251:4:470;46236:19:641;;;46229:61;3148:7:470;;46038:19:641;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2265:730:469;2346:7;2355:12;2383:9;:16;2403:2;2383:22;2379:610;;;2719:4;2704:20;;2698:27;2768:4;2753:20;;2747:27;2825:4;2810:20;;2804:27;2421:9;2796:36;2866:25;2877:4;2796:36;2698:27;2747;2866:10;:25::i;:::-;2859:32;;;;;;;;;2379:610;-1:-1:-1;2938:1:469;;-1:-1:-1;2942:35:469;2379:610;2265:730;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;43923:2:641;788:34:469;;;43905:21:641;43962:2;43942:18;;;43935:30;-1:-1:-1;;;43981:18:641;;;43974:54;44045:18;;788:34:469;43721:348:641;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;44276:2:641;903:41:469;;;44258:21:641;44315:2;44295:18;;;44288:30;44354:33;44334:18;;;44327:61;44405:18;;903:41:469;44074:355:641;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;44636:2:641;1020:44:469;;;44618:21:641;44675:2;44655:18;;;44648:30;44714:34;44694:18;;;44687:62;-1:-1:-1;;;44765:18:641;;;44758:32;44807:19;;1020:44:469;44434:398:641;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;45039:2:641;1140:44:469;;;45021:21:641;45078:2;45058:18;;;45051:30;45117:34;45097:18;;;45090:62;-1:-1:-1;;;45168:18:641;;;45161:32;45210:19;;1140:44:469;44837:398:641;2521:292:277;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;45652:2:641;2758:48:277;;;45634:21:641;45691:2;45671:18;;;45664:30;-1:-1:-1;;;45710:18:641;;;45703:58;45778:18;;2758:48:277;45450:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;2459:297:470:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;46528:25:641;;;46601:4;46589:17;;46569:18;;;46562:45;;;;46623:18;;;46616:34;;;46666:18;;;46659:34;;;6603:24:469;;46500:19:641;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;46962:15:641;;;1105:68:321;;;46944:34:641;47014:15;;46994:18;;;46987:43;47046:18;;;47039:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;46879:18:641;;1105:68:321;46704:375:641;3235:706:321;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;47536:2:641;3839:85:321;;;47518:21:641;47575:2;47555:18;;;47548:30;47614:34;47594:18;;;47587:62;-1:-1:-1;;;47665:18:641;;;47658:40;47715:19;;3839:85:321;47334:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;48354:2:641;5194:60:281;;;48336:21:641;48393:2;48373:18;;;48366:30;48432:31;48412:18;;;48405:59;48481:18;;5194:60:281;48152:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;;88:32:641;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:641;918:16;;911:27;688:258::o;951:::-;993:3;1031:5;1025:12;1058:6;1053:3;1046:19;1074:63;1130:6;1123:4;1118:3;1114:14;1107:4;1100:5;1096:16;1074:63;:::i;:::-;1191:2;1170:15;-1:-1:-1;;1166:29:641;1157:39;;;;1198:4;1153:50;;951:258;-1:-1:-1;;951:258:641:o;1214:220::-;1363:2;1352:9;1345:21;1326:4;1383:45;1424:2;1413:9;1409:18;1401:6;1383:45;:::i;1439:104::-;-1:-1:-1;;;;;1505:31:641;1493:44;;1439:104::o;1756:180::-;1815:6;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;-1:-1:-1;1907:23:641;;1756:180;-1:-1:-1;1756:180:641:o;1941:173::-;2009:20;;-1:-1:-1;;;;;2058:31:641;;2048:42;;2038:70;;2104:1;2101;2094:12;2038:70;1941:173;;;:::o;2119:254::-;2187:6;2195;2248:2;2236:9;2227:7;2223:23;2219:32;2216:52;;;2264:1;2261;2254:12;2216:52;2287:29;2306:9;2287:29;:::i;:::-;2277:39;2363:2;2348:18;;;;2335:32;;-1:-1:-1;;;2119:254:641:o;2378:186::-;2437:6;2490:2;2478:9;2469:7;2465:23;2461:32;2458:52;;;2506:1;2503;2496:12;2458:52;2529:29;2548:9;2529:29;:::i;2751:328::-;2828:6;2836;2844;2897:2;2885:9;2876:7;2872:23;2868:32;2865:52;;;2913:1;2910;2903:12;2865:52;2936:29;2955:9;2936:29;:::i;:::-;2926:39;;2984:38;3018:2;3007:9;3003:18;2984:38;:::i;:::-;2974:48;;3069:2;3058:9;3054:18;3041:32;3031:42;;2751:328;;;;;:::o;3451:347::-;3502:8;3512:6;3566:3;3559:4;3551:6;3547:17;3543:27;3533:55;;3584:1;3581;3574:12;3533:55;-1:-1:-1;3607:20:641;;-1:-1:-1;;;;;3639:30:641;;3636:50;;;3682:1;3679;3672:12;3636:50;3719:4;3711:6;3707:17;3695:29;;3771:3;3764:4;3755:6;3747;3743:19;3739:30;3736:39;3733:59;;;3788:1;3785;3778:12;3803:700;3914:6;3922;3930;3983:2;3971:9;3962:7;3958:23;3954:32;3951:52;;;3999:1;3996;3989:12;3951:52;4039:9;4026:23;-1:-1:-1;;;;;4109:2:641;4101:6;4098:14;4095:34;;;4125:1;4122;4115:12;4095:34;4148:22;;;;4204:3;4186:16;;;4182:26;4179:46;;;4221:1;4218;4211:12;4179:46;4244:2;;-1:-1:-1;4299:2:641;4284:18;;4271:32;;4315:16;;;4312:36;;;4344:1;4341;4334:12;4312:36;;4383:60;4435:7;4424:8;4413:9;4409:24;4383:60;:::i;:::-;3803:700;;4462:8;;-1:-1:-1;4357:86:641;;-1:-1:-1;;;;3803:700:641:o;4797:248::-;4865:6;4873;4926:2;4914:9;4905:7;4901:23;4897:32;4894:52;;;4942:1;4939;4932:12;4894:52;-1:-1:-1;;4965:23:641;;;5035:2;5020:18;;;5007:32;;-1:-1:-1;4797:248:641:o;5050:274::-;-1:-1:-1;;;;;5242:32:641;;;;5224:51;;5306:2;5291:18;;5284:34;5212:2;5197:18;;5050:274::o;5329:254::-;5397:6;5405;5458:2;5446:9;5437:7;5433:23;5429:32;5426:52;;;5474:1;5471;5464:12;5426:52;5510:9;5497:23;5487:33;;5539:38;5573:2;5562:9;5558:18;5539:38;:::i;:::-;5529:48;;5329:254;;;;;:::o;5588:118::-;5674:5;5667:13;5660:21;5653:5;5650:32;5640:60;;5696:1;5693;5686:12;5711:524;5811:6;5819;5872:2;5860:9;5851:7;5847:23;5843:32;5840:52;;;5888:1;5885;5878:12;5840:52;5928:9;5915:23;-1:-1:-1;;;;;5953:6:641;5950:30;5947:50;;;5993:1;5990;5983:12;5947:50;6016:22;;6072:3;6054:16;;;6050:26;6047:46;;;6089:1;6086;6079:12;6047:46;6112:2;-1:-1:-1;6164:2:641;6149:18;;6136:32;6177:28;6136:32;6177:28;:::i;:::-;6224:5;6214:15;;;5711:524;;;;;:::o;6530:163::-;6597:5;6642:3;6633:6;6628:3;6624:16;6620:26;6617:46;;;6659:1;6656;6649:12;6698:127;6759:10;6754:3;6750:20;6747:1;6740:31;6790:4;6787:1;6780:15;6814:4;6811:1;6804:15;6830:275;6901:2;6895:9;6966:2;6947:13;;-1:-1:-1;;6943:27:641;6931:40;;-1:-1:-1;;;;;6986:34:641;;7022:22;;;6983:62;6980:88;;;7048:18;;:::i;:::-;7084:2;7077:22;6830:275;;-1:-1:-1;6830:275:641:o;7110:186::-;7158:4;-1:-1:-1;;;;;7183:6:641;7180:30;7177:56;;;7213:18;;:::i;:::-;-1:-1:-1;7279:2:641;7258:15;-1:-1:-1;;7254:29:641;7285:4;7250:40;;7110:186::o;7301:462::-;7343:5;7396:3;7389:4;7381:6;7377:17;7373:27;7363:55;;7414:1;7411;7404:12;7363:55;7450:6;7437:20;7481:48;7497:31;7525:2;7497:31;:::i;:::-;7481:48;:::i;:::-;7554:2;7545:7;7538:19;7600:3;7593:4;7588:2;7580:6;7576:15;7572:26;7569:35;7566:55;;;7617:1;7614;7607:12;7566:55;7682:2;7675:4;7667:6;7663:17;7656:4;7647:7;7643:18;7630:55;7730:1;7705:16;;;7723:4;7701:27;7694:38;;;;7709:7;7301:462;-1:-1:-1;;;7301:462:641:o;7768:877::-;7916:6;7924;7932;7940;7948;7956;8009:3;7997:9;7988:7;7984:23;7980:33;7977:53;;;8026:1;8023;8016:12;7977:53;8049:29;8068:9;8049:29;:::i;:::-;8039:39;;8125:2;8114:9;8110:18;8097:32;8087:42;;8148:38;8182:2;8171:9;8167:18;8148:38;:::i;:::-;8138:48;;8233:2;8222:9;8218:18;8205:32;8195:42;;8288:3;8277:9;8273:19;8260:33;-1:-1:-1;;;;;8353:2:641;8345:6;8342:14;8339:34;;;8369:1;8366;8359:12;8339:34;8392:74;8458:7;8449:6;8438:9;8434:22;8392:74;:::i;:::-;8382:84;;8519:3;8508:9;8504:19;8491:33;8475:49;;8549:2;8539:8;8536:16;8533:36;;;8565:1;8562;8555:12;8533:36;;8588:51;8631:7;8620:8;8609:9;8605:24;8588:51;:::i;:::-;8578:61;;;7768:877;;;;;;;;:::o;8903:321::-;8972:6;9025:2;9013:9;9004:7;9000:23;8996:32;8993:52;;;9041:1;9038;9031:12;8993:52;9081:9;9068:23;-1:-1:-1;;;;;9106:6:641;9103:30;9100:50;;;9146:1;9143;9136:12;9100:50;9169:49;9210:7;9201:6;9190:9;9186:22;9169:49;:::i;9229:322::-;9306:6;9314;9322;9375:2;9363:9;9354:7;9350:23;9346:32;9343:52;;;9391:1;9388;9381:12;9343:52;9427:9;9414:23;9404:33;;9456:38;9490:2;9479:9;9475:18;9456:38;:::i;9556:477::-;9635:6;9643;9651;9704:2;9692:9;9683:7;9679:23;9675:32;9672:52;;;9720:1;9717;9710:12;9672:52;9756:9;9743:23;9733:33;;9817:2;9806:9;9802:18;9789:32;-1:-1:-1;;;;;9836:6:641;9833:30;9830:50;;;9876:1;9873;9866:12;9830:50;9915:58;9965:7;9956:6;9945:9;9941:22;9915:58;:::i;10450:315::-;10515:6;10523;10576:2;10564:9;10555:7;10551:23;10547:32;10544:52;;;10592:1;10589;10582:12;10544:52;10615:29;10634:9;10615:29;:::i;10770:626::-;10867:6;10875;10928:2;10916:9;10907:7;10903:23;10899:32;10896:52;;;10944:1;10941;10934:12;10896:52;10984:9;10971:23;-1:-1:-1;;;;;11054:2:641;11046:6;11043:14;11040:34;;;11070:1;11067;11060:12;11040:34;11108:6;11097:9;11093:22;11083:32;;11153:7;11146:4;11142:2;11138:13;11134:27;11124:55;;11175:1;11172;11165:12;11124:55;11215:2;11202:16;11241:2;11233:6;11230:14;11227:34;;;11257:1;11254;11247:12;11227:34;11310:7;11305:2;11295:6;11292:1;11288:14;11284:2;11280:23;11276:32;11273:45;11270:65;;;11331:1;11328;11321:12;11270:65;11362:2;11354:11;;;;;11384:6;;-1:-1:-1;10770:626:641;;-1:-1:-1;;;;10770:626:641:o;11401:801::-;11561:4;11590:2;11630;11619:9;11615:18;11660:2;11649:9;11642:21;11683:6;11718;11712:13;11749:6;11741;11734:22;11787:2;11776:9;11772:18;11765:25;;11849:2;11839:6;11836:1;11832:14;11821:9;11817:30;11813:39;11799:53;;11887:2;11879:6;11875:15;11908:1;11918:255;11932:6;11929:1;11926:13;11918:255;;;12025:2;12021:7;12009:9;12001:6;11997:22;11993:36;11988:3;11981:49;12053:40;12086:6;12077;12071:13;12053:40;:::i;:::-;12043:50;-1:-1:-1;12151:12:641;;;;12116:15;;;;11954:1;11947:9;11918:255;;;-1:-1:-1;12190:6:641;;11401:801;-1:-1:-1;;;;;;;11401:801:641:o;12207:277::-;12287:6;12340:2;12328:9;12319:7;12315:23;12311:32;12308:52;;;12356:1;12353;12346:12;12308:52;12395:9;12382:23;12434:1;12427:5;12424:12;12414:40;;12450:1;12447;12440:12;12489:537;12584:6;12592;12600;12608;12661:3;12649:9;12640:7;12636:23;12632:33;12629:53;;;12678:1;12675;12668:12;12629:53;12701:29;12720:9;12701:29;:::i;:::-;12691:39;;12749:38;12783:2;12772:9;12768:18;12749:38;:::i;:::-;12739:48;;12834:2;12823:9;12819:18;12806:32;12796:42;;12889:2;12878:9;12874:18;12861:32;-1:-1:-1;;;;;12908:6:641;12905:30;12902:50;;;12948:1;12945;12938:12;12902:50;12971:49;13012:7;13003:6;12992:9;12988:22;12971:49;:::i;:::-;12961:59;;;12489:537;;;;;;;:::o;13031:786::-;13131:6;13139;13147;13155;13163;13216:2;13204:9;13195:7;13191:23;13187:32;13184:52;;;13232:1;13229;13222:12;13184:52;13268:9;13255:23;13245:33;;13329:2;13318:9;13314:18;13301:32;-1:-1:-1;;;;;13393:2:641;13385:6;13382:14;13379:34;;;13409:1;13406;13399:12;13379:34;13448:58;13498:7;13489:6;13478:9;13474:22;13448:58;:::i;:::-;13525:8;;-1:-1:-1;13422:84:641;-1:-1:-1;13613:2:641;13598:18;;13585:32;;-1:-1:-1;13629:16:641;;;13626:36;;;13658:1;13655;13648:12;13626:36;;13697:60;13749:7;13738:8;13727:9;13723:24;13697:60;:::i;:::-;13031:786;;;;-1:-1:-1;13031:786:641;;-1:-1:-1;13776:8:641;;13671:86;13031:786;-1:-1:-1;;;13031:786:641:o;13822:769::-;14130:4;14159:3;14189:6;14178:9;14171:25;14232:6;14227:2;14216:9;14212:18;14205:34;14275:6;14270:2;14259:9;14255:18;14248:34;14318:6;14313:2;14302:9;14298:18;14291:34;14362:6;14356:3;14345:9;14341:19;14334:35;14406:6;14400:3;14389:9;14385:19;14378:35;14479:1;14475;14470:3;14466:11;14462:19;14454:6;14450:32;14444:3;14433:9;14429:19;14422:61;14520:2;14514:3;14503:9;14499:19;14492:31;14540:45;14581:2;14570:9;14566:18;14558:6;14540:45;:::i;:::-;14532:53;13822:769;-1:-1:-1;;;;;;;;;;;13822:769:641:o;14596:718::-;14650:5;14703:3;14696:4;14688:6;14684:17;14680:27;14670:55;;14721:1;14718;14711:12;14670:55;14757:6;14744:20;14783:4;-1:-1:-1;;;;;14802:2:641;14799:26;14796:52;;;14828:18;;:::i;:::-;14874:2;14871:1;14867:10;14897:28;14921:2;14917;14913:11;14897:28;:::i;:::-;14959:15;;;15029;;;15025:24;;;14990:12;;;;15061:15;;;15058:35;;;15089:1;15086;15079:12;15058:35;15125:2;15117:6;15113:15;15102:26;;15137:148;15153:6;15148:3;15145:15;15137:148;;;15219:23;15238:3;15219:23;:::i;:::-;15207:36;;15170:12;;;;15263;;;;15137:148;;15319:173;15387:20;;-1:-1:-1;;;;;15436:31:641;;15426:42;;15416:70;;15482:1;15479;15472:12;15497:1417;15692:6;15700;15708;15716;15724;15732;15740;15748;15756;15764;15817:3;15805:9;15796:7;15792:23;15788:33;15785:53;;;15834:1;15831;15824:12;15785:53;15857:29;15876:9;15857:29;:::i;:::-;15847:39;;15937:2;15926:9;15922:18;15909:32;-1:-1:-1;;;;;16001:2:641;15993:6;15990:14;15987:34;;;16017:1;16014;16007:12;15987:34;16040:49;16081:7;16072:6;16061:9;16057:22;16040:49;:::i;:::-;16030:59;;16142:2;16131:9;16127:18;16114:32;16098:48;;16171:2;16161:8;16158:16;16155:36;;;16187:1;16184;16177:12;16155:36;16210:51;16253:7;16242:8;16231:9;16227:24;16210:51;:::i;:::-;16200:61;;16314:2;16303:9;16299:18;16286:32;16270:48;;16343:2;16333:8;16330:16;16327:36;;;16359:1;16356;16349:12;16327:36;16382:51;16425:7;16414:8;16403:9;16399:24;16382:51;:::i;:::-;16372:61;;16486:3;16475:9;16471:19;16458:33;16442:49;;16516:2;16506:8;16503:16;16500:36;;;16532:1;16529;16522:12;16500:36;;16555:63;16610:7;16599:8;16588:9;16584:24;16555:63;:::i;:::-;16545:73;;;16637:39;16671:3;16660:9;16656:19;16637:39;:::i;:::-;16627:49;;16695:39;16729:3;16718:9;16714:19;16695:39;:::i;:::-;16685:49;;16753:39;16787:3;16776:9;16772:19;16753:39;:::i;:::-;16743:49;;16811:39;16845:3;16834:9;16830:19;16811:39;:::i;:::-;16801:49;;16869:39;16903:3;16892:9;16888:19;16869:39;:::i;:::-;16859:49;;15497:1417;;;;;;;;;;;;;:::o;16919:628::-;17007:6;17015;17023;17076:2;17064:9;17055:7;17051:23;17047:32;17044:52;;;17092:1;17089;17082:12;17044:52;17132:9;17119:23;-1:-1:-1;;;;;17202:2:641;17194:6;17191:14;17188:34;;;17218:1;17215;17208:12;17188:34;17241:49;17282:7;17273:6;17262:9;17258:22;17241:49;:::i;:::-;17231:59;;17343:2;17332:9;17328:18;17315:32;17299:48;;17372:2;17362:8;17359:16;17356:36;;;17388:1;17385;17378:12;17552:260;17620:6;17628;17681:2;17669:9;17660:7;17656:23;17652:32;17649:52;;;17697:1;17694;17687:12;17649:52;17720:29;17739:9;17720:29;:::i;:::-;17710:39;;17768:38;17802:2;17791:9;17787:18;17768:38;:::i;17817:657::-;17947:6;17955;17963;17971;17979;18032:3;18020:9;18011:7;18007:23;18003:33;18000:53;;;18049:1;18046;18039:12;18000:53;18072:29;18091:9;18072:29;:::i;:::-;18062:39;;18148:2;18137:9;18133:18;18120:32;18110:42;;18171:38;18205:2;18194:9;18190:18;18171:38;:::i;:::-;18161:48;;18256:2;18245:9;18241:18;18228:32;18218:42;;18311:3;18300:9;18296:19;18283:33;-1:-1:-1;;;;;18331:6:641;18328:30;18325:50;;;18371:1;18368;18361:12;18325:50;18394:74;18460:7;18451:6;18440:9;18436:22;18394:74;:::i;:::-;18384:84;;;17817:657;;;;;;;;:::o;18479:127::-;18540:10;18535:3;18531:20;18528:1;18521:31;18571:4;18568:1;18561:15;18595:4;18592:1;18585:15;18611:349;18764:2;18749:18;;18797:1;18786:13;;18776:144;;18842:10;18837:3;18833:20;18830:1;18823:31;18877:4;18874:1;18867:15;18905:4;18902:1;18895:15;18776:144;18929:25;;;18611:349;:::o;18965:380::-;19044:1;19040:12;;;;19087;;;19108:61;;19162:4;19154:6;19150:17;19140:27;;19108:61;19215:2;19207:6;19204:14;19184:18;19181:38;19178:161;;;19261:10;19256:3;19252:20;19249:1;19242:31;19296:4;19293:1;19286:15;19324:4;19321:1;19314:15;19350:338;19552:2;19534:21;;;19591:2;19571:18;;;19564:30;-1:-1:-1;;;19625:2:641;19610:18;;19603:44;19679:2;19664:18;;19350:338::o;20035:127::-;20096:10;20091:3;20087:20;20084:1;20077:31;20127:4;20124:1;20117:15;20151:4;20148:1;20141:15;20167:127;20228:10;20223:3;20219:20;20216:1;20209:31;20259:4;20256:1;20249:15;20283:4;20280:1;20273:15;20299:168;20339:7;20405:1;20401;20397:6;20393:14;20390:1;20387:21;20382:1;20375:9;20368:17;20364:45;20361:71;;;20412:18;;:::i;:::-;-1:-1:-1;20452:9:641;;20299:168::o;20472:127::-;20533:10;20528:3;20524:20;20521:1;20514:31;20564:4;20561:1;20554:15;20588:4;20585:1;20578:15;20604:120;20644:1;20670;20660:35;;20675:18;;:::i;:::-;-1:-1:-1;20709:9:641;;20604:120::o;22080:522::-;22158:4;22164:6;22224:11;22211:25;22318:2;22314:7;22303:8;22287:14;22283:29;22279:43;22259:18;22255:68;22245:96;;22337:1;22334;22327:12;22245:96;22364:33;;22416:20;;;-1:-1:-1;;;;;;22448:30:641;;22445:50;;;22491:1;22488;22481:12;22445:50;22524:4;22512:17;;-1:-1:-1;22555:14:641;22551:27;;;22541:38;;22538:58;;;22592:1;22589;22582:12;22607:504;22666:5;22673:6;22733:3;22720:17;22819:2;22815:7;22804:8;22788:14;22784:29;22780:43;22760:18;22756:68;22746:96;;22838:1;22835;22828:12;22746:96;22866:33;;22970:4;22957:18;;;-1:-1:-1;22918:21:641;;-1:-1:-1;;;;;;22987:30:641;;22984:50;;;23030:1;23027;23020:12;22984:50;23080:6;23064:14;23060:27;23050:8;23046:42;23043:62;;;23101:1;23098;23091:12;23116:267;23205:6;23200:3;23193:19;23257:6;23250:5;23243:4;23238:3;23234:14;23221:43;-1:-1:-1;23309:1:641;23284:16;;;23302:4;23280:27;;;23273:38;;;;23365:2;23344:15;;;-1:-1:-1;;23340:29:641;23331:39;;;23327:50;;23116:267::o;23388:1078::-;23607:2;23596:9;23589:21;23659:6;23646:20;23641:2;23630:9;23626:18;23619:48;23728:4;23720:6;23716:17;23703:31;23698:2;23687:9;23683:18;23676:59;23797:2;23789:6;23785:15;23772:29;23766:3;23755:9;23751:19;23744:58;23864:2;23856:6;23852:15;23839:29;23833:3;23822:9;23818:19;23811:58;23931:3;23923:6;23919:16;23906:30;23900:3;23889:9;23885:19;23878:59;23999:3;23991:6;23987:16;23974:30;23968:3;23957:9;23953:19;23946:59;23570:4;24034:36;24065:3;24057:6;24053:16;24034:36;:::i;:::-;-1:-1:-1;;;;;24131:38:641;;24089:6;24111:18;;;24104:66;;;;24215:57;24267:3;24255:16;;24259:6;24215:57;:::i;:::-;24179:93;;24309:2;24303:3;24292:9;24288:19;24281:31;24329:77;24401:3;24390:9;24386:19;24372:12;24356:14;24329:77;:::i;:::-;24321:85;;;;;24415:45;24454:4;24443:9;24439:20;24431:6;470:13;463:21;451:34;;400:91;24471:128;24511:3;24542:1;24538:6;24535:1;24532:13;24529:39;;;24548:18;;:::i;:::-;-1:-1:-1;24584:9:641;;24471:128::o;24604:330::-;24806:2;24788:21;;;24845:1;24825:18;;;24818:29;-1:-1:-1;;;24878:2:641;24863:18;;24856:37;24925:2;24910:18;;24604:330::o;25048:1542::-;25239:2;25228:9;25221:21;25251:66;25313:2;25302:9;25298:18;25270:26;25289:6;25270:26;:::i;:::-;25251:66;:::i;:::-;25202:4;25346:35;25377:2;25369:6;25365:15;25346:35;:::i;:::-;25390:52;25438:2;25427:9;25423:18;25409:12;25390:52;:::i;:::-;;25503:2;25495:6;25491:15;25478:29;25473:2;25462:9;25458:18;25451:57;25539:35;25570:2;25562:6;25558:15;25539:35;:::i;:::-;25583:55;25633:3;25622:9;25618:19;25602:14;25583:55;:::i;:::-;;25683:57;25735:3;25727:6;25723:16;25715:6;25683:57;:::i;:::-;25759:6;25802:2;25796:3;25785:9;25781:19;25774:31;25828:77;25900:3;25889:9;25885:19;25871:12;25855:14;25828:77;:::i;:::-;25814:91;;25967:3;25959:6;25955:16;25942:30;25936:3;25925:9;25921:19;25914:59;26035:3;26027:6;26023:16;26010:30;26004:3;25993:9;25989:19;25982:59;26072:36;26103:3;26095:6;26091:16;26072:36;:::i;:::-;26050:58;;26127:3;26139:54;26189:2;26178:9;26174:18;26158:14;26139:54;:::i;:::-;26224:35;26255:2;26247:6;26243:15;26224:35;:::i;:::-;26202:57;;;26278:3;26290:54;26340:2;26329:9;26325:18;26309:14;-1:-1:-1;;;;;25005:31:641;24993:44;;24939:104;26290:54;26375:35;26406:2;26398:6;26394:15;26375:35;:::i;:::-;26353:57;;;26429:3;26441:54;26491:2;26480:9;26476:18;26460:14;-1:-1:-1;;;;;25005:31:641;24993:44;;24939:104;26441:54;26544:15;;;;26531:29;26511:18;;;;26504:57;;;;-1:-1:-1;26578:6:641;25048:1542;-1:-1:-1;25048:1542:641:o;26941:703::-;27029:6;27037;27090:2;27078:9;27069:7;27065:23;27061:32;27058:52;;;27106:1;27103;27096:12;27058:52;27139:9;27133:16;-1:-1:-1;;;;;27164:6:641;27161:30;27158:50;;;27204:1;27201;27194:12;27158:50;27227:22;;27280:4;27272:13;;27268:27;-1:-1:-1;27258:55:641;;27309:1;27306;27299:12;27258:55;27338:2;27332:9;27363:48;27379:31;27407:2;27379:31;:::i;27363:48::-;27434:2;27427:5;27420:17;27476:7;27469:4;27464:2;27460;27456:11;27452:22;27449:35;27446:55;;;27497:1;27494;27487:12;27446:55;27510:58;27565:2;27558:4;27551:5;27547:16;27540:4;27536:2;27532:13;27510:58;:::i;:::-;27632:4;27617:20;;;;27611:27;27587:5;;27611:27;;-1:-1:-1;;;;;26941:703:641:o;27649:525::-;27864:3;27902:6;27896:13;27918:53;27964:6;27959:3;27952:4;27944:6;27940:17;27918:53;:::i;:::-;27993:16;;28046:6;28038;27993:16;28018:35;28072:18;;;28121;;;-1:-1:-1;28163:4:641;28155:13;;27649:525;-1:-1:-1;;;27649:525:641:o;29047:135::-;29086:3;-1:-1:-1;;29107:17:641;;29104:43;;;29127:18;;:::i;:::-;-1:-1:-1;29174:1:641;29163:13;;29047:135::o;29187:439::-;29419:3;29457:6;29451:13;29473:53;29519:6;29514:3;29507:4;29499:6;29495:17;29473:53;:::i;:::-;-1:-1:-1;;;29548:16:641;;29573:18;;;-1:-1:-1;29618:1:641;29607:13;;29187:439;-1:-1:-1;29187:439:641:o;29631:470::-;29810:3;29848:6;29842:13;29864:53;29910:6;29905:3;29898:4;29890:6;29886:17;29864:53;:::i;:::-;29980:13;;29939:16;;;;30002:57;29980:13;29939:16;30036:4;30024:17;;30002:57;:::i;:::-;30075:20;;29631:470;-1:-1:-1;;;;29631:470:641:o;30106:388::-;30183:6;30191;30244:2;30232:9;30223:7;30219:23;30215:32;30212:52;;;30260:1;30257;30250:12;30212:52;30300:9;30287:23;-1:-1:-1;;;;;30325:6:641;30322:30;30319:50;;;30365:1;30362;30355:12;30319:50;30388:49;30429:7;30420:6;30409:9;30405:22;30388:49;:::i;:::-;30378:59;30484:2;30469:18;;;;30456:32;;-1:-1:-1;;;;30106:388:641:o;31113:335::-;31324:6;31316;31311:3;31298:33;31350:16;;;31397:18;;;31439:2;31431:11;;31113:335;-1:-1:-1;31113:335:641:o;31453:545::-;31546:4;31552:6;31612:11;31599:25;31706:2;31702:7;31691:8;31675:14;31671:29;31667:43;31647:18;31643:68;31633:96;;31725:1;31722;31715:12;31633:96;31752:33;;31804:20;;;-1:-1:-1;;;;;;31836:30:641;;31833:50;;;31879:1;31876;31869:12;31833:50;31912:4;31900:17;;-1:-1:-1;31963:1:641;31959:14;;;31943;31939:35;31929:46;;31926:66;;;31988:1;31985;31978:12;33823:339;34025:2;34007:21;;;34064:2;34044:18;;;34037:30;-1:-1:-1;;;34098:2:641;34083:18;;34076:45;34153:2;34138:18;;33823:339::o;34167:784::-;-1:-1:-1;;;34573:3:641;34566:36;34548:3;34631:6;34625:13;34647:62;34702:6;34697:2;34692:3;34688:12;34681:4;34673:6;34669:17;34647:62;:::i;:::-;-1:-1:-1;;;34768:2:641;34728:16;;;34760:11;;;34753:40;34818:13;;34840:63;34818:13;34889:2;34881:11;;34874:4;34862:17;;34840:63;:::i;:::-;34923:17;34942:2;34919:26;;34167:784;-1:-1:-1;;;;34167:784:641:o;35296:186::-;35355:6;35408:2;35396:9;35387:7;35383:23;35379:32;35376:52;;;35424:1;35421;35414:12;35376:52;35447:29;35466:9;35447:29;:::i;36508:329::-;36710:2;36692:21;;;36749:1;36729:18;;;36722:29;-1:-1:-1;;;36782:2:641;36767:18;;36760:36;36828:2;36813:18;;36508:329::o;37176:125::-;37216:4;37244:1;37241;37238:8;37235:34;;;37249:18;;:::i;:::-;-1:-1:-1;37286:9:641;;37176:125::o;37306:383::-;37503:2;37492:9;37485:21;37466:4;37529:45;37570:2;37559:9;37555:18;37547:6;37529:45;:::i;:::-;37622:9;37614:6;37610:22;37605:2;37594:9;37590:18;37583:50;37650:33;37676:6;37668;37650:33;:::i;38101:274::-;38230:3;38268:6;38262:13;38284:53;38330:6;38325:3;38318:4;38310:6;38306:17;38284:53;:::i;:::-;38353:16;;;;;38101:274;-1:-1:-1;;38101:274:641:o;38380:489::-;-1:-1:-1;;;;;38649:15:641;;;38631:34;;38701:15;;38696:2;38681:18;;38674:43;38748:2;38733:18;;38726:34;;;38796:3;38791:2;38776:18;;38769:31;;;38574:4;;38817:46;;38843:19;;38835:6;38817:46;:::i;38874:249::-;38943:6;38996:2;38984:9;38975:7;38971:23;38967:32;38964:52;;;39012:1;39009;39002:12;38964:52;39044:9;39038:16;39063:30;39087:5;39063:30;:::i;39472:112::-;39504:1;39530;39520:35;;39535:18;;:::i;:::-;-1:-1:-1;39569:9:641;;39472:112::o;39922:506::-;40165:6;40154:9;40147:25;40208:2;40203;40192:9;40188:18;40181:30;40128:4;40234:62;40292:2;40281:9;40277:18;40269:6;40261;40234:62;:::i;:::-;40344:9;40336:6;40332:22;40327:2;40316:9;40312:18;40305:50;40372;40415:6;40407;40399;40372:50;:::i;:::-;40364:58;39922:506;-1:-1:-1;;;;;;;;39922:506:641:o;40433:407::-;40635:2;40617:21;;;40674:2;40654:18;;;40647:30;40713:34;40708:2;40693:18;;40686:62;-1:-1:-1;;;40779:2:641;40764:18;;40757:41;40830:3;40815:19;;40433:407::o;41440:271::-;41623:6;41615;41610:3;41597:33;41579:3;41649:16;;41674:13;;;41649:16;41440:271;-1:-1:-1;41440:271:641:o;42822:136::-;42861:3;42889:5;42879:39;;42898:18;;:::i;:::-;-1:-1:-1;;;42934:18:641;;42822:136::o;47084:245::-;47151:6;47204:2;47192:9;47183:7;47179:23;47175:32;47172:52;;;47220:1;47217;47210:12;47172:52;47252:9;47246:16;47271:28;47293:5;47271:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(address)": "35b65e1f",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "439c7be5",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "reveal(uint256,bytes)": "ce805642",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": "426cfaf3",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "252e82e8",
    "verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "eec8897c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdMinted\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropSinglePhase.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"_condition\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC721.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropSinglePhase.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(address)\":{\"details\":\"Returns the supply claimed by claimer for active conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Claim lazy minted tokens via signature.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"},\"verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/signature-drop/SignatureDrop.sol\":\"SignatureDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3\",\"dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6\"]},\"contracts/extension/DropSinglePhase.sol\":{\"keccak256\":\"0x836429b5346bd4f6a2078e5b2db2702a692afddc74f316a92fd6c1335f03ff3a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bc0858bb7a2c05013eb6352cc47087d6334824a32cc8545e549dddcf69a0dc31\",\"dweb:/ipfs/QmPMDq6F9G9u4nGEQTUPpUv7pm3cm3vY5hcb6ue9paEmGS\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SignatureMintERC721Upgradeable.sol\":{\"keccak256\":\"0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3\",\"dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDropSinglePhase.sol\":{\"keccak256\":\"0xe0a451031e98104d0f4879ec61feab4626c85b234c8db8c6cdbf5c9d4bb58a36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b651b6128a69e35eadca6633bfa91529ca917edd0601537e509ba3c6056bc7a9\",\"dweb:/ipfs/QmakTGgGyaT9MTCsxuPJmMaGBRX2sBzmKZnqqNb5oiHmnZ\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ISignatureMintERC721.sol\":{\"keccak256\":\"0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2\",\"dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/signature-drop/SignatureDrop.sol\":{\"keccak256\":\"0xb7f25046c51810e66caa44261629f5446f7595f13476ced0f573f155a141db9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52f2f5f44176358de30192e353af091654f7fb778789a68255fe60f34bf5b28a\",\"dweb:/ipfs/QmccLpc46SLHrGEUKNE4xwFGeSHBnZV2pK1jf9Jn1x6V2F\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4\",\"dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be\",\"dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdMinted",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "_condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC721.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "royaltyRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyBps",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(address)": {
            "details": "Returns the supply claimed by claimer for active conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "mintWithSignature((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Claim lazy minted tokens via signature."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "verify((address,address,uint256,address,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          },
          "verifyClaim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/signature-drop/SignatureDrop.sol": "SignatureDrop"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x2a860e4b857617a1c87c5fb79df2dd4a70e0e63ec6796f58ce9d0b3b93f1e242",
        "urls": [
          "bzz-raw://cc4039ae41d23b921c13b500018e333d63dd9b3be65e700e0d05465d3ac680a3",
          "dweb:/ipfs/QmSLCVWqjVzDt9ygXmBffERFCYCo7RiGry2BhQjXcnZjQ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DropSinglePhase.sol": {
        "keccak256": "0x836429b5346bd4f6a2078e5b2db2702a692afddc74f316a92fd6c1335f03ff3a",
        "urls": [
          "bzz-raw://bc0858bb7a2c05013eb6352cc47087d6334824a32cc8545e549dddcf69a0dc31",
          "dweb:/ipfs/QmPMDq6F9G9u4nGEQTUPpUv7pm3cm3vY5hcb6ue9paEmGS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC721Upgradeable.sol": {
        "keccak256": "0x1f9f0cdf37800f14e331b01721130d503d55e60ff86cd3faae15d75e9cb4c8f3",
        "urls": [
          "bzz-raw://7a1dce41c6e7522b39c8648742e70867f6ef9ebbadf01249f4d47f850af653a3",
          "dweb:/ipfs/QmX3znQxZSiA9GFvGkCeEHPrA1dy1pAo6tFyAoa2GtKAKM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDropSinglePhase.sol": {
        "keccak256": "0xe0a451031e98104d0f4879ec61feab4626c85b234c8db8c6cdbf5c9d4bb58a36",
        "urls": [
          "bzz-raw://b651b6128a69e35eadca6633bfa91529ca917edd0601537e509ba3c6056bc7a9",
          "dweb:/ipfs/QmakTGgGyaT9MTCsxuPJmMaGBRX2sBzmKZnqqNb5oiHmnZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC721.sol": {
        "keccak256": "0xc1142e0742252123cff0b0c45ede1e70d43cf01d677abc32d4a16064d5161822",
        "urls": [
          "bzz-raw://b8f0a32af882458e1c2b040ebe1bc399bdd765e8a29c35fb881494d414c95cb2",
          "dweb:/ipfs/QmR4Z1N29sPXstFaQrubGjNiQhf26VztyVFHjpDjFLfFAi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/signature-drop/SignatureDrop.sol": {
        "keccak256": "0xb7f25046c51810e66caa44261629f5446f7595f13476ced0f573f155a141db9e",
        "urls": [
          "bzz-raw://52f2f5f44176358de30192e353af091654f7fb778789a68255fe60f34bf5b28a",
          "dweb:/ipfs/QmccLpc46SLHrGEUKNE4xwFGeSHBnZV2pK1jf9Jn1x6V2F"
        ],
        "license": "Apache-2.0"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol": {
        "keccak256": "0x73586b2650e59bdb698c0a2cf965f440f0046456fc0c18e9f122a573355197a2",
        "urls": [
          "bzz-raw://9c5c2ae31936f25cb63cbe69902121539dada52dbcc89216f1f23a7c8e0170e4",
          "dweb:/ipfs/QmSUk2vRQoqGPLtTZg9dLKR6j3trFxMjDhveRpJwkm7vkZ"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0x89447bfc4f1417953e3664234d896b42ebc7d68b3cc27f86f7cdd7addfdd5c1c",
        "urls": [
          "bzz-raw://3916917efc838814adb1e459c968d442d26e304f28af181ff35cffb5ca3ec0be",
          "dweb:/ipfs/QmcVwcrhenj31MCbDn6yvaYsFNkyJmA3isWaJiGhgQeEmQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/signature-drop/SignatureDrop.sol",
    "id": 85832,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "BatchMintMetadata": [
        34496
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DelayedReveal": [
        34962
      ],
      "DropSinglePhase": [
        36774
      ],
      "ECDSAUpgradeable": [
        158725
      ],
      "EIP712Upgradeable": [
        158875
      ],
      "ERC165Upgradeable": [
        158919
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "ERC721AUpgradeable": [
        104397
      ],
      "IClaimCondition": [
        49527
      ],
      "IContractMetadata": [
        49679
      ],
      "IDelayedReveal": [
        49710
      ],
      "IDropSinglePhase": [
        49949
      ],
      "IERC165": [
        31146
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IERC2981Upgradeable": [
        151718
      ],
      "IERC721AUpgradeable": [
        104468
      ],
      "IERC721MetadataUpgradeable": [
        157148
      ],
      "IERC721ReceiverUpgradeable": [
        156616
      ],
      "IERC721Upgradeable": [
        156732
      ],
      "ILazyMint": [
        50054
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPlatformFee": [
        50559
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "ISignatureMintERC721": [
        51138
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "LazyMint": [
        37538
      ],
      "MerkleProof": [
        64593
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PlatformFee": [
        39256
      ],
      "PrimarySale": [
        39318
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureDrop": [
        85831
      ],
      "SignatureMintERC721Upgradeable": [
        41394
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13683:344",
    "nodes": [
      {
        "id": 84984,
        "nodeType": "PragmaDirective",
        "src": "39:24:344",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 84985,
        "nodeType": "ImportDirective",
        "src": "775:76:344",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84986,
        "nodeType": "ImportDirective",
        "src": "852:74:344",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 158124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84987,
        "nodeType": "ImportDirective",
        "src": "927:80:344",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 151719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84988,
        "nodeType": "ImportDirective",
        "src": "1009:62:344",
        "nodes": [],
        "absolutePath": "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol",
        "file": "erc721a-upgradeable/contracts/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 104398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84989,
        "nodeType": "ImportDirective",
        "src": "1121:70:344",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84990,
        "nodeType": "ImportDirective",
        "src": "1192:40:344",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84991,
        "nodeType": "ImportDirective",
        "src": "1274:43:344",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84992,
        "nodeType": "ImportDirective",
        "src": "1318:38:344",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 39257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84993,
        "nodeType": "ImportDirective",
        "src": "1357:34:344",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84994,
        "nodeType": "ImportDirective",
        "src": "1392:38:344",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84995,
        "nodeType": "ImportDirective",
        "src": "1431:34:344",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84996,
        "nodeType": "ImportDirective",
        "src": "1466:40:344",
        "nodes": [],
        "absolutePath": "contracts/extension/DelayedReveal.sol",
        "file": "../extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 34963,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84997,
        "nodeType": "ImportDirective",
        "src": "1507:35:344",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 37539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84998,
        "nodeType": "ImportDirective",
        "src": "1543:48:344",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 84999,
        "nodeType": "ImportDirective",
        "src": "1592:42:344",
        "nodes": [],
        "absolutePath": "contracts/extension/DropSinglePhase.sol",
        "file": "../extension/DropSinglePhase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 36775,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85000,
        "nodeType": "ImportDirective",
        "src": "1635:57:344",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC721Upgradeable.sol",
        "file": "../extension/SignatureMintERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85832,
        "sourceUnit": 41395,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 85831,
        "nodeType": "ContractDefinition",
        "src": "1694:12027:344",
        "nodes": [
          {
            "id": 85031,
            "nodeType": "UsingForDirective",
            "src": "2024:37:344",
            "nodes": [],
            "libraryName": {
              "id": 85029,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158123,
              "src": "2030:18:344"
            },
            "typeName": {
              "id": 85030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2053:7:344",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 85034,
            "nodeType": "VariableDeclaration",
            "src": "2354:28:344",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 85032,
              "nodeType": "StructuredDocumentation",
              "src": "2251:98:344",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2370:12:344",
            "scope": 85831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 85033,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2354:7:344",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 85037,
            "nodeType": "VariableDeclaration",
            "src": "2479:26:344",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 85035,
              "nodeType": "StructuredDocumentation",
              "src": "2388:86:344",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2495:10:344",
            "scope": 85831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 85036,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2479:7:344",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 85041,
            "nodeType": "VariableDeclaration",
            "src": "2557:41:344",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 85038,
              "nodeType": "StructuredDocumentation",
              "src": "2512:40:344",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2582:7:344",
            "scope": 85831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85039,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2557:7:344",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 85040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2592:6:344",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 85146,
            "nodeType": "FunctionDefinition",
            "src": "2856:1257:344",
            "nodes": [],
            "body": {
              "id": 85145,
              "nodeType": "Block",
              "src": "3243:870:344",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85069,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3261:13:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85145,
                      "src": "3253:21:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85068,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85073,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 85071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3287:15:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 85070,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3277:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 85072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:26:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:50:344"
                },
                {
                  "assignments": [
                    85075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85075,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "3321:11:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85145,
                      "src": "3313:19:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85074,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3313:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85079,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 85077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3345:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 85076,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3335:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 85078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:24:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3313:46:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85081,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85053,
                        "src": "3467:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 85080,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "3445:21:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 85082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85083,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:41:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85085,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85046,
                        "src": "3511:5:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 85086,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85048,
                        "src": "3518:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85084,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103065,
                      "src": "3496:14:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 85087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:30:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85088,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:30:344"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 85089,
                      "name": "__SignatureMintERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41205,
                      "src": "3536:26:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 85090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:28:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85091,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:28:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85093,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85050,
                        "src": "3593:12:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85092,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "3575:17:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 85094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:31:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85095,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:31:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85097,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85044,
                        "src": "3628:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85096,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "3616:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 85098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:26:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85099,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:26:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85101,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3664:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85102,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85044,
                        "src": "3684:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85100,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3653:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:45:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85104,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:45:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85106,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85075,
                        "src": "3719:11:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85107,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85044,
                        "src": "3732:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85105,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3708:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3708:38:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85109,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:38:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85111,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85069,
                        "src": "3767:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85112,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85044,
                        "src": "3782:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85110,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3756:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3756:40:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85114,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:40:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85116,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85069,
                        "src": "3817:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3840:1:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3832:7:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85117,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3832:7:344",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3832:10:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85115,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3806:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 85121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:37:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85122,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:37:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85124,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85063,
                        "src": "3876:21:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85125,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85061,
                        "src": "3899:15:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 85123,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39163,
                      "src": "3854:21:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:61:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85127,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:61:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85129,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85057,
                        "src": "3950:17:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85130,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85059,
                        "src": "3969:11:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 85128,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "3925:24:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3925:56:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85132,
                  "nodeType": "ExpressionStatement",
                  "src": "3925:56:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85134,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85055,
                        "src": "4018:14:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85133,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "3991:26:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 85135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3991:42:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85136,
                  "nodeType": "ExpressionStatement",
                  "src": "3991:42:344"
                },
                {
                  "expression": {
                    "id": 85139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85137,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85034,
                      "src": "4044:12:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85138,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85069,
                      "src": "4059:13:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4044:28:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 85140,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:28:344"
                },
                {
                  "expression": {
                    "id": 85143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85141,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85037,
                      "src": "4082:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85142,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85075,
                      "src": "4095:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4082:24:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 85144,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:24:344"
                }
              ]
            },
            "documentation": {
              "id": 85042,
              "nodeType": "StructuredDocumentation",
              "src": "2797:54:344",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85065,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3231:11:344"
                },
                "nodeType": "ModifierInvocation",
                "src": "3231:11:344"
              }
            ],
            "name": "initialize",
            "nameLocation": "2865:10:344",
            "parameters": {
              "id": 85064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85044,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2893:13:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "2885:21:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2885:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85046,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2930:5:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "2916:19:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85045,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2916:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85048,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2959:7:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "2945:21:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85050,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2990:12:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "2976:26:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2976:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85053,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3029:18:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3012:35:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 85051,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3012:7:344",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 85052,
                    "nodeType": "ArrayTypeName",
                    "src": "3012:9:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85055,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "3065:14:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3057:22:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85057,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3097:17:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3089:25:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85059,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3132:11:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3124:19:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 85058,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85061,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3161:15:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3153:23:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 85060,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3153:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85063,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3194:21:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85146,
                  "src": "3186:29:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3186:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:346:344"
            },
            "returnParameters": {
              "id": 85067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85194,
            "nodeType": "FunctionDefinition",
            "src": "4360:402:344",
            "nodes": [],
            "body": {
              "id": 85193,
              "nodeType": "Block",
              "src": "4441:321:344",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85156,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85156,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4460:7:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85193,
                      "src": "4452:15:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4452:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 85160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85158,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85149,
                        "src": "4485:8:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85157,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34392,
                      "src": "4473:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 85159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:21:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4451:43:344"
                },
                {
                  "assignments": [
                    85162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85162,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4518:8:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85193,
                      "src": "4504:22:344",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 85161,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4504:6:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85166,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85164,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85149,
                        "src": "4541:8:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85163,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34443,
                      "src": "4529:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 85165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4529:21:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4504:46:344"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 85168,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85156,
                        "src": "4582:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85167,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34961,
                      "src": "4565:16:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 85169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4565:25:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85191,
                    "nodeType": "Block",
                    "src": "4669:87:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 85184,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85162,
                                  "src": "4714:8:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 85185,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85149,
                                      "src": "4724:8:344",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 85186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 157985,
                                    "src": "4724:17:344",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 85187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4724:19:344",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 85182,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4697:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 85183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4697:16:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 85188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4697:47:344",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 85181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4690:6:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 85180,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4690:6:344",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4690:55:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 85154,
                        "id": 85190,
                        "nodeType": "Return",
                        "src": "4683:62:344"
                      }
                    ]
                  },
                  "id": 85192,
                  "nodeType": "IfStatement",
                  "src": "4561:195:344",
                  "trueBody": {
                    "id": 85179,
                    "nodeType": "Block",
                    "src": "4592:71:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 85174,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85162,
                                  "src": "4637:8:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 85175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4647:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 85172,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4620:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 85173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4620:16:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 85176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4620:31:344",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 85171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4613:6:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 85170,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4613:6:344",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4613:39:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 85154,
                        "id": 85178,
                        "nodeType": "Return",
                        "src": "4606:46:344"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              103401
            ],
            "documentation": {
              "id": 85147,
              "nodeType": "StructuredDocumentation",
              "src": "4310:45:344",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4369:8:344",
            "overrides": {
              "id": 85151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4408:8:344"
            },
            "parameters": {
              "id": 85150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85149,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4386:8:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85194,
                  "src": "4378:16:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4377:18:344"
            },
            "returnParameters": {
              "id": 85154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85194,
                  "src": "4426:13:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4425:15:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85218,
            "nodeType": "FunctionDefinition",
            "src": "4793:280:344",
            "nodes": [],
            "body": {
              "id": 85217,
              "nodeType": "Block",
              "src": "4957:116:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 85207,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85197,
                          "src": "4998:11:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 85205,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4974:5:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SignatureDrop_$85831_$",
                            "typeString": "type(contract super SignatureDrop)"
                          }
                        },
                        "id": 85206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 103157,
                        "src": "4974:23:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 85208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4974:36:344",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 85214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85210,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151718,
                              "src": "5019:19:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 85209,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5014:4:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 85211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5014:25:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151718",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 85212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "5014:37:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 85213,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85197,
                        "src": "5055:11:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5014:52:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4974:92:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85204,
                  "id": 85216,
                  "nodeType": "Return",
                  "src": "4967:99:344"
                }
              ]
            },
            "baseFunctions": [
              31145,
              103157
            ],
            "documentation": {
              "id": 85195,
              "nodeType": "StructuredDocumentation",
              "src": "4768:20:344",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4802:17:344",
            "overrides": {
              "id": 85201,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 85199,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104397,
                  "src": "4901:18:344"
                },
                {
                  "id": 85200,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "4921:7:344"
                }
              ],
              "src": "4892:37:344"
            },
            "parameters": {
              "id": 85198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85197,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4827:11:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85218,
                  "src": "4820:18:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 85196,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4820:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4819:20:344"
            },
            "returnParameters": {
              "id": 85204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85218,
                  "src": "4947:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4947:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4946:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 85229,
            "nodeType": "FunctionDefinition",
            "src": "5079:104:344",
            "nodes": [],
            "body": {
              "id": 85228,
              "nodeType": "Block",
              "src": "5135:48:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5369676e617475726544726f70",
                        "id": 85225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5160:15:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        },
                        "value": "SignatureDrop"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_92828575e6bcb5e8794986487d0a26561c24289f562f658bc2cd61cddc1c7e96",
                          "typeString": "literal_string \"SignatureDrop\""
                        }
                      ],
                      "id": 85224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5152:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 85223,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5152:7:344",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 85226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5152:24:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 85222,
                  "id": 85227,
                  "nodeType": "Return",
                  "src": "5145:31:344"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "5088:12:344",
            "parameters": {
              "id": 85219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5100:2:344"
            },
            "returnParameters": {
              "id": 85222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85229,
                  "src": "5126:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5126:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5125:9:344"
            },
            "scope": 85831,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85240,
            "nodeType": "FunctionDefinition",
            "src": "5189:89:344",
            "nodes": [],
            "body": {
              "id": 85239,
              "nodeType": "Block",
              "src": "5246:32:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 85236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5269:1:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 85235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5263:5:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 85234,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5263:5:344",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 85237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5263:8:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 85233,
                  "id": 85238,
                  "nodeType": "Return",
                  "src": "5256:15:344"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5198:15:344",
            "parameters": {
              "id": 85230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5213:2:344"
            },
            "returnParameters": {
              "id": 85233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85240,
                  "src": "5239:5:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 85231,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5238:7:344"
            },
            "scope": 85831,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85298,
            "nodeType": "FunctionDefinition",
            "src": "5652:540:344",
            "nodes": [],
            "body": {
              "id": 85297,
              "nodeType": "Block",
              "src": "5816:376:344",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 85253,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85247,
                        "src": "5830:5:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 85254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5830:12:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 85255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5845:1:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5830:16:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85289,
                  "nodeType": "IfStatement",
                  "src": "5826:293:344",
                  "trueBody": {
                    "id": 85288,
                    "nodeType": "Block",
                    "src": "5848:271:344",
                    "statements": [
                      {
                        "assignments": [
                          85258,
                          85260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 85258,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5876:12:344",
                            "nodeType": "VariableDeclaration",
                            "scope": 85288,
                            "src": "5863:25:344",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 85257,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5863:5:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 85260,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5898:14:344",
                            "nodeType": "VariableDeclaration",
                            "scope": 85288,
                            "src": "5890:22:344",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 85259,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5890:7:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 85270,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 85263,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85247,
                              "src": "5927:5:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 85265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5935:5:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 85264,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5935:5:344",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 85267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5942:7:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 85266,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5942:7:344",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 85268,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5934:16:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 85261,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5916:3:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 85262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5916:10:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 85269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5916:35:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5862:89:344"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 85278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 85274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 85271,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85258,
                                "src": "5969:12:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 85272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5969:19:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 85273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5992:1:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5969:24:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 85277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 85275,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85260,
                              "src": "5997:14:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 85276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6015:2:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5997:20:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5969:48:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 85287,
                        "nodeType": "IfStatement",
                        "src": "5965:144:344",
                        "trueBody": {
                          "id": 85286,
                          "nodeType": "Block",
                          "src": "6019:90:344",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 85282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 85280,
                                      "name": "nextTokenIdToLazyMint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37472,
                                      "src": "6055:21:344",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 85281,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85243,
                                      "src": "6079:7:344",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6055:31:344",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 85283,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85247,
                                    "src": "6088:5:344",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 85279,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34829,
                                  "src": "6037:17:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 85284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6037:57:344",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 85285,
                              "nodeType": "ExpressionStatement",
                              "src": "6037:57:344"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85292,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85243,
                        "src": "6151:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85293,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85245,
                        "src": "6160:17:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 85294,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85247,
                        "src": "6179:5:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 85290,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6136:5:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_$85831_$",
                          "typeString": "type(contract super SignatureDrop)"
                        }
                      },
                      "id": 85291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37531,
                      "src": "6136:14:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 85295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:49:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85252,
                  "id": 85296,
                  "nodeType": "Return",
                  "src": "6129:56:344"
                }
              ]
            },
            "baseFunctions": [
              37531
            ],
            "documentation": {
              "id": 85241,
              "nodeType": "StructuredDocumentation",
              "src": "5480:167:344",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "5661:8:344",
            "overrides": {
              "id": 85249,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5781:8:344"
            },
            "parameters": {
              "id": 85248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85243,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5687:7:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85298,
                  "src": "5679:15:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85245,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5720:17:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85298,
                  "src": "5704:33:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85247,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5762:5:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85298,
                  "src": "5747:20:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85246,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5747:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5669:104:344"
            },
            "returnParameters": {
              "id": 85252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85251,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5807:7:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85298,
                  "src": "5799:15:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5799:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5798:17:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85340,
            "nodeType": "FunctionDefinition",
            "src": "6299:395:344",
            "nodes": [],
            "body": {
              "id": 85339,
              "nodeType": "Block",
              "src": "6446:248:344",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85312,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "6464:7:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85339,
                      "src": "6456:15:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6456:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85316,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85314,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85301,
                        "src": "6492:6:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85313,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34331,
                      "src": "6474:17:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 85315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6474:25:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6456:43:344"
                },
                {
                  "expression": {
                    "id": 85322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85317,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85309,
                      "src": "6509:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85319,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85312,
                          "src": "6536:7:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 85320,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85303,
                          "src": "6545:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 85318,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34895,
                        "src": "6523:12:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 85321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6523:27:344",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6509:41:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 85323,
                  "nodeType": "ExpressionStatement",
                  "src": "6509:41:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85325,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85312,
                        "src": "6579:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 85326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6588:2:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 85324,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34829,
                      "src": "6561:17:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 85327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6561:30:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85328,
                  "nodeType": "ExpressionStatement",
                  "src": "6561:30:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85330,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85312,
                        "src": "6613:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85331,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85309,
                        "src": "6622:11:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85329,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34458,
                      "src": "6601:11:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 85332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:33:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85333,
                  "nodeType": "ExpressionStatement",
                  "src": "6601:33:344"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85335,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85301,
                        "src": "6667:6:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85336,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85309,
                        "src": "6675:11:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85334,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49689,
                      "src": "6650:16:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 85337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6650:37:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85338,
                  "nodeType": "EmitStatement",
                  "src": "6645:42:344"
                }
              ]
            },
            "baseFunctions": [
              49699
            ],
            "documentation": {
              "id": 85299,
              "nodeType": "StructuredDocumentation",
              "src": "6198:96:344",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 85306,
                    "name": "minterRole",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85037,
                    "src": "6386:10:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 85307,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85305,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38436,
                  "src": "6377:8:344"
                },
                "nodeType": "ModifierInvocation",
                "src": "6377:20:344"
              }
            ],
            "name": "reveal",
            "nameLocation": "6308:6:344",
            "parameters": {
              "id": 85304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85301,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "6323:6:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85340,
                  "src": "6315:14:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85303,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "6346:4:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85340,
                  "src": "6331:19:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85302,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6314:37:344"
            },
            "returnParameters": {
              "id": 85310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85309,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "6429:11:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85340,
                  "src": "6415:25:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85308,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:6:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6414:27:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85426,
            "nodeType": "FunctionDefinition",
            "src": "6947:947:344",
            "nodes": [],
            "body": {
              "id": 85425,
              "nodeType": "Block",
              "src": "7098:796:344",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85352,
                      "mutability": "mutable",
                      "name": "tokenIdToMint",
                      "nameLocation": "7116:13:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85425,
                      "src": "7108:21:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7108:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85354,
                  "initialValue": {
                    "id": 85353,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103024,
                    "src": "7132:13:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7108:37:344"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85355,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85352,
                        "src": "7159:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 85356,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7175:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51090,
                        "src": "7175:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7159:29:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 85359,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37472,
                      "src": "7191:21:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7159:53:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85366,
                  "nodeType": "IfStatement",
                  "src": "7155:101:344",
                  "trueBody": {
                    "id": 85365,
                    "nodeType": "Block",
                    "src": "7214:42:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "21546f6b656e73",
                              "id": 85362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7235:9:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                                "typeString": "literal_string \"!Tokens\""
                              },
                              "value": "!Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                                "typeString": "literal_string \"!Tokens\""
                              }
                            ],
                            "id": 85361,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "7228:6:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 85363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:17:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85364,
                        "nodeType": "ExpressionStatement",
                        "src": "7228:17:344"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 85372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85367,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85349,
                      "src": "7305:6:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85369,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7330:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        {
                          "id": 85370,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85346,
                          "src": "7336:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 85368,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41328,
                        "src": "7314:15:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$51101_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC721.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 85371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7314:33:344",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7305:42:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85373,
                  "nodeType": "ExpressionStatement",
                  "src": "7305:42:344"
                },
                {
                  "assignments": [
                    85375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85375,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "7366:8:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85425,
                      "src": "7358:16:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 85374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7358:7:344",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85378,
                  "initialValue": {
                    "expression": {
                      "id": 85376,
                      "name": "_req",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85344,
                      "src": "7377:4:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                        "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                      }
                    },
                    "id": 85377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51080,
                    "src": "7377:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7358:26:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85380,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7441:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51086,
                        "src": "7441:25:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 85382,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7468:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51090,
                        "src": "7468:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 85384,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7483:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51094,
                        "src": "7483:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 85386,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7498:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pricePerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51092,
                        "src": "7498:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85379,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        85562
                      ],
                      "referencedDeclaration": 85562,
                      "src": "7420:20:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 85388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7420:97:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85389,
                  "nodeType": "ExpressionStatement",
                  "src": "7420:97:344"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 85396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 85390,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7573:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51082,
                        "src": "7573:21:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7606:1:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7598:7:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7598:7:344",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7598:10:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7573:35:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 85397,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7612:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51084,
                        "src": "7612:15:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 85399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7631:1:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7612:20:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7573:59:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85411,
                  "nodeType": "IfStatement",
                  "src": "7569:170:344",
                  "trueBody": {
                    "id": 85410,
                    "nodeType": "Block",
                    "src": "7634:105:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85403,
                              "name": "tokenIdToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85352,
                              "src": "7674:13:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 85404,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85344,
                                "src": "7689:4:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 85405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51082,
                              "src": "7689:21:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 85406,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85344,
                                "src": "7712:4:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                                  "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                                }
                              },
                              "id": 85407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyBps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51084,
                              "src": "7712:15:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 85402,
                            "name": "_setupRoyaltyInfoForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39639,
                            "src": "7648:25:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 85408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7648:80:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85409,
                        "nodeType": "ExpressionStatement",
                        "src": "7648:80:344"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85413,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85375,
                        "src": "7783:8:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 85414,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85344,
                          "src": "7793:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                            "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                          }
                        },
                        "id": 85415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51090,
                        "src": "7793:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85412,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        103642,
                        103805
                      ],
                      "referencedDeclaration": 103642,
                      "src": "7773:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7773:34:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85417,
                  "nodeType": "ExpressionStatement",
                  "src": "7773:34:344"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85419,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85349,
                        "src": "7849:6:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85420,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85375,
                        "src": "7857:8:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85421,
                        "name": "tokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85352,
                        "src": "7867:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85422,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85344,
                        "src": "7882:4:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                          "typeString": "struct ISignatureMintERC721.MintRequest calldata"
                        }
                      ],
                      "id": 85418,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51113,
                      "src": "7823:25:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_MintRequest_$51101_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ISignatureMintERC721.MintRequest memory)"
                      }
                    },
                    "id": 85423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7823:64:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85424,
                  "nodeType": "EmitStatement",
                  "src": "7818:69:344"
                }
              ]
            },
            "baseFunctions": [
              51137
            ],
            "documentation": {
              "id": 85341,
              "nodeType": "StructuredDocumentation",
              "src": "6894:48:344",
              "text": "@dev Claim lazy minted tokens via signature."
            },
            "functionSelector": "439c7be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "6956:17:344",
            "parameters": {
              "id": 85347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85344,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "6995:4:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85426,
                  "src": "6974:25:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$51101_calldata_ptr",
                    "typeString": "struct ISignatureMintERC721.MintRequest"
                  },
                  "typeName": {
                    "id": 85343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85342,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51101,
                      "src": "6974:11:344"
                    },
                    "referencedDeclaration": 51101,
                    "src": "6974:11:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$51101_storage_ptr",
                      "typeString": "struct ISignatureMintERC721.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85346,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7016:10:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85426,
                  "src": "7001:25:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85345,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7001:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:54:344"
            },
            "returnParameters": {
              "id": 85350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85349,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "7086:6:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85426,
                  "src": "7078:14:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7078:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7077:16:344"
            },
            "scope": 85831,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85454,
            "nodeType": "FunctionDefinition",
            "src": "8137:271:344",
            "nodes": [],
            "body": {
              "id": 85453,
              "nodeType": "Block",
              "src": "8321:87:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85445,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103024,
                            "src": "8339:13:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 85446,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85431,
                            "src": "8355:9:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8339:25:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 85448,
                          "name": "nextTokenIdToLazyMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37472,
                          "src": "8368:21:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8339:50:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 85450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8391:9:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 85444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8331:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8331:70:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85452,
                  "nodeType": "ExpressionStatement",
                  "src": "8331:70:344"
                }
              ]
            },
            "baseFunctions": [
              36728
            ],
            "documentation": {
              "id": 85427,
              "nodeType": "StructuredDocumentation",
              "src": "8083:49:344",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8146:12:344",
            "overrides": {
              "id": 85442,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8312:8:344"
            },
            "parameters": {
              "id": 85441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8168:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8168:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85431,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8193:9:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8185:17:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8185:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85433,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8212:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8212:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8229:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8229:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8246:23:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$49903_calldata_ptr",
                    "typeString": "struct IDropSinglePhase.AllowlistProof"
                  },
                  "typeName": {
                    "id": 85437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85436,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49903,
                      "src": "8246:14:344"
                    },
                    "referencedDeclaration": 49903,
                    "src": "8246:14:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$49903_storage_ptr",
                      "typeString": "struct IDropSinglePhase.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85440,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85454,
                  "src": "8279:12:344",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85439,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8279:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8158:139:344"
            },
            "returnParameters": {
              "id": 85443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8321:0:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85562,
            "nodeType": "FunctionDefinition",
            "src": "8498:1061:344",
            "nodes": [],
            "body": {
              "id": 85561,
              "nodeType": "Block",
              "src": "8684:875:344",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85467,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85463,
                      "src": "8698:14:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 85468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8716:1:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8698:19:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85480,
                  "nodeType": "IfStatement",
                  "src": "8694:103:344",
                  "trueBody": {
                    "id": 85479,
                    "nodeType": "Block",
                    "src": "8719:78:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 85471,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8741:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 85472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8741:9:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 85473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8754:1:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8741:14:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 85475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8757:8:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 85470,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8733:7:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 85476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8733:33:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85477,
                        "nodeType": "ExpressionStatement",
                        "src": "8733:33:344"
                      },
                      {
                        "functionReturnParameters": 85466,
                        "id": 85478,
                        "nodeType": "Return",
                        "src": "8780:7:344"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    85482,
                    85484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85482,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8816:20:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85561,
                      "src": "8808:28:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 85481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8808:7:344",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 85484,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8845:14:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85561,
                      "src": "8838:21:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 85483,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8838:6:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85487,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 85485,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39082,
                      "src": "8863:18:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 85486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8863:20:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8807:76:344"
                },
                {
                  "assignments": [
                    85489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85489,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "8902:13:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85561,
                      "src": "8894:21:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 85488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8894:7:344",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85500,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 85495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85490,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85457,
                        "src": "8918:21:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8951:1:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8943:7:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8943:7:344",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8943:10:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8918:35:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 85498,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85457,
                      "src": "8981:21:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 85499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8918:84:344",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85496,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "8956:20:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 85497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8956:22:344",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8894:108:344"
                },
                {
                  "assignments": [
                    85502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85502,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9021:10:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85561,
                      "src": "9013:18:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9013:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85503,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85459,
                      "src": "9034:16:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 85504,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85463,
                      "src": "9053:14:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9034:33:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9013:54:344"
                },
                {
                  "assignments": [
                    85508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85508,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9085:12:344",
                      "nodeType": "VariableDeclaration",
                      "scope": 85561,
                      "src": "9077:20:344",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9077:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85515,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85509,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85502,
                            "src": "9101:10:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 85510,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85484,
                            "src": "9114:14:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9101:27:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 85512,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9100:29:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 85513,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85041,
                      "src": "9132:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9100:39:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9077:62:344"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 85519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85516,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85461,
                      "src": "9154:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 85517,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9167:19:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 85518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "9167:32:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9154:45:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85537,
                    "nodeType": "Block",
                    "src": "9274:58:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 85530,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9296:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 85531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9296:9:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 85532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9309:1:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9296:14:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 85534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9312:8:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 85529,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9288:7:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 85535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9288:33:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85536,
                        "nodeType": "ExpressionStatement",
                        "src": "9288:33:344"
                      }
                    ]
                  },
                  "id": 85538,
                  "nodeType": "IfStatement",
                  "src": "9150:182:344",
                  "trueBody": {
                    "id": 85528,
                    "nodeType": "Block",
                    "src": "9201:67:344",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 85524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 85521,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9223:3:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 85522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9223:9:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 85523,
                                "name": "totalPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85502,
                                "src": "9236:10:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9223:23:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "215072696365",
                              "id": 85525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9248:8:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf2cd4ca29b0d361fd2e18aeaa03f2728f51132b582540ddf36da9dad93be3d6",
                                "typeString": "literal_string \"!Price\""
                              },
                              "value": "!Price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf2cd4ca29b0d361fd2e18aeaa03f2728f51132b582540ddf36da9dad93be3d6",
                                "typeString": "literal_string \"!Price\""
                              }
                            ],
                            "id": 85520,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9215:7:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 85526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9215:42:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85527,
                        "nodeType": "ExpressionStatement",
                        "src": "9215:42:344"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85542,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85461,
                        "src": "9379:9:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85543,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "9390:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9390:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85545,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85482,
                        "src": "9404:20:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85546,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85508,
                        "src": "9426:12:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85539,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9342:19:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 85541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "9342:36:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 85547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:97:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85548,
                  "nodeType": "ExpressionStatement",
                  "src": "9342:97:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85552,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85461,
                        "src": "9486:9:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85553,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "9497:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9497:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85555,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85489,
                        "src": "9511:13:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85556,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85502,
                          "src": "9526:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 85557,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85508,
                          "src": "9539:12:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9526:25:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85549,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9449:19:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 85551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "9449:36:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 85559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9449:103:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85560,
                  "nodeType": "ExpressionStatement",
                  "src": "9449:103:344"
                }
              ]
            },
            "baseFunctions": [
              36758
            ],
            "documentation": {
              "id": 85455,
              "nodeType": "StructuredDocumentation",
              "src": "8414:79:344",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "8507:20:344",
            "overrides": {
              "id": 85465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8675:8:344"
            },
            "parameters": {
              "id": 85464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85457,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8545:21:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85562,
                  "src": "8537:29:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8537:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85459,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8584:16:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85562,
                  "src": "8576:24:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8576:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85461,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8618:9:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85562,
                  "src": "8610:17:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8610:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85463,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8645:14:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85562,
                  "src": "8637:22:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8637:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8527:138:344"
            },
            "returnParameters": {
              "id": 85466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8684:0:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85583,
            "nodeType": "FunctionDefinition",
            "src": "9612:245:344",
            "nodes": [],
            "body": {
              "id": 85582,
              "nodeType": "Block",
              "src": "9765:92:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85573,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85571,
                      "src": "9775:12:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85574,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103024,
                      "src": "9790:13:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9775:28:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85576,
                  "nodeType": "ExpressionStatement",
                  "src": "9775:28:344"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85578,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85565,
                        "src": "9823:3:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85579,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85567,
                        "src": "9828:21:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85577,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        103642,
                        103805
                      ],
                      "referencedDeclaration": 103642,
                      "src": "9813:9:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9813:37:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85581,
                  "nodeType": "ExpressionStatement",
                  "src": "9813:37:344"
                }
              ]
            },
            "baseFunctions": [
              36768
            ],
            "documentation": {
              "id": 85563,
              "nodeType": "StructuredDocumentation",
              "src": "9565:42:344",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "9621:22:344",
            "overrides": {
              "id": 85569,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9713:8:344"
            },
            "parameters": {
              "id": 85568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85565,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9652:3:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85583,
                  "src": "9644:11:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9644:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85567,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "9665:21:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85583,
                  "src": "9657:29:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9657:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9643:44:344"
            },
            "returnParameters": {
              "id": 85572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85571,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9747:12:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85583,
                  "src": "9739:20:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9739:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9738:22:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85598,
            "nodeType": "FunctionDefinition",
            "src": "9945:136:344",
            "nodes": [],
            "body": {
              "id": 85597,
              "nodeType": "Block",
              "src": "10029:52:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85593,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85037,
                        "src": "10054:10:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 85594,
                        "name": "_signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85586,
                        "src": "10066:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85592,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10046:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10046:28:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85591,
                  "id": 85596,
                  "nodeType": "Return",
                  "src": "10039:35:344"
                }
              ]
            },
            "baseFunctions": [
              41253
            ],
            "documentation": {
              "id": 85584,
              "nodeType": "StructuredDocumentation",
              "src": "9863:77:344",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorizedSigner",
            "nameLocation": "9954:19:344",
            "overrides": {
              "id": 85588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10005:8:344"
            },
            "parameters": {
              "id": 85587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85586,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "9982:7:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85598,
                  "src": "9974:15:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9974:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9973:17:344"
            },
            "returnParameters": {
              "id": 85591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85598,
                  "src": "10023:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10023:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10022:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85612,
            "nodeType": "FunctionDefinition",
            "src": "10176:137:344",
            "nodes": [],
            "body": {
              "id": 85611,
              "nodeType": "Block",
              "src": "10248:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85606,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10273:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85607,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "10293:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10293:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85605,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10265:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10265:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85604,
                  "id": 85610,
                  "nodeType": "Return",
                  "src": "10258:48:344"
                }
              ]
            },
            "baseFunctions": [
              39255
            ],
            "documentation": {
              "id": 85599,
              "nodeType": "StructuredDocumentation",
              "src": "10087:84:344",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10185:22:344",
            "overrides": {
              "id": 85601,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10224:8:344"
            },
            "parameters": {
              "id": 85600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10207:2:344"
            },
            "returnParameters": {
              "id": 85604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85612,
                  "src": "10242:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85602,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10242:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10241:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85626,
            "nodeType": "FunctionDefinition",
            "src": "10413:142:344",
            "nodes": [],
            "body": {
              "id": 85625,
              "nodeType": "Block",
              "src": "10490:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85620,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10515:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85621,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "10535:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10535:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85619,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10507:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10507:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85618,
                  "id": 85624,
                  "nodeType": "Return",
                  "src": "10500:48:344"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 85613,
              "nodeType": "StructuredDocumentation",
              "src": "10319:89:344",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "10422:27:344",
            "overrides": {
              "id": 85615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10466:8:344"
            },
            "parameters": {
              "id": 85614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10449:2:344"
            },
            "returnParameters": {
              "id": 85618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85617,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85626,
                  "src": "10484:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10484:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10483:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85640,
            "nodeType": "FunctionDefinition",
            "src": "10638:127:344",
            "nodes": [],
            "body": {
              "id": 85639,
              "nodeType": "Block",
              "src": "10700:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85634,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10725:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85635,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "10745:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10745:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85633,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10717:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10717:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85632,
                  "id": 85638,
                  "nodeType": "Return",
                  "src": "10710:48:344"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 85627,
              "nodeType": "StructuredDocumentation",
              "src": "10561:72:344",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10647:12:344",
            "overrides": {
              "id": 85629,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10676:8:344"
            },
            "parameters": {
              "id": 85628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10659:2:344"
            },
            "returnParameters": {
              "id": 85632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85640,
                  "src": "10694:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10694:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10693:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85654,
            "nodeType": "FunctionDefinition",
            "src": "10855:133:344",
            "nodes": [],
            "body": {
              "id": 85653,
              "nodeType": "Block",
              "src": "10923:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85648,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10948:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85649,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "10968:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10968:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85647,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10940:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10940:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85646,
                  "id": 85652,
                  "nodeType": "Return",
                  "src": "10933:48:344"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 85641,
              "nodeType": "StructuredDocumentation",
              "src": "10771:79:344",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10864:18:344",
            "overrides": {
              "id": 85643,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10899:8:344"
            },
            "parameters": {
              "id": 85642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10882:2:344"
            },
            "returnParameters": {
              "id": 85646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85654,
                  "src": "10917:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10917:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10916:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85668,
            "nodeType": "FunctionDefinition",
            "src": "11083:133:344",
            "nodes": [],
            "body": {
              "id": 85667,
              "nodeType": "Block",
              "src": "11151:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85662,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "11176:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85663,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "11196:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11196:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85661,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "11168:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85660,
                  "id": 85666,
                  "nodeType": "Return",
                  "src": "11161:48:344"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 85655,
              "nodeType": "StructuredDocumentation",
              "src": "10994:84:344",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11092:18:344",
            "overrides": {
              "id": 85657,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11127:8:344"
            },
            "parameters": {
              "id": 85656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11110:2:344"
            },
            "returnParameters": {
              "id": 85660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85668,
                  "src": "11145:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11145:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11144:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85682,
            "nodeType": "FunctionDefinition",
            "src": "11311:137:344",
            "nodes": [],
            "body": {
              "id": 85681,
              "nodeType": "Block",
              "src": "11383:65:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85676,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "11408:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85677,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "11428:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11428:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85675,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "11400:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11400:41:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85674,
                  "id": 85680,
                  "nodeType": "Return",
                  "src": "11393:48:344"
                }
              ]
            },
            "baseFunctions": [
              36773
            ],
            "documentation": {
              "id": 85669,
              "nodeType": "StructuredDocumentation",
              "src": "11222:84:344",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "11320:22:344",
            "overrides": {
              "id": 85671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11359:8:344"
            },
            "parameters": {
              "id": 85670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11342:2:344"
            },
            "returnParameters": {
              "id": 85674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85682,
                  "src": "11377:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85672,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11377:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11376:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85696,
            "nodeType": "FunctionDefinition",
            "src": "11540:127:344",
            "nodes": [],
            "body": {
              "id": 85695,
              "nodeType": "Block",
              "src": "11610:57:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85690,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85037,
                        "src": "11635:10:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85691,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            85817
                          ],
                          "referencedDeclaration": 85817,
                          "src": "11647:10:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 85692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11647:12:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85689,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "11627:7:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 85693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11627:33:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 85688,
                  "id": 85694,
                  "nodeType": "Return",
                  "src": "11620:40:344"
                }
              ]
            },
            "baseFunctions": [
              37537
            ],
            "documentation": {
              "id": 85683,
              "nodeType": "StructuredDocumentation",
              "src": "11454:81:344",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11549:12:344",
            "overrides": {
              "id": 85685,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11586:8:344"
            },
            "parameters": {
              "id": 85684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11561:2:344"
            },
            "returnParameters": {
              "id": 85688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85696,
                  "src": "11604:4:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:4:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11603:6:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85709,
            "nodeType": "FunctionDefinition",
            "src": "11933:144:344",
            "nodes": [],
            "body": {
              "id": 85708,
              "nodeType": "Block",
              "src": "11988:89:344",
              "nodes": [],
              "statements": [
                {
                  "id": 85707,
                  "nodeType": "UncheckedBlock",
                  "src": "11998:73:344",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85702,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103024,
                          "src": "12029:13:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 85703,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103097,
                            "src": "12045:13:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 85704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12045:15:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12029:31:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 85701,
                      "id": 85706,
                      "nodeType": "Return",
                      "src": "12022:38:344"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 85697,
              "nodeType": "StructuredDocumentation",
              "src": "11851:77:344",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "11942:11:344",
            "parameters": {
              "id": 85698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11953:2:344"
            },
            "returnParameters": {
              "id": 85701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85709,
                  "src": "11979:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11979:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11978:9:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85718,
            "nodeType": "FunctionDefinition",
            "src": "12159:106:344",
            "nodes": [],
            "body": {
              "id": 85717,
              "nodeType": "Block",
              "src": "12220:45:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 85715,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37472,
                    "src": "12237:21:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85714,
                  "id": 85716,
                  "nodeType": "Return",
                  "src": "12230:28:344"
                }
              ]
            },
            "documentation": {
              "id": 85710,
              "nodeType": "StructuredDocumentation",
              "src": "12083:71:344",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "12168:17:344",
            "parameters": {
              "id": 85711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12185:2:344"
            },
            "returnParameters": {
              "id": 85714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85718,
                  "src": "12211:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12211:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12210:9:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85730,
            "nodeType": "FunctionDefinition",
            "src": "12321:184:344",
            "nodes": [],
            "body": {
              "id": 85729,
              "nodeType": "Block",
              "src": "12369:136:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85725,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85721,
                        "src": "12484:7:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 85726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12493:4:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 85724,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        104105,
                        104287
                      ],
                      "referencedDeclaration": 104287,
                      "src": "12478:5:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 85727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12478:20:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85728,
                  "nodeType": "ExpressionStatement",
                  "src": "12478:20:344"
                }
              ]
            },
            "documentation": {
              "id": 85719,
              "nodeType": "StructuredDocumentation",
              "src": "12271:45:344",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "12330:4:344",
            "parameters": {
              "id": 85722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85721,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12343:7:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85730,
                  "src": "12335:15:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12335:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12334:17:344"
            },
            "returnParameters": {
              "id": 85723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12369:0:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 85794,
            "nodeType": "FunctionDefinition",
            "src": "12559:573:344",
            "nodes": [],
            "body": {
              "id": 85793,
              "nodeType": "Block",
              "src": "12720:412:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85746,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85733,
                        "src": "12758:4:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85747,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85735,
                        "src": "12764:2:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85748,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85737,
                        "src": "12768:12:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85749,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85739,
                        "src": "12782:8:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85743,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12730:5:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SignatureDrop_$85831_$",
                          "typeString": "type(contract super SignatureDrop)"
                        }
                      },
                      "id": 85745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104378,
                      "src": "12730:27:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 85750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12730:61:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85751,
                  "nodeType": "ExpressionStatement",
                  "src": "12730:61:344"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 85773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 85766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12903:34:344",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 85753,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85034,
                              "src": "12912:12:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 85756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12934:1:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 85755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12926:7:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 85754,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12926:7:344",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 85757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12926:10:344",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 85752,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "12904:7:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 85758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12904:33:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85760,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85733,
                          "src": "12941:4:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 85763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12957:1:344",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 85762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12949:7:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 85761,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12949:7:344",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12949:10:344",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12941:18:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12903:56:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 85772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85767,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85735,
                        "src": "12963:2:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 85770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12977:1:344",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 85769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12969:7:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12969:7:344",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12969:10:344",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12963:16:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12903:76:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85792,
                  "nodeType": "IfStatement",
                  "src": "12899:227:344",
                  "trueBody": {
                    "id": 85791,
                    "nodeType": "Block",
                    "src": "12981:145:344",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 85784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12999:28:344",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 85775,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85034,
                                  "src": "13008:12:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 85776,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85733,
                                  "src": "13022:4:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 85774,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38454,
                                "src": "13000:7:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 85777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13000:27:344",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 85783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "13031:26:344",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 85780,
                                  "name": "transferRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85034,
                                  "src": "13040:12:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 85781,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85735,
                                  "src": "13054:2:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 85779,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38454,
                                "src": "13032:7:344",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 85782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13032:25:344",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12999:58:344",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 85790,
                        "nodeType": "IfStatement",
                        "src": "12995:121:344",
                        "trueBody": {
                          "id": 85789,
                          "nodeType": "Block",
                          "src": "13059:57:344",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 85786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13084:16:344",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 85785,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "13077:6:344",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 85787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13077:24:344",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 85788,
                              "nodeType": "ExpressionStatement",
                              "src": "13077:24:344"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              104378
            ],
            "documentation": {
              "id": 85731,
              "nodeType": "StructuredDocumentation",
              "src": "12511:43:344",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "12568:21:344",
            "overrides": {
              "id": 85741,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12711:8:344"
            },
            "parameters": {
              "id": 85740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85733,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12607:4:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85794,
                  "src": "12599:12:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12599:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85735,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12629:2:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85794,
                  "src": "12621:10:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12621:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85737,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "12649:12:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85794,
                  "src": "12641:20:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12641:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85739,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12679:8:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85794,
                  "src": "12671:16:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12671:7:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12589:104:344"
            },
            "returnParameters": {
              "id": 85742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12720:0:344"
            },
            "scope": 85831,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85804,
            "nodeType": "FunctionDefinition",
            "src": "13138:111:344",
            "nodes": [],
            "body": {
              "id": 85803,
              "nodeType": "Block",
              "src": "13213:36:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 85800,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        85817
                      ],
                      "referencedDeclaration": 85817,
                      "src": "13230:10:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 85801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13230:12:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 85799,
                  "id": 85802,
                  "nodeType": "Return",
                  "src": "13223:19:344"
                }
              ]
            },
            "baseFunctions": [
              36710
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "13147:14:344",
            "overrides": {
              "id": 85796,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13186:8:344"
            },
            "parameters": {
              "id": 85795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13161:2:344"
            },
            "returnParameters": {
              "id": 85799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85804,
                  "src": "13204:7:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13204:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13203:9:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85817,
            "nodeType": "FunctionDefinition",
            "src": "13255:231:344",
            "nodes": [],
            "body": {
              "id": 85816,
              "nodeType": "Block",
              "src": "13424:62:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 85812,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "13441:25:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 85813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "13441:36:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 85814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13441:38:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 85811,
                  "id": 85815,
                  "nodeType": "Return",
                  "src": "13434:45:344"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "13264:10:344",
            "overrides": {
              "id": 85808,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 85806,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "13340:18:344"
                },
                {
                  "id": 85807,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "13360:25:344"
                }
              ],
              "src": "13331:55:344"
            },
            "parameters": {
              "id": 85805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13274:2:344"
            },
            "returnParameters": {
              "id": 85811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85810,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13412:6:344",
                  "nodeType": "VariableDeclaration",
                  "scope": 85817,
                  "src": "13404:14:344",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13404:7:344",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13403:16:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85830,
            "nodeType": "FunctionDefinition",
            "src": "13492:227:344",
            "nodes": [],
            "body": {
              "id": 85829,
              "nodeType": "Block",
              "src": "13659:60:344",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 85825,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "13676:25:344",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 85826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "13676:34:344",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 85827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13676:36:344",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 85824,
                  "id": 85828,
                  "nodeType": "Return",
                  "src": "13669:43:344"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "13501:8:344",
            "overrides": {
              "id": 85821,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 85819,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "13575:18:344"
                },
                {
                  "id": 85820,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "13595:25:344"
                }
              ],
              "src": "13566:55:344"
            },
            "parameters": {
              "id": 85818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13509:2:344"
            },
            "returnParameters": {
              "id": 85824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85830,
                  "src": "13639:14:344",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85822,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13639:5:344",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13638:16:344"
            },
            "scope": 85831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85001,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1724:13:344"
            },
            "id": 85002,
            "nodeType": "InheritanceSpecifier",
            "src": "1724:13:344"
          },
          {
            "baseName": {
              "id": 85003,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1743:16:344"
            },
            "id": 85004,
            "nodeType": "InheritanceSpecifier",
            "src": "1743:16:344"
          },
          {
            "baseName": {
              "id": 85005,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39256,
              "src": "1765:11:344"
            },
            "id": 85006,
            "nodeType": "InheritanceSpecifier",
            "src": "1765:11:344"
          },
          {
            "baseName": {
              "id": 85007,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1782:7:344"
            },
            "id": 85008,
            "nodeType": "InheritanceSpecifier",
            "src": "1782:7:344"
          },
          {
            "baseName": {
              "id": 85009,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "1795:11:344"
            },
            "id": 85010,
            "nodeType": "InheritanceSpecifier",
            "src": "1795:11:344"
          },
          {
            "baseName": {
              "id": 85011,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1812:7:344"
            },
            "id": 85012,
            "nodeType": "InheritanceSpecifier",
            "src": "1812:7:344"
          },
          {
            "baseName": {
              "id": 85013,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34962,
              "src": "1825:13:344"
            },
            "id": 85014,
            "nodeType": "InheritanceSpecifier",
            "src": "1825:13:344"
          },
          {
            "baseName": {
              "id": 85015,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37538,
              "src": "1844:8:344"
            },
            "id": 85016,
            "nodeType": "InheritanceSpecifier",
            "src": "1844:8:344"
          },
          {
            "baseName": {
              "id": 85017,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1858:21:344"
            },
            "id": 85018,
            "nodeType": "InheritanceSpecifier",
            "src": "1858:21:344"
          },
          {
            "baseName": {
              "id": 85019,
              "name": "DropSinglePhase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36774,
              "src": "1885:15:344"
            },
            "id": 85020,
            "nodeType": "InheritanceSpecifier",
            "src": "1885:15:344"
          },
          {
            "baseName": {
              "id": 85021,
              "name": "SignatureMintERC721Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41394,
              "src": "1906:30:344"
            },
            "id": 85022,
            "nodeType": "InheritanceSpecifier",
            "src": "1906:30:344"
          },
          {
            "baseName": {
              "id": 85023,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1942:25:344"
            },
            "id": 85024,
            "nodeType": "InheritanceSpecifier",
            "src": "1942:25:344"
          },
          {
            "baseName": {
              "id": 85025,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1973:20:344"
            },
            "id": 85026,
            "nodeType": "InheritanceSpecifier",
            "src": "1973:20:344"
          },
          {
            "baseName": {
              "id": 85027,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104397,
              "src": "1999:18:344"
            },
            "id": 85028,
            "nodeType": "InheritanceSpecifier",
            "src": "1999:18:344"
          }
        ],
        "canonicalName": "SignatureDrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85831,
          104397,
          104468,
          157148,
          156732,
          158919,
          158931,
          157897,
          75765,
          157714,
          41394,
          51138,
          158875,
          36774,
          49949,
          49527,
          39046,
          38747,
          50516,
          50491,
          37538,
          34496,
          50054,
          34962,
          49710,
          38400,
          50418,
          39318,
          50580,
          39646,
          50644,
          31290,
          31146,
          39256,
          50559,
          34723,
          151869,
          49679
        ],
        "name": "SignatureDrop",
        "nameLocation": "1703:13:344",
        "scope": 85832,
        "usedErrors": [
          104409,
          104412,
          104415,
          104418,
          104421,
          104424,
          104427,
          104430,
          104433,
          104436,
          104439,
          104442,
          104445
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 344
}