{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidQueryRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "SharedMetadataDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "animationURI",
          "type": "string"
        }
      ],
      "name": "SharedMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "deleteSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "explicitOwnershipOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "burned",
              "type": "bool"
            },
            {
              "internalType": "uint24",
              "name": "extraData",
              "type": "uint24"
            }
          ],
          "internalType": "struct IERC721AUpgradeable.TokenOwnership",
          "name": "ownership",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSharedMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ],
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
          "name": "metadata",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string"
            }
          ],
          "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
          "name": "metadata",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "setSharedMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stop",
          "type": "uint256"
        }
      ],
      "name": "tokensOfOwnerIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1835:9822:388:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1835:9822:388:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4266:301;;;;;;;;;;-1:-1:-1;4266:301:388;;;;;:::i;:::-;;:::i;:::-;;;661:14:641;;654:22;636:41;;624:2;609:18;4266:301:388;;;;;;;;9336:122:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1001:197:60:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16415:247:108:-;;;;;;;;;;-1:-1:-1;16415:247:108;;;;;:::i;:::-;;:::i;10092:240:388:-;;;;;;:::i;:::-;;:::i;:::-;;1657:173:56;;;;;;;;;;-1:-1:-1;1657:173:56;;;;;:::i;:::-;;:::i;4918:365:108:-;;;;;;;;;;;;;:::i;:::-;;;2708:25:641;;;2696:2;2681:18;4918:365:108;2562:177:641;1367:374:64;;;;;;;;;;-1:-1:-1;1367:374:64;;;;;:::i;:::-;;:::i;5387:2299:49:-;;;;;;;;;;-1:-1:-1;5387:2299:49;;;;;:::i;:::-;;:::i;10379:240:388:-;;;;;;:::i;:::-;;:::i;1790:347:62:-;;;;;;;;;;-1:-1:-1;1790:347:62;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;8626:99:388:-;;;;;;;;;;;;;:::i;10670:248::-;;;;;;:::i;:::-;;:::i;8950:184::-;;;;;;;;;;-1:-1:-1;8950:184:388;;;;;:::i;:::-;;:::i;2377:473:62:-;;;;;;;;;;-1:-1:-1;2377:473:62;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5508:32:641;;;5490:51;;5589:6;5577:19;;;5572:2;5557:18;;5550:47;5463:18;2377:473:62;5318:285:641;205:31:129;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;918:134:304;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;509:199:118:-;;;;;;;;;;-1:-1:-1;509:199:118;;;;;:::i;:::-;;:::i;3634:256:62:-;;;;;;;;;;-1:-1:-1;3634:256:62;;;;;:::i;:::-;;:::i;10745:150:108:-;;;;;;;;;;-1:-1:-1;10745:150:108;;;;;:::i;:::-;;:::i;1080:233:64:-;;;;;;;;;;-1:-1:-1;1080:233:64;;;;;:::i;:::-;;:::i;1607:228:60:-;;;;;;;;;;-1:-1:-1;1607:228:60;;;;;:::i;:::-;;:::i;8339:249:49:-;;;;;;;;;;-1:-1:-1;8339:249:49;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6165:263:108:-;;;;;;;;;;-1:-1:-1;6165:263:108;;;;;:::i;:::-;;:::i;2418:2872:49:-;;;;;;;;;;-1:-1:-1;2418:2872:49;;;;;:::i;:::-;;:::i;3016:319:106:-;;;;;;;;;;-1:-1:-1;3016:319:106;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1091:1264:49:-;;;;;;:::i;:::-;;:::i;1314:167:56:-;;;;;;;;;;;;;:::i;1452:188:46:-;;;;;;;;;;-1:-1:-1;1452:188:46;;;;;:::i;:::-;;:::i;9529:126:108:-;;;;;;;;;;;;;:::i;2364:217:106:-;;;;;;;;;;-1:-1:-1;2364:217:106;;;;;:::i;:::-;;:::i;4915:288:62:-;;;;;;;;;;-1:-1:-1;4915:288:62;;;;;:::i;:::-;;:::i;9808:243:388:-;;;;;;;;;;-1:-1:-1;9808:243:388;;;;;:::i;:::-;;:::i;8399:145::-;;;;;;;;;;;;;:::i;8670:327:49:-;;;;;;;;;;-1:-1:-1;8670:327:49;;;;;:::i;:::-;;:::i;2960:230:62:-;;;;;;;;;;;;;:::i;10969:281:388:-;;;;;;:::i;:::-;;:::i;1411:579:106:-;;;;;;;;;;-1:-1:-1;1411:579:106;;;;;:::i;:::-;;:::i;:::-;;;;;;13157:13:641;;-1:-1:-1;;;;;13153:39:641;13135:58;;13253:4;13241:17;;;13235:24;-1:-1:-1;;;;;13231:49:641;13209:20;;;13202:79;13351:4;13339:17;;;13333:24;13326:32;13319:40;13297:20;;;13290:70;13420:4;13408:17;;;13402:24;13428:8;13398:39;13376:20;;;13369:69;;;;13122:3;13107:19;;12922:522;7774:500:49;;;;;;;;;;;;;:::i;3176:1059:388:-;;;;;;;;;;-1:-1:-1;3176:1059:388;;;;;:::i;:::-;;:::i;644:219:49:-;;;;;;;;;;;;;:::i;:::-;;;;13623:25:641;;;13679:2;13664:18;;13657:34;;;;13596:18;644:219:49;13449:248:641;4720:93:388;;;;;;;;;;-1:-1:-1;4706:1:388;4720:93;8626:99;2077:219:46;;;;;;;;;;;;;:::i;17394:186:108:-;;;;;;;;;;-1:-1:-1;17394:186:108;;;;;:::i;:::-;;:::i;1787:375:64:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4266:301:388:-;4441:4;4468:36;4492:11;4468:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;;;4508:52:388;;;4468:92;4461:99;4266:301;-1:-1:-1;;4266:301:388:o;9336:122:108:-;9390:13;9422:23;:21;:23::i;:::-;:29;;9415:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9336:122;:::o;1001:197:60:-;1063:7;1082:36;1121:39;:37;:39::i;:::-;1177:14;-1:-1:-1;;;;;1177:14:60;;1001:197;-1:-1:-1;;1001:197:60:o;16415:247:108:-;16491:7;16515:16;16523:7;16515;:16::i;:::-;16510:73;;16533:50;-1:-1:-1;;;16533:7:108;:50::i;:::-;16601:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;16601:48:108;;;:54;-1:-1:-1;;;;;16601:54:108;;16415:247::o;10092:240:388:-;1886:19:131;;10269:8:388;;1886:19:131;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:131;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:131;;;;;;;;:::i;:::-;;;;;;;;1994:150;10293:32:388::1;10307:8;10317:7;10293:13;:32::i;:::-;10092:240:::0;;;:::o;1657:173:56:-;1727:14;:12;:14::i;:::-;1722:70;;1757:24;;-1:-1:-1;;;1757:24:56;;;;;;;:::i;1722:70::-;1801:22;1813:9;1801:11;:22::i;:::-;1657:173;:::o;4918:365:108:-;4979:7;4706:1:388;5212:23:108;:21;:23::i;:::-;:36;;;5172:23;:21;:23::i;:::-;:37;:76;:94;;4918:365;-1:-1:-1;4918:365:108:o;1367:374:64:-;1437:23;:21;:23::i;:::-;1429:83;;;;-1:-1:-1;;;1429:83:64;;;;;;;:::i;:::-;1530:45;1571:3;1530:29;:27;:29::i;:::-;:33;:40;:45::i;:::-;1522:109;;;;-1:-1:-1;;;1522:109:64;;17870:2:641;1522:109:64;;;17852:21:641;17909:2;17889:18;;;17882:30;17948:34;17928:18;;;17921:62;-1:-1:-1;;;17999:18:641;;;17992:49;18058:19;;1522:109:64;17668:415:641;1522:109:64;1649:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;1642:50;;;1649:43;1642:50;;;1649:43;1642:50;;1649:43;1642:50;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;1708:26:64;;1730:3;;-1:-1:-1;1708:26:64;;-1:-1:-1;1708:26:64;;;1367:374;:::o;5387:2299:49:-;5626:15;5653:29;5685:25;:23;:25::i;:::-;5720:39;5762:44;;;:30;;;;:44;;;;;;;;5720:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5720:86:49;;;;;;;;;;5653:57;;-1:-1:-1;5720:39:49;;:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5720:86:49;;;;-1:-1:-1;;;5837:40:49;;;;5908:31;;;;5973:26;;;;6014:28;;;;5720:86;;-1:-1:-1;5837:40:49;;5908:31;;5973:26;6014:42;6010:515;;6089:425;6125:21;:15;;:21;:::i;:::-;6089:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6164:28:49;;;;;;-1:-1:-1;6283:8:49;;6317:38;;;;;6381:29;;;;;6436:24;;;;;;;;:::i;:::-;6241:241;;-1:-1:-1;;;;;;18873:2:641;18909:15;;;18905:24;;6241:241:49;;;18893:37:641;18946:12;;;18939:28;;;;18983:12;;;18976:28;;;;19038:15;;;19034:24;19020:12;;;19013:46;19075:13;;6241:241:49;;;;;;;;;;;;6210:290;;;;;;6089:18;:425::i;:::-;-1:-1:-1;6072:442:49;-1:-1:-1;6010:515:49;6539:10;6535:534;;;6578:38;;;;:129;;6697:10;6578:129;;;6640:15;:38;;;6578:129;6565:142;;-1:-1:-1;;6734:15:49;:29;;;:50;;:127;;6851:10;6734:127;;;6803:15;:29;;;6734:127;6721:140;;-1:-1:-1;;6891:15:49;:29;;;:50;;:92;;;;-1:-1:-1;6981:1:49;6945:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6945:38:49;;;6891:92;:167;;7045:13;6891:167;;;7002:24;;;;;;;;:::i;:::-;6875:183;;6535:534;7079:29;7111:4;:19;;:41;;:55;7153:12;7111:55;;;;;;;;;;;:65;7167:8;-1:-1:-1;;;;;7111:65:49;-1:-1:-1;;;;;7111:65:49;;;;;;;;;;;;;7079:97;;7204:13;-1:-1:-1;;;;;7191:26:49;:9;-1:-1:-1;;;;;7191:26:49;;;:58;;;;7239:10;7221:14;:28;;7191:58;7187:115;;;7265:26;;-1:-1:-1;;;7265:26:49;;19301:2:641;7265:26:49;;;19283:21:641;19340:2;19320:18;;;19313:30;-1:-1:-1;;;19359:18:641;;;19352:46;19415:18;;7265:26:49;19099:340:641;7187:115:49;7316:14;;;:66;;-1:-1:-1;7371:10:49;7335:33;7347:21;7335:9;:33;:::i;:::-;:46;7316:66;7312:111;;;7398:14;;-1:-1:-1;;;7398:14:49;;;;;;19911:2:641;19893:21;;;19950:1;19930:18;;;19923:29;-1:-1:-1;;;19983:2:641;19968:18;;19961:34;20027:2;20012:18;;19709:327;7312:111:49;7482:17;:36;;;7470:9;7436:17;:31;;;:43;;;;:::i;:::-;:82;7432:133;;;7534:20;;-1:-1:-1;;;7534:20:49;;20243:2:641;7534:20:49;;;20225:21:641;20282:2;20262:18;;;20255:30;-1:-1:-1;;;20301:18:641;;;20294:40;20351:18;;7534:20:49;20041:334:641;7432:133:49;7579:32;;7614:15;-1:-1:-1;7575:105:49;;;7645:24;;-1:-1:-1;;;7645:24:49;;20582:2:641;7645:24:49;;;20564:21:641;20621:2;20601:18;;;20594:30;-1:-1:-1;;;20640:18:641;;;20633:44;20694:18;;7645:24:49;20380:338:641;7575:105:49;5643:2043;;;;;;5387:2299;;;;;;;;:::o;10379:240:388:-;1064:19:131;;10559:4:388;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;10575:37:388::1;10594:4;10600:2;10604:7;10575:18;:37::i;:::-;1461:7:131::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;10575:37:388::1;10594:4;10600:2;10604:7;10575:18;:37::i;:::-;10379:240:::0;;;;:::o;1790:347:62:-;1927:16;1945:21;1983:17;2002:11;2017:31;2040:7;2017:22;:31::i;:::-;1982:66;;-1:-1:-1;1982:66:62;;-1:-1:-1;1982:66:62;;;-1:-1:-1;2124:6:62;2105:15;1982:66;2105:9;:15;:::i;:::-;2104:26;;;;:::i;:::-;2088:42;;1972:165;;1790:347;;;;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;21355:2:641;313:84:129;;;21337:21:641;21394:2;21374:18;;;21367:30;21433:34;21413:18;;;21406:62;-1:-1:-1;;;21484:18:641;;;21477:41;21535:19;;313:84:129;21153:407:641;313:84:129;407:37;431:12;407:23;:37::i;8626:99:388:-;8678:7;8704:14;:12;:14::i;:::-;8697:21;;8626:99;:::o;10670:248::-;1064:19:131;;10854:4:388;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;10870:41:388::1;10893:4;10899:2;10903:7;10870:22;:41::i;1392:94:131:-:0;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;10870:41:388::1;10893:4;10899:2;10903:7;10870:22;:41::i;8950:184::-:0;9107:20;9113:7;9122:4;9107:5;:20::i;2377:473:62:-;2457:7;2466:6;2484:32;2519:31;:29;:31::i;:::-;2561:34;2598;;;:24;;;;:34;;;;;;;;;2561:71;;;;;;;;;;-1:-1:-1;;;;;2561:71:62;;;;;;;;;;;2484:66;;-1:-1:-1;2561:71:62;2662:39;:181;;2788:25;;2822:19;;;;2662:181;;;2721:21;;-1:-1:-1;;;;;2721:21:62;;;-1:-1:-1;;;2751:15:62;;;;2662:181;2643:200;;;;;;2377:473;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;509:199:118:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:118;;21767:2:641;580:81:118;;;21749:21:641;21806:2;21786:18;;;21779:30;21845:34;21825:18;;;21818:62;-1:-1:-1;;;21896:18:641;;;21889:38;21944:19;;580:81:118;21565:404:641;580:81:118;671:30;681:13;696:4;671:9;:30::i;3634:256:62:-;3746:20;:18;:20::i;:::-;3741:76;;3782:24;;-1:-1:-1;;;3782:24:62;;;;;;;:::i;3741:76::-;3827:56;3852:17;3871:11;3827:24;:56::i;:::-;3634:256;;:::o;10745:150:108:-;10817:7;10859:27;10878:7;10859:18;:27::i;1080:233:64:-;1185:23;:21;:23::i;:::-;1177:83;;;;-1:-1:-1;;;1177:83:64;;;;;;;:::i;:::-;1270:36;1292:8;1302:3;1270:21;:36::i;1607:228:60:-;1697:29;:27;:29::i;:::-;1692:85;;1742:24;;-1:-1:-1;;;1742:24:60;;;;;;;:::i;1692:85::-;1786:42;1813:14;1786:26;:42::i;8339:249:49:-;8415:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:31:49;8458:29;8490:25;:23;:25::i;:::-;8537:19;:44;;;:30;;;;:44;;;;;;;;;8525:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8525:56:49;;;;;;;;;;8458:57;;-1:-1:-1;8525:56:49;;8537:44;;8525:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8448:140;8339:249;;;:::o;6165:263:108:-;6237:7;-1:-1:-1;;;;;6260:19:108;;6256:69;;6281:44;-1:-1:-1;;;6281:7:108;:44::i;:::-;-1:-1:-1;;;;;6342:23:108;:21;:23::i;:::-;:42;;:49;6385:5;-1:-1:-1;;;;;6342:49:108;-1:-1:-1;;;;;6342:49:108;;;;;;;;;;;;;:79;6335:86;;6165:263;;;:::o;2418:2872:49:-;2583:24;:22;:24::i;:::-;2578:80;;2623:24;;-1:-1:-1;;;2623:24:49;;;;;;;:::i;2578:80::-;2668:29;2700:25;:23;:25::i;:::-;2764:34;;2837:25;;;;2668:57;;-1:-1:-1;2764:34:49;;3279:108;;;;3337:39;3358:18;3337;:39;:::i;:::-;3321:55;;3279:108;3397:25;;;:46;;;3453:50;;;3397:19;;3559:658;3579:22;;;3559:658;;;3630:6;;;:69;;;3670:11;;3682:1;3670:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3640:59;;3630:69;3622:84;;;;-1:-1:-1;;;3622:84:49;;22646:2:641;3622:84:49;;;22628:21:641;22685:1;22665:18;;;22658:29;-1:-1:-1;;;22703:18:641;;;22696:32;22745:18;;3622:84:49;22444:325:641;3622:84:49;3721:28;3752:30;;;3721:28;3783:17;3799:1;3783:13;:17;:::i;:::-;3752:49;;;;;;;;;;;:63;;;3721:94;;3856:11;;3868:1;3856:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3833:20;:56;3829:123;;;3909:28;;-1:-1:-1;;;3909:28:49;;22976:2:641;3909:28:49;;;22958:21:641;23015:2;22995:18;;;22988:30;-1:-1:-1;;;23034:18:641;;;23027:48;23092:18;;3909:28:49;22774:342:641;3829:123:49;4018:11;;4030:1;4018:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3966:30;;;:19;3997:17;4013:1;3997:13;:17;:::i;:::-;3966:49;;;;;;;;;;;:66;;;;;;:::i;:::-;-1:-1:-1;4112:20:49;;-1:-1:-1;4046:30:49;;;:19;4077:17;4093:1;4077:13;:17;:::i;:::-;4046:49;;;;;;;;;;;-1:-1:-1;4046:49:49;:63;;:86;4177:11;;4189:1;4177:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3603:3:49;;-1:-1:-1;3603:3:49;;;:::i;:::-;;;;3559:658;;;;4757:22;4753:456;;;4812:18;4795:134;4836:13;4832:1;:17;4795:134;;;4881:19;:33;;;:30;;;;:33;;;;;4874:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4874:40:49;;;4881:33;4874:40;;;;4881:19;4874:40;:::i;:::-;;;4851:3;;;;;:::i;:::-;;;;4795:134;;;;4753:456;;;4963:39;;;4959:240;;;5039:11;5022:163;5063:18;5059:1;:22;5022:163;;;5117:30;;;:19;5148:17;5164:1;5148:13;:17;:::i;:::-;5117:49;;;;;;;;;;;-1:-1:-1;5117:49:49;;;5110:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5110:56:49;;;5117:49;5110:56;;;;-1:-1:-1;5110:56:49;:::i;:::-;;;5083:3;;;;;:::i;:::-;;;;5022:163;;;;4959:240;5224:59;5247:11;;5260:22;5224:59;;;;;;;;:::i;:::-;;;;;;;;2568:2722;;;;;2418:2872;;;:::o;3016:319:106:-;3094:16;4706:1:388;3122:13:106;3178:14;:12;:14::i;:::-;3163:29;;3202:25;3250:4;3241:5;:13;3237:66;;3267:36;3284:5;3291;3298:4;3267:16;:36::i;:::-;3256:47;;3237:66;3320:8;3016:319;-1:-1:-1;;;;3016:319:106:o;1091:1264:49:-;1440:25;1468:27;:25;:27::i;:::-;1440:55;;1506:103;1518:17;1537:16;:14;:16::i;:::-;1555:9;1566;1577:14;1593:15;1506:11;:103::i;:::-;;1654:29;1686:25;:23;:25::i;:::-;1721:19;:49;;;:30;;;;:49;;;;;:63;:76;;1654:57;;-1:-1:-1;1788:9:49;;1721:63;;:19;:76;;1788:9;;1721:76;:::i;:::-;;;;-1:-1:-1;;1807:19:49;:60;;;:41;;;:60;;;;;1889:9;;1868:16;:14;:16::i;:::-;-1:-1:-1;;;;;1807:78:49;-1:-1:-1;;;;;1807:78:49;;;;;;;;;;;;;:91;;;;;;;:::i;:::-;;;;-1:-1:-1;1955:70:49;;-1:-1:-1;1984:1:49;1988:9;1999;2010:14;1955:20;:70::i;:::-;2084:20;2107:44;2130:9;2141;2107:22;:44::i;:::-;2084:67;;2218:9;-1:-1:-1;;;;;2167:86:49;2200:16;:14;:16::i;:::-;-1:-1:-1;;;;;2167:86:49;2181:17;2167:86;2229:12;2243:9;2167:86;;;;;;13623:25:641;;;13679:2;13664:18;;13657:34;13611:2;13596:18;;13449:248;2167:86:49;;;;;;;;1334:1021;;;1091:1264;;;;;;:::o;1314:167:56:-;1361:7;1380:32;1415:31;:29;:31::i;1452:188:46:-;1529:20;:18;:20::i;:::-;1524:76;;1565:24;;-1:-1:-1;;;1565:24:46;;;;;;;:::i;1524:76::-;1610:23;1628:4;1610:17;:23::i;9529:126:108:-;9585:13;9617:23;:21;:23::i;:::-;:31;;9610:38;;;;;:::i;2364:217:106:-;2503:16;2538:36;2555:5;2562;2569:4;2538:16;:36::i;:::-;2531:43;;2364:217;;;;;;:::o;4915:288:62:-;5062:20;:18;:20::i;:::-;5057:76;;5098:24;;-1:-1:-1;;;5098:24:62;;;;;;;:::i;5057:76::-;5143:53;5169:8;5179:10;5191:4;5143:25;:53::i;9808:243:388:-;1886:19:131;;9977:8:388;;1886:19:131;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:131;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:131;;;;;;;;:::i;1994:150::-;10001:43:388::1;10025:8;10035;10001:23;:43::i;8399:145::-:0;8445:7;4706:1;8495:14;:12;:14::i;:::-;:32;8488:39;;8399:145;:::o;8670:327:49:-;8789:29;8834;8866:25;:23;:25::i;:::-;8925:19;:55;;;:41;;:55;;;;;;;;-1:-1:-1;;;;;8925:65:49;;;;;;;;-1:-1:-1;;8925:65:49;;;;8670:327::o;2960:230:62:-;3025:7;3034:6;3052:32;3087:31;:29;:31::i;:::-;3136:21;-1:-1:-1;;;;;3136:21:62;;;-1:-1:-1;;;3166:15:62;;;;;;-1:-1:-1;3136:21:62;-1:-1:-1;;2960:230:62:o;10969:281:388:-;1064:19:131;;11180:4:388;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;11196:47:388::1;11219:4;11225:2;11229:7;11238:4;11196:22;:47::i;:::-;1461:7:131::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;11196:47:388::1;11219:4;11225:2;11229:7;11238:4;11196:22;:47::i;:::-;10969:281:::0;;;;;:::o;1411:579:106:-;1535:31;;:::i;:::-;4706:1:388;1610:7:106;:26;1606:368;;1670:14;:12;:14::i;:::-;1660:7;:24;1656:304;;;1840:51;1848:32;1872:7;1848:23;:32::i;:::-;1840:51;;-1:-1:-1;;1882:9:106;;;;1840:51;;;1920:21;1933:7;1920:12;:21::i;1656:304::-;1411:579;;;:::o;7774:500:49:-;7832:7;7851:29;7883:25;:23;:25::i;:::-;7985;;;;7948:34;;7851:57;;-1:-1:-1;7936:9:49;;7948:62;;7985:25;7948:62;:::i;:::-;7936:74;;7918:318;8028:34;;8024:38;;7918:318;;;8127:30;;;:19;8158:5;8162:1;8158;:5;:::i;:::-;8127:37;;;;;;;;;;;:52;;;8108:15;:71;8104:122;;8206:5;8210:1;8206;:5;:::i;:::-;8199:12;;;;7774:500;:::o;8104:122::-;8076:3;;;;:::i;:::-;;;;7918:318;;;-1:-1:-1;8246:21:49;;-1:-1:-1;;;8246:21:49;;30101:2:641;8246:21:49;;;30083::641;30140:2;30120:18;;;30113:30;-1:-1:-1;;;30159:18:641;;;30152:41;30210:18;;8246:21:49;29899:335:641;3176:1059:388;3331:13;3365:17;3373:8;3365:7;:17::i;:::-;3360:62;;3398:13;;-1:-1:-1;;;3398:13:388;;30441:2:641;3398:13:388;;;30423:21:641;30480:1;30460:18;;;30453:29;-1:-1:-1;;;30498:18:641;;;30491:33;30541:18;;3398:13:388;30239:326:641;3360:62:388;3453:13;3469:17;3477:8;3469:7;:17::i;:::-;3453:33;;3496:13;3524:14;3561:4;-1:-1:-1;;;;;3541:49:388;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3524:68;-1:-1:-1;;;;;;3606:20:388;;;3602:175;;3650:35;;-1:-1:-1;;;3650:35:388;;-1:-1:-1;;;;;3650:28:388;;;;;:35;;3679:5;;3650:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3642:43;;3602:175;;;3724:42;;-1:-1:-1;;;3724:42:388;;3744:4;;3724:35;;:42;;3760:5;;3724:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3716:50;;3602:175;3869:20;3892:42;:29;:27;:29::i;:::-;:40;:42::i;:::-;3869:65;-1:-1:-1;3944:16:388;;3975:192;3999:3;:10;3995:1;:14;3975:192;;;4056:5;4045:3;4049:1;4045:6;;;;;;;;:::i;:::-;;;;;;;4037:15;;:24;4033:124;;4092:3;4096:1;4092:6;;;;;;;;:::i;:::-;;;;;;;4081:17;;4033:124;;;4137:5;;4033:124;4011:6;4016:1;4011:6;;:::i;:::-;;;3975:192;;;;4183:45;4209:8;4219;4183:25;:45::i;:::-;4176:52;3176:1059;-1:-1:-1;;;;;;;3176:1059:388:o;644:219:49:-;691:7;700;719:29;751:25;:23;:25::i;:::-;794:34;;830:25;;;;;794:34;;830:25;;-1:-1:-1;644:219:49;-1:-1:-1;;644:219:49:o;2077::46:-;2138:13;2163:41;2207:49;:47;:49::i;:::-;2163:93;;2273:4;:16;;2266:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:219;:::o;17394:186:108:-;17491:4;17514:23;:21;:23::i;:::-;-1:-1:-1;;;;;17514:49:108;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;17514:59:108;;;;;17394:186::o;1787:375:64:-;1842:38;1892:20;1915:42;:29;:27;:29::i;:42::-;1892:65;;2005:3;:10;-1:-1:-1;;;;;1978:38:64;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1967:49;;2032:9;2027:129;2051:3;:10;2047:1;:14;2027:129;;;2099:29;:27;:29::i;:::-;:38;;:46;2138:3;2142:1;2138:6;;;;;;;;:::i;:::-;;;;;;;2099:46;;;;;;;;;;;2085:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;2094:1;2085:11;;;;;;;;:::i;:::-;;;;;;;;;;:60;2063:6;2068:1;2063:6;;:::i;:::-;;;2027:129;;;;1882:280;1787:375;:::o;8452:630:108:-;8537:4;-1:-1:-1;;;;;;;;;8855:25:108;;;;:101;;-1:-1:-1;;;;;;;;;;8931:25:108;;;8855:101;:177;;;-1:-1:-1;;;;;;;;9007:25:108;-1:-1:-1;;;9007:25:108;;8452:630::o;1793:159:107:-;1740:46;;1793:159::o;321:222:60:-;229:33;;321:222::o;17829:408:108:-;17894:11;17940:7;4706:1:388;17921:26:108;17917:314;;17977:23;:21;:23::i;:::-;:37;17967:47;;17963:258;;;18034:14;18066:84;18083:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;18073:66:108;18066:84;;18141:9;;;:::i;:::-;;;18066:84;;;-1:-1:-1;;;18177:24:108;:29;;17829:408;-1:-1:-1;;17829:408:108:o;43654:160::-;43753:13;43747:4;43740:27;43793:4;43787;43780:18;16143:122;16231:27;16240:2;16244:7;16253:4;16231:8;:27::i;6553:128:388:-;6609:4;6632:42;6609:4;6661:12;:10;:12::i;:::-;6632:8;:42::i;1945:259:56:-;2004:32;2039:31;:29;:31::i;:::-;2102:11;;-1:-1:-1;;;;;2123:23:56;;;-1:-1:-1;;;;;;2123:23:56;;;;;;2162:35;;2004:66;;-1:-1:-1;2102:11:56;;;;;2162:35;;2081:18;;2162:35;1994:210;;1945:259;:::o;7461:138:388:-;7534:4;7557:35;2812:24;7579:12;:10;:12::i;3295:187:64:-;461:42;;8626:99:388:o;6109:129:331:-;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;409:193:49:-;243:25;;409:193::o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;31172:19:641;;;31207:12;;;31200:28;;;31244:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;31172:19:641;;;31207:12;;;31200:28;;;31244:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;20209:3591:108:-;20346:27;20376;20395:7;20376:18;:27::i;:::-;-1:-1:-1;;;;;20528:22:108;;;;20346:57;;-1:-1:-1;20586:45:108;;;;20582:95;;20633:44;-1:-1:-1;;;20633:7:108;:44::i;:::-;20689:27;20718:23;20745:35;20772:7;20745:26;:35::i;:::-;20688:92;;;;20877:68;20902:15;20919:4;20925:19;41770:10;;41684:103;20925:19;-1:-1:-1;;;;;18791:32:108;;;18637:28;;18918:20;;18940:30;;18915:56;;18341:646;20877:68;20872:188;;20964:43;20981:4;41770:10;17394:186;:::i;20964:43::-;20959:101;;21009:51;-1:-1:-1;;;21009:7:108;:51::i;:::-;21071:43;21093:4;21099:2;21103:7;21112:1;21071:21;:43::i;:::-;21203:15;21200:157;;;21341:1;21320:19;21313:30;21200:157;21729:23;:21;:23::i;:::-;-1:-1:-1;;;;;21729:48:108;;;;;;:42;;;;;:48;;;;;21727:50;;-1:-1:-1;;21727:50:108;;;21821:23;:21;:23::i;:::-;-1:-1:-1;;;;;21821:46:108;;;;;;:42;;;;;:46;;;;;21819:48;;;;;;22184:143;21821:46;-1:-1:-1;;;22184:18:108;:143::i;:::-;22131:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;-1:-1:-1;;;22444:47:108;;22440:689;;22548:1;22538:11;;22669:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;22665:450;;22829:23;:21;:23::i;:::-;:37;22814:52;;22810:287;;23055:19;22998:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;22810:287;22498:631;22440:689;-1:-1:-1;;;;;23257:20:108;;23628:7;23257:20;23560:4;-1:-1:-1;;;;;;;;;;;23238:16:108;;23371:292;23686:13;23682:58;;23701:39;-1:-1:-1;;;23701:7:108;:39::i;:::-;20336:3464;;;;20209:3591;;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;636:41:641;;;577:33:129;;624:2:641;609:18;577:33:129;;;;;;;457:160;:::o;4590:125:108:-;4645:7;4671:23;:21;:23::i;:::-;:37;;4590:125;-1:-1:-1;4590:125:108:o;23891:187::-;24032:39;24049:4;24055:2;24059:7;24032:39;;;;;;;;;;;;:16;:39::i;36132:3168::-;36211:27;36241;36260:7;36241:18;:27::i;:::-;36211:57;-1:-1:-1;36211:57:108;36279:12;;36399:35;36426:7;36399:26;:35::i;:::-;36342:92;;;;36449:13;36445:321;;;36568:68;36593:15;36610:4;41770:10;20877:24;:68::i;36568:::-;36563:192;;36659:43;36676:4;41770:10;17394:186;:::i;36659:43::-;36654:101;;36704:51;-1:-1:-1;;;36704:7:108;:51::i;:::-;36776;36798:4;36812:1;36816:7;36825:1;36776:21;:51::i;:::-;36916:15;36913:157;;;37054:1;37033:19;37026:30;36913:157;-1:-1:-1;;;;;37659:23:108;:21;:23::i;:::-;-1:-1:-1;;;;;37659:48:108;;;;;;:42;;;;;:48;;;;;:84;;;;;;;;38027:173;37659:48;-1:-1:-1;;;38027:18:108;:173::i;:::-;37974:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;-1:-1:-1;;;38317:47:108;;38313:689;;38421:1;38411:11;;38542:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;38538:450;;38702:23;:21;:23::i;:::-;:37;38687:52;;38683:287;;38928:19;38871:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;38683:287;38371:631;38313:689;39027:35;;39054:7;;39050:1;;-1:-1:-1;;;;;39027:35:108;;;-1:-1:-1;;;;;;;;;;;39027:35:108;39050:1;;39027:35;39245:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;36132:3168:108:o;625:205:62:-;216:28;;625:205::o;2191:783:131:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:131;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:131;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3634:256:62;;:::o;2568:289:131:-;2744:94;;-1:-1:-1;;;2744:94:131;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:131;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3977:421:62:-;4096:6;4082:11;:20;4078:76;;;4118:25;;-1:-1:-1;;;4118:25:62;;;;;;;:::i;4078:76::-;4164:32;4199:31;:29;:31::i;:::-;4241:41;;-1:-1:-1;;;;;4241:41:62;;-1:-1:-1;;;;;;4292:37:62;;;;;-1:-1:-1;;;4292:37:62;;;;;;;4345:46;;2708:25:641;;;4241:41:62;;-1:-1:-1;4241:41:62;4345:46;;2696:2:641;2681:18;4345:46:62;;;;;;;4068:330;3977:421;;:::o;12282:2050:108:-;12349:14;12398:7;4706:1:388;12379:26:108;12375:1894;;12430:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;12578:11:108;12574:1318;;12624:23;:21;:23::i;:::-;:37;12613:48;;12609:101;;12663:47;-1:-1:-1;;;12663:7:108;:47::i;:::-;13333:23;:21;:23::i;:::-;-1:-1:-1;;13375:9:108;;;13333:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13433:11:108;13429:25;;13257:621;;13429:25;-1:-1:-1;;;13480:24:108;;13476:48;;12282:2050;;;:::o;13476:48::-;13812:47;-1:-1:-1;;;13812:7:108;:47::i;:::-;13257:621;;12574:1318;-1:-1:-1;;;14214:24:108;;14210:48;;12282:2050;;;:::o;14210:48::-;14278:47;-1:-1:-1;;;14278:7:108;:47::i;2203:503:64:-;2313:42;2351:3;2313:29;:27;:29::i;:::-;:33;:37;:42::i;:::-;2305:106;;;;-1:-1:-1;;;2305:106:64;;31813:2:641;2305:106:64;;;31795:21:641;31852:2;31832:18;;;31825:30;31891:34;31871:18;;;31864:62;-1:-1:-1;;;31942:18:641;;;31935:49;32001:19;;2305:106:64;31611:415:641;2305:106:64;2468:36;;;;;;;;2489:3;2468:36;;;;2494:9;2468:36;;;:::i;:::-;;;2422:29;:27;:29::i;:::-;:43;;;;:38;;;;;:43;;;;;;;;:82;;;;;;;;;;;;:43;;:82;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2422:82:64;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2422:82:64;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2422:82:64;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2555:3:64;;-1:-1:-1;2520:179:64;;-1:-1:-1;2572:14:64;;-1:-1:-1;2572:9:64;;-1:-1:-1;2572:9:64;:14;:::i;:::-;2600:21;;;;:9;:21;:::i;:::-;2635:18;;;;:9;:18;:::i;:::-;2667:22;;;;:9;:22;:::i;:::-;2520:179;;;;;;;;;;;;;:::i;:::-;;;;;;;;2203:503;;:::o;1917:263:60:-;1996:36;2035:39;:37;:39::i;:::-;2084:31;;-1:-1:-1;;;;;;2084:31:60;-1:-1:-1;;;;;2084:31:60;;;;;;;2130:43;;2084:31;;-1:-1:-1;2084:31:60;2130:43;;-1:-1:-1;;2130:43:60;1986:194;1917:263;:::o;3583:4263:106:-;3705:16;3770:4;3761:5;:13;3757:54;;3776:35;-1:-1:-1;;;3776:7:106;:35::i;:::-;4706:1:388;3887:5:106;:23;3883:85;;;4706:1:388;3930:23:106;;3883:85;3981:17;4001:14;:12;:14::i;:::-;3981:34;;4091:9;4083:4;:17;4079:72;;4127:9;4120:16;;4079:72;4164:25;4203;4231:16;4241:5;4231:9;:16::i;:::-;4280:12;;;4437:35;;;;-1:-1:-1;4503:22:106;;4499:3302;;4722:17;4713:5;4706:4;:12;:33;4702:112;;4790:5;4783:4;:12;4763:32;;4702:112;4933:4;4927:11;4915:23;;5183:1;5164:17;5160:25;5157:1;5153:33;5143:8;5139:48;5133:4;5126:62;5359:31;5393:26;5413:5;5393:19;:26::i;:::-;5359:60;;5437:25;5729:9;:16;;;5724:98;;-1:-1:-1;5789:14:106;;5724:98;5839:19;6026:1616;6063:19;6076:5;6063:12;:19::i;:::-;6051:31;;6167:4;6156:9;6152:20;6146:27;6262:1;6257:893;;;;7466:1;7445:22;;6139:1354;;6257:893;6536:9;6530:16;6527:121;;;6608:9;6602:16;6581:37;;6527:121;6935:5;6916:17;6912:29;6908:2;6904:38;6894:230;;7010:1;6997:11;6993:19;6978:34;;7088:5;7073:11;7070:1;7066:19;7056:8;7052:34;7045:49;6894:230;6139:1354;7538:1;7531:5;7527:13;7518:22;;7599:4;7590:5;:13;:49;;;;7622:17;7607:11;:32;7590:49;7588:52;6026:1616;;7740:29;;-1:-1:-1;;4499:3302:106;-1:-1:-1;7821:8:106;;3583:4263;-1:-1:-1;;;;;;3583:4263:106:o;11256:111:388:-;11322:7;11348:12;:10;:12::i;5086:840::-;5286:19;5282:103;;5329:9;:14;5321:33;;;;-1:-1:-1;;;5321:33:388;;34106:2:641;5321:33:388;;;34088:21:641;34145:1;34125:18;;;34118:29;-1:-1:-1;;;34163:18:641;;;34156:36;34209:18;;5321:33:388;33904:329:641;5282:103:388;5395:18;5416:33;5435:14;5416:16;:33;:::i;:::-;5395:54;-1:-1:-1;5460:18:388;-1:-1:-1;;;;;5492:45:388;;397:42:277;5492:45:388;5488:176;;;-1:-1:-1;5569:9:388;:23;;5488:176;;;-1:-1:-1;5639:9:388;:14;5488:176;5681:13;5673:28;;;;-1:-1:-1;;;5673:28:388;;34440:2:641;5673:28:388;;;34422:21:641;34479:1;34459:18;;;34452:29;-1:-1:-1;;;34497:18:641;;;34490:32;34539:18;;5673:28:388;34238:325:641;5673:28:388;5712:21;-1:-1:-1;;;;;5736:35:388;;;:84;;5799:21;5736:84;;;5774:22;:20;:22::i;:::-;5712:108;;5831:88;5868:9;5879:12;:10;:12::i;:::-;5893:13;5908:10;5831:36;:88::i;5979:248::-;6106:21;6159:14;:12;:14::i;:::-;6143:30;;6183:37;6193:3;6198:21;6183:9;:37::i;735:205:56:-;579:28;;735:205::o;1722:298:46:-;1788:41;1832:49;:47;:49::i;:::-;1788:93;;1891:21;1915:4;:16;;1891:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1941:23:46;;1891:40;;-1:-1:-1;1941:23:46;;:4;;-1:-1:-1;1941:23:46;;;;-1:-1:-1;1941:23:46;-1:-1:-1;1941:23:46;:::i;:::-;;1980:33;1999:7;2008:4;1980:33;;;;;;;:::i;:::-;;;;;;;;1778:242;;1722:298;:::o;5305:444:62:-;5452:6;5445:4;:13;5441:69;;;5474:25;;-1:-1:-1;;;5474:25:62;;;;;;;:::i;5441:69::-;5520:32;5555:31;:29;:31::i;:::-;5634:49;;;;;;;;-1:-1:-1;;;;;5634:49:62;;;;;;;;;;;;;-1:-1:-1;5597:34:62;;;:24;;;;:34;;;;;;:86;;;;-1:-1:-1;;;;;;5597:86:62;;;;;;;;;;;;;;;;;;5699:43;;2708:25:641;;;5597:24:62;;-1:-1:-1;5634:49:62;5597:34;;5699:43;;2681:18:641;5699:43:62;;;;;;;5431:318;5305:444;;;:::o;16989:255:108:-;17159:8;17083:23;:21;:23::i;:::-;41770:10;17083:63;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;17083:73:108;;;;;;;;;;;;:84;;-1:-1:-1;;17083:84:108;;;;;;;;;;;17182:55;;661:14:641;;654:22;636:41;;17083:73:108;;41770:10;;17182:55;;609:18:641;17182:55:108;;;;;;;16989:255;;:::o;24659:405::-;24828:31;24841:4;24847:2;24851:7;24828:12;:31::i;:::-;-1:-1:-1;;;;;24873:14:108;;;:19;24869:189;;24911:56;24942:4;24948:2;24952:7;24961:5;24911:30;:56::i;:::-;24906:152;;24987:56;-1:-1:-1;;;24987:7:108;:56::i;11695:162::-;11774:4;11797:23;:21;:23::i;:::-;:48;;;;:41;;:48;;-1:-1:-1;11797:48:108;;;;:53;;;11695:162::o;11333:183::-;11401:21;;:::i;:::-;11441:68;11460:23;:21;:23::i;:::-;:48;;;;:41;;;;;:48;;;;;;11441:18;:68::i;7664:124:331:-;7727:16;7762:19;7770:3;7762:7;:19::i;2754:501:64:-;2841:13;2866:30;2899:29;:27;:29::i;:::-;:38;;:42;2938:2;2899:42;;;;;;;;;;;:51;;2866:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2980:268;3046:4;:9;;;3086:4;:16;;;3130:4;:13;;;3175:4;:17;;;3226:7;2980:41;:268::i;747:242:46:-;594:38;;747:242::o;35086:484:108:-;35210:13;35226:16;35234:7;35226;:16::i;:::-;35210:32;;35257:13;:45;;;;-1:-1:-1;41770:10:108;-1:-1:-1;;;;;35274:28:108;;;;35257:45;35253:198;;;35321:44;35338:5;41770:10;17394:186;:::i;35321:44::-;35316:135;;35385:51;-1:-1:-1;;;35385:7:108;:51::i;:::-;35518:2;35461:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;35461:59:108;-1:-1:-1;;;;;35461:59:108;;;;;;35535:28;35461:48;;35535:28;;;;;;;;;;35461:48;35535:28;35200:370;35086:484;;;:::o;11373:140:388:-;11435:14;11468:38;:36;:38::i;7911:222::-;7985:4;8096:20;;;395:32:57;8096:20:388;;;;;;;;-1:-1:-1;;;;;8096:30:388;;;;;;;;;;;;;;;7911:222::o;2685:1388:331:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:331;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;19095:513:108;19194:27;19223:23;19262:53;19318:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;19318:48:108;;;;19566:26;;19318:48;;19566:26;;-1:-1:-1;19095:513:108:o;9188:569:388:-;9535:35;-1:-1:-1;;;;;;;;;;;9567:1:388;9535:8;:35::i;:::-;9534:36;:58;;;;-1:-1:-1;;;;;;9574:18:388;;;;9534:58;:78;;;;-1:-1:-1;;;;;;9596:16:388;;;;9534:78;9530:221;;;9633:29;-1:-1:-1;;;;;;;;;;;9657:4:388;9633:8;:29::i;:::-;9632:30;:62;;;;;9667:27;-1:-1:-1;;;;;;;;;;;9691:2:388;9667:8;:27::i;:::-;9666:28;9632:62;9628:113;;;9714:12;;-1:-1:-1;;;9714:12:388;;35312:2:641;9714:12:388;;;35294:21:641;35351:1;35331:18;;;35324:29;-1:-1:-1;;;35369:18:641;;;35362:32;35411:18;;9714:12:388;35110:325:641;14865:443:108;15271:11;15246:23;15242:41;15239:52;-1:-1:-1;;;;;15099:28:108;;;;15229:63;;14865:443::o;5818:123:331:-;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;34196:110:108:-;34272:27;34282:2;34286:8;34272:27;;;;;;;;;;;;:9;:27::i;27090:693::-;27280:99;;-1:-1:-1;;;27280:99:108;;27248:4;;-1:-1:-1;;;;;27280:56:108;;;;;:99;;41770:10;;27358:4;;27364:7;;27373:5;;27280:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27280:99:108;;;;;;;;-1:-1:-1;;27280:99:108;;;;;;;;;;;;:::i;:::-;;;27264:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27566:13:108;;27562:113;;27604:56;-1:-1:-1;;;27604:7:108;:56::i;:::-;27745:6;27739:13;27730:6;27726:2;27722:15;27715:38;27264:513;-1:-1:-1;;;;;;27433:75:108;-1:-1:-1;;;27433:75:108;;-1:-1:-1;27090:693:108;;;;;;:::o;14426:361::-;14492:31;;:::i;:::-;-1:-1:-1;;;;;14535:41:108;;;;-1:-1:-1;;;;;2074:3:108;14620:33;;;14586:68;:24;;;:68;-1:-1:-1;;;14683:24:108;;:29;;14664:16;;;:48;2583:3;14751:28;;;;14722:19;;;:58;14535:9;14426:361::o;5469:109:331:-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;754:466:280:-;977:13;1002:29;1034:38;1049:8;1059:12;1034:14;:38::i;:::-;1002:70;;1082:17;1102:70;1121:4;1127:11;1140:15;1157:14;1102:18;:70::i;:::-;1082:90;;1189:24;1208:4;1189:18;:24::i;:::-;1182:31;754:466;-1:-1:-1;;;;;;;;754:466:280:o;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;41770:10:108;;8626:99:388:o;2113:404:331:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:331;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:331;2488:12;;2521:292:277;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;36611:2:641;2758:48:277;;;36593:21:641;36650:2;36630:18;;;36623:30;-1:-1:-1;;;36669:18:641;;;36662:58;36737:18;;2758:48:277;36409:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;33381:736:108:-;33507:19;33513:2;33517:8;33507:5;:19::i;:::-;-1:-1:-1;;;;;33565:14:108;;;:19;33561:540;;33604:11;33618:23;:21;:23::i;:::-;:37;;-1:-1:-1;33689:14:108;;;33721:238;33751:62;33790:1;33794:2;33798:7;;;;;;33807:5;33751:30;:62::i;:::-;33746:174;;33841:56;-1:-1:-1;;;33841:7:108;:56::i;:::-;33954:3;33946:5;:11;33721:238;;34063:3;34022:23;:21;:23::i;:::-;:37;:44;34018:68;;34068:18;34083:1;34068:7;:18::i;2747:654:280:-;2887:22;;2943:26;;2846:13;;2887:26;;;;2943:30;;;2887:26;;2987:24;;;2999:12;2987:24;2983:156;;;3071:8;3106:12;3041:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3027:101;;;;;;2983:156;3152:8;3148:101;;;3220:8;3190:47;;;;;;;;:::i;3148:101::-;3262:12;3258:117;;;3342:12;3304:59;;;;;;;;:::i;3258:117::-;-1:-1:-1;;3385:9:280;;;;;;;;;-1:-1:-1;3385:9:280;;;2747:654;-1:-1:-1;;;2747:654:280:o;1464:701::-;1649:12;1756:4;1799:34;1818:14;1799:18;:34::i;:::-;1910:11;1963:9;2034:34;2053:14;2034:18;:34::i;:::-;2117:4;1692:466;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1673:485;;1464:701;;;;;;:::o;2303:187::-;2373:13;2462:19;2476:4;2462:13;:19::i;:::-;2412:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2398:85;;2303:187;;;:::o;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;42486:15:641;;;1105:68:321;;;42468:34:641;42538:15;;42518:18;;;42511:43;42570:18;;;42563:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;42403:18:641;;1105:68:321;42228:375:641;28229:2347:108;28301:20;28324:23;:21;:23::i;:::-;:37;;-1:-1:-1;28375:13:108;28371:53;;28390:34;-1:-1:-1;;;28390:7:108;:34::i;:::-;28435:61;28465:1;28469:2;28473:12;28487:8;28435:21;:61::i;:::-;28982:136;29018:2;15704:1;15691:15;;15665:24;15661:46;28982:18;:136::i;:::-;28924:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;-1:-1:-1;;;;;29379:45:108;;29329:23;:21;:23::i;:::-;-1:-1:-1;;;;;29329:46:108;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;29609:13;29605:54;;29624:35;-1:-1:-1;;;29624:7:108;:35::i;:::-;29688:23;;;:12;29770:662;30180:7;30137:8;30093:1;-1:-1:-1;;;;;;;;;;;29966:1:108;29902;29872:351;30414:9;;:16;;;;29770:662;;30486:3;30446:23;:21;:23::i;:::-;:43;-1:-1:-1;30509:60:108;;-1:-1:-1;;10379:240:388;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;505:3026:324;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:324;;;;;;;;;-1:-1:-1;813:9:324;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;-1:-1:-1;;;;;1326:39:324;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:324;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:324;;505:3026;-1:-1:-1;;;;;505:3026:324:o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;42927:2:641;3839:85:321;;;42909:21:641;42966:2;42946:18;;;42939:30;43005:34;42985:18;;;42978:62;-1:-1:-1;;;43056:18:641;;;43049:40;43106:19;;3839:85:321;42725:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;-1:-1:-1;;;;;1427:19:281;;;5194:60;;;;-1:-1:-1;;;5194:60:281;;43745:2:641;5194:60:281;;;43727:21:641;43784:2;43764:18;;;43757:30;43823:31;43803:18;;;43796:59;43872:18;;5194:60:281;43543:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;;88:32:641;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:258::-;760:1;770:113;784:6;781:1;778:13;770:113;;;860:11;;;854:18;841:11;;;834:39;806:2;799:10;770:113;;;901:6;898:1;895:13;892:48;;;-1:-1:-1;;936:1:641;918:16;;911:27;688:258::o;951:269::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:63;1141:6;1134:4;1129:3;1125:14;1118:4;1111:5;1107:16;1085:63;:::i;:::-;1202:2;1181:15;-1:-1:-1;;1177:29:641;1168:39;;;;1209:4;1164:50;;951:269;-1:-1:-1;;951:269:641:o;1225:231::-;1374:2;1363:9;1356:21;1337:4;1394:56;1446:2;1435:9;1431:18;1423:6;1394:56;:::i;1461:203::-;-1:-1:-1;;;;;1625:32:641;;;;1607:51;;1595:2;1580:18;;1461:203::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:641;;1669:180;-1:-1:-1;1669:180:641:o;1854:131::-;-1:-1:-1;;;;;1929:31:641;;1919:42;;1909:70;;1975:1;1972;1965:12;1990:315;2058:6;2066;2119:2;2107:9;2098:7;2094:23;2090:32;2087:52;;;2135:1;2132;2125:12;2087:52;2174:9;2161:23;2193:31;2218:5;2193:31;:::i;:::-;2243:5;2295:2;2280:18;;;;2267:32;;-1:-1:-1;;;1990:315:641:o;2310:247::-;2369:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;2477:9;2464:23;2496:31;2521:5;2496:31;:::i;2929:163::-;2996:5;3041:3;3032:6;3027:3;3023:16;3019:26;3016:46;;;3058:1;3055;3048:12;3016:46;-1:-1:-1;3080:6:641;2929:163;-1:-1:-1;2929:163:641:o;3097:854::-;3236:6;3244;3252;3260;3268;3276;3329:3;3317:9;3308:7;3304:23;3300:33;3297:53;;;3346:1;3343;3336:12;3297:53;3382:9;3369:23;3359:33;;3442:2;3431:9;3427:18;3414:32;3455:31;3480:5;3455:31;:::i;:::-;3505:5;-1:-1:-1;3557:2:641;3542:18;;3529:32;;-1:-1:-1;3613:2:641;3598:18;;3585:32;3626:33;3585:32;3626:33;:::i;:::-;3678:7;-1:-1:-1;3732:3:641;3717:19;;3704:33;;-1:-1:-1;3788:3:641;3773:19;;3760:33;-1:-1:-1;;;;;3805:30:641;;3802:50;;;3848:1;3845;3838:12;3802:50;3871:74;3937:7;3928:6;3917:9;3913:22;3871:74;:::i;:::-;3861:84;;;3097:854;;;;;;;;:::o;3956:456::-;4033:6;4041;4049;4102:2;4090:9;4081:7;4077:23;4073:32;4070:52;;;4118:1;4115;4108:12;4070:52;4157:9;4144:23;4176:31;4201:5;4176:31;:::i;:::-;4226:5;-1:-1:-1;4283:2:641;4268:18;;4255:32;4296:33;4255:32;4296:33;:::i;:::-;3956:456;;4348:7;;-1:-1:-1;;;4402:2:641;4387:18;;;;4374:32;;3956:456::o;4417:248::-;4485:6;4493;4546:2;4534:9;4525:7;4521:23;4517:32;4514:52;;;4562:1;4559;4552:12;4514:52;-1:-1:-1;;4585:23:641;;;4655:2;4640:18;;;4627:32;;-1:-1:-1;4417:248:641:o;4670:274::-;-1:-1:-1;;;;;4862:32:641;;;;4844:51;;4926:2;4911:18;;4904:34;4832:2;4817:18;;4670:274::o;4949:118::-;5035:5;5028:13;5021:21;5014:5;5011:32;5001:60;;5057:1;5054;5047:12;5072:241;5128:6;5181:2;5169:9;5160:7;5156:23;5152:32;5149:52;;;5197:1;5194;5187:12;5149:52;5236:9;5223:23;5255:28;5277:5;5255:28;:::i;5608:443::-;5715:6;5723;5776:2;5764:9;5755:7;5751:23;5747:32;5744:52;;;5792:1;5789;5782:12;5744:52;5832:9;5819:23;-1:-1:-1;;;;;5857:6:641;5854:30;5851:50;;;5897:1;5894;5887:12;5851:50;5920:74;5986:7;5977:6;5966:9;5962:22;5920:74;:::i;:::-;5910:84;6041:2;6026:18;;;;6013:32;;-1:-1:-1;;;;5608:443:641:o;6056:837::-;6251:2;6240:9;6233:21;6296:6;6290:13;6285:2;6274:9;6270:18;6263:41;6358:2;6350:6;6346:15;6340:22;6335:2;6324:9;6320:18;6313:50;6417:2;6409:6;6405:15;6399:22;6394:2;6383:9;6379:18;6372:50;6477:2;6469:6;6465:15;6459:22;6453:3;6442:9;6438:19;6431:51;6537:3;6529:6;6525:16;6519:23;6513:3;6502:9;6498:19;6491:52;6598:3;6590:6;6586:16;6580:23;6574:3;6563:9;6559:19;6552:52;6687:1;6683;6678:3;6674:11;6670:19;6663:3;6655:6;6651:16;6645:23;6641:49;6635:3;6624:9;6620:19;6613:78;6214:4;6738:3;6730:6;6726:16;6720:23;6762:6;6804:2;6799;6788:9;6784:18;6777:30;;6824:63;6882:3;6871:9;6867:19;6853:12;6824:63;:::i;6898:785::-;7025:6;7033;7041;7094:2;7082:9;7073:7;7069:23;7065:32;7062:52;;;7110:1;7107;7100:12;7062:52;7150:9;7137:23;-1:-1:-1;;;;;7220:2:641;7212:6;7209:14;7206:34;;;7236:1;7233;7226:12;7206:34;7274:6;7263:9;7259:22;7249:32;;7319:7;7312:4;7308:2;7304:13;7300:27;7290:55;;7341:1;7338;7331:12;7290:55;7381:2;7368:16;7407:2;7399:6;7396:14;7393:34;;;7423:1;7420;7413:12;7393:34;7478:7;7471:4;7461:6;7458:1;7454:14;7450:2;7446:23;7442:34;7439:47;7436:67;;;7499:1;7496;7489:12;7436:67;7530:4;7522:13;;;;-1:-1:-1;7554:6:641;-1:-1:-1;;7595:20:641;;7582:34;7625:28;7582:34;7625:28;:::i;:::-;7672:5;7662:15;;;6898:785;;;;;:::o;7688:632::-;7859:2;7911:21;;;7981:13;;7884:18;;;8003:22;;;7830:4;;7859:2;8082:15;;;;8056:2;8041:18;;;7830:4;8125:169;8139:6;8136:1;8133:13;8125:169;;;8200:13;;8188:26;;8269:15;;;;8234:12;;;;8161:1;8154:9;8125:169;;8325:127;8386:10;8381:3;8377:20;8374:1;8367:31;8417:4;8414:1;8407:15;8441:4;8438:1;8431:15;8457:248;8524:2;8518:9;8566:4;8554:17;;-1:-1:-1;;;;;8586:34:641;;8622:22;;;8583:62;8580:88;;;8648:18;;:::i;:::-;8684:2;8677:22;8457:248;:::o;8710:718::-;8752:5;8805:3;8798:4;8790:6;8786:17;8782:27;8772:55;;8823:1;8820;8813:12;8772:55;8859:6;8846:20;-1:-1:-1;;;;;8922:2:641;8918;8915:10;8912:36;;;8928:18;;:::i;:::-;9003:2;8997:9;8971:2;9057:13;;-1:-1:-1;;9053:22:641;;;9077:2;9049:31;9045:40;9033:53;;;9101:18;;;9121:22;;;9098:46;9095:72;;;9147:18;;:::i;:::-;9187:10;9183:2;9176:22;9222:2;9214:6;9207:18;9268:3;9261:4;9256:2;9248:6;9244:15;9240:26;9237:35;9234:55;;;9285:1;9282;9275:12;9234:55;9349:2;9342:4;9334:6;9330:17;9323:4;9315:6;9311:17;9298:54;9396:1;9389:4;9384:2;9376:6;9372:15;9368:26;9361:37;9416:6;9407:15;;;;;;8710:718;;;;:::o;9433:1005::-;9581:6;9589;9597;9605;9613;9621;9674:3;9662:9;9653:7;9649:23;9645:33;9642:53;;;9691:1;9688;9681:12;9642:53;9730:9;9717:23;9749:31;9774:5;9749:31;:::i;:::-;9799:5;-1:-1:-1;9851:2:641;9836:18;;9823:32;;-1:-1:-1;9907:2:641;9892:18;;9879:32;9920:33;9879:32;9920:33;:::i;:::-;9972:7;-1:-1:-1;10026:2:641;10011:18;;9998:32;;-1:-1:-1;10081:3:641;10066:19;;10053:33;-1:-1:-1;;;;;10135:14:641;;;10132:34;;;10162:1;10159;10152:12;10132:34;10185:74;10251:7;10242:6;10231:9;10227:22;10185:74;:::i;:::-;10175:84;;10312:3;10301:9;10297:19;10284:33;10268:49;;10342:2;10332:8;10329:16;10326:36;;;10358:1;10355;10348:12;10326:36;;10381:51;10424:7;10413:8;10402:9;10398:24;10381:51;:::i;10443:321::-;10512:6;10565:2;10553:9;10544:7;10540:23;10536:32;10533:52;;;10581:1;10578;10571:12;10533:52;10621:9;10608:23;-1:-1:-1;;;;;10646:6:641;10643:30;10640:50;;;10686:1;10683;10676:12;10640:50;10709:49;10750:7;10741:6;10730:9;10726:22;10709:49;:::i;10769:383::-;10846:6;10854;10862;10915:2;10903:9;10894:7;10890:23;10886:32;10883:52;;;10931:1;10928;10921:12;10883:52;10970:9;10957:23;10989:31;11014:5;10989:31;:::i;:::-;11039:5;11091:2;11076:18;;11063:32;;-1:-1:-1;11142:2:641;11127:18;;;11114:32;;10769:383;-1:-1:-1;;;10769:383:641:o;11157:::-;11234:6;11242;11250;11303:2;11291:9;11282:7;11278:23;11274:32;11271:52;;;11319:1;11316;11309:12;11271:52;11355:9;11342:23;11332:33;;11415:2;11404:9;11400:18;11387:32;11428:31;11453:5;11428:31;:::i;11545:382::-;11610:6;11618;11671:2;11659:9;11650:7;11646:23;11642:32;11639:52;;;11687:1;11684;11677:12;11639:52;11726:9;11713:23;11745:31;11770:5;11745:31;:::i;:::-;11795:5;-1:-1:-1;11852:2:641;11837:18;;11824:32;11865:30;11824:32;11865:30;:::i;:::-;11914:7;11904:17;;;11545:382;;;;;:::o;11932:315::-;12000:6;12008;12061:2;12049:9;12040:7;12036:23;12032:32;12029:52;;;12077:1;12074;12067:12;12029:52;12113:9;12100:23;12090:33;;12173:2;12162:9;12158:18;12145:32;12186:31;12211:5;12186:31;:::i;12252:665::-;12347:6;12355;12363;12371;12424:3;12412:9;12403:7;12399:23;12395:33;12392:53;;;12441:1;12438;12431:12;12392:53;12480:9;12467:23;12499:31;12524:5;12499:31;:::i;:::-;12549:5;-1:-1:-1;12606:2:641;12591:18;;12578:32;12619:33;12578:32;12619:33;:::i;:::-;12671:7;-1:-1:-1;12725:2:641;12710:18;;12697:32;;-1:-1:-1;12780:2:641;12765:18;;12752:32;-1:-1:-1;;;;;12796:30:641;;12793:50;;;12839:1;12836;12829:12;12793:50;12862:49;12903:7;12894:6;12883:9;12879:22;12862:49;:::i;:::-;12852:59;;;12252:665;;;;;;;:::o;13702:388::-;13770:6;13778;13831:2;13819:9;13810:7;13806:23;13802:32;13799:52;;;13847:1;13844;13837:12;13799:52;13886:9;13873:23;13905:31;13930:5;13905:31;:::i;:::-;13955:5;-1:-1:-1;14012:2:641;13997:18;;13984:32;14025:33;13984:32;14025:33;:::i;14095:1865::-;14315:4;14344:2;14384;14373:9;14369:18;14414:2;14403:9;14396:21;14437:6;14472;14466:13;14503:6;14495;14488:22;14529:2;14519:12;;14562:2;14551:9;14547:18;14540:25;;14624:2;14614:6;14611:1;14607:14;14596:9;14592:30;14588:39;14662:2;14654:6;14650:15;14683:1;14693:1238;14707:6;14704:1;14701:13;14693:1238;;;-1:-1:-1;;14802:22:641;;;14798:31;;14786:44;;14853:13;;14894:9;;14879:25;;14943:11;;14937:18;14975:15;;;14968:27;;;15030:19;;15072:4;15096:15;;;15089:27;;;15143:62;15200:3;15188:16;;15030:19;15143:62;:::i;:::-;15129:76;;15264:2;15250:12;15246:21;15240:28;15291:2;15355;15346:6;15338;15334:19;15330:28;15325:2;15317:6;15313:15;15306:53;15386:52;15431:6;15415:14;15386:52;:::i;:::-;15372:66;;15497:2;15483:12;15479:21;15473:28;15451:50;;15563:2;15554:6;15546;15542:19;15538:28;15533:2;15525:6;15521:15;15514:53;15594:52;15639:6;15623:14;15594:52;:::i;:::-;15687:21;;15681:28;15751:19;;;15747:28;;15741:3;15729:16;;15722:54;15681:28;15580:66;-1:-1:-1;15799:52:641;;-1:-1:-1;15580:66:641;;-1:-1:-1;15681:28:641;15799:52;:::i;:::-;15909:12;;;;15789:62;-1:-1:-1;;;15874:15:641;;;;-1:-1:-1;14729:1:641;14722:9;14693:1238;;;-1:-1:-1;15948:6:641;;14095:1865;-1:-1:-1;;;;;;;;14095:1865:641:o;15965:380::-;16044:1;16040:12;;;;16087;;;16108:61;;16162:4;16154:6;16150:17;16140:27;;16108:61;16215:2;16207:6;16204:14;16184:18;16181:38;16178:161;;;16261:10;16256:3;16252:20;16249:1;16242:31;16296:4;16293:1;16286:15;16324:4;16321:1;16314:15;16350:304;-1:-1:-1;;;;;16580:15:641;;;16562:34;;16632:15;;16627:2;16612:18;;16605:43;16512:2;16497:18;;16350:304::o;16659:245::-;16726:6;16779:2;16767:9;16758:7;16754:23;16750:32;16747:52;;;16795:1;16792;16785:12;16747:52;16827:9;16821:16;16846:28;16868:5;16846:28;:::i;16909:338::-;17111:2;17093:21;;;17150:2;17130:18;;;17123:30;-1:-1:-1;;;17184:2:641;17169:18;;17162:44;17238:2;17223:18;;16909:338::o;17252:411::-;17454:2;17436:21;;;17493:2;17473:18;;;17466:30;17532:34;17527:2;17512:18;;17505:62;-1:-1:-1;;;17598:2:641;17583:18;;17576:45;17653:3;17638:19;;17252:411::o;18088:545::-;18181:4;18187:6;18247:11;18234:25;18341:2;18337:7;18326:8;18310:14;18306:29;18302:43;18282:18;18278:68;18268:96;;18360:1;18357;18350:12;18268:96;18387:33;;18439:20;;;-1:-1:-1;;;;;;18471:30:641;;18468:50;;;18514:1;18511;18504:12;18468:50;18547:4;18535:17;;-1:-1:-1;18598:1:641;18594:14;;;18578;18574:35;18564:46;;18561:66;;;18623:1;18620;18613:12;18561:66;18088:545;;;;;:::o;19444:127::-;19505:10;19500:3;19496:20;19493:1;19486:31;19536:4;19533:1;19526:15;19560:4;19557:1;19550:15;19576:128;19616:3;19647:1;19643:6;19640:1;19637:13;19634:39;;;19653:18;;:::i;:::-;-1:-1:-1;19689:9:641;;19576:128::o;20723:168::-;20763:7;20829:1;20825;20821:6;20817:14;20814:1;20811:21;20806:1;20799:9;20792:17;20788:45;20785:71;;;20836:18;;:::i;:::-;-1:-1:-1;20876:9:641;;20723:168::o;20896:127::-;20957:10;20952:3;20948:20;20945:1;20938:31;20988:4;20985:1;20978:15;21012:4;21009:1;21002:15;21028:120;21068:1;21094;21084:35;;21099:18;;:::i;:::-;-1:-1:-1;21133:9:641;;21028:120::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:333;22207:4;22265:11;22252:25;22359:3;22355:8;22344;22328:14;22324:29;22320:44;22300:18;22296:69;22286:97;;22379:1;22376;22369:12;22286:97;22400:33;;;;;22106:333;-1:-1:-1;;22106:333:641:o;23121:522::-;23199:4;23205:6;23265:11;23252:25;23359:2;23355:7;23344:8;23328:14;23324:29;23320:43;23300:18;23296:68;23286:96;;23378:1;23375;23368:12;23286:96;23405:33;;23457:20;;;-1:-1:-1;;;;;;23489:30:641;;23486:50;;;23532:1;23529;23522:12;23486:50;23565:4;23553:17;;-1:-1:-1;23596:14:641;23592:27;;;23582:38;;23579:58;;;23633:1;23630;23623:12;23774:545;23876:2;23871:3;23868:11;23865:448;;;23912:1;23937:5;23933:2;23926:17;23982:4;23978:2;23968:19;24052:2;24040:10;24036:19;24033:1;24029:27;24023:4;24019:38;24088:4;24076:10;24073:20;24070:47;;;-1:-1:-1;24111:4:641;24070:47;24166:2;24161:3;24157:12;24154:1;24150:20;24144:4;24140:31;24130:41;;24221:82;24239:2;24232:5;24229:13;24221:82;;;24284:17;;;24265:1;24254:13;24221:82;;24495:1190;-1:-1:-1;;;;;24598:3:641;24595:27;24592:53;;;24625:18;;:::i;:::-;24654:94;24744:3;24704:38;24736:4;24730:11;24704:38;:::i;:::-;24698:4;24654:94;:::i;:::-;24774:1;24799:2;24794:3;24791:11;24816:1;24811:616;;;;25471:1;25488:3;25485:93;;;-1:-1:-1;25544:19:641;;;25531:33;25485:93;-1:-1:-1;;24452:1:641;24448:11;;;24444:24;24440:29;24430:40;24476:1;24472:11;;;24427:57;25591:78;;24784:895;;24811:616;23721:1;23714:14;;;23758:4;23745:18;;-1:-1:-1;;24847:17:641;;;24948:9;24970:229;24984:7;24981:1;24978:14;24970:229;;;25073:19;;;25060:33;25045:49;;25180:4;25165:20;;;;25133:1;25121:14;;;;25000:12;24970:229;;;24974:3;25227;25218:7;25215:16;25212:159;;;25351:1;25347:6;25341:3;25335;25332:1;25328:11;25324:21;25320:34;25316:39;25303:9;25298:3;25294:19;25281:33;25277:79;25269:6;25262:95;25212:159;;;25414:1;25408:3;25405:1;25401:11;25397:19;25391:4;25384:33;24784:895;;24495:1190;;;:::o;25690:956::-;25869:5;25856:19;25850:4;25843:33;25930:2;25923:5;25919:14;25906:28;25902:1;25896:4;25892:12;25885:50;25989:2;25982:5;25978:14;25965:28;25961:1;25955:4;25951:12;25944:50;26048:2;26041:5;26037:14;26024:28;26020:1;26014:4;26010:12;26003:50;26107:3;26100:5;26096:15;26083:29;26079:1;26073:4;26069:12;26062:51;26167:3;26160:5;26156:15;26143:29;26139:1;26133:4;26129:12;26122:51;26210:1;26204:4;26200:12;26260:3;26253:5;26249:15;26236:29;26274:33;26299:7;26274:33;:::i;:::-;26342:17;;-1:-1:-1;;;;;;26338:48:641;-1:-1:-1;;;;;26388:33:641;;;;26335:87;26316:107;;26466:66;26527:3;26516:15;;26520:5;26466:66;:::i;:::-;26541:99;26626:13;26613:11;26609:1;26603:4;26599:12;26541:99;:::i;26651:135::-;26690:3;-1:-1:-1;;26711:17:641;;26708:43;;;26731:18;;:::i;:::-;-1:-1:-1;26778:1:641;26767:13;;26651:135::o;26791:504::-;26850:5;26857:6;26917:3;26904:17;27003:2;26999:7;26988:8;26972:14;26968:29;26964:43;26944:18;26940:68;26930:96;;27022:1;27019;27012:12;26930:96;27050:33;;27154:4;27141:18;;;-1:-1:-1;27102:21:641;;-1:-1:-1;;;;;;27171:30:641;;27168:50;;;27214:1;27211;27204:12;27168:50;27264:6;27248:14;27244:27;27234:8;27230:42;27227:62;;;27285:1;27282;27275:12;27300:267;27389:6;27384:3;27377:19;27441:6;27434:5;27427:4;27422:3;27418:14;27405:43;-1:-1:-1;27493:1:641;27468:16;;;27486:4;27464:27;;;27457:38;;;;27549:2;27528:15;;;-1:-1:-1;;27524:29:641;27515:39;;;27511:50;;27300:267::o;27572:2051::-;27843:2;27895:21;;;27868:18;;;27951:22;;;27814:4;;27992:2;28010:18;;;28074:1;28070:14;;;28055:30;;28051:39;;28113:6;27814:4;;28168:1372;28184:6;28179:3;28176:15;28168:1372;;;28253:22;;;-1:-1:-1;;28249:36:641;28237:49;;28325:20;;28400:14;28396:27;;;-1:-1:-1;;28392:42:641;28368:67;;28358:95;;28449:1;28446;28439:12;28358:95;28479:31;;28567:19;;28552:35;;28610:4;28664:14;;;28651:28;28634:15;;;28627:53;28730:14;;;28717:28;28700:15;;;28693:53;28796:14;;;28783:28;28766:15;;;28759:53;28835:4;28889:14;;;28876:28;28859:15;;;28852:53;28928:4;28982:14;;;28969:28;28952:15;;;28945:53;28533:6;;29021:4;29066:14;;;29053:28;29094:33;29053:28;29094:33;:::i;:::-;-1:-1:-1;;;;;29164:33:641;29147:15;;;29140:58;29221:4;29272:54;29311:14;;;29315:5;29272:54;:::i;:::-;29238:88;;29363:2;29358;29350:6;29346:15;29339:27;29389:71;29456:2;29448:6;29444:15;29430:12;29416;29389:71;:::i;:::-;29518:12;;;;29379:81;-1:-1:-1;;;29483:15:641;;;;;-1:-1:-1;;28210:1:641;28201:11;28168:1372;;;-1:-1:-1;;;470:13:641;;463:21;29611:4;29596:20;;451:34;29557:6;-1:-1:-1;29572:45:641;;-1:-1:-1;;;400:91:641;29628:125;29668:4;29696:1;29693;29690:8;29687:34;;;29701:18;;:::i;:::-;-1:-1:-1;29738:9:641;;29628:125::o;29758:136::-;29797:3;29825:5;29815:39;;29834:18;;:::i;:::-;-1:-1:-1;;;29870:18:641;;29758:136::o;30570:251::-;30640:6;30693:2;30681:9;30672:7;30668:23;30664:32;30661:52;;;30709:1;30706;30699:12;30661:52;30741:9;30735:16;30760:31;30785:5;30760:31;:::i;30826:184::-;30896:6;30949:2;30937:9;30928:7;30924:23;30920:32;30917:52;;;30965:1;30962;30955:12;30917:52;-1:-1:-1;30988:16:641;;30826:184;-1:-1:-1;30826:184:641:o;31267:339::-;31469:2;31451:21;;;31508:2;31488:18;;;31481:30;-1:-1:-1;;;31542:2:641;31527:18;;31520:45;31597:2;31582:18;;31267:339::o;32031:1044::-;32157:9;32216:4;32208:5;32192:14;32188:26;32184:37;32181:57;;;32234:1;32231;32224:12;32181:57;32262:17;;:::i;:::-;32315:5;32302:19;-1:-1:-1;;;;;32381:2:641;32373:6;32370:14;32367:34;;;32397:1;32394;32387:12;32367:34;32426:52;32463:14;32454:6;32447:5;32443:18;32426:52;:::i;:::-;32417:7;32410:69;32528:2;32521:5;32517:14;32504:28;32488:44;;32557:2;32547:8;32544:16;32541:36;;;32573:1;32570;32563:12;32541:36;32611:54;32650:14;32639:8;32632:5;32628:20;32611:54;:::i;:::-;32606:2;32597:7;32593:16;32586:80;32715:2;32708:5;32704:14;32691:28;32675:44;;32744:2;32734:8;32731:16;32728:36;;;32760:1;32757;32750:12;32728:36;32798:54;32837:14;32826:8;32819:5;32815:20;32798:54;:::i;:::-;32793:2;32784:7;32780:16;32773:80;32902:2;32895:5;32891:14;32878:28;32862:44;;32931:2;32921:8;32918:16;32915:36;;;32947:1;32944;32937:12;32915:36;;32985:54;33024:14;33013:8;33006:5;33002:20;32985:54;:::i;:::-;32980:2;32967:16;;32960:80;-1:-1:-1;32971:7:641;32031:1044;-1:-1:-1;;32031:1044:641:o;33080:819::-;33413:3;33402:9;33395:22;33376:4;33440:63;33498:3;33487:9;33483:19;33475:6;33467;33440:63;:::i;:::-;33551:9;33543:6;33539:22;33534:2;33523:9;33519:18;33512:50;33585;33628:6;33620;33612;33585:50;:::i;:::-;33571:64;;33683:9;33675:6;33671:22;33666:2;33655:9;33651:18;33644:50;33717;33760:6;33752;33744;33717:50;:::i;:::-;33703:64;;33815:9;33807:6;33803:22;33798:2;33787:9;33783:18;33776:50;33843;33886:6;33878;33870;33843:50;:::i;:::-;33835:58;33080:819;-1:-1:-1;;;;;;;;;;;33080:819:641:o;34568:405::-;34765:2;34754:9;34747:21;34728:4;34791:56;34843:2;34832:9;34828:18;34820:6;34791:56;:::i;:::-;34895:9;34887:6;34883:22;34878:2;34867:9;34863:18;34856:50;34923:44;34960:6;34952;34923:44;:::i;:::-;34915:52;34568:405;-1:-1:-1;;;;;34568:405:641:o;34978:127::-;35039:10;35034:3;35030:20;35027:1;35020:31;35070:4;35067:1;35060:15;35094:4;35091:1;35084:15;35440:500;-1:-1:-1;;;;;35709:15:641;;;35691:34;;35761:15;;35756:2;35741:18;;35734:43;35808:2;35793:18;;35786:34;;;35856:3;35851:2;35836:18;;35829:31;;;35634:4;;35877:57;;35914:19;;35906:6;35877:57;:::i;:::-;35869:65;35440:500;-1:-1:-1;;;;;;35440:500:641:o;35945:249::-;36014:6;36067:2;36055:9;36046:7;36042:23;36038:32;36035:52;;;36083:1;36080;36073:12;36035:52;36115:9;36109:16;36134:30;36158:5;36134:30;:::i;36766:185::-;36808:3;36846:5;36840:12;36861:52;36906:6;36901:3;36894:4;36887:5;36883:16;36861:52;:::i;:::-;36929:16;;;;;36766:185;-1:-1:-1;;36766:185:641:o;36956:995::-;-1:-1:-1;;;37456:43:641;;37522:13;;37438:3;;37544:61;37522:13;37594:1;37585:11;;37578:4;37566:17;;37544:61;:::i;:::-;-1:-1:-1;;;37664:1:641;37624:16;;;37656:10;;;37649:73;37747:13;;37769:63;37747:13;37818:2;37810:11;;37803:4;37791:17;;37769:63;:::i;:::-;-1:-1:-1;;;37892:2:641;37851:17;;;;37884:11;;;37877:41;37942:2;37934:11;;36956:995;-1:-1:-1;;;;36956:995:641:o;37956:617::-;-1:-1:-1;;;38307:43:641;;38373:13;;38289:3;;38395:61;38373:13;38445:1;38436:11;;38429:4;38417:17;;38395:61;:::i;:::-;-1:-1:-1;;;38515:1:641;38475:16;;;;38507:10;;;38500:40;-1:-1:-1;38564:2:641;38556:11;;37956:617;-1:-1:-1;37956:617:641:o;38578:635::-;-1:-1:-1;;;38929:59:641;;39011:13;;38911:3;;39033:62;39011:13;39083:2;39074:12;;39067:4;39055:17;;39033:62;:::i;:::-;-1:-1:-1;;;39154:2:641;39114:16;;;;39146:11;;;39139:41;-1:-1:-1;39204:2:641;39196:11;;38578:635;-1:-1:-1;38578:635:641:o;39502:2268::-;-1:-1:-1;;;40699:45:641;;40767:13;;40681:3;;40789:62;40767:13;40839:2;40830:12;;40823:4;40811:17;;40789:62;:::i;:::-;-1:-1:-1;;;40910:2:641;40870:16;;;40902:11;;;40895:24;40944:13;;40966:63;40944:13;41015:2;41007:11;;41000:4;40988:17;;40966:63;:::i;:::-;-1:-1:-1;;;41128:2:641;41048:17;;;;41120:11;;;41113:23;;;-1:-1:-1;;;41160:2:641;41152:11;;41145:63;41233:13;;41255:63;41233:13;41304:2;41296:11;;41289:4;41277:17;;41255:63;:::i;:::-;41378:2;41337:17;;41370:11;;;41363:23;41411:13;;41433:63;41411:13;41482:2;41474:11;;41467:4;41455:17;;41433:63;:::i;:::-;-1:-1:-1;;;41556:2:641;41515:17;;;;41548:11;;;41541:80;41637:127;41667:96;41693:69;41723:38;41757:2;41749:11;;41741:6;41723:38;:::i;:::-;-1:-1:-1;;;39283:47:641;;39355:2;39346:12;;39218:146;41693:69;41685:6;41667:96;:::i;:::-;-1:-1:-1;;;39434:30:641;;39489:1;39480:11;;39369:128;41637:127;41630:134;39502:2268;-1:-1:-1;;;;;;;;;39502:2268:641:o;41775:448::-;42037:31;42032:3;42025:44;42007:3;42098:6;42092:13;42114:62;42169:6;42164:2;42159:3;42155:12;42148:4;42140:6;42136:17;42114:62;:::i;:::-;42196:16;;;;42214:2;42192:25;;41775:448;-1:-1:-1;;41775:448:641:o;42608:112::-;42640:1;42666;42656:35;;42671:18;;:::i;:::-;-1:-1:-1;42705:9:641;;42608:112::o;43901:274::-;44030:3;44068:6;44062:13;44084:53;44130:6;44125:3;44118:4;44110:6;44106:17;44084:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "deleteSharedMetadata(bytes32)": "1ebb2422",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "getActiveClaimConditionId()": "c68907de",
    "getAllSharedMetadata()": "fc3c2a73",
    "getApproved(uint256)": "081812fc",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSharedMetadata((string,string,string,string),bytes32)": "696b0c1a",
    "startTokenId()": "e6798baa",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"SharedMetadataDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"name\":\"SharedMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"deleteSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721AUpgradeable.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSharedMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataWithId[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"animationURI\",\"type\":\"string\"}],\"internalType\":\"struct ISharedMetadataBatch.SharedMetadataInfo\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"setSharedMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s.\"},\"TRANSFER_ROLE\":{\"details\":\"Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"SharedMetadataDeleted(bytes32)\":{\"notice\":\"Emitted when shared metadata is deleted.\"},\"SharedMetadataUpdated(bytes32,string,string,string,string)\":{\"notice\":\"Emitted when shared metadata is lazy minted.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"deleteSharedMetadata(bytes32)\":{\"notice\":\"Delete shared metadata for NFTs\"},\"getAllSharedMetadata()\":{\"notice\":\"Get all shared metadata\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"setSharedMetadata((string,string,string,string),bytes32)\":{\"notice\":\"Set shared metadata for NFTs\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":\"EvolvingNFTLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/dynamic-contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a\",\"dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM\"]},\"contracts/dynamic-contracts/extension/Drop.sol\":{\"keccak256\":\"0x72f291fc21287c2efbed6b3d208ebde10d6e165900f0cd110aa76c775be7892a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ab7b94ec434725c7ee44114682fd3bdb826c233647e5808f9c62938e539aeb\",\"dweb:/ipfs/Qmf8KZ9JkauCRN53HavAcXyjWvnLhSeTfQqNAVQBUzb34s\"]},\"contracts/dynamic-contracts/extension/Ownable.sol\":{\"keccak256\":\"0x9dd9d16f471fb56f58e0e69c69761ad5144fb5fb772cf2555ef5eb8f5dbee1dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://afb30da15566f64b1f0d2e6f68da37b19343f9413dde26543a538e487f0abcc1\",\"dweb:/ipfs/QmSxE28CxKywwUuxUgmDPvkQC5M7B9jKx23nnKpwoceL7s\"]},\"contracts/dynamic-contracts/extension/Permissions.sol\":{\"keccak256\":\"0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb\",\"dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW\"]},\"contracts/dynamic-contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x294861a705a951f1dc9b41e697e9d858541281e8d4ebb1fae95e80744af840ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab65343d80d8bf80d4804d7479feb1262dc40eeda3e19d16030bd4115bdc29f6\",\"dweb:/ipfs/QmWJuBuKS2KHLN3afrsU27dQmqfuHMywkZyhGnFkB9eCMR\"]},\"contracts/dynamic-contracts/extension/Royalty.sol\":{\"keccak256\":\"0x2f0d1dbd1ee62268db275bdc7ead8836453b0a31f2b1887c120c8eb5bed6f071\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4ba6ed7eb78cac8d71ec6b283cabf07412707c308e20993b5badf8d8f71c1f2\",\"dweb:/ipfs/QmU65RcWH4toCDuDhyGH5jHaLc2TdkSmRo3LRm3Tb2hpm3\"]},\"contracts/dynamic-contracts/extension/RulesEngine.sol\":{\"keccak256\":\"0xc06a5537688deef4d3edfe617b7b57d2156a03a41727aca9885113e6b2910b3e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://268e9414a43eb651e7e25d8b391f2becd01d3052461fa0eab6ecb9b35aa8721f\",\"dweb:/ipfs/QmZHHBG7JLuKeuGC52koopkS5Pm5d1GHVPatFNMLeMYfM2\"]},\"contracts/dynamic-contracts/extension/SharedMetadataBatch.sol\":{\"keccak256\":\"0x714946aa10006e3a2751180ed437db0f24d222f43c3abbe2e9d28d76fc287a56\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://341dd5c13e8b44df3dbae8453e88f9e4586e8356461e023f8d045673e19f3e4b\",\"dweb:/ipfs/QmV1je4N93sCw3JHJ4SKyBGmockG2tdYxJdda6Qapr1F4j\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/queryable/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec\",\"dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC\"]},\"contracts/eip/queryable/ERC721AStorage.sol\":{\"keccak256\":\"0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760\",\"dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS\"]},\"contracts/eip/queryable/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac\",\"dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL\"]},\"contracts/eip/queryable/ERC721A__Initializable.sol\":{\"keccak256\":\"0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5\",\"dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ\"]},\"contracts/eip/queryable/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c\",\"dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9\"]},\"contracts/eip/queryable/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a\",\"dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd\"]},\"contracts/eip/queryable/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/IRulesEngine.sol\":{\"keccak256\":\"0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa\",\"dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7\"]},\"contracts/extension/interface/ISharedMetadataBatch.sol\":{\"keccak256\":\"0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349\",\"dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/NFTMetadataRendererLib.sol\":{\"keccak256\":\"0x32ea718445bcdb52775e5f1b287699fde2123ddb7b08ee7efa4cf1d3d35e845d\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://18da3987bde87a1d82515bc304dbf97aeeb22f97f4a3862a7c51ea521c5ac3bb\",\"dweb:/ipfs/QmXLETfqsSBzn5R1641qd3TC2awF3wjwtVRBCpxLmMKRwh\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"contracts/openzeppelin-presets/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/unaudited/evolving-nfts/EvolvingNFTLogic.sol\":{\"keccak256\":\"0xb39a81e47941e2c8f8205a9fdc4815137ee7c9d67ba06f65a32496c0a0a2b735\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d43127d3d50359ff34ba3e404c0c4b1e14ebca3f8f26cdf17398ee1571905d22\",\"dweb:/ipfs/QmeDGHB8DKRf1BfmXGyrrNK7uMYEmsTrQGBXYfWACNAY4h\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidQueryRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SharedMetadataDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "imageURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "animationURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SharedMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSharedMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721AUpgradeable.TokenOwnership",
              "name": "ownership",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "burned",
                  "type": "bool"
                },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSharedMetadata",
          "outputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataWithId[]",
              "name": "metadata",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageURI",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "animationURI",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISharedMetadataBatch.SharedMetadataInfo",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageURI",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "animationURI",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSharedMetadata"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "startTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stop",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "deleteSharedMetadata(bytes32)": {
            "notice": "Delete shared metadata for NFTs"
          },
          "getAllSharedMetadata()": {
            "notice": "Get all shared metadata"
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "setSharedMetadata((string,string,string,string),bytes32)": {
            "notice": "Set shared metadata for NFTs"
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": "EvolvingNFTLogic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dynamic-contracts/extension/ContractMetadata.sol": {
        "keccak256": "0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33",
        "urls": [
          "bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a",
          "dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Drop.sol": {
        "keccak256": "0x72f291fc21287c2efbed6b3d208ebde10d6e165900f0cd110aa76c775be7892a",
        "urls": [
          "bzz-raw://52ab7b94ec434725c7ee44114682fd3bdb826c233647e5808f9c62938e539aeb",
          "dweb:/ipfs/Qmf8KZ9JkauCRN53HavAcXyjWvnLhSeTfQqNAVQBUzb34s"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Ownable.sol": {
        "keccak256": "0x9dd9d16f471fb56f58e0e69c69761ad5144fb5fb772cf2555ef5eb8f5dbee1dd",
        "urls": [
          "bzz-raw://afb30da15566f64b1f0d2e6f68da37b19343f9413dde26543a538e487f0abcc1",
          "dweb:/ipfs/QmSxE28CxKywwUuxUgmDPvkQC5M7B9jKx23nnKpwoceL7s"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Permissions.sol": {
        "keccak256": "0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a",
        "urls": [
          "bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb",
          "dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/PrimarySale.sol": {
        "keccak256": "0x294861a705a951f1dc9b41e697e9d858541281e8d4ebb1fae95e80744af840ff",
        "urls": [
          "bzz-raw://ab65343d80d8bf80d4804d7479feb1262dc40eeda3e19d16030bd4115bdc29f6",
          "dweb:/ipfs/QmWJuBuKS2KHLN3afrsU27dQmqfuHMywkZyhGnFkB9eCMR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Royalty.sol": {
        "keccak256": "0x2f0d1dbd1ee62268db275bdc7ead8836453b0a31f2b1887c120c8eb5bed6f071",
        "urls": [
          "bzz-raw://d4ba6ed7eb78cac8d71ec6b283cabf07412707c308e20993b5badf8d8f71c1f2",
          "dweb:/ipfs/QmU65RcWH4toCDuDhyGH5jHaLc2TdkSmRo3LRm3Tb2hpm3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/RulesEngine.sol": {
        "keccak256": "0xc06a5537688deef4d3edfe617b7b57d2156a03a41727aca9885113e6b2910b3e",
        "urls": [
          "bzz-raw://268e9414a43eb651e7e25d8b391f2becd01d3052461fa0eab6ecb9b35aa8721f",
          "dweb:/ipfs/QmZHHBG7JLuKeuGC52koopkS5Pm5d1GHVPatFNMLeMYfM2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/SharedMetadataBatch.sol": {
        "keccak256": "0x714946aa10006e3a2751180ed437db0f24d222f43c3abbe2e9d28d76fc287a56",
        "urls": [
          "bzz-raw://341dd5c13e8b44df3dbae8453e88f9e4586e8356461e023f8d045673e19f3e4b",
          "dweb:/ipfs/QmV1je4N93sCw3JHJ4SKyBGmockG2tdYxJdda6Qapr1F4j"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol": {
        "keccak256": "0xcea59e91a24bd3d1f96e7a2d55f16975c73d05c27958d83cfdb9e4d32af9f31a",
        "urls": [
          "bzz-raw://55aa2f46ac5c44440475284305a3428d404313560d688783e6bc7e2b2183fbec",
          "dweb:/ipfs/QmTTq6SJ2yZrpsqshztataPDa4Jp9KhfKwRVMUR3eJLtrC"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AStorage.sol": {
        "keccak256": "0x5703e46ac0beec3d3e64e5cc9fa8841a9860d375777515fe341ade8c3dd2418a",
        "urls": [
          "bzz-raw://8949a575710a700da1c9753ead62b1b98a5cceb446cd13a5271e94f557071760",
          "dweb:/ipfs/QmPRMyXzfHDom2Pfn5aQJJsA4AsojZBmsiDk2fNdtLW5yS"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721AUpgradeable.sol": {
        "keccak256": "0xec0039115e836191bd350b6d5e4781b27cbe85bfed9e4009b6bf891addfb6291",
        "urls": [
          "bzz-raw://e69d0987ba4390bf21bdc6e149ad5d3c1b06894418c723a42575327a4edbc8ac",
          "dweb:/ipfs/QmPfUAP2NNR8kuQkSAbrBDPEyEKsUXLgwQoq9H5i5RRBhL"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__Initializable.sol": {
        "keccak256": "0x91d642fafae97248c4da7e8e4d861af2f52bdf19abadd9bbd337226439208146",
        "urls": [
          "bzz-raw://1b018641078c2cce6629f097b9824b5fbf9f1ba8c7b95de92467997a4c9831d5",
          "dweb:/ipfs/QmP4G7zZmwyxp3awVJtdPzLQ77MY6wNe6CBfjfkfQJkdLZ"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x2bc417d73b72ea83a2952fe8da3fa4cc96a12fdb8fc3d4ee7cf8639ad5f39b43",
        "urls": [
          "bzz-raw://29e4dd2c81f14dba0525f55e81718da757c1e60d6b74bc33964d185d1abb051c",
          "dweb:/ipfs/QmcywxZ2UPRTbQYgNKpMjt43TC9hYbGnAnX2atMrVqQsZ9"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AQueryableUpgradeable.sol": {
        "keccak256": "0x8ed8602663a08364759d98051c6c8f872bd056e84e8901bbb05bcd7f823d390f",
        "urls": [
          "bzz-raw://5ef76d5d5955157fa01116cd735c88181b954f57180662db3afa01d19611799a",
          "dweb:/ipfs/QmTXSaJdYuA9RFSSBibEycJ3sqLAkC8uQGTEkeYHcyBTYd"
        ],
        "license": "MIT"
      },
      "contracts/eip/queryable/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRulesEngine.sol": {
        "keccak256": "0xca77d25c51f2f95533972c33e2e63ba5de8e1180e97bcaae526960e56c88a7c2",
        "urls": [
          "bzz-raw://dae4fd3944b82df9ed11234039a4713c73891b6fe4120de268ca6280963dd8fa",
          "dweb:/ipfs/QmaA23UuRXTAcu2GiQecbeHHCKLgFvzH5RF6wrZmuicMD7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISharedMetadataBatch.sol": {
        "keccak256": "0x9b122c8c7445dde2c8565c43481bcb24960b1b13a8f82f7dc04b791956e27b86",
        "urls": [
          "bzz-raw://ef9dce42a5d29f9b17323db6209f509423b549db24f414c99526620f7b8ed349",
          "dweb:/ipfs/QmeyjTfAdkHz1g4aAjJyz7d9VMHDdCihqaxLQmM9MkE8Xr"
        ],
        "license": "Apache 2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/NFTMetadataRendererLib.sol": {
        "keccak256": "0x32ea718445bcdb52775e5f1b287699fde2123ddb7b08ee7efa4cf1d3d35e845d",
        "urls": [
          "bzz-raw://18da3987bde87a1d82515bc304dbf97aeeb22f97f4a3862a7c51ea521c5ac3bb",
          "dweb:/ipfs/QmXLETfqsSBzn5R1641qd3TC2awF3wjwtVRBCpxLmMKRwh"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/unaudited/evolving-nfts/EvolvingNFTLogic.sol": {
        "keccak256": "0xb39a81e47941e2c8f8205a9fdc4815137ee7c9d67ba06f65a32496c0a0a2b735",
        "urls": [
          "bzz-raw://d43127d3d50359ff34ba3e404c0c4b1e14ebca3f8f26cdf17398ee1571905d22",
          "dweb:/ipfs/QmeDGHB8DKRf1BfmXGyrrNK7uMYEmsTrQGBXYfWACNAY4h"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/unaudited/evolving-nfts/EvolvingNFTLogic.sol",
    "id": 102610,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "Base64": [
        78619
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        20317
      ],
      "ContractMetadataStorage": [
        20235
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFiltererUpgradeable": [
        34803
      ],
      "Drop": [
        21343
      ],
      "DropStorage": [
        20600
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "ERC721AQueryableUpgradeable": [
        31824
      ],
      "ERC721AStorage": [
        31875
      ],
      "ERC721AUpgradeable": [
        33852
      ],
      "ERC721A__IERC721ReceiverUpgradeable": [
        31896
      ],
      "ERC721A__Initializable": [
        33955
      ],
      "ERC721A__InitializableStorage": [
        33981
      ],
      "EnumerableSet": [
        79537
      ],
      "EvolvingNFTLogic": [
        102609
      ],
      "IClaimCondition": [
        49527
      ],
      "IClaimConditionMultiPhase": [
        49550
      ],
      "IContractMetadata": [
        49679
      ],
      "IDrop": [
        49815
      ],
      "IERC165": [
        31146
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IERC2981Upgradeable": [
        151718
      ],
      "IERC721AQueryableUpgradeable": [
        34022
      ],
      "IERC721AUpgradeable": [
        34228
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "ISharedMetadataBatch": [
        50919
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "MerkleProof": [
        64593
      ],
      "Multicall": [
        37872
      ],
      "NFTMetadataRenderer": [
        64772
      ],
      "OperatorFiltererUpgradeable": [
        38318
      ],
      "Ownable": [
        22407
      ],
      "OwnableStorage": [
        22300
      ],
      "Permissions": [
        22886
      ],
      "PermissionsStorage": [
        22443
      ],
      "PrimarySale": [
        23495
      ],
      "PrimarySaleStorage": [
        23418
      ],
      "Royalty": [
        23883
      ],
      "RoyaltyStorage": [
        23612
      ],
      "RulesEngine": [
        24395
      ],
      "SafeERC20": [
        78527
      ],
      "SharedMetadataBatch": [
        24643
      ],
      "SharedMetadataBatchStorage": [
        24428
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11619:388",
    "nodes": [
      {
        "id": 101881,
        "nodeType": "PragmaDirective",
        "src": "39:24:388",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 101882,
        "nodeType": "ImportDirective",
        "src": "775:74:388",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 158124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101883,
        "nodeType": "ImportDirective",
        "src": "850:80:388",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 151719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101884,
        "nodeType": "ImportDirective",
        "src": "932:61:388",
        "nodes": [],
        "absolutePath": "contracts/eip/queryable/ERC721AQueryableUpgradeable.sol",
        "file": "../../eip/queryable/ERC721AQueryableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 31825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101885,
        "nodeType": "ImportDirective",
        "src": "1043:73:388",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101886,
        "nodeType": "ImportDirective",
        "src": "1117:43:388",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101887,
        "nodeType": "ImportDirective",
        "src": "1202:39:388",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101888,
        "nodeType": "ImportDirective",
        "src": "1242:64:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/ContractMetadata.sol",
        "file": "../../dynamic-contracts/extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 20318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101889,
        "nodeType": "ImportDirective",
        "src": "1307:55:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Royalty.sol",
        "file": "../../dynamic-contracts/extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 23884,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101890,
        "nodeType": "ImportDirective",
        "src": "1363:59:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/PrimarySale.sol",
        "file": "../../dynamic-contracts/extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 23496,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101891,
        "nodeType": "ImportDirective",
        "src": "1423:55:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Ownable.sol",
        "file": "../../dynamic-contracts/extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 22408,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101892,
        "nodeType": "ImportDirective",
        "src": "1479:59:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Permissions.sol",
        "file": "../../dynamic-contracts/extension/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 22887,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101893,
        "nodeType": "ImportDirective",
        "src": "1539:52:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Drop.sol",
        "file": "../../dynamic-contracts/extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 21344,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101894,
        "nodeType": "ImportDirective",
        "src": "1592:67:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/SharedMetadataBatch.sol",
        "file": "../../dynamic-contracts/extension/SharedMetadataBatch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 24644,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101896,
        "nodeType": "ImportDirective",
        "src": "1660:80:388",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/RulesEngine.sol",
        "file": "../../dynamic-contracts/extension/RulesEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 24396,
        "symbolAliases": [
          {
            "foreign": {
              "id": 101895,
              "name": "RulesEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24395,
              "src": "1669:11:388",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_RulesEngine_$24395_$",
                "typeString": "type(contract RulesEngine)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 101897,
        "nodeType": "ImportDirective",
        "src": "1769:64:388",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102610,
        "sourceUnit": 34804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 102609,
        "nodeType": "ContractDefinition",
        "src": "1835:9822:388",
        "nodes": [
          {
            "id": 101918,
            "nodeType": "UsingForDirective",
            "src": "2073:37:388",
            "nodes": [],
            "libraryName": {
              "id": 101916,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158123,
              "src": "2079:18:388"
            },
            "typeName": {
              "id": 101917,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2102:7:388",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 101922,
            "nodeType": "UsingForDirective",
            "src": "2115:49:388",
            "nodes": [],
            "libraryName": {
              "id": 101919,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79537,
              "src": "2121:13:388"
            },
            "typeName": {
              "id": 101921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 101920,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 79143,
                "src": "2139:24:388"
              },
              "referencedDeclaration": 79143,
              "src": "2139:24:388",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$79143_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "id": 101926,
            "nodeType": "VariableDeclaration",
            "src": "2460:50:388",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 101923,
              "nodeType": "StructuredDocumentation",
              "src": "2354:101:388",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2485:18:388",
            "scope": 102609,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 101924,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2460:7:388",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 101925,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2506:4:388",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 101932,
            "nodeType": "VariableDeclaration",
            "src": "2630:67:388",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 101927,
              "nodeType": "StructuredDocumentation",
              "src": "2516:109:388",
              "text": "@dev Only TRANSFER_ROLE holders can have tokens transferred from or to them, during restricted transfers."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2655:13:388",
            "scope": 102609,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 101928,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2630:7:388",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 101930,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2681:15:388",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 101929,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2671:9:388",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 101931,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2671:26:388",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 101938,
            "nodeType": "VariableDeclaration",
            "src": "2773:63:388",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 101933,
              "nodeType": "StructuredDocumentation",
              "src": "2703:65:388",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2798:11:388",
            "scope": 102609,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 101934,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2773:7:388",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 101936,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2822:13:388",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 101935,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2812:9:388",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 101937,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2812:24:388",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 101942,
            "nodeType": "VariableDeclaration",
            "src": "2887:41:388",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 101939,
              "nodeType": "StructuredDocumentation",
              "src": "2842:40:388",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2912:7:388",
            "scope": 102609,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 101940,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2887:7:388",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 101941,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2922:6:388",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 102067,
            "nodeType": "FunctionDefinition",
            "src": "3176:1059:388",
            "nodes": [],
            "body": {
              "id": 102066,
              "nodeType": "Block",
              "src": "3350:885:388",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 101956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3364:18:388",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 101954,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101945,
                          "src": "3373:8:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 101953,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32739,
                        "src": "3365:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 101955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3365:17:388",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101962,
                  "nodeType": "IfStatement",
                  "src": "3360:62:388",
                  "trueBody": {
                    "id": 101961,
                    "nodeType": "Block",
                    "src": "3384:38:388",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "214944",
                              "id": 101958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3405:5:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              },
                              "value": "!ID"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb93743f09f74891390357bf755064ac37fe4e3bc84b64922d94e34b2182452a",
                                "typeString": "literal_string \"!ID\""
                              }
                            ],
                            "id": 101957,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3398:6:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 101959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3398:13:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101960,
                        "nodeType": "ExpressionStatement",
                        "src": "3398:13:388"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    101964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101964,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3461:5:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102066,
                      "src": "3453:13:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101963,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3453:7:388",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101968,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101966,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101945,
                        "src": "3477:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101965,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32352,
                      "src": "3469:7:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 101967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:17:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3453:33:388"
                },
                {
                  "assignments": [
                    101970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101970,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "3504:5:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102066,
                      "src": "3496:13:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3496:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101972,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 101971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3512:1:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3496:17:388"
                },
                {
                  "assignments": [
                    101974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101974,
                      "mutability": "mutable",
                      "name": "engine",
                      "nameLocation": "3532:6:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102066,
                      "src": "3524:14:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101973,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3524:7:388",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101983,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101978,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3561:4:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$102609",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EvolvingNFTLogic_$102609",
                                  "typeString": "contract EvolvingNFTLogic"
                                }
                              ],
                              "id": 101977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3553:7:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101976,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3553:7:388",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3553:13:388",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101975,
                          "name": "RulesEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24395,
                          "src": "3541:11:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RulesEngine_$24395_$",
                            "typeString": "type(contract RulesEngine)"
                          }
                        },
                        "id": 101980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:26:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RulesEngine_$24395",
                          "typeString": "contract RulesEngine"
                        }
                      },
                      "id": 101981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRulesEngineOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24070,
                      "src": "3541:49:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 101982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3541:51:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3524:68:388"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 101989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101984,
                      "name": "engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101974,
                      "src": "3606:6:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3624:1:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3616:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3616:7:388",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3616:10:388",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3606:20:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102012,
                    "nodeType": "Block",
                    "src": "3702:75:388",
                    "statements": [
                      {
                        "expression": {
                          "id": 102010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 102000,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101970,
                            "src": "3716:5:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 102008,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101964,
                                "src": "3760:5:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 102004,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3744:4:388",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$102609",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_EvolvingNFTLogic_$102609",
                                          "typeString": "contract EvolvingNFTLogic"
                                        }
                                      ],
                                      "id": 102003,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3736:7:388",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 102002,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3736:7:388",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 102005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3736:13:388",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 102001,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24395,
                                  "src": "3724:11:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$24395_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 102006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3724:26:388",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$24395",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 102007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24000,
                              "src": "3724:35:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 102009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3724:42:388",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3716:50:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102011,
                        "nodeType": "ExpressionStatement",
                        "src": "3716:50:388"
                      }
                    ]
                  },
                  "id": 102013,
                  "nodeType": "IfStatement",
                  "src": "3602:175:388",
                  "trueBody": {
                    "id": 101999,
                    "nodeType": "Block",
                    "src": "3628:68:388",
                    "statements": [
                      {
                        "expression": {
                          "id": 101997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101990,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101970,
                            "src": "3642:5:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 101995,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101964,
                                "src": "3679:5:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 101992,
                                    "name": "engine",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 101974,
                                    "src": "3662:6:388",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 101991,
                                  "name": "RulesEngine",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24395,
                                  "src": "3650:11:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_RulesEngine_$24395_$",
                                    "typeString": "type(contract RulesEngine)"
                                  }
                                },
                                "id": 101993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3650:19:388",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RulesEngine_$24395",
                                  "typeString": "contract RulesEngine"
                                }
                              },
                              "id": 101994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getScore",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24000,
                              "src": "3650:28:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 101996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3650:35:388",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3642:43:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 101998,
                        "nodeType": "ExpressionStatement",
                        "src": "3642:43:388"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    102018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102018,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "3886:3:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102066,
                      "src": "3869:20:388",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102016,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3869:7:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 102017,
                        "nodeType": "ArrayTypeName",
                        "src": "3869:9:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102024,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 102019,
                            "name": "_sharedMetadataBatchStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24636,
                            "src": "3892:27:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$24415_storage_ptr_$",
                              "typeString": "function () pure returns (struct SharedMetadataBatchStorage.Data storage pointer)"
                            }
                          },
                          "id": 102020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3892:29:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$24415_storage_ptr",
                            "typeString": "struct SharedMetadataBatchStorage.Data storage pointer"
                          }
                        },
                        "id": 102021,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24409,
                        "src": "3892:33:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$79143_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      "id": 102022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79246,
                      "src": "3892:40:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$79143_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$79143_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
                      }
                    },
                    "id": 102023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:65:388"
                },
                {
                  "assignments": [
                    102026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102026,
                      "mutability": "mutable",
                      "name": "targetId",
                      "nameLocation": "3952:8:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102066,
                      "src": "3944:16:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 102025,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3944:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102028,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 102027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3963:1:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3944:20:388"
                },
                {
                  "body": {
                    "id": 102059,
                    "nodeType": "Block",
                    "src": "4019:148:388",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 102048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 102043,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102018,
                                  "src": "4045:3:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 102045,
                                "indexExpression": {
                                  "id": 102044,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102030,
                                  "src": "4049:1:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4045:6:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 102042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4037:7:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 102041,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4037:7:388",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4037:15:388",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 102047,
                            "name": "score",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101970,
                            "src": "4056:5:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4037:24:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 102057,
                          "nodeType": "Block",
                          "src": "4119:38:388",
                          "statements": [
                            {
                              "id": 102056,
                              "nodeType": "Break",
                              "src": "4137:5:388"
                            }
                          ]
                        },
                        "id": 102058,
                        "nodeType": "IfStatement",
                        "src": "4033:124:388",
                        "trueBody": {
                          "id": 102055,
                          "nodeType": "Block",
                          "src": "4063:50:388",
                          "statements": [
                            {
                              "expression": {
                                "id": 102053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 102049,
                                  "name": "targetId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102026,
                                  "src": "4081:8:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 102050,
                                    "name": "ids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102018,
                                    "src": "4092:3:388",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 102052,
                                  "indexExpression": {
                                    "id": 102051,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102030,
                                    "src": "4096:1:388",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4092:6:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4081:17:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 102054,
                              "nodeType": "ExpressionStatement",
                              "src": "4081:17:388"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102033,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102030,
                      "src": "3995:1:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 102034,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102018,
                        "src": "3999:3:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 102035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3999:10:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3995:14:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102060,
                  "initializationExpression": {
                    "assignments": [
                      102030
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 102030,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3988:1:388",
                        "nodeType": "VariableDeclaration",
                        "scope": 102060,
                        "src": "3980:9:388",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3980:7:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 102032,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 102031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3992:1:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3980:13:388"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 102039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 102037,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102030,
                        "src": "4011:1:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 102038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4016:1:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4011:6:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102040,
                    "nodeType": "ExpressionStatement",
                    "src": "4011:6:388"
                  },
                  "nodeType": "ForStatement",
                  "src": "3975:192:388"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102062,
                        "name": "targetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102026,
                        "src": "4209:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 102063,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101945,
                        "src": "4219:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102061,
                      "name": "_getURIFromSharedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24622,
                      "src": "4183:25:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes32,uint256) view returns (string memory)"
                      }
                    },
                    "id": 102064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:45:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 101952,
                  "id": 102065,
                  "nodeType": "Return",
                  "src": "4176:52:388"
                }
              ]
            },
            "baseFunctions": [
              32323,
              34216
            ],
            "documentation": {
              "id": 101943,
              "nodeType": "StructuredDocumentation",
              "src": "3126:45:388",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3185:8:388",
            "overrides": {
              "id": 101949,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101947,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "3273:18:388"
                },
                {
                  "id": 101948,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "3293:19:388"
                }
              ],
              "src": "3264:49:388"
            },
            "parameters": {
              "id": 101946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101945,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3202:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102067,
                  "src": "3194:16:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3193:18:388"
            },
            "returnParameters": {
              "id": 101952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101951,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102067,
                  "src": "3331:13:388",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101950,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:6:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3330:15:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 102092,
            "nodeType": "FunctionDefinition",
            "src": "4266:301:388",
            "nodes": [],
            "body": {
              "id": 102091,
              "nodeType": "Block",
              "src": "4451:116:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 102089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 102081,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102070,
                          "src": "4492:11:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 102079,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4468:5:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                            "typeString": "type(contract super EvolvingNFTLogic)"
                          }
                        },
                        "id": 102080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32252,
                        "src": "4468:23:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 102082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4468:36:388",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 102088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102084,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151718,
                              "src": "4513:19:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 102083,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4508:4:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 102085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4508:25:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151718",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 102086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4508:37:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 102087,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102070,
                        "src": "4549:11:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4508:52:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4468:92:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102078,
                  "id": 102090,
                  "nodeType": "Return",
                  "src": "4461:99:388"
                }
              ]
            },
            "baseFunctions": [
              31145,
              32252,
              34087
            ],
            "documentation": {
              "id": 102068,
              "nodeType": "StructuredDocumentation",
              "src": "4241:20:388",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4275:17:388",
            "overrides": {
              "id": 102075,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102072,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "4374:18:388"
                },
                {
                  "id": 102073,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "4394:19:388"
                },
                {
                  "id": 102074,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "4415:7:388"
                }
              ],
              "src": "4365:58:388"
            },
            "parameters": {
              "id": 102071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102070,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4300:11:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102092,
                  "src": "4293:18:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 102069,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:6:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4292:20:388"
            },
            "returnParameters": {
              "id": 102078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102077,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102092,
                  "src": "4441:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4440:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 102102,
            "nodeType": "FunctionDefinition",
            "src": "4623:91:388",
            "nodes": [],
            "body": {
              "id": 102101,
              "nodeType": "Block",
              "src": "4689:25:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 102099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4706:1:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 102098,
                  "id": 102100,
                  "nodeType": "Return",
                  "src": "4699:8:388"
                }
              ]
            },
            "baseFunctions": [
              32030
            ],
            "documentation": {
              "id": 102093,
              "nodeType": "StructuredDocumentation",
              "src": "4573:45:388",
              "text": "@dev The start token ID for the contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "4632:13:388",
            "overrides": {
              "id": 102095,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4662:8:388"
            },
            "parameters": {
              "id": 102094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4645:2:388"
            },
            "returnParameters": {
              "id": 102098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102102,
                  "src": "4680:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4679:9:388"
            },
            "scope": 102609,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102111,
            "nodeType": "FunctionDefinition",
            "src": "4720:93:388",
            "nodes": [],
            "body": {
              "id": 102110,
              "nodeType": "Block",
              "src": "4774:39:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 102107,
                      "name": "_startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102102
                      ],
                      "referencedDeclaration": 102102,
                      "src": "4791:13:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 102108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4791:15:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102106,
                  "id": 102109,
                  "nodeType": "Return",
                  "src": "4784:22:388"
                }
              ]
            },
            "functionSelector": "e6798baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTokenId",
            "nameLocation": "4729:12:388",
            "parameters": {
              "id": 102103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4741:2:388"
            },
            "returnParameters": {
              "id": 102106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102111,
                  "src": "4765:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4764:9:388"
            },
            "scope": 102609,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102197,
            "nodeType": "FunctionDefinition",
            "src": "5086:840:388",
            "nodes": [],
            "body": {
              "id": 102196,
              "nodeType": "Block",
              "src": "5272:654:388",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102124,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102120,
                      "src": "5286:14:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 102125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5304:1:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5286:19:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102137,
                  "nodeType": "IfStatement",
                  "src": "5282:103:388",
                  "trueBody": {
                    "id": 102136,
                    "nodeType": "Block",
                    "src": "5307:78:388",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 102131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 102128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5329:3:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 102129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5329:9:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 102130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5342:1:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5329:14:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 102132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5345:8:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 102127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5321:7:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 102133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5321:33:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102134,
                        "nodeType": "ExpressionStatement",
                        "src": "5321:33:388"
                      },
                      {
                        "functionReturnParameters": 102123,
                        "id": 102135,
                        "nodeType": "Return",
                        "src": "5368:7:388"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    102139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102139,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5403:10:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102196,
                      "src": "5395:18:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5395:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102143,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102140,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102116,
                      "src": "5416:16:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 102141,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102120,
                      "src": "5435:14:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5416:33:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5395:54:388"
                },
                {
                  "assignments": [
                    102145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102145,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "5465:13:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102196,
                      "src": "5460:18:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 102144,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5460:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102146,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5460:18:388"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 102150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 102147,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102118,
                      "src": "5492:9:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 102148,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "5505:19:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 102149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "5505:32:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5492:45:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 102166,
                    "nodeType": "Block",
                    "src": "5609:55:388",
                    "statements": [
                      {
                        "expression": {
                          "id": 102164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 102159,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102145,
                            "src": "5623:13:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102160,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5639:3:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5639:9:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 102162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5652:1:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5639:14:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5623:30:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102165,
                        "nodeType": "ExpressionStatement",
                        "src": "5623:30:388"
                      }
                    ]
                  },
                  "id": 102167,
                  "nodeType": "IfStatement",
                  "src": "5488:176:388",
                  "trueBody": {
                    "id": 102158,
                    "nodeType": "Block",
                    "src": "5539:64:388",
                    "statements": [
                      {
                        "expression": {
                          "id": 102156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 102151,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102145,
                            "src": "5553:13:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102152,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5569:3:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5569:9:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 102154,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102139,
                              "src": "5582:10:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5569:23:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5553:39:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102157,
                        "nodeType": "ExpressionStatement",
                        "src": "5553:39:388"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102169,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102145,
                        "src": "5681:13:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 102170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 102168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5673:7:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 102171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5673:28:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102172,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:28:388"
                },
                {
                  "assignments": [
                    102174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102174,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5720:13:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102196,
                      "src": "5712:21:388",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 102173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5712:7:388",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102185,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 102180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 102175,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102114,
                        "src": "5736:21:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 102178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5769:1:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 102177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5761:7:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5761:7:388",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5761:10:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5736:35:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 102183,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102114,
                      "src": "5799:21:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 102184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5736:84:388",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102181,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23441,
                        "src": "5774:20:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 102182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5774:22:388",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5712:108:388"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102189,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102118,
                        "src": "5868:9:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102190,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "5879:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5879:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102192,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102174,
                        "src": "5893:13:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102193,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102139,
                        "src": "5908:10:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102186,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "5831:19:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 102188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "5831:36:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 102194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5831:88:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102195,
                  "nodeType": "ExpressionStatement",
                  "src": "5831:88:388"
                }
              ]
            },
            "baseFunctions": [
              21326
            ],
            "documentation": {
              "id": 102112,
              "nodeType": "StructuredDocumentation",
              "src": "5002:79:388",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5095:20:388",
            "overrides": {
              "id": 102122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5263:8:388"
            },
            "parameters": {
              "id": 102121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102114,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5133:21:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102197,
                  "src": "5125:29:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5125:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102116,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5172:16:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102197,
                  "src": "5164:24:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102118,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5206:9:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102197,
                  "src": "5198:17:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5198:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102120,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5233:14:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102197,
                  "src": "5225:22:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:138:388"
            },
            "returnParameters": {
              "id": 102123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5272:0:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102219,
            "nodeType": "FunctionDefinition",
            "src": "5979:248:388",
            "nodes": [],
            "body": {
              "id": 102218,
              "nodeType": "Block",
              "src": "6133:94:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102208,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102206,
                      "src": "6143:13:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 102209,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32042,
                        "src": "6159:12:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 102210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6159:14:388",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6143:30:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102212,
                  "nodeType": "ExpressionStatement",
                  "src": "6143:30:388"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102214,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102200,
                        "src": "6193:3:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102215,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102202,
                        "src": "6198:21:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102213,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33452,
                        33467
                      ],
                      "referencedDeclaration": 33467,
                      "src": "6183:9:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 102216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6183:37:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102217,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:37:388"
                }
              ]
            },
            "baseFunctions": [
              21336
            ],
            "documentation": {
              "id": 102198,
              "nodeType": "StructuredDocumentation",
              "src": "5932:42:388",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "5988:22:388",
            "overrides": {
              "id": 102204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6080:8:388"
            },
            "parameters": {
              "id": 102203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102200,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6019:3:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102219,
                  "src": "6011:11:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6011:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102202,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6032:21:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102219,
                  "src": "6024:29:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6024:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6010:44:388"
            },
            "returnParameters": {
              "id": 102207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102206,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "6114:13:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102219,
                  "src": "6106:21:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:23:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102233,
            "nodeType": "FunctionDefinition",
            "src": "6327:143:388",
            "nodes": [],
            "body": {
              "id": 102232,
              "nodeType": "Block",
              "src": "6404:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102227,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "6430:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102228,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "6450:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6450:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102226,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "6421:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102225,
                  "id": 102231,
                  "nodeType": "Return",
                  "src": "6414:49:388"
                }
              ]
            },
            "baseFunctions": [
              23494
            ],
            "documentation": {
              "id": 102220,
              "nodeType": "StructuredDocumentation",
              "src": "6233:89:388",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "6336:27:388",
            "overrides": {
              "id": 102222,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6380:8:388"
            },
            "parameters": {
              "id": 102221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6363:2:388"
            },
            "returnParameters": {
              "id": 102225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102224,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102233,
                  "src": "6398:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6398:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6397:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102247,
            "nodeType": "FunctionDefinition",
            "src": "6553:128:388",
            "nodes": [],
            "body": {
              "id": 102246,
              "nodeType": "Block",
              "src": "6615:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102241,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "6641:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102242,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "6661:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6661:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102240,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "6632:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6632:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102239,
                  "id": 102245,
                  "nodeType": "Return",
                  "src": "6625:49:388"
                }
              ]
            },
            "baseFunctions": [
              22406
            ],
            "documentation": {
              "id": 102234,
              "nodeType": "StructuredDocumentation",
              "src": "6476:72:388",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6562:12:388",
            "overrides": {
              "id": 102236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6591:8:388"
            },
            "parameters": {
              "id": 102235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6574:2:388"
            },
            "returnParameters": {
              "id": 102239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102247,
                  "src": "6609:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6609:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6608:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102261,
            "nodeType": "FunctionDefinition",
            "src": "6771:134:388",
            "nodes": [],
            "body": {
              "id": 102260,
              "nodeType": "Block",
              "src": "6839:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102255,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "6865:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102256,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "6885:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6885:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102254,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "6856:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6856:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102253,
                  "id": 102259,
                  "nodeType": "Return",
                  "src": "6849:49:388"
                }
              ]
            },
            "baseFunctions": [
              23882
            ],
            "documentation": {
              "id": 102248,
              "nodeType": "StructuredDocumentation",
              "src": "6687:79:388",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "6780:18:388",
            "overrides": {
              "id": 102250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6815:8:388"
            },
            "parameters": {
              "id": 102249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6798:2:388"
            },
            "returnParameters": {
              "id": 102253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102261,
                  "src": "6833:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6832:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102275,
            "nodeType": "FunctionDefinition",
            "src": "7000:134:388",
            "nodes": [],
            "body": {
              "id": 102274,
              "nodeType": "Block",
              "src": "7068:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102269,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "7094:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102270,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "7114:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7114:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102268,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "7085:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7085:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102267,
                  "id": 102273,
                  "nodeType": "Return",
                  "src": "7078:49:388"
                }
              ]
            },
            "baseFunctions": [
              20316
            ],
            "documentation": {
              "id": 102262,
              "nodeType": "StructuredDocumentation",
              "src": "6911:84:388",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7009:18:388",
            "overrides": {
              "id": 102264,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7044:8:388"
            },
            "parameters": {
              "id": 102263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7027:2:388"
            },
            "returnParameters": {
              "id": 102267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102275,
                  "src": "7062:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7062:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7061:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102289,
            "nodeType": "FunctionDefinition",
            "src": "7229:138:388",
            "nodes": [],
            "body": {
              "id": 102288,
              "nodeType": "Block",
              "src": "7301:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102283,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "7327:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102284,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "7347:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7347:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102282,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "7318:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7318:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102281,
                  "id": 102287,
                  "nodeType": "Return",
                  "src": "7311:49:388"
                }
              ]
            },
            "baseFunctions": [
              21342
            ],
            "documentation": {
              "id": 102276,
              "nodeType": "StructuredDocumentation",
              "src": "7140:84:388",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7238:22:388",
            "overrides": {
              "id": 102278,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7277:8:388"
            },
            "parameters": {
              "id": 102277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7260:2:388"
            },
            "returnParameters": {
              "id": 102281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102280,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102289,
                  "src": "7295:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7295:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7294:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102303,
            "nodeType": "FunctionDefinition",
            "src": "7461:138:388",
            "nodes": [],
            "body": {
              "id": 102302,
              "nodeType": "Block",
              "src": "7540:59:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102297,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101938,
                        "src": "7566:11:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102298,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "7579:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7579:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102296,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "7557:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7557:35:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102295,
                  "id": 102301,
                  "nodeType": "Return",
                  "src": "7550:42:388"
                }
              ]
            },
            "baseFunctions": [
              24642
            ],
            "documentation": {
              "id": 102290,
              "nodeType": "StructuredDocumentation",
              "src": "7373:83:388",
              "text": "@dev Returns whether shared metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetSharedMetadata",
            "nameLocation": "7470:21:388",
            "overrides": {
              "id": 102292,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7516:8:388"
            },
            "parameters": {
              "id": 102291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7491:2:388"
            },
            "returnParameters": {
              "id": 102295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102303,
                  "src": "7534:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102293,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7534:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7533:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102317,
            "nodeType": "FunctionDefinition",
            "src": "7698:145:388",
            "nodes": [],
            "body": {
              "id": 102316,
              "nodeType": "Block",
              "src": "7777:66:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102311,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101926,
                        "src": "7803:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102312,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            102597
                          ],
                          "referencedDeclaration": 102597,
                          "src": "7823:10:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 102313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7823:12:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 102310,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102344,
                      "src": "7794:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 102314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7794:42:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102309,
                  "id": 102315,
                  "nodeType": "Return",
                  "src": "7787:49:388"
                }
              ]
            },
            "baseFunctions": [
              37993
            ],
            "documentation": {
              "id": 102304,
              "nodeType": "StructuredDocumentation",
              "src": "7605:88:388",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "7707:26:388",
            "overrides": {
              "id": 102306,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7753:8:388"
            },
            "parameters": {
              "id": 102305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7733:2:388"
            },
            "returnParameters": {
              "id": 102309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102317,
                  "src": "7771:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7771:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7770:6:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102344,
            "nodeType": "FunctionDefinition",
            "src": "7911:222:388",
            "nodes": [],
            "body": {
              "id": 102343,
              "nodeType": "Block",
              "src": "7991:142:388",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102331,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "8033:4:388",
                      "nodeType": "VariableDeclaration",
                      "scope": 102343,
                      "src": "8001:36:388",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 102330,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102329,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22430,
                          "src": "8001:23:388"
                        },
                        "referencedDeclaration": 22430,
                        "src": "8001:23:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102335,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 102332,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22443,
                        "src": "8040:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$22443_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 102333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22442,
                      "src": "8040:37:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$22430_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 102334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8040:39:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8001:78:388"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 102336,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102331,
                          "src": "8096:4:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 102337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22424,
                        "src": "8096:13:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 102339,
                      "indexExpression": {
                        "id": 102338,
                        "name": "_role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102320,
                        "src": "8110:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8096:20:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 102341,
                    "indexExpression": {
                      "id": 102340,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102322,
                      "src": "8117:8:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8096:30:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102326,
                  "id": 102342,
                  "nodeType": "Return",
                  "src": "8089:37:388"
                }
              ]
            },
            "documentation": {
              "id": 102318,
              "nodeType": "StructuredDocumentation",
              "src": "7849:57:388",
              "text": "@dev Checks whether an account has a particular role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "7920:8:388",
            "parameters": {
              "id": 102323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102320,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "7937:5:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102344,
                  "src": "7929:13:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7929:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102322,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "7952:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102344,
                  "src": "7944:16:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7944:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7928:33:388"
            },
            "returnParameters": {
              "id": 102326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102344,
                  "src": "7985:4:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7985:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7984:6:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 102358,
            "nodeType": "FunctionDefinition",
            "src": "8399:145:388",
            "nodes": [],
            "body": {
              "id": 102357,
              "nodeType": "Block",
              "src": "8454:90:388",
              "nodes": [],
              "statements": [
                {
                  "id": 102356,
                  "nodeType": "UncheckedBlock",
                  "src": "8464:74:388",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 102350,
                            "name": "_nextTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32042,
                            "src": "8495:12:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 102351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8495:14:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 102352,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              102102
                            ],
                            "referencedDeclaration": 102102,
                            "src": "8512:13:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 102353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8512:15:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8495:32:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 102349,
                      "id": 102355,
                      "nodeType": "Return",
                      "src": "8488:39:388"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 102345,
              "nodeType": "StructuredDocumentation",
              "src": "8317:77:388",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "8408:11:388",
            "parameters": {
              "id": 102346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8419:2:388"
            },
            "returnParameters": {
              "id": 102349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102358,
                  "src": "8445:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8445:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8444:9:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102368,
            "nodeType": "FunctionDefinition",
            "src": "8626:99:388",
            "nodes": [],
            "body": {
              "id": 102367,
              "nodeType": "Block",
              "src": "8687:38:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 102364,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32042,
                      "src": "8704:12:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 102365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8704:14:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102363,
                  "id": 102366,
                  "nodeType": "Return",
                  "src": "8697:21:388"
                }
              ]
            },
            "documentation": {
              "id": 102359,
              "nodeType": "StructuredDocumentation",
              "src": "8550:71:388",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8635:17:388",
            "parameters": {
              "id": 102360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8652:2:388"
            },
            "returnParameters": {
              "id": 102363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102368,
                  "src": "8678:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8678:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8677:9:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102378,
            "nodeType": "FunctionDefinition",
            "src": "8794:100:388",
            "nodes": [],
            "body": {
              "id": 102377,
              "nodeType": "Block",
              "src": "8856:38:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 102374,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32042,
                      "src": "8873:12:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 102375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8873:14:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102373,
                  "id": 102376,
                  "nodeType": "Return",
                  "src": "8866:21:388"
                }
              ]
            },
            "documentation": {
              "id": 102369,
              "nodeType": "StructuredDocumentation",
              "src": "8731:58:388",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "8803:18:388",
            "parameters": {
              "id": 102370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8821:2:388"
            },
            "returnParameters": {
              "id": 102373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102378,
                  "src": "8847:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8847:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8846:9:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 102390,
            "nodeType": "FunctionDefinition",
            "src": "8950:184:388",
            "nodes": [],
            "body": {
              "id": 102389,
              "nodeType": "Block",
              "src": "8998:136:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102385,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102381,
                        "src": "9113:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 102386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9122:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 102384,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33548,
                        33724
                      ],
                      "referencedDeclaration": 33724,
                      "src": "9107:5:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 102387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:20:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102388,
                  "nodeType": "ExpressionStatement",
                  "src": "9107:20:388"
                }
              ]
            },
            "documentation": {
              "id": 102379,
              "nodeType": "StructuredDocumentation",
              "src": "8900:45:388",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "8959:4:388",
            "parameters": {
              "id": 102382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102381,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8972:7:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102390,
                  "src": "8964:15:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8964:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8963:17:388"
            },
            "returnParameters": {
              "id": 102383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8998:0:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 102454,
            "nodeType": "FunctionDefinition",
            "src": "9188:569:388",
            "nodes": [],
            "body": {
              "id": 102453,
              "nodeType": "Block",
              "src": "9350:407:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102406,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102393,
                        "src": "9388:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102407,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102395,
                        "src": "9394:2:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102408,
                        "name": "startTokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102397,
                        "src": "9398:13:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102409,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102399,
                        "src": "9413:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102403,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9360:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33042,
                      "src": "9360:27:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 102410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9360:62:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102411,
                  "nodeType": "ExpressionStatement",
                  "src": "9360:62:388"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 102433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 102426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 102419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9534:36:388",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 102413,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101932,
                              "src": "9544:13:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 102416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9567:1:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 102415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9559:7:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 102414,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9559:7:388",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 102417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9559:10:388",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 102412,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102344,
                            "src": "9535:8:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 102418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9535:35:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 102425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102420,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102393,
                          "src": "9574:4:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 102423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9590:1:388",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 102422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9582:7:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102421,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9582:7:388",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9582:10:388",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9574:18:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9534:58:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 102432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 102427,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102395,
                        "src": "9596:2:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 102430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9610:1:388",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 102429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9602:7:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102428,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9602:7:388",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9602:10:388",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9596:16:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9534:78:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 102452,
                  "nodeType": "IfStatement",
                  "src": "9530:221:388",
                  "trueBody": {
                    "id": 102451,
                    "nodeType": "Block",
                    "src": "9614:137:388",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 102444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9632:30:388",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 102435,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101932,
                                  "src": "9642:13:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 102436,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102393,
                                  "src": "9657:4:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 102434,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102344,
                                "src": "9633:8:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 102437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9633:29:388",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 102443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9666:28:388",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 102440,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101932,
                                  "src": "9676:13:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 102441,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102395,
                                  "src": "9691:2:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 102439,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102344,
                                "src": "9667:8:388",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 102442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9667:27:388",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9632:62:388",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 102450,
                        "nodeType": "IfStatement",
                        "src": "9628:113:388",
                        "trueBody": {
                          "id": 102449,
                          "nodeType": "Block",
                          "src": "9696:45:388",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "2154",
                                    "id": 102446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9721:4:388",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    },
                                    "value": "!T"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7db3b04d902e8ae9e0c6f3e0ba4170cc392ab92143dfd3399cb577e88ea77ce4",
                                      "typeString": "literal_string \"!T\""
                                    }
                                  ],
                                  "id": 102445,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "9714:6:388",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 102447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9714:12:388",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 102448,
                              "nodeType": "ExpressionStatement",
                              "src": "9714:12:388"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              33042
            ],
            "documentation": {
              "id": 102391,
              "nodeType": "StructuredDocumentation",
              "src": "9140:43:388",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9197:21:388",
            "overrides": {
              "id": 102401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9341:8:388"
            },
            "parameters": {
              "id": 102400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102393,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9236:4:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102454,
                  "src": "9228:12:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9228:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102395,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9258:2:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102454,
                  "src": "9250:10:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9250:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102397,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "9278:13:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102454,
                  "src": "9270:21:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9270:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102399,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9309:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102454,
                  "src": "9301:16:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9301:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9218:105:388"
            },
            "returnParameters": {
              "id": 102402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9350:0:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102476,
            "nodeType": "FunctionDefinition",
            "src": "9808:243:388",
            "nodes": [],
            "body": {
              "id": 102475,
              "nodeType": "Block",
              "src": "9991:60:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102471,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102457,
                        "src": "10025:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102472,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102459,
                        "src": "10035:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 102468,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10001:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32669,
                      "src": "10001:23:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 102473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10001:43:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102474,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:43:388"
                }
              ]
            },
            "baseFunctions": [
              32669,
              34178
            ],
            "documentation": {
              "id": 102455,
              "nodeType": "StructuredDocumentation",
              "src": "9763:40:388",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102465,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102457,
                    "src": "9977:8:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102464,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38255,
                  "src": "9949:27:388"
                },
                "nodeType": "ModifierInvocation",
                "src": "9949:37:388"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "9817:17:388",
            "overrides": {
              "id": 102463,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102461,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "9900:18:388"
                },
                {
                  "id": 102462,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "9920:19:388"
                }
              ],
              "src": "9891:49:388"
            },
            "parameters": {
              "id": 102460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102457,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9843:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102476,
                  "src": "9835:16:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9835:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102459,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "9858:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102476,
                  "src": "9853:13:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9853:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9834:33:388"
            },
            "returnParameters": {
              "id": 102467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9991:0:388"
            },
            "scope": 102609,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102498,
            "nodeType": "FunctionDefinition",
            "src": "10092:240:388",
            "nodes": [],
            "body": {
              "id": 102497,
              "nodeType": "Block",
              "src": "10283:49:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102493,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102479,
                        "src": "10307:8:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102494,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102481,
                        "src": "10317:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102490,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10293:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32611,
                      "src": "10293:13:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 102495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:32:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102496,
                  "nodeType": "ExpressionStatement",
                  "src": "10293:32:388"
                }
              ]
            },
            "baseFunctions": [
              32611,
              34170
            ],
            "documentation": {
              "id": 102477,
              "nodeType": "StructuredDocumentation",
              "src": "10057:30:388",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102487,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102479,
                    "src": "10269:8:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102486,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38255,
                  "src": "10241:27:388"
                },
                "nodeType": "ModifierInvocation",
                "src": "10241:37:388"
              }
            ],
            "name": "approve",
            "nameLocation": "10101:7:388",
            "overrides": {
              "id": 102485,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102483,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10192:18:388"
                },
                {
                  "id": 102484,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10212:19:388"
                }
              ],
              "src": "10183:49:388"
            },
            "parameters": {
              "id": 102482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102479,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10117:8:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102498,
                  "src": "10109:16:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10109:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102481,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10135:7:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102498,
                  "src": "10127:15:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10127:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10108:35:388"
            },
            "returnParameters": {
              "id": 102489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10283:0:388"
            },
            "scope": 102609,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102523,
            "nodeType": "FunctionDefinition",
            "src": "10379:240:388",
            "nodes": [],
            "body": {
              "id": 102522,
              "nodeType": "Block",
              "src": "10565:54:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102517,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102501,
                        "src": "10594:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102518,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102503,
                        "src": "10600:2:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102519,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102505,
                        "src": "10604:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102514,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10575:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32970,
                      "src": "10575:18:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 102520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10575:37:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102521,
                  "nodeType": "ExpressionStatement",
                  "src": "10575:37:388"
                }
              ]
            },
            "baseFunctions": [
              32970,
              34162
            ],
            "documentation": {
              "id": 102499,
              "nodeType": "StructuredDocumentation",
              "src": "10338:36:388",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102511,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102501,
                    "src": "10559:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102510,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "10539:19:388"
                },
                "nodeType": "ModifierInvocation",
                "src": "10539:25:388"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "10388:12:388",
            "overrides": {
              "id": 102509,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102507,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10498:18:388"
                },
                {
                  "id": 102508,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10518:19:388"
                }
              ],
              "src": "10489:49:388"
            },
            "parameters": {
              "id": 102506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102501,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10418:4:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102523,
                  "src": "10410:12:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10410:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102503,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10440:2:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102523,
                  "src": "10432:10:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10432:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102505,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10460:7:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102523,
                  "src": "10452:15:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10452:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10400:73:388"
            },
            "returnParameters": {
              "id": 102513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10565:0:388"
            },
            "scope": 102609,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102548,
            "nodeType": "FunctionDefinition",
            "src": "10670:248:388",
            "nodes": [],
            "body": {
              "id": 102547,
              "nodeType": "Block",
              "src": "10860:58:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102542,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102526,
                        "src": "10893:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102543,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102528,
                        "src": "10899:2:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102544,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102530,
                        "src": "10903:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102539,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10870:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32989,
                      "src": "10870:22:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 102545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10870:41:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102546,
                  "nodeType": "ExpressionStatement",
                  "src": "10870:41:388"
                }
              ]
            },
            "baseFunctions": [
              32989,
              34152
            ],
            "documentation": {
              "id": 102524,
              "nodeType": "StructuredDocumentation",
              "src": "10625:40:388",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102536,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102526,
                    "src": "10854:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102535,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "10834:19:388"
                },
                "nodeType": "ModifierInvocation",
                "src": "10834:25:388"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10679:16:388",
            "overrides": {
              "id": 102534,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102532,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "10793:18:388"
                },
                {
                  "id": 102533,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "10813:19:388"
                }
              ],
              "src": "10784:49:388"
            },
            "parameters": {
              "id": 102531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102526,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10713:4:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102548,
                  "src": "10705:12:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10705:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102528,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10735:2:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102548,
                  "src": "10727:10:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10727:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102530,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10755:7:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102548,
                  "src": "10747:15:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10747:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10695:73:388"
            },
            "returnParameters": {
              "id": 102538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10860:0:388"
            },
            "scope": 102609,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102576,
            "nodeType": "FunctionDefinition",
            "src": "10969:281:388",
            "nodes": [],
            "body": {
              "id": 102575,
              "nodeType": "Block",
              "src": "11186:64:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102569,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102551,
                        "src": "11219:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102570,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102553,
                        "src": "11225:2:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102571,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102555,
                        "src": "11229:7:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102572,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102557,
                        "src": "11238:4:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102566,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11196:5:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EvolvingNFTLogic_$102609_$",
                          "typeString": "type(contract super EvolvingNFTLogic)"
                        }
                      },
                      "id": 102568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33029,
                      "src": "11196:22:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 102573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11196:47:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102574,
                  "nodeType": "ExpressionStatement",
                  "src": "11196:47:388"
                }
              ]
            },
            "baseFunctions": [
              33029,
              34142
            ],
            "documentation": {
              "id": 102549,
              "nodeType": "StructuredDocumentation",
              "src": "10924:40:388",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 102563,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102551,
                    "src": "11180:4:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102562,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "11160:19:388"
                },
                "nodeType": "ModifierInvocation",
                "src": "11160:25:388"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "10978:16:388",
            "overrides": {
              "id": 102561,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 102559,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33852,
                  "src": "11119:18:388"
                },
                {
                  "id": 102560,
                  "name": "IERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34228,
                  "src": "11139:19:388"
                }
              ],
              "src": "11110:49:388"
            },
            "parameters": {
              "id": 102558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102551,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11012:4:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102576,
                  "src": "11004:12:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11004:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102553,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11034:2:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102576,
                  "src": "11026:10:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11026:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102555,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11054:7:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102576,
                  "src": "11046:15:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11046:7:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102557,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11084:4:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102576,
                  "src": "11071:17:388",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 102556,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11071:5:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10994:100:388"
            },
            "returnParameters": {
              "id": 102565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11186:0:388"
            },
            "scope": 102609,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102586,
            "nodeType": "FunctionDefinition",
            "src": "11256:111:388",
            "nodes": [],
            "body": {
              "id": 102585,
              "nodeType": "Block",
              "src": "11331:36:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 102582,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        102597
                      ],
                      "referencedDeclaration": 102597,
                      "src": "11348:10:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 102583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11348:12:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 102581,
                  "id": 102584,
                  "nodeType": "Return",
                  "src": "11341:19:388"
                }
              ]
            },
            "baseFunctions": [
              21278
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "11265:14:388",
            "overrides": {
              "id": 102578,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11304:8:388"
            },
            "parameters": {
              "id": 102577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11279:2:388"
            },
            "returnParameters": {
              "id": 102581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102586,
                  "src": "11322:7:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11322:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11321:9:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102597,
            "nodeType": "FunctionDefinition",
            "src": "11373:140:388",
            "nodes": [],
            "body": {
              "id": 102596,
              "nodeType": "Block",
              "src": "11451:62:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 102592,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "11468:25:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 102593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "11468:36:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 102594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11468:38:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 102591,
                  "id": 102595,
                  "nodeType": "Return",
                  "src": "11461:45:388"
                }
              ]
            },
            "baseFunctions": [
              75733
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "11382:10:388",
            "overrides": {
              "id": 102588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11417:8:388"
            },
            "parameters": {
              "id": 102587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11392:2:388"
            },
            "returnParameters": {
              "id": 102591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102590,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11443:6:388",
                  "nodeType": "VariableDeclaration",
                  "scope": 102597,
                  "src": "11435:14:388",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11435:7:388",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11434:16:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 102608,
            "nodeType": "FunctionDefinition",
            "src": "11519:136:388",
            "nodes": [],
            "body": {
              "id": 102607,
              "nodeType": "Block",
              "src": "11595:60:388",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 102603,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "11612:25:388",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 102604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "11612:34:388",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 102605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11612:36:388",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 102602,
                  "id": 102606,
                  "nodeType": "Return",
                  "src": "11605:43:388"
                }
              ]
            },
            "baseFunctions": [
              75760
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "11528:8:388",
            "overrides": {
              "id": 102599,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11561:8:388"
            },
            "parameters": {
              "id": 102598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11536:2:388"
            },
            "returnParameters": {
              "id": 102602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102608,
                  "src": "11579:14:388",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 102600,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11579:5:388",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11578:16:388"
            },
            "scope": 102609,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 101898,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20317,
              "src": "1868:16:388"
            },
            "id": 101899,
            "nodeType": "InheritanceSpecifier",
            "src": "1868:16:388"
          },
          {
            "baseName": {
              "id": 101900,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23883,
              "src": "1890:7:388"
            },
            "id": 101901,
            "nodeType": "InheritanceSpecifier",
            "src": "1890:7:388"
          },
          {
            "baseName": {
              "id": 101902,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23495,
              "src": "1903:11:388"
            },
            "id": 101903,
            "nodeType": "InheritanceSpecifier",
            "src": "1903:11:388"
          },
          {
            "baseName": {
              "id": 101904,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22407,
              "src": "1920:7:388"
            },
            "id": 101905,
            "nodeType": "InheritanceSpecifier",
            "src": "1920:7:388"
          },
          {
            "baseName": {
              "id": 101906,
              "name": "SharedMetadataBatch",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24643,
              "src": "1933:19:388"
            },
            "id": 101907,
            "nodeType": "InheritanceSpecifier",
            "src": "1933:19:388"
          },
          {
            "baseName": {
              "id": 101908,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21343,
              "src": "1958:4:388"
            },
            "id": 101909,
            "nodeType": "InheritanceSpecifier",
            "src": "1958:4:388"
          },
          {
            "baseName": {
              "id": 101910,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1968:25:388"
            },
            "id": 101911,
            "nodeType": "InheritanceSpecifier",
            "src": "1968:25:388"
          },
          {
            "baseName": {
              "id": 101912,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34803,
              "src": "1999:34:388"
            },
            "id": 101913,
            "nodeType": "InheritanceSpecifier",
            "src": "1999:34:388"
          },
          {
            "baseName": {
              "id": 101914,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31824,
              "src": "2039:27:388"
            },
            "id": 101915,
            "nodeType": "InheritanceSpecifier",
            "src": "2039:27:388"
          }
        ],
        "canonicalName": "EvolvingNFTLogic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          102609,
          31824,
          34022,
          33852,
          34228,
          33955,
          34803,
          38318,
          37994,
          50395,
          75765,
          157714,
          151869,
          21343,
          49815,
          49550,
          49527,
          24643,
          50919,
          22407,
          50418,
          23495,
          50580,
          23883,
          50644,
          31290,
          31146,
          20317,
          49679
        ],
        "name": "EvolvingNFTLogic",
        "nameLocation": "1844:16:388",
        "scope": 102610,
        "usedErrors": [
          33990,
          34028,
          34031,
          34034,
          34037,
          34040,
          34043,
          34046,
          34049,
          34052,
          34055,
          34058,
          34061,
          34064,
          38158
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 388
}