{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantityInAllowlist",
              "type": "uint256"
            }
          ],
          "internalType": "struct IDropSinglePhase1155_V1.AllowlistProof",
          "name": "allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IClaimCondition_V1.ClaimCondition",
          "name": "phase",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)": "27db5f08",
    "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": "32df1279"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase1155_V1.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"phase\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimConditionUpdated(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of the NFT to claim.\",\"receiver\":\"The receiver of the NFT to claim.\",\"tokenId\":\"The tokenId of the NFT to claim.\"}},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"params\":{\"phase\":\"Claim condition to set.\",\"resetClaimEligibility\":\"Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions.\",\"tokenId\":\"The tokenId for which to set the relevant claim condition.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol\":\"IDropSinglePhase1155_V1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xefda04c42de68c62e57e19db6c929679d7fb89fbfaeae98a93278f9b93a7d651\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce3603332ad74f237ae18c7b625a6318ec94dd46eb786232eaf5908d4217fcba\",\"dweb:/ipfs/QmZ5PnDFqCHDXkkmqASuFn6okMup1BJHdsL4DAvs5VuezV\"]},\"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol\":{\"keccak256\":\"0x4c34a8195b4bcefd4e744cbf003670518bfd8cb5f828cbd0a7b61b93bb4f0bfc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bce58ab16132cbb10a28fcff25ba49cdcc027daa21f4d6671a19a2d60db585c\",\"dweb:/ipfs/QmR2cxu8PprBX9vqGrPBJwNCnY4z2yzSLMr8QVFzqdm3ty\"]},\"contracts/lib/TWBitMaps.sol\":{\"keccak256\":\"0x37d6bd1977f04901c1979a3a2652b39e37cbe0c2f112d820d3363ba037f0923f\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://1c442a955a1969fe7be2eca1894521910a11ddd192ccf34eb97a6ec76546f78d\",\"dweb:/ipfs/QmRtpJX4nYds6rWq47BsoTbAeg8kcT51WQ7ecysGo1JpHo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDropSinglePhase1155_V1.AllowlistProof",
              "name": "allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "maxQuantityInAllowlist",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "struct IClaimCondition_V1.ClaimCondition",
              "name": "phase",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)": {
            "params": {
              "allowlistProof": "The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.",
              "currency": "The currency in which to pay for the claim.",
              "data": "Arbitrary bytes data that can be leveraged in the implementation of this interface.",
              "pricePerToken": "The price per token to pay for the claim.",
              "quantity": "The quantity of the NFT to claim.",
              "receiver": "The receiver of the NFT to claim.",
              "tokenId": "The tokenId of the NFT to claim."
            }
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": {
            "params": {
              "phase": "Claim condition to set.",
              "resetClaimEligibility": "Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions.",
              "tokenId": "The tokenId for which to set the relevant claim condition."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)": {
            "notice": "Lets an account claim a given quantity of NFTs."
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)": {
            "notice": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol": "IDropSinglePhase1155_V1"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol": {
        "keccak256": "0xefda04c42de68c62e57e19db6c929679d7fb89fbfaeae98a93278f9b93a7d651",
        "urls": [
          "bzz-raw://ce3603332ad74f237ae18c7b625a6318ec94dd46eb786232eaf5908d4217fcba",
          "dweb:/ipfs/QmZ5PnDFqCHDXkkmqASuFn6okMup1BJHdsL4DAvs5VuezV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol": {
        "keccak256": "0x4c34a8195b4bcefd4e744cbf003670518bfd8cb5f828cbd0a7b61b93bb4f0bfc",
        "urls": [
          "bzz-raw://8bce58ab16132cbb10a28fcff25ba49cdcc027daa21f4d6671a19a2d60db585c",
          "dweb:/ipfs/QmR2cxu8PprBX9vqGrPBJwNCnY4z2yzSLMr8QVFzqdm3ty"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWBitMaps.sol": {
        "keccak256": "0x37d6bd1977f04901c1979a3a2652b39e37cbe0c2f112d820d3363ba037f0923f",
        "urls": [
          "bzz-raw://1c442a955a1969fe7be2eca1894521910a11ddd192ccf34eb97a6ec76546f78d",
          "dweb:/ipfs/QmRtpJX4nYds6rWq47BsoTbAeg8kcT51WQ7ecysGo1JpHo"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol",
    "id": 58018,
    "exportedSymbols": {
      "IClaimCondition_V1": [
        57954
      ],
      "IDropSinglePhase1155_V1": [
        58017
      ],
      "TWBitMaps": [
        65205
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2363:265",
    "nodes": [
      {
        "id": 57956,
        "nodeType": "PragmaDirective",
        "src": "39:23:265",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 57957,
        "nodeType": "ImportDirective",
        "src": "86:34:265",
        "nodes": [],
        "absolutePath": "contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol",
        "file": "./IClaimCondition_V1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58018,
        "sourceUnit": 57955,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58017,
        "nodeType": "ContractDefinition",
        "src": "122:2279:265",
        "nodes": [
          {
            "id": 57965,
            "nodeType": "StructDefinition",
            "src": "184:94:265",
            "nodes": [],
            "canonicalName": "IDropSinglePhase1155_V1.AllowlistProof",
            "members": [
              {
                "constant": false,
                "id": 57962,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "226:5:265",
                "nodeType": "VariableDeclaration",
                "scope": 57965,
                "src": "216:15:265",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 57960,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 57961,
                  "nodeType": "ArrayTypeName",
                  "src": "216:9:265",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57964,
                "mutability": "mutable",
                "name": "maxQuantityInAllowlist",
                "nameLocation": "249:22:265",
                "nodeType": "VariableDeclaration",
                "scope": 57965,
                "src": "241:30:265",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57963,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:265",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AllowlistProof",
            "nameLocation": "191:14:265",
            "scope": 58017,
            "visibility": "public"
          },
          {
            "id": 57976,
            "nodeType": "EventDefinition",
            "src": "342:159:265",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 57966,
              "nodeType": "StructuredDocumentation",
              "src": "284:53:265",
              "text": "@dev Emitted when tokens are claimed via `claim`."
            },
            "name": "TokensClaimed",
            "nameLocation": "348:13:265",
            "parameters": {
              "id": 57975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57968,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "387:7:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57976,
                  "src": "371:23:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:265",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57970,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "420:8:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57976,
                  "src": "404:24:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:265",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57972,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "454:7:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57976,
                  "src": "438:23:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57974,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantityClaimed",
                  "nameLocation": "479:15:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57976,
                  "src": "471:23:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:139:265"
            }
          },
          {
            "id": 57986,
            "nodeType": "EventDefinition",
            "src": "578:102:265",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 57977,
              "nodeType": "StructuredDocumentation",
              "src": "507:66:265",
              "text": "@dev Emitted when the contract's claim conditions are updated."
            },
            "name": "ClaimConditionUpdated",
            "nameLocation": "584:21:265",
            "parameters": {
              "id": 57985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57979,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "622:7:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57986,
                  "src": "606:23:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57982,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "condition",
                  "nameLocation": "646:9:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57986,
                  "src": "631:24:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimCondition_$57953_memory_ptr",
                    "typeString": "struct IClaimCondition_V1.ClaimCondition"
                  },
                  "typeName": {
                    "id": 57981,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57980,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57953,
                      "src": "631:14:265"
                    },
                    "referencedDeclaration": 57953,
                    "src": "631:14:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$57953_storage_ptr",
                      "typeString": "struct IClaimCondition_V1.ClaimCondition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57984,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "resetEligibility",
                  "nameLocation": "662:16:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 57986,
                  "src": "657:21:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57983,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:74:265"
            }
          },
          {
            "id": 58005,
            "nodeType": "FunctionDefinition",
            "src": "1514:247:265",
            "nodes": [],
            "documentation": {
              "id": 57987,
              "nodeType": "StructuredDocumentation",
              "src": "686:823:265",
              "text": "  @notice Lets an account claim a given quantity of NFTs.\n  @param tokenId                        The tokenId of the NFT to claim.\n  @param receiver                       The receiver of the NFT to claim.\n  @param quantity                       The quantity of the NFT to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."
            },
            "functionSelector": "27db5f08",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1523:5:265",
            "parameters": {
              "id": 58003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57989,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1546:8:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1538:16:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:265",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57991,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1572:7:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1564:15:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57993,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1597:8:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1589:16:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57995,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "1623:8:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1615:16:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:265",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57997,
                  "mutability": "mutable",
                  "name": "pricePerToken",
                  "nameLocation": "1649:13:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1641:21:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58000,
                  "mutability": "mutable",
                  "name": "allowlistProof",
                  "nameLocation": "1696:14:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1672:38:265",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$57965_calldata_ptr",
                    "typeString": "struct IDropSinglePhase1155_V1.AllowlistProof"
                  },
                  "typeName": {
                    "id": 57999,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57998,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57965,
                      "src": "1672:14:265"
                    },
                    "referencedDeclaration": 57965,
                    "src": "1672:14:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$57965_storage_ptr",
                      "typeString": "struct IDropSinglePhase1155_V1.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58002,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1733:4:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58005,
                  "src": "1720:17:265",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58001,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:5:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:215:265"
            },
            "returnParameters": {
              "id": 58004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:0:265"
            },
            "scope": 58017,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58016,
            "nodeType": "FunctionDefinition",
            "src": "2256:143:265",
            "nodes": [],
            "documentation": {
              "id": 58006,
              "nodeType": "StructuredDocumentation",
              "src": "1767:484:265",
              "text": "  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phase                    Claim condition to set.\n  @param resetClaimEligibility    Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new\n                                  claim conditions.\n  @param tokenId                  The tokenId for which to set the relevant claim condition."
            },
            "functionSelector": "32df1279",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setClaimConditions",
            "nameLocation": "2265:18:265",
            "parameters": {
              "id": 58014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58008,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2301:7:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58016,
                  "src": "2293:15:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58011,
                  "mutability": "mutable",
                  "name": "phase",
                  "nameLocation": "2342:5:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58016,
                  "src": "2318:29:265",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimCondition_$57953_calldata_ptr",
                    "typeString": "struct IClaimCondition_V1.ClaimCondition"
                  },
                  "typeName": {
                    "id": 58010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58009,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57953,
                      "src": "2318:14:265"
                    },
                    "referencedDeclaration": 57953,
                    "src": "2318:14:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$57953_storage_ptr",
                      "typeString": "struct IClaimCondition_V1.ClaimCondition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58013,
                  "mutability": "mutable",
                  "name": "resetClaimEligibility",
                  "nameLocation": "2362:21:265",
                  "nodeType": "VariableDeclaration",
                  "scope": 58016,
                  "src": "2357:26:265",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58012,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:4:265",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:106:265"
            },
            "returnParameters": {
              "id": 58015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:0:265"
            },
            "scope": 58017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57958,
              "name": "IClaimCondition_V1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57954,
              "src": "159:18:265"
            },
            "id": 57959,
            "nodeType": "InheritanceSpecifier",
            "src": "159:18:265"
          }
        ],
        "canonicalName": "IDropSinglePhase1155_V1",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          58017,
          57954
        ],
        "name": "IDropSinglePhase1155_V1",
        "nameLocation": "132:23:265",
        "scope": 58018,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 265
}