{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entrypoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "name": "AdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizingSigner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetSigner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "permissions",
          "type": "tuple"
        }
      ],
      "name": "SignerPermissionsUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllActiveSigners",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions[]",
          "name": "signers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAdmins",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSigners",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions[]",
          "name": "signers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "getPermissionsForSigner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "startTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTimestamp",
              "type": "uint128"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissions",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "isActiveSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "_userOp",
          "type": "tuple"
        }
      ],
      "name": "isValidSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "setPermissionsForSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "approvedTargets",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "nativeTokenLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "permissionStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "permissionEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reqValidityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAccountPermissions.SignerPermissionRequest",
          "name": "req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verifySignerPermissionRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b506040516200326f3803806200326f833981016040819052620000359162000261565b60408051808201825260078152661058d8dbdd5b9d60ca1b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001128184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c05261012052506200012d925050620001479050565b6001600160a01b03908116610140521661016052620002a0565b60006200015e6200022460201b6200155d1760201c565b805490915060ff808216916101009004168015620001d25760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60ff82811610156200021f57825460ff191660ff90811784556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b6001600160a01b03811681146200025e57600080fd5b50565b600080604083850312156200027557600080fd5b8251620002828162000248565b6020840151909250620002958162000248565b809150509250929050565b60805160a05160c05160e05161010051610120516101405161016051612f466200032960003960006110ff01526000818161031c0152818161187f015281816118af0152818161192b0152818161196e01526119ba015260006121c301526000612212015260006121ed01526000612146015260006121700152600061219a0152612f466000f3fe6080604052600436106100f35760003560e01c80631626ba7e146100ff5780631dd756c51461013d57806324d7806c1461016d5780633a871cdd1461018d57806340053da6146101bb5780634a58db19146101dd5780634b0bddd2146101e55780634d44560d1461020557806373e925d6146102255780637dff5a79146102645780638b52d72314610284578063ac9650d8146102a6578063b0d691fe146102d3578063c399ec88146102f5578063c45a01551461030a578063d087d2881461033e578063d1f5789414610353578063d42f2f3514610373578063e9523c9714610388578063f15d424e146103aa57600080fd5b366100fa57005b600080fd5b34801561010b57600080fd5b5061011f61011a366004612398565b6103d7565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014957600080fd5b5061015d61015836600461240c565b6104b7565b6040519015158152602001610134565b34801561017957600080fd5b5061015d610188366004612451565b610735565b34801561019957600080fd5b506101ad6101a836600461246e565b610765565b604051908152602001610134565b3480156101c757600080fd5b506101db6101d63660046124fc565b61078b565b005b6101db610b5d565b3480156101f157600080fd5b506101db61020036600461256d565b610bc5565b34801561021157600080fd5b506101db6102203660046125ab565b610bf8565b34801561023157600080fd5b506102456102403660046124fc565b610c8e565b6040805192151583526001600160a01b03909116602083015201610134565b34801561027057600080fd5b5061015d61027f366004612451565b610ce0565b34801561029057600080fd5b50610299610d8f565b6040516101349190612679565b3480156102b257600080fd5b506102c66102c13660046126db565b611009565b60405161013491906127ab565b3480156102df57600080fd5b506102e86110fd565b6040516101349190612800565b34801561030157600080fd5b506101ad611121565b34801561031657600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b506101ad61119c565b34801561035f57600080fd5b506101db61036e366004612814565b6111db565b34801561037f57600080fd5b50610299611301565b34801561039457600080fd5b5061039d61147f565b604051610134919061285b565b3480156103b657600080fd5b506103ca6103c5366004612451565b61149c565b60405161013491906128a8565b6000806103e48484611581565b90506103ef81610735565b156104045750630b135d3f60e11b90506104b1565b600061040e6115a5565b6001600160a01b03831660009081526006820160205260409020909150339061043790826115c9565b6104945760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b61049d83610ce0565b156104ad57630b135d3f60e11b93505b5050505b92915050565b6000806104c26115a5565b6001600160a01b038516600090815260048201602052604090205490915060ff16156104f25760019150506104b1565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925242108061055d575080604001516001600160801b03164210155b8061058857506001600160a01b03851660009081526006830160205260409020610586906115eb565b155b15610598576000925050506104b1565b60006105af6105aa60608701876128bb565b6115f5565b90506001600160e01b03198116635b0e93fb60e11b1415610633576000806105e26105dd60608901896128bb565b61162f565b91509150808460000151108061061957506001600160a01b0388166000908152600686016020526040902061061790836115c9565b155b1561062c576000955050505050506104b1565b5050610729565b6001600160e01b031981166323f0ed1560e11b141561071d5760008061066461065f60608901896128bb565b611694565b509150915060005b82518110156107155781818151811061068757610687612901565b6020026020010151856000015110806106ef57506106ed8382815181106106b0576106b0612901565b60200260200101518760060160008c6001600160a01b03166001600160a01b031681526020019081526020016000206115c990919063ffffffff16565b155b1561070357600096505050505050506104b1565b8061070d8161292d565b91505061066c565b505050610729565b600093505050506104b1565b50600195945050505050565b6000806107406115a5565b6001600160a01b03909316600090815260049093016020525050604090205460ff1690565b600061076f6116e1565b610779848461174a565b9050610784826117f1565b9392505050565b600061079a6020850185612451565b90506107a581610735565b156108095760405162461bcd60e51b815260206004820152602e60248201527f4163636f756e745065726d697373696f6e733a207369676e657220697320616c60448201526d3932b0b23c9030b71030b236b4b760911b606482015260840161048b565b4261081a60c0860160a08701612964565b6001600160801b031611158015610848575061083c60e0850160c08601612964565b6001600160801b031642105b6108b05760405162461bcd60e51b815260206004820152603360248201527f4163636f756e745065726d697373696f6e733a20696e76616c69642072657175604482015272195cdd081d985b1a591a5d1e481c195c9a5bd9606a1b606482015260840161048b565b6000806108be868686610c8e565b915091508161091d5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e745065726d697373696f6e733a20696e76616c6964207369676e604482015264617475726560d81b606482015260840161048b565b60006109276115a5565b9050610936600282018561183e565b5060e08701356000908152600782016020908152604091829020805460ff19166001179055815160608082018452928a01358152919082019061097f9060808b01908b01612964565b6001600160801b0316815260200161099d60a08a0160808b01612964565b6001600160801b039081169091526001600160a01b038616600090815260058401602090815260408083208551815585830151958201518516600160801b02959094169490941760019093019290925560068401909152908120610a0090611853565b805190915060005b81811015610a7557610a62838281518110610a2557610a25612901565b60200260200101518560060160008a6001600160a01b03166001600160a01b0316815260200190815260200160002061186090919063ffffffff16565b50610a6e60018261297f565b9050610a08565b506000610a8560208b018b612997565b9050905060005b81811015610afc57610ae9610aa460208d018d612997565b83818110610ab457610ab4612901565b9050602002016020810190610ac99190612451565b6001600160a01b038a16600090815260068801602052604090209061183e565b50610af560018261297f565b9050610a8c565b50610b068a611875565b866001600160a01b0316856001600160a01b03167f09ac2cdf09c127af4eedd5aab0a6ca1224c4ae5586d5339657f7fa675d079b948c604051610b499190612a71565b60405180910390a350505050505050505050565b610b656110fd565b6001600160a01b031663b760faf934306040518363ffffffff1660e01b8152600401610b919190612800565b6000604051808303818588803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b5050505050565b610bce33610735565b610bea5760405162461bcd60e51b815260040161048b90612b45565b610bf48282611917565b5050565b610c0133610735565b610c1d5760405162461bcd60e51b815260040161048b90612b45565b610c256110fd565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050505050565b6000806000610c9b6115a5565b9050610ca88686866119ef565b60e0870135600090815260078301602052604090205490925060ff16158015610cd55750610cd582610735565b925050935093915050565b600080610ceb6115a5565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b9091041692810192909252919250904210801590610d5b575080604001516001600160801b031642105b8015610d8757506001600160a01b03841660009081526006830160205260408120610d85906115eb565b115b949350505050565b60606000610d9b6115a5565b90506000610dab82600201611853565b8051909150600080826001600160401b03811115610dcb57610dcb6122e3565b604051908082528060200260200182016040528015610df4578160200160208202803683370190505b50905060005b83811015610e79576000858281518110610e1657610e16612901565b602002602001015190506000610e2b82610ce0565b905080848481518110610e4057610e40612901565b911515602092830291909101909101528015610e645784610e608161292d565b9550505b50610e72905060018261297f565b9050610dfa565b50816001600160401b03811115610e9257610e926122e3565b604051908082528060200260200182016040528015610ecb57816020015b610eb8612299565b815260200190600190039081610eb05790505b5095506000805b84811015610fff57828181518110610eec57610eec612901565b6020026020010151610efd57610fed565b6000868281518110610f1157610f11612901565b6020908102919091018101516001600160a01b038116600081815260058c01845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068e018652912092945092909190820190610f8e90611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b03168152508a8580610fcd9061292d565b965081518110610fdf57610fdf612901565b602002602001018190525050505b610ff860018261297f565b9050610ed2565b5050505050505090565b6060816001600160401b03811115611023576110236122e3565b60405190808252806020026020018201604052801561105657816020015b60608152602001906001900390816110415790505b50905060005b828110156110f6576110c63085858481811061107a5761107a612901565b905060200281019061108c91906128bb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a4b92505050565b8282815181106110d8576110d8612901565b602002602001018190525080806110ee9061292d565b91505061105c565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061112b6110fd565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016111569190612800565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190612b8f565b905090565b60006111a66110fd565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401611156565b60006111e561155d565b805490915060ff808216916101009004168015808015611208575060018360ff16105b80611227575061121730611a70565b15801561122757508260ff166001145b61128a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048b565b835460ff1916600117845580156112a957835461ff0019166101001784555b6112b4876001611917565b80156112f857835461ff0019168455604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060600061130d6115a5565b9050600061131d82600201611853565b8051909150806001600160401b0381111561133a5761133a6122e3565b60405190808252806020026020018201604052801561137357816020015b611360612299565b8152602001906001900390816113585790505b50935060005b8181101561147857600083828151811061139557611395612901565b6020908102919091018101516001600160a01b038116600081815260058901845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068b01865291209294509290919082019061141290611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525087848151811061145757611457612901565b60200260200101819052505050600181611471919061297f565b9050611379565b5050505090565b6060600061148b6115a5565b905061149681611853565b91505090565b6114a4612299565b60006114ae6115a5565b6001600160a01b038416600081815260058301602090815260408083208151606081018352815481526001909101546001600160801b0380821683860152600160801b9091041681830152815160a081018352858152948452600686018352922093945090929082019061152190611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525092505050919050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b60008060006115908585611a7f565b9150915061159d81611ac5565b509392505050565b7ff2776159535489b2c8217c06dac58993e45cb245272f968642d4d3ef6aa7615090565b6001600160a01b03811660009081526001830160205260408120541515610784565b60006104b1825490565b600060048210156116185760405162461bcd60e51b815260040161048b90612ba8565b611626600460008486612bd0565b61078491612bfa565b60008060448310156116535760405162461bcd60e51b815260040161048b90612ba8565b611661602460048587612bd0565b81019061166e9190612451565b915061167e604460248587612bd0565b81019061168b9190612c2a565b90509250929050565b6060808060648410156116b95760405162461bcd60e51b815260040161048b90612ba8565b6116c68460048188612bd0565b8101906116d39190612d50565b919790965090945092505050565b6116e96110fd565b6001600160a01b0316336001600160a01b0316146117485760405162461bcd60e51b815260206004820152601c60248201527b1858d8dbdd5b9d0e881b9bdd08199c9bdb48115b9d1c9e541bda5b9d60221b604482015260640161048b565b565b7b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6000908152601c829052603c812060006117c861178b6101408701876128bb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506115819050565b90506117d481866104b7565b6117e3576001925050506104b1565b506000949350505050565b50565b80156117ee57604051600090339060001990849084818181858888f193505050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bbe565b6000610784836001600160a01b038416611c0e565b6060600061078483611c5d565b6000610784836001600160a01b038416611cb9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b156117ee576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ed9e4b7d6118e16020840184612451565b6040518263ffffffff1660e01b81526004016118fd9190612800565b600060405180830381600087803b158015610baa57600080fd5b6119218282611dac565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610bf45780156119a35760405163ed9e4b7d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed9e4b7d90610c58908590600401612800565b60405163776c4eb960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eed89d7290610c58908590600401612800565b6000610d8783838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a459250611a399150889050611e4e565b80519060200120611f77565b90611581565b60606107848383604051806060016040528060278152602001612eea60279139611fa4565b6001600160a01b03163b151590565b600080825160411415611ab65760208301516040840151606085015160001a611aaa8782858561207f565b94509450505050611abe565b506000905060025b9250929050565b6000816004811115611ad957611ad9612e35565b1415611ae25750565b6001816004811115611af657611af6612e35565b1415611b3f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048b565b6002816004811115611b5357611b53612e35565b1415611ba15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115611bb557611bb5612e35565b14156117ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b6000818152600183016020526040812054611c55575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cad57602002820191906000526020600020905b815481526020019060010190808311611c99575b50505050509050919050565b60008181526001830160205260408120548015611da2576000611cdd600183612e4b565b8554909150600090611cf190600190612e4b565b9050818114611d56576000866000018281548110611d1157611d11612901565b9060005260206000200154905080876000018481548110611d3457611d34612901565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6757611d67612e62565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b6000611db66115a5565b6001600160a01b03841660009081526004820160205260409020805460ff19168415801591909117909155909150611df857611df2818461183e565b50611e04565b611e028184611860565b505b826001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a1113383604051611e41911515815260200190565b60405180910390a2505050565b60607f1652558f82172f3162b9e179c9f4ce0654bac7c4802d6326a2868cc56afae202611e7e6020840184612451565b611e8b6020850185612997565b604051602001611e9c929190612e78565b604051602081830303815290604052805190602001208460400135856060016020810190611eca9190612964565b611eda60a0880160808901612964565b611eea60c0890160a08a01612964565b611efa60e08a0160c08b01612964565b6040805160208101999099526001600160a01b0390971696880196909652606087019490945260808601929092526001600160801b0390811660a086015290811660c085015290811660e0848101919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006104b1611f84612139565b8360405161190160f01b8152600281019290925260228201526042902090565b6060611faf84611a70565b61200a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161048b565b600080856001600160a01b0316856040516120259190612eba565b600060405180830381855af49150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b5091509150612075828286612260565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156120ac5750600090506003612130565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612100573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661212957600060019250925050612130565b9150600090505b94509492505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561219257507f000000000000000000000000000000000000000000000000000000000000000046145b156121bc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6060831561226f575081610784565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161048b9190612ed6565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612321576123216122e3565b604052919050565b600082601f83011261233a57600080fd5b81356001600160401b03811115612353576123536122e3565b612366601f8201601f19166020016122f9565b81815284602083860101111561237b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123ab57600080fd5b8235915060208301356001600160401b038111156123c857600080fd5b6123d485828601612329565b9150509250929050565b6001600160a01b03811681146117ee57600080fd5b6000610160828403121561240657600080fd5b50919050565b6000806040838503121561241f57600080fd5b823561242a816123de565b915060208301356001600160401b0381111561244557600080fd5b6123d4858286016123f3565b60006020828403121561246357600080fd5b8135610784816123de565b60008060006060848603121561248357600080fd5b83356001600160401b0381111561249957600080fd5b6124a5868287016123f3565b9660208601359650604090950135949350505050565b60008083601f8401126124cd57600080fd5b5081356001600160401b038111156124e457600080fd5b602083019150836020828501011115611abe57600080fd5b60008060006040848603121561251157600080fd5b83356001600160401b038082111561252857600080fd5b90850190610100828803121561253d57600080fd5b9093506020850135908082111561255357600080fd5b50612560868287016124bb565b9497909650939450505050565b6000806040838503121561258057600080fd5b823561258b816123de565b9150602083013580151581146125a057600080fd5b809150509250929050565b600080604083850312156125be57600080fd5b82356125c9816123de565b946020939093013593505050565b6001600160801b03169052565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b8083101561263b57855185168252948301946001929092019190830190612619565b50604087015160408901526060870151945061265a60608901866125d7565b6080870151945061266e60808901866125d7565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526126bc8583516125e4565b945092850192908501906001016126a0565b5092979650505050505050565b600080602083850312156126ee57600080fd5b82356001600160401b038082111561270557600080fd5b818501915085601f83011261271957600080fd5b81358181111561272857600080fd5b8660208260051b850101111561273d57600080fd5b60209290920196919550909350505050565b60005b8381101561276a578181015183820152602001612752565b83811115612779576000848401525b50505050565b6000815180845261279781602086016020860161274f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526127ee85835161277f565b945092850192908501906001016127d2565b6001600160a01b0391909116815260200190565b60008060006040848603121561282957600080fd5b8335612834816123de565b925060208401356001600160401b0381111561284f57600080fd5b612560868287016124bb565b6020808252825182820181905260009190848201906040850190845b8181101561289c5783516001600160a01b031683529284019291840191600101612877565b50909695505050505050565b60208152600061078460208301846125e4565b6000808335601e198436030181126128d257600080fd5b8301803591506001600160401b038211156128ec57600080fd5b602001915036819003821315611abe57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561294157612941612917565b5060010190565b80356001600160801b038116811461295f57600080fd5b919050565b60006020828403121561297657600080fd5b61078482612948565b6000821982111561299257612992612917565b500190565b6000808335601e198436030181126129ae57600080fd5b8301803591506001600160401b038211156129c857600080fd5b6020019150600581901b3603821315611abe57600080fd5b6000808335601e198436030181126129f757600080fd5b83016020810192503590506001600160401b03811115612a1657600080fd5b8060051b3603831315611abe57600080fd5b8183526000602080850194508260005b85811015612a66578135612a4b816123de565b6001600160a01b031687529582019590820190600101612a38565b509495945050505050565b6020815260008235612a82816123de565b6001600160a01b0316602083810191909152612aa0908401846129e0565b610100806040860152612ab861012086018385612a28565b925060408601356060860152612ad060608701612948565b9150612adf60808601836125d7565b612aeb60808701612948565b9150612afa60a08601836125d7565b612b0660a08701612948565b9150612b1560c08601836125d7565b612b2160c08701612948565b9150612b3060e08601836125d7565b60e08601358186015250508091505092915050565b6020808252602a908201527f4163636f756e745065726d697373696f6e733a2063616c6c6572206973206e6f6040820152693a1030b71030b236b4b760b11b606082015260800190565b600060208284031215612ba157600080fd5b5051919050565b6020808252600e908201526d11185d18481d1bdbc81cda1bdc9d60921b604082015260600190565b60008085851115612be057600080fd5b83861115612bed57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015612c225780818660040360031b1b83161692505b505092915050565b600060208284031215612c3c57600080fd5b5035919050565b60006001600160401b03821115612c5c57612c5c6122e3565b5060051b60200190565b600082601f830112612c7757600080fd5b81356020612c8c612c8783612c43565b6122f9565b82815260059290921b84018101918181019086841115612cab57600080fd5b8286015b84811015612cc65780358352918301918301612caf565b509695505050505050565b600082601f830112612ce257600080fd5b81356020612cf2612c8783612c43565b82815260059290921b84018101918181019086841115612d1157600080fd5b8286015b84811015612cc65780356001600160401b03811115612d345760008081fd5b612d428986838b0101612329565b845250918301918301612d15565b600080600060608486031215612d6557600080fd5b83356001600160401b0380821115612d7c57600080fd5b818601915086601f830112612d9057600080fd5b81356020612da0612c8783612c43565b82815260059290921b8401810191818101908a841115612dbf57600080fd5b948201945b83861015612de6578535612dd7816123de565b82529482019490820190612dc4565b97505087013592505080821115612dfc57600080fd5b612e0887838801612c66565b93506040860135915080821115612e1e57600080fd5b50612e2b86828701612cd1565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600082821015612e5d57612e5d612917565b500390565b634e487b7160e01b600052603160045260246000fd5b60008184825b85811015612eaf578135612e91816123de565b6001600160a01b031683526020928301929190910190600101612e7e565b509095945050505050565b60008251612ecc81846020870161274f565b9190910192915050565b602081526000610784602083018461277f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122059ec105c567136c8c48d362f409dab0f3ce9092c24ac7e9afa38952289651e8964736f6c634300080c0033",
    "sourceMap": "1306:8165:359:-:0;;;2159:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:333;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;;2541:22;;;;2778:25;;;;2597;2813:31;;;;2873:13;2854:32;;2455:602;;;2651:117;2923:58;2651:117;2541:22;2597:25;3633:73;;;;;;859:25:641;;;900:18;;;893:34;;;943:18;;;936:34;;;3677:13:333;986:18:641;;;979:34;3700:4:333;1029:19:641;;;1022:61;3597:7:333;;831:19:641;;3633:73:333;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;2247:22:359::1;::::0;-1:-1:-1;;2247:20:359::1;:22:::0;-1:-1:-1;2247:22:359:i:1;:::-;-1:-1:-1::0;;;;;2279:18:359;;::::1;;::::0;2307:32:::1;;::::0;1306:8165;;3835:446:52;3894:29;3926:25;:23;;;;;:25;;:::i;:::-;3982:16;;3894:57;;-1:-1:-1;3982:16:52;;;;;;4029:17;;;4065:14;;4057:66;;;;-1:-1:-1;;;4057:66:52;;1296:2:641;4057:66:52;;;1278:21:641;1335:2;1315:18;;;1308:30;1374:34;1354:18;;;1347:62;-1:-1:-1;;;1425:18:641;;;1418:37;1472:19;;4057:66:52;;;;;;;;4152:15;4137:30;;;;4133:142;;;4183:34;;-1:-1:-1;;4183:34:52;4202:15;4183:34;;;;;4236:28;;1644:36:641;;;4236:28:52;;1632:2:641;1617:18;4236:28:52;;;;;;;4133:142;3884:397;;;3835:446::o;497:193::-;242:25;;497:193::o;14:144:641:-;-1:-1:-1;;;;;102:31:641;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:432::-;263:6;271;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;372:9;366:16;391:44;429:5;391:44;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:46:641;483:25;517:46;:::i;:::-;582:7;572:17;;;163:432;;;;;:::o;1502:184::-;1306:8165:359;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100f35760003560e01c80631626ba7e146100ff5780631dd756c51461013d57806324d7806c1461016d5780633a871cdd1461018d57806340053da6146101bb5780634a58db19146101dd5780634b0bddd2146101e55780634d44560d1461020557806373e925d6146102255780637dff5a79146102645780638b52d72314610284578063ac9650d8146102a6578063b0d691fe146102d3578063c399ec88146102f5578063c45a01551461030a578063d087d2881461033e578063d1f5789414610353578063d42f2f3514610373578063e9523c9714610388578063f15d424e146103aa57600080fd5b366100fa57005b600080fd5b34801561010b57600080fd5b5061011f61011a366004612398565b6103d7565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014957600080fd5b5061015d61015836600461240c565b6104b7565b6040519015158152602001610134565b34801561017957600080fd5b5061015d610188366004612451565b610735565b34801561019957600080fd5b506101ad6101a836600461246e565b610765565b604051908152602001610134565b3480156101c757600080fd5b506101db6101d63660046124fc565b61078b565b005b6101db610b5d565b3480156101f157600080fd5b506101db61020036600461256d565b610bc5565b34801561021157600080fd5b506101db6102203660046125ab565b610bf8565b34801561023157600080fd5b506102456102403660046124fc565b610c8e565b6040805192151583526001600160a01b03909116602083015201610134565b34801561027057600080fd5b5061015d61027f366004612451565b610ce0565b34801561029057600080fd5b50610299610d8f565b6040516101349190612679565b3480156102b257600080fd5b506102c66102c13660046126db565b611009565b60405161013491906127ab565b3480156102df57600080fd5b506102e86110fd565b6040516101349190612800565b34801561030157600080fd5b506101ad611121565b34801561031657600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561034a57600080fd5b506101ad61119c565b34801561035f57600080fd5b506101db61036e366004612814565b6111db565b34801561037f57600080fd5b50610299611301565b34801561039457600080fd5b5061039d61147f565b604051610134919061285b565b3480156103b657600080fd5b506103ca6103c5366004612451565b61149c565b60405161013491906128a8565b6000806103e48484611581565b90506103ef81610735565b156104045750630b135d3f60e11b90506104b1565b600061040e6115a5565b6001600160a01b03831660009081526006820160205260409020909150339061043790826115c9565b6104945760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b61049d83610ce0565b156104ad57630b135d3f60e11b93505b5050505b92915050565b6000806104c26115a5565b6001600160a01b038516600090815260048201602052604090205490915060ff16156104f25760019150506104b1565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925242108061055d575080604001516001600160801b03164210155b8061058857506001600160a01b03851660009081526006830160205260409020610586906115eb565b155b15610598576000925050506104b1565b60006105af6105aa60608701876128bb565b6115f5565b90506001600160e01b03198116635b0e93fb60e11b1415610633576000806105e26105dd60608901896128bb565b61162f565b91509150808460000151108061061957506001600160a01b0388166000908152600686016020526040902061061790836115c9565b155b1561062c576000955050505050506104b1565b5050610729565b6001600160e01b031981166323f0ed1560e11b141561071d5760008061066461065f60608901896128bb565b611694565b509150915060005b82518110156107155781818151811061068757610687612901565b6020026020010151856000015110806106ef57506106ed8382815181106106b0576106b0612901565b60200260200101518760060160008c6001600160a01b03166001600160a01b031681526020019081526020016000206115c990919063ffffffff16565b155b1561070357600096505050505050506104b1565b8061070d8161292d565b91505061066c565b505050610729565b600093505050506104b1565b50600195945050505050565b6000806107406115a5565b6001600160a01b03909316600090815260049093016020525050604090205460ff1690565b600061076f6116e1565b610779848461174a565b9050610784826117f1565b9392505050565b600061079a6020850185612451565b90506107a581610735565b156108095760405162461bcd60e51b815260206004820152602e60248201527f4163636f756e745065726d697373696f6e733a207369676e657220697320616c60448201526d3932b0b23c9030b71030b236b4b760911b606482015260840161048b565b4261081a60c0860160a08701612964565b6001600160801b031611158015610848575061083c60e0850160c08601612964565b6001600160801b031642105b6108b05760405162461bcd60e51b815260206004820152603360248201527f4163636f756e745065726d697373696f6e733a20696e76616c69642072657175604482015272195cdd081d985b1a591a5d1e481c195c9a5bd9606a1b606482015260840161048b565b6000806108be868686610c8e565b915091508161091d5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e745065726d697373696f6e733a20696e76616c6964207369676e604482015264617475726560d81b606482015260840161048b565b60006109276115a5565b9050610936600282018561183e565b5060e08701356000908152600782016020908152604091829020805460ff19166001179055815160608082018452928a01358152919082019061097f9060808b01908b01612964565b6001600160801b0316815260200161099d60a08a0160808b01612964565b6001600160801b039081169091526001600160a01b038616600090815260058401602090815260408083208551815585830151958201518516600160801b02959094169490941760019093019290925560068401909152908120610a0090611853565b805190915060005b81811015610a7557610a62838281518110610a2557610a25612901565b60200260200101518560060160008a6001600160a01b03166001600160a01b0316815260200190815260200160002061186090919063ffffffff16565b50610a6e60018261297f565b9050610a08565b506000610a8560208b018b612997565b9050905060005b81811015610afc57610ae9610aa460208d018d612997565b83818110610ab457610ab4612901565b9050602002016020810190610ac99190612451565b6001600160a01b038a16600090815260068801602052604090209061183e565b50610af560018261297f565b9050610a8c565b50610b068a611875565b866001600160a01b0316856001600160a01b03167f09ac2cdf09c127af4eedd5aab0a6ca1224c4ae5586d5339657f7fa675d079b948c604051610b499190612a71565b60405180910390a350505050505050505050565b610b656110fd565b6001600160a01b031663b760faf934306040518363ffffffff1660e01b8152600401610b919190612800565b6000604051808303818588803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b5050505050565b610bce33610735565b610bea5760405162461bcd60e51b815260040161048b90612b45565b610bf48282611917565b5050565b610c0133610735565b610c1d5760405162461bcd60e51b815260040161048b90612b45565b610c256110fd565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b158015610c7257600080fd5b505af1158015610c86573d6000803e3d6000fd5b505050505050565b6000806000610c9b6115a5565b9050610ca88686866119ef565b60e0870135600090815260078301602052604090205490925060ff16158015610cd55750610cd582610735565b925050935093915050565b600080610ceb6115a5565b6001600160a01b03841660009081526005820160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b9091041692810192909252919250904210801590610d5b575080604001516001600160801b031642105b8015610d8757506001600160a01b03841660009081526006830160205260408120610d85906115eb565b115b949350505050565b60606000610d9b6115a5565b90506000610dab82600201611853565b8051909150600080826001600160401b03811115610dcb57610dcb6122e3565b604051908082528060200260200182016040528015610df4578160200160208202803683370190505b50905060005b83811015610e79576000858281518110610e1657610e16612901565b602002602001015190506000610e2b82610ce0565b905080848481518110610e4057610e40612901565b911515602092830291909101909101528015610e645784610e608161292d565b9550505b50610e72905060018261297f565b9050610dfa565b50816001600160401b03811115610e9257610e926122e3565b604051908082528060200260200182016040528015610ecb57816020015b610eb8612299565b815260200190600190039081610eb05790505b5095506000805b84811015610fff57828181518110610eec57610eec612901565b6020026020010151610efd57610fed565b6000868281518110610f1157610f11612901565b6020908102919091018101516001600160a01b038116600081815260058c01845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068e018652912092945092909190820190610f8e90611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b03168152508a8580610fcd9061292d565b965081518110610fdf57610fdf612901565b602002602001018190525050505b610ff860018261297f565b9050610ed2565b5050505050505090565b6060816001600160401b03811115611023576110236122e3565b60405190808252806020026020018201604052801561105657816020015b60608152602001906001900390816110415790505b50905060005b828110156110f6576110c63085858481811061107a5761107a612901565b905060200281019061108c91906128bb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a4b92505050565b8282815181106110d8576110d8612901565b602002602001018190525080806110ee9061292d565b91505061105c565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061112b6110fd565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016111569190612800565b602060405180830381865afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190612b8f565b905090565b60006111a66110fd565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401611156565b60006111e561155d565b805490915060ff808216916101009004168015808015611208575060018360ff16105b80611227575061121730611a70565b15801561122757508260ff166001145b61128a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048b565b835460ff1916600117845580156112a957835461ff0019166101001784555b6112b4876001611917565b80156112f857835461ff0019168455604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6060600061130d6115a5565b9050600061131d82600201611853565b8051909150806001600160401b0381111561133a5761133a6122e3565b60405190808252806020026020018201604052801561137357816020015b611360612299565b8152602001906001900390816113585790505b50935060005b8181101561147857600083828151811061139557611395612901565b6020908102919091018101516001600160a01b038116600081815260058901845260408082208151606081018352815481526001909101546001600160801b0380821683890152600160801b9091041681830152815160a08101835284815293835260068b01865291209294509290919082019061141290611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525087848151811061145757611457612901565b60200260200101819052505050600181611471919061297f565b9050611379565b5050505090565b6060600061148b6115a5565b905061149681611853565b91505090565b6114a4612299565b60006114ae6115a5565b6001600160a01b038416600081815260058301602090815260408083208151606081018352815481526001909101546001600160801b0380821683860152600160801b9091041681830152815160a081018352858152948452600686018352922093945090929082019061152190611853565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525092505050919050565b7f627d6cbb4eb558f37de3c2ec08b04710e54e06be936a302f087f7bfb80f39ae090565b60008060006115908585611a7f565b9150915061159d81611ac5565b509392505050565b7ff2776159535489b2c8217c06dac58993e45cb245272f968642d4d3ef6aa7615090565b6001600160a01b03811660009081526001830160205260408120541515610784565b60006104b1825490565b600060048210156116185760405162461bcd60e51b815260040161048b90612ba8565b611626600460008486612bd0565b61078491612bfa565b60008060448310156116535760405162461bcd60e51b815260040161048b90612ba8565b611661602460048587612bd0565b81019061166e9190612451565b915061167e604460248587612bd0565b81019061168b9190612c2a565b90509250929050565b6060808060648410156116b95760405162461bcd60e51b815260040161048b90612ba8565b6116c68460048188612bd0565b8101906116d39190612d50565b919790965090945092505050565b6116e96110fd565b6001600160a01b0316336001600160a01b0316146117485760405162461bcd60e51b815260206004820152601c60248201527b1858d8dbdd5b9d0e881b9bdd08199c9bdb48115b9d1c9e541bda5b9d60221b604482015260640161048b565b565b7b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6000908152601c829052603c812060006117c861178b6101408701876128bb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506115819050565b90506117d481866104b7565b6117e3576001925050506104b1565b506000949350505050565b50565b80156117ee57604051600090339060001990849084818181858888f193505050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bbe565b6000610784836001600160a01b038416611c0e565b6060600061078483611c5d565b6000610784836001600160a01b038416611cb9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b156117ee576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ed9e4b7d6118e16020840184612451565b6040518263ffffffff1660e01b81526004016118fd9190612800565b600060405180830381600087803b158015610baa57600080fd5b6119218282611dac565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610bf45780156119a35760405163ed9e4b7d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed9e4b7d90610c58908590600401612800565b60405163776c4eb960e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eed89d7290610c58908590600401612800565b6000610d8783838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a459250611a399150889050611e4e565b80519060200120611f77565b90611581565b60606107848383604051806060016040528060278152602001612eea60279139611fa4565b6001600160a01b03163b151590565b600080825160411415611ab65760208301516040840151606085015160001a611aaa8782858561207f565b94509450505050611abe565b506000905060025b9250929050565b6000816004811115611ad957611ad9612e35565b1415611ae25750565b6001816004811115611af657611af6612e35565b1415611b3f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048b565b6002816004811115611b5357611b53612e35565b1415611ba15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115611bb557611bb5612e35565b14156117ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b6000818152600183016020526040812054611c55575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cad57602002820191906000526020600020905b815481526020019060010190808311611c99575b50505050509050919050565b60008181526001830160205260408120548015611da2576000611cdd600183612e4b565b8554909150600090611cf190600190612e4b565b9050818114611d56576000866000018281548110611d1157611d11612901565b9060005260206000200154905080876000018481548110611d3457611d34612901565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d6757611d67612e62565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b6000611db66115a5565b6001600160a01b03841660009081526004820160205260409020805460ff19168415801591909117909155909150611df857611df2818461183e565b50611e04565b611e028184611860565b505b826001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a1113383604051611e41911515815260200190565b60405180910390a2505050565b60607f1652558f82172f3162b9e179c9f4ce0654bac7c4802d6326a2868cc56afae202611e7e6020840184612451565b611e8b6020850185612997565b604051602001611e9c929190612e78565b604051602081830303815290604052805190602001208460400135856060016020810190611eca9190612964565b611eda60a0880160808901612964565b611eea60c0890160a08a01612964565b611efa60e08a0160c08b01612964565b6040805160208101999099526001600160a01b0390971696880196909652606087019490945260808601929092526001600160801b0390811660a086015290811660c085015290811660e0848101919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b60006104b1611f84612139565b8360405161190160f01b8152600281019290925260228201526042902090565b6060611faf84611a70565b61200a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161048b565b600080856001600160a01b0316856040516120259190612eba565b600060405180830381855af49150503d8060008114612060576040519150601f19603f3d011682016040523d82523d6000602084013e612065565b606091505b5091509150612075828286612260565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156120ac5750600090506003612130565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612100573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661212957600060019250925050612130565b9150600090505b94509492505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561219257507f000000000000000000000000000000000000000000000000000000000000000046145b156121bc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6060831561226f575081610784565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161048b9190612ed6565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612321576123216122e3565b604052919050565b600082601f83011261233a57600080fd5b81356001600160401b03811115612353576123536122e3565b612366601f8201601f19166020016122f9565b81815284602083860101111561237b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123ab57600080fd5b8235915060208301356001600160401b038111156123c857600080fd5b6123d485828601612329565b9150509250929050565b6001600160a01b03811681146117ee57600080fd5b6000610160828403121561240657600080fd5b50919050565b6000806040838503121561241f57600080fd5b823561242a816123de565b915060208301356001600160401b0381111561244557600080fd5b6123d4858286016123f3565b60006020828403121561246357600080fd5b8135610784816123de565b60008060006060848603121561248357600080fd5b83356001600160401b0381111561249957600080fd5b6124a5868287016123f3565b9660208601359650604090950135949350505050565b60008083601f8401126124cd57600080fd5b5081356001600160401b038111156124e457600080fd5b602083019150836020828501011115611abe57600080fd5b60008060006040848603121561251157600080fd5b83356001600160401b038082111561252857600080fd5b90850190610100828803121561253d57600080fd5b9093506020850135908082111561255357600080fd5b50612560868287016124bb565b9497909650939450505050565b6000806040838503121561258057600080fd5b823561258b816123de565b9150602083013580151581146125a057600080fd5b809150509250929050565b600080604083850312156125be57600080fd5b82356125c9816123de565b946020939093013593505050565b6001600160801b03169052565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b8083101561263b57855185168252948301946001929092019190830190612619565b50604087015160408901526060870151945061265a60608901866125d7565b6080870151945061266e60808901866125d7565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526126bc8583516125e4565b945092850192908501906001016126a0565b5092979650505050505050565b600080602083850312156126ee57600080fd5b82356001600160401b038082111561270557600080fd5b818501915085601f83011261271957600080fd5b81358181111561272857600080fd5b8660208260051b850101111561273d57600080fd5b60209290920196919550909350505050565b60005b8381101561276a578181015183820152602001612752565b83811115612779576000848401525b50505050565b6000815180845261279781602086016020860161274f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156126ce57603f198886030184526127ee85835161277f565b945092850192908501906001016127d2565b6001600160a01b0391909116815260200190565b60008060006040848603121561282957600080fd5b8335612834816123de565b925060208401356001600160401b0381111561284f57600080fd5b612560868287016124bb565b6020808252825182820181905260009190848201906040850190845b8181101561289c5783516001600160a01b031683529284019291840191600101612877565b50909695505050505050565b60208152600061078460208301846125e4565b6000808335601e198436030181126128d257600080fd5b8301803591506001600160401b038211156128ec57600080fd5b602001915036819003821315611abe57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561294157612941612917565b5060010190565b80356001600160801b038116811461295f57600080fd5b919050565b60006020828403121561297657600080fd5b61078482612948565b6000821982111561299257612992612917565b500190565b6000808335601e198436030181126129ae57600080fd5b8301803591506001600160401b038211156129c857600080fd5b6020019150600581901b3603821315611abe57600080fd5b6000808335601e198436030181126129f757600080fd5b83016020810192503590506001600160401b03811115612a1657600080fd5b8060051b3603831315611abe57600080fd5b8183526000602080850194508260005b85811015612a66578135612a4b816123de565b6001600160a01b031687529582019590820190600101612a38565b509495945050505050565b6020815260008235612a82816123de565b6001600160a01b0316602083810191909152612aa0908401846129e0565b610100806040860152612ab861012086018385612a28565b925060408601356060860152612ad060608701612948565b9150612adf60808601836125d7565b612aeb60808701612948565b9150612afa60a08601836125d7565b612b0660a08701612948565b9150612b1560c08601836125d7565b612b2160c08701612948565b9150612b3060e08601836125d7565b60e08601358186015250508091505092915050565b6020808252602a908201527f4163636f756e745065726d697373696f6e733a2063616c6c6572206973206e6f6040820152693a1030b71030b236b4b760b11b606082015260800190565b600060208284031215612ba157600080fd5b5051919050565b6020808252600e908201526d11185d18481d1bdbc81cda1bdc9d60921b604082015260600190565b60008085851115612be057600080fd5b83861115612bed57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015612c225780818660040360031b1b83161692505b505092915050565b600060208284031215612c3c57600080fd5b5035919050565b60006001600160401b03821115612c5c57612c5c6122e3565b5060051b60200190565b600082601f830112612c7757600080fd5b81356020612c8c612c8783612c43565b6122f9565b82815260059290921b84018101918181019086841115612cab57600080fd5b8286015b84811015612cc65780358352918301918301612caf565b509695505050505050565b600082601f830112612ce257600080fd5b81356020612cf2612c8783612c43565b82815260059290921b84018101918181019086841115612d1157600080fd5b8286015b84811015612cc65780356001600160401b03811115612d345760008081fd5b612d428986838b0101612329565b845250918301918301612d15565b600080600060608486031215612d6557600080fd5b83356001600160401b0380821115612d7c57600080fd5b818601915086601f830112612d9057600080fd5b81356020612da0612c8783612c43565b82815260059290921b8401810191818101908a841115612dbf57600080fd5b948201945b83861015612de6578535612dd7816123de565b82529482019490820190612dc4565b97505087013592505080821115612dfc57600080fd5b612e0887838801612c66565b93506040860135915080821115612e1e57600080fd5b50612e2b86828701612cd1565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600082821015612e5d57612e5d612917565b500390565b634e487b7160e01b600052603160045260246000fd5b60008184825b85811015612eaf578135612e91816123de565b6001600160a01b031683526020928301929190910190600101612e7e565b509095945050505050565b60008251612ecc81846020870161274f565b9190910192915050565b602081526000610784602083018461277f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122059ec105c567136c8c48d362f409dab0f3ce9092c24ac7e9afa38952289651e8964736f6c634300080c0033",
    "sourceMap": "1306:8165:359:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5866:636;;;;;;;;;;-1:-1:-1;5866:636:359;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1516:33:641;;;1498:52;;1486:2;1471:18;5866:636:359;;;;;;;;3190:2641;;;;;;;;;;-1:-1:-1;3190:2641:359;;;;;:::i;:::-;;:::i;:::-;;;2538:14:641;;2531:22;2513:41;;2501:2;2486:18;3190:2641:359;2373:187:641;4437:225:43;;;;;;;;;;-1:-1:-1;4437:225:43;;;;;:::i;:::-;;:::i;1458:379:361:-;;;;;;;;;;-1:-1:-1;1458:379:361;;;;;:::i;:::-;;:::i;:::-;;;3473:25:641;;;3461:2;3446:18;1458:379:361;3327:177:641;2580:1605:43;;;;;;;;;;-1:-1:-1;2580:1605:43;;;;;:::i;:::-;;:::i;:::-;;6757:111:359;;;:::i;2393:124:43:-;;;;;;;;;;-1:-1:-1;2393:124:43;;;;;:::i;:::-;;:::i;6939:158:359:-;;;;;;;;;;-1:-1:-1;6939:158:359;;;;;:::i;:::-;;:::i;5970:426:43:-;;;;;;;;;;-1:-1:-1;5970:426:43;;;;;:::i;:::-;;:::i;:::-;;;;5520:14:641;;5513:22;5495:41;;-1:-1:-1;;;;;5572:32:641;;;5567:2;5552:18;;5545:60;5468:18;5970:426:43;5327:284:641;4754:458:43;;;;;;;;;;-1:-1:-1;4754:458:43;;;;;:::i;:::-;;:::i;7388:1334::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2787:115:359:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2974:113::-;;;;;;;;;;;;;:::i;1731:32::-;;;;;;;;;;;;;;;935:121:361;;;;;;;;;;;;;:::i;2407:133:359:-;;;;;;;;;;-1:-1:-1;2407:133:359;;;;;:::i;:::-;;:::i;6474:828:43:-;;;;;;;;;;;;;:::i;8779:221::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5306:585::-;;;;;;;;;;-1:-1:-1;5306:585:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5866:636:359:-;6010:17;;6060:25;:5;6074:10;6060:13;:25::i;:::-;6043:42;;6100:15;6108:6;6100:7;:15::i;:::-;6096:63;;;-1:-1:-1;;;;6138:10:359;-1:-1:-1;6131:17:359;;6096:63;6169:43;6215:53;:51;:53::i;:::-;-1:-1:-1;;;;;6323:28:359;;6278:14;6323:28;;;:20;;;:28;;;;;6169:99;;-1:-1:-1;6295:10:359;;6323:45;;6295:10;6323:37;:45::i;:::-;6315:94;;;;-1:-1:-1;;;6315:94:359;;11701:2:641;6315:94:359;;;11683:21:641;11740:2;11720:18;;;11713:30;11779:34;11759:18;;;11752:62;-1:-1:-1;;;11830:18:641;;;11823:34;11874:19;;6315:94:359;;;;;;;;;6424:22;6439:6;6424:14;:22::i;:::-;6420:76;;;-1:-1:-1;;;6475:10:359;-1:-1:-1;6420:76:359;6033:469;;;5866:636;;;;;:::o;3190:2641::-;3291:4;3489:43;3535:53;:51;:53::i;:::-;-1:-1:-1;;;;;3654:21:359;;;;;;:12;;;:21;;;;;;3489:99;;-1:-1:-1;3654:21:359;;3650:63;;;3698:4;3691:11;;;;;3650:63;-1:-1:-1;;;;;3768:31:359;;3723:42;3768:31;;;:22;;;:31;;;;;;;;;3723:76;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3723:76:359;;;;;;;;;-1:-1:-1;;;3723:76:359;;;;;;;;;;;3915:15;-1:-1:-1;3886:44:359;:103;;;3965:11;:24;;;-1:-1:-1;;;;;3946:43:359;:15;:43;;3886:103;:162;;;-1:-1:-1;;;;;;4005:29:359;;;;;;:20;;;:29;;;;;:38;;:36;:38::i;:::-;:43;3886:162;3869:274;;;4127:5;4120:12;;;;;;3869:274;4300:10;4313:38;4334:16;;;;:7;:16;:::i;:::-;4313:20;:38::i;:::-;4300:51;-1:-1:-1;;;;;;;4366:31:359;;-1:-1:-1;;;4366:31:359;4362:1441;;;4505:14;;4538:39;4560:16;;;;:7;:16;:::i;:::-;4538:21;:39::i;:::-;4504:73;;;;4734:5;4689:11;:42;;;:50;:101;;;-1:-1:-1;;;;;;4744:29:359;;;;;;:20;;;:29;;;;;:46;;4783:6;4744:38;:46::i;:::-;4743:47;4689:101;4685:228;;;4893:5;4886:12;;;;;;;;;4685:228;4399:524;;4362:1441;;;-1:-1:-1;;;;;;4933:36:359;;-1:-1:-1;;;4933:36:359;4929:874;;;5088:24;;5143:44;5170:16;;;;:7;:16;:::i;:::-;5143:26;:44::i;:::-;5087:100;;;;;5328:9;5323:383;5347:7;:14;5343:1;:18;5323:383;;;5456:6;5463:1;5456:9;;;;;;;;:::i;:::-;;;;;;;5411:11;:42;;;:54;:129;;;;5490:50;5529:7;5537:1;5529:10;;;;;;;;:::i;:::-;;;;;;;5490:4;:20;;:29;5511:7;-1:-1:-1;;;;;5490:29:359;-1:-1:-1;;;;;5490:29:359;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5489:51;5411:129;5386:306;;;5668:5;5661:12;;;;;;;;;;5386:306;5363:3;;;;:::i;:::-;;;;5323:383;;;;4971:745;;4929:874;;;5787:5;5780:12;;;;;;;4929:874;-1:-1:-1;5820:4:359;;3190:2641;-1:-1:-1;;;;;3190:2641:359:o;4437:225:43:-;4501:4;4517:43;4563:53;:51;:53::i;:::-;-1:-1:-1;;;;;4633:22:43;;;;;;;:12;;;;:22;;-1:-1:-1;;4633:22:43;;;;;;;4437:225::o;1458:379:361:-;1627:22;1661:24;:22;:24::i;:::-;1712:38;1731:6;1739:10;1712:18;:38::i;:::-;1695:55;;1798:32;1810:19;1798:11;:32::i;:::-;1458:379;;;;;:::o;2580:1605:43:-;2698:20;2721:11;;;;:4;:11;:::i;:::-;2698:34;;2751:21;2759:12;2751:7;:21::i;:::-;2750:22;2742:81;;;;-1:-1:-1;;;2742:81:43;;13036:2:641;2742:81:43;;;13018:21:641;13075:2;13055:18;;;13048:30;13114:34;13094:18;;;13087:62;-1:-1:-1;;;13165:18:641;;;13158:44;13219:19;;2742:81:43;12834:410:641;2742:81:43;2889:15;2855:30;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2855:49:43;;;:99;;;;-1:-1:-1;2926:28:43;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2908:46:43;:15;:46;2855:99;2834:197;;;;-1:-1:-1;;;2834:197:43;;13820:2:641;2834:197:43;;;13802:21:641;13859:2;13839:18;;;13832:30;13898:34;13878:18;;;13871:62;-1:-1:-1;;;13949:18:641;;;13942:49;14008:19;;2834:197:43;13618:415:641;2834:197:43;3043:12;3057:14;3075:47;3105:4;3111:10;;3075:29;:47::i;:::-;3042:80;;;;3140:7;3132:57;;;;-1:-1:-1;;;3132:57:43;;14240:2:641;3132:57:43;;;14222:21:641;14279:2;14259:18;;;14252:30;14318:34;14298:18;;;14291:62;-1:-1:-1;;;14369:18:641;;;14362:35;14414:19;;3132:57:43;14038:401:641;3132:57:43;3200:43;3246:53;:51;:53::i;:::-;3200:99;-1:-1:-1;3310:33:43;:15;;;3330:12;3310:19;:33::i;:::-;-1:-1:-1;3367:8:43;;;;3353:23;;;;:13;;;:23;;;;;;;;;:30;;-1:-1:-1;;3353:30:43;3379:4;3353:30;;;3433:166;;;;;;;;3470:35;;;;3433:166;;;;;;;3519:29;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3433:166:43;;;;;3562:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3433:166:43;;;;;;-1:-1:-1;;;;;3394:36:43;;;;;;:22;;;:36;;;;;;;;:205;;;;;;;;;;;;;;-1:-1:-1;;;3394:205:43;;;;;;;;;;;;;;;;;3644:20;;;:34;;;;;;:43;;:41;:43::i;:::-;3718:21;;3610:77;;-1:-1:-1;3697:18:43;3750:129;3774:10;3770:1;:14;3750:129;;;3808:60;3850:14;3865:1;3850:17;;;;;;;;:::i;:::-;;;;;;;3808:4;:20;;:34;3829:12;-1:-1:-1;;;;;3808:34:43;-1:-1:-1;;;;;3808:34:43;;;;;;;;;;;;:41;;:60;;;;:::i;:::-;-1:-1:-1;3786:6:43;3791:1;3786:6;;:::i;:::-;;;3750:129;;;-1:-1:-1;3889:11:43;3903:20;;;;:4;:20;:::i;:::-;:27;;3889:41;;3945:9;3940:125;3964:3;3960:1;:7;3940:125;;;3991:63;4030:20;;;;:4;:20;:::i;:::-;4051:1;4030:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3991:34:43;;;;;;:20;;;:34;;;;;;:38;:63::i;:::-;-1:-1:-1;3969:6:43;3974:1;3969:6;;:::i;:::-;;;3940:125;;;;4075:35;4105:4;4075:29;:35::i;:::-;4159:12;-1:-1:-1;;;;;4126:52:43;4151:6;-1:-1:-1;;;;;4126:52:43;;4173:4;4126:52;;;;;;:::i;:::-;;;;;;;;2688:1497;;;;;;;2580:1605;;;:::o;6757:111:359:-;6804:12;:10;:12::i;:::-;-1:-1:-1;;;;;6804:22:359;;6835:9;6855:4;6804:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:111::o;2393:124:43:-;2061:19;2069:10;2061:7;:19::i;:::-;2053:74;;;;-1:-1:-1;;;2053:74:43;;;;;;;:::i;:::-;2481:29:::1;2491:8;2501;2481:9;:29::i;:::-;2393:124:::0;;:::o;6939:158:359:-;2061:19:43;2069:10;2061:7;:19::i;:::-;2053:74;;;;-1:-1:-1;;;2053:74:43;;;;;;;:::i;:::-;7042:12:359::1;:10;:12::i;:::-;:48;::::0;-1:-1:-1;;;7042:48:359;;-1:-1:-1;;;;;18142:32:641;;;7042:48:359::1;::::0;::::1;18124:51:641::0;18191:18;;;18184:34;;;7042:23:359;;;::::1;::::0;::::1;::::0;18097:18:641;;7042:48:359::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6939:158:::0;;:::o;5970:426:43:-;6134:12;6148:14;6178:43;6224:53;:51;:53::i;:::-;6178:99;;6296:31;6312:3;6317:9;;6296:15;:31::i;:::-;6362:7;;;;6348:22;;;;:13;;;:22;;;;;;6287:40;;-1:-1:-1;6348:22:43;;6347:23;:42;;;;;6374:15;6382:6;6374:7;:15::i;:::-;6337:52;;6168:228;5970:426;;;;;;:::o;4754:458::-;4815:4;4831:43;4877:53;:51;:53::i;:::-;-1:-1:-1;;;;;4985:30:43;;4940:42;4985:30;;;:22;;;:30;;;;;;;;;4940:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4940:75:43;;;;;;;;;-1:-1:-1;;;4940:75:43;;;;;;;;;;;4831:99;;-1:-1:-1;4940:75:43;5075:15;-1:-1:-1;5045:45:43;;;:103;;;5124:11;:24;;;-1:-1:-1;;;;;5106:42:43;:15;:42;5045:103;:160;;;;-1:-1:-1;;;;;;5164:28:43;;5204:1;5164:28;;;:20;;;:28;;;;;:37;;:35;:37::i;:::-;:41;5045:160;5026:179;4754:458;-1:-1:-1;;;;4754:458:43:o;7388:1334::-;7442:34;7488:43;7534:53;:51;:53::i;:::-;7488:99;;7597:27;7627:24;:4;:15;;:22;:24::i;:::-;7676:17;;7597:54;;-1:-1:-1;7662:11:43;;7676:17;-1:-1:-1;;;;;7774:15:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7774:15:43;;7743:46;;7805:9;7800:267;7824:3;7820:1;:7;7800:267;;;7851:14;7868:10;7879:1;7868:13;;;;;;;;:::i;:::-;;;;;;;7851:30;;7896:13;7912:22;7927:6;7912:14;:22::i;:::-;7896:38;;7968:8;7948:14;7963:1;7948:17;;;;;;;;:::i;:::-;:28;;;:17;;;;;;;;;;;:28;7990:67;;;;8022:20;;;;:::i;:::-;;;;7990:67;-1:-1:-1;7829:6:43;;-1:-1:-1;7834:1:43;7829:6;;:::i;:::-;;;7800:267;;;;8111:18;-1:-1:-1;;;;;8087:43:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8077:53;;8140:13;8172:9;8167:549;8191:3;8187:1;:7;8167:549;;;8223:14;8238:1;8223:17;;;;;;;;:::i;:::-;;;;;;;8218:65;;8260:8;;8218:65;8296:14;8313:10;8324:1;8313:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8385:30:43;;8340:42;8385:30;;;:22;;;:30;;;;;;8340:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8340:75:43;;;;;;;-1:-1:-1;;;8340:75:43;;;;;;;;8449:256;;;;;;;;;;8508:28;;;:20;;;:28;;;;8313:13;;-1:-1:-1;8340:75:43;8449:256;;;;;;8508:37;;:35;:37::i;:::-;8449:256;;;;8563:11;:42;;;8449:256;;;;8623:11;:26;;;-1:-1:-1;;;;;8449:256:43;;;;;8667:11;:24;;;-1:-1:-1;;;;;8449:256:43;;;;8430:7;8438;;;;;:::i;:::-;;;8430:16;;;;;;;;:::i;:::-;;;;;;:275;;;;8204:512;;8167:549;8196:6;8201:1;8196:6;;:::i;:::-;;;8167:549;;;;7478:1244;;;;;;7388:1334;:::o;698:319:127:-;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;2787:115:359:-;2877:18;;2787:115::o;2974:113::-;3017:7;3043:12;:10;:12::i;:::-;-1:-1:-1;;;;;3043:22:359;;3074:4;3043:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3036:44;;2974:113;:::o;935:121:361:-;984:7;1010:12;:10;:12::i;:::-;:39;;-1:-1:-1;;;1010:39:361;;1040:4;1010:39;;;18600:51:641;1047:1:361;18667:18:641;;;18660:60;-1:-1:-1;;;;;1010:21:361;;;;;;;18573:18:641;;1010:39:361;18418:308:641;2407:133:359;1146:29:52;1178:25;:23;:25::i;:::-;1234:16;;1146:57;;-1:-1:-1;1234:16:52;;;;;;1281:17;;;1331:14;;;1377:34;;;;;1410:1;1395:12;:16;;;1377:34;1376:99;;;;1418:35;1447:4;1418:20;:35::i;:::-;1417:36;:57;;;;;1457:12;:17;;1473:1;1457:17;1417:57;1355:192;;;;-1:-1:-1;;;1355:192:52;;18933:2:641;1355:192:52;;;18915:21:641;18972:2;18952:18;;;18945:30;19011:34;18991:18;;;18984:62;-1:-1:-1;;;19062:18:641;;;19055:44;19116:19;;1355:192:52;18731:410:641;1355:192:52;1557:20;;-1:-1:-1;;1557:20:52;1576:1;1557:20;;;1587:69;;;;1621:24;;-1:-1:-1;;1621:24:52;;;;;1587:69;2503:30:359::1;2513:13;2528:4;2503:9;:30::i;:::-;1680:14:52::0;1676:103;;;1710:25;;-1:-1:-1;;1710:25:52;;;1754:14;;-1:-1:-1;19298:36:641;;1754:14:52;;19286:2:641;19271:18;1754:14:52;;;;;;;1676:103;1136:649;;;;2407:133:359;;;:::o;6474:828:43:-;6522:34;6568:43;6614:53;:51;:53::i;:::-;6568:99;;6677:27;6707:24;:4;:15;;:22;:24::i;:::-;6756:17;;6677:54;;-1:-1:-1;6756:17:43;-1:-1:-1;;;;;6793:28:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6783:38;;6836:9;6831:465;6855:3;6851:1;:7;6831:465;;;6882:14;6899:10;6910:1;6899:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6971:30:43;;6926:42;6971:30;;;:22;;;:30;;;;;;6926:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6926:75:43;;;;;;;-1:-1:-1;;;6926:75:43;;;;;;;;7029:256;;;;;;;;;;7088:28;;;:20;;;:28;;;;6899:13;;-1:-1:-1;6926:75:43;7029:256;;;;;;7088:37;;:35;:37::i;:::-;7029:256;;;;7143:11;:42;;;7029:256;;;;7203:11;:26;;;-1:-1:-1;;;;;7029:256:43;;;;;7247:11;:24;;;-1:-1:-1;;;;;7029:256:43;;;;7016:7;7024:1;7016:10;;;;;;;;:::i;:::-;;;;;;:269;;;;6868:428;;6865:1;6860:6;;;;;:::i;:::-;;;6831:465;;;;6558:744;;;6474:828;:::o;8779:221::-;8826:16;8854:43;8900:53;:51;:53::i;:::-;8854:99;-1:-1:-1;8970:23:43;8854:99;8970:21;:23::i;:::-;8963:30;;;8779:221;:::o;5306:585::-;5378:24;;:::i;:::-;5414:43;5460:53;:51;:53::i;:::-;-1:-1:-1;;;;;5568:30:43;;5523:42;5568:30;;;:22;;;:30;;;;;;;;5523:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5523:75:43;;;;;;;-1:-1:-1;;;5523:75:43;;;;;;;;5628:256;;;;;;;;;;5687:28;;;:20;;;:28;;;;5414:99;;-1:-1:-1;5523:75:43;;5628:256;;;;5687:37;;:35;:37::i;:::-;5628:256;;;;5742:11;:42;;;5628:256;;;;5802:11;:26;;;-1:-1:-1;;;;;5628:256:43;;;;;5846:11;:24;;;-1:-1:-1;;;;;5628:256:43;;;;5609:275;;;;5306:585;;;:::o;497:193:52:-;242:25;;497:193::o;3673:227:332:-;3751:7;3771:17;3790:18;3812:27;3823:4;3829:9;3812:10;:27::i;:::-;3770:69;;;;3849:18;3861:5;3849:11;:18::i;:::-;-1:-1:-1;3884:9:332;3673:227;-1:-1:-1;;;3673:227:332:o;1270:250:43:-;386:40;;1270:250::o;8583:165:337:-;-1:-1:-1;;;;;8716:23:337;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;8829:115;8892:7;8918:19;8926:3;4444:18;;4362:107;7286:192:359;7360:23;7418:1;7403:16;;;7395:43;;;;-1:-1:-1;;;7395:43:359;;;;;;;:::i;:::-;7462:8;7468:1;7462:8;:4;;:8;:::i;:::-;7455:16;;;:::i;7484:393::-;7559:15;;7625:11;7610:26;;;7602:53;;;;-1:-1:-1;;;7602:53:359;;;;;;;:::i;:::-;7741:10;7748:2;7746:1;7741:4;;:10;:::i;:::-;7730:33;;;;;;;:::i;:::-;7720:43;-1:-1:-1;7847:11:359;7855:2;7852;7847:4;;:11;:::i;:::-;7836:34;;;;;;;:::i;:::-;7827:43;;7484:393;;;;;:::o;7883:405::-;8000:25;;;8149:16;8134:31;;;8126:58;;;;-1:-1:-1;;;8126:58:359;;;;;;;:::i;:::-;8239:8;:4;8244:1;8239:4;;:8;:::i;:::-;8228:53;;;;;;;:::i;:::-;8195:86;;;;-1:-1:-1;8195:86:359;;-1:-1:-1;7883:405:359;-1:-1:-1;;;7883:405:359:o;1918:149:361:-;2014:12;:10;:12::i;:::-;-1:-1:-1;;;;;1992:35:361;:10;-1:-1:-1;;;;;1992:35:361;;1984:76;;;;-1:-1:-1;;;1984:76:361;;24198:2:641;1984:76:361;;;24180:21:641;24237:2;24217:18;;;24210:30;-1:-1:-1;;;24256:18:641;;;24249:58;24324:18;;1984:76:361;23996:352:641;1984:76:361;1918:149::o;8355:391:359:-;-1:-1:-1;;;8501:22:359;7524:48:332;;;7592:4;7585:18;;;7643:4;7627:21;;8599:14:359;8616:30;8629:16;;;;:6;:16;:::i;:::-;8616:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8616:4:359;;:30;-1:-1:-1;;8616:12:359;:30;-1:-1:-1;8616:30:359:i;:::-;8599:47;;8662:29;8676:6;8684;8662:13;:29::i;:::-;8657:64;;746:1:361;8693:28:359;;;;;;8657:64;-1:-1:-1;8738:1:359;;8355:391;-1:-1:-1;;;;8355:391:359:o;3786:63:361:-;;:::o;4357:338::-;4438:24;;4434:255;;4497:82;;4479:12;;4505:10;;-1:-1:-1;;4556:17:361;4530:19;;4479:12;4497:82;4479:12;4497:82;4530:19;4505:10;4556:17;4497:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8028:150:337;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:337;;8121:4;:50::i;9982:300::-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:337;;8442:7;:53::i;9241:228:359:-;-1:-1:-1;;;;;9359:7:359;:19;;:23;9355:108;;-1:-1:-1;;;;;9417:7:359;9398:41;;9440:11;;;;:4;:11;:::i;:::-;9398:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;8802:382;8890:35;8906:8;8916;8890:15;:35::i;:::-;-1:-1:-1;;;;;8939:7:359;:19;;:23;8935:243;;8982:8;8978:190;;;9010:51;;-1:-1:-1;;;9010:51:359;;-1:-1:-1;;;;;9029:7:359;9010:41;;;;:51;;9052:8;;9010:51;;;:::i;8978:190::-;9100:53;;-1:-1:-1;;;9100:53:359;;-1:-1:-1;;;;;9119:7:359;9100:43;;;;:53;;9144:8;;9100:53;;;:::i;9875:260:43:-;10029:7;10059:69;10117:10;;10059:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10059:49:43;;-1:-1:-1;10086:20:43;;-1:-1:-1;10101:4:43;;-1:-1:-1;10086:14:43;:20::i;:::-;10076:31;;;;;;10059:16;:49::i;:::-;:57;;:69::i;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;1137:320::-;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;2157:730:332:-;2238:7;2247:12;2275:9;:16;2295:2;2275:22;2271:610;;;2611:4;2596:20;;2590:27;2660:4;2645:20;;2639:27;2717:4;2702:20;;2696:27;2313:9;2688:36;2758:25;2769:4;2688:36;2590:27;2639;2758:10;:25::i;:::-;2751:32;;;;;;;;;2271:610;-1:-1:-1;2830:1:332;;-1:-1:-1;2834:35:332;2271:610;2157:730;;;;;:::o;582:511::-;659:20;650:5;:29;;;;;;;;:::i;:::-;;646:441;;;582:511;:::o;646:441::-;755:29;746:5;:38;;;;;;;;:::i;:::-;;742:345;;;800:34;;-1:-1:-1;;;800:34:332;;24897:2:641;800:34:332;;;24879:21:641;24936:2;24916:18;;;24909:30;-1:-1:-1;;;24955:18:641;;;24948:54;25019:18;;800:34:332;24695:348:641;742:345:332;864:35;855:5;:44;;;;;;;;:::i;:::-;;851:236;;;915:41;;-1:-1:-1;;;915:41:332;;25250:2:641;915:41:332;;;25232:21:641;25289:2;25269:18;;;25262:30;25328:33;25308:18;;;25301:61;25379:18;;915:41:332;25048:355:641;851:236:332;986:30;977:5;:39;;;;;;;;:::i;:::-;;973:114;;;1032:44;;-1:-1:-1;;;1032:44:332;;25610:2:641;1032:44:332;;;25592:21:641;25649:2;25629:18;;;25622:30;25688:34;25668:18;;;25661:62;-1:-1:-1;;;25739:18:641;;;25732:32;25781:19;;1032:44:332;25408:398:641;2113:404:337;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:337;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:337;2488:12;;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:337;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;9391:415:43;9470:43;9516:53;:51;:53::i;:::-;-1:-1:-1;;;;;9579:22:43;;;;;;:12;;;:22;;;;;:33;;-1:-1:-1;;9579:33:43;;;;;;;;;;;;:12;;-1:-1:-1;9623:129:43;;9651:28;:4;9670:8;9651:18;:28::i;:::-;;9623:129;;;9710:31;:4;9732:8;9710:21;:31::i;:::-;;9623:129;9780:8;-1:-1:-1;;;;;9767:32:43;;9790:8;9767:32;;;;2538:14:641;2531:22;2513:41;;2501:2;2486:18;;2373:187;9767:32:43;;;;;;;;9460:346;9391:415;;:::o;10220:555::-;10314:12;1726:281;10411:11;;;;:4;:11;:::i;:::-;10467:20;;;;:4;:20;:::i;:::-;10450:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10440:49;;;;;;10507:4;:35;;;10560:4;:29;;;;;;;;;;:::i;:::-;10607:27;;;;;;;;:::i;:::-;10652:30;;;;;;;;:::i;:::-;10700:28;;;;;;;;:::i;:::-;10357:411;;;;;;27069:25:641;;;;-1:-1:-1;;;;;27130:32:641;;;27110:18;;;27103:60;;;;27179:18;;;27172:34;;;;27222:18;;;27215:34;;;;-1:-1:-1;;;;;27324:15:641;;;27303:19;;;27296:44;27377:15;;;27356:19;;;27349:44;27430:15;;;10746:8:43;27409:19:641;;;27402:44;;;;27483:15;;27462:19;;;27455:44;10746:8:43;;;27515:19:641;;;27508:35;27041:19;;10357:411:43;;;;;;;;;;;;10338:430;;10220:555;;;:::o;4339:165:333:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8686:4:332;8680:11;-1:-1:-1;;;8704:23:332;;8756:4;8747:14;;8740:39;;;;8808:4;8799:14;;8792:34;8862:4;8847:20;;;8486:397;6922:387:281;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;27756:2:641;7087:69:281;;;27738:21:641;27795:2;27775:18;;;27768:30;27834:34;27814:18;;;27807:62;-1:-1:-1;;;27885:18:641;;;27878:36;27931:19;;7087:69:281;27554:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;5081:1494:332:-;5207:7;;-1:-1:-1;;;;;6118:79:332;;6114:161;;;-1:-1:-1;6229:1:332;;-1:-1:-1;6233:30:332;6213:51;;6114:161;6386:24;;;6369:14;6386:24;;;;;;;;;28467:25:641;;;28540:4;28528:17;;28508:18;;;28501:45;;;;28562:18;;;28555:34;;;28605:18;;;28598:34;;;6386:24:332;;28439:19:641;;6386:24:332;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6386:24:332;;-1:-1:-1;;6386:24:332;;;-1:-1:-1;;;;;;;6424:20:332;;6420:101;;6476:1;6480:29;6460:50;;;;;;;6420:101;6539:6;-1:-1:-1;6547:20:332;;-1:-1:-1;5081:1494:332;;;;;;;;:::o;3143:308:333:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:333;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:333;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:333;;;3392:10;3633:73;;;;29126:25:641;;;;3404:12:333;29167:18:641;;;29160:34;3418:15:333;29210:18:641;;;29203:34;3677:13:333;29253:18:641;;;29246:34;3700:4:333;29296:19:641;;;;29289:61;;;;3633:73:333;;;;;;;;;;29098:19:641;;;;3633:73:333;;;3623:84;;;;;;2974:113:359:o;7529:692:281:-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:641:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:641;247:40;;-1:-1:-1;;;;;302:34:641;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:641:o;426:530::-;468:5;521:3;514:4;506:6;502:17;498:27;488:55;;539:1;536;529:12;488:55;575:6;562:20;-1:-1:-1;;;;;597:2:641;594:26;591:52;;;623:18;;:::i;:::-;667:55;710:2;691:13;;-1:-1:-1;;687:27:641;716:4;683:38;667:55;:::i;:::-;747:2;738:7;731:19;793:3;786:4;781:2;773:6;769:15;765:26;762:35;759:55;;;810:1;807;800:12;759:55;875:2;868:4;860:6;856:17;849:4;840:7;836:18;823:55;923:1;898:16;;;916:4;894:27;887:38;;;;902:7;426:530;-1:-1:-1;;;426:530:641:o;961:388::-;1038:6;1046;1099:2;1087:9;1078:7;1074:23;1070:32;1067:52;;;1115:1;1112;1105:12;1067:52;1151:9;1138:23;1128:33;;1212:2;1201:9;1197:18;1184:32;-1:-1:-1;;;;;1231:6:641;1228:30;1225:50;;;1271:1;1268;1261:12;1225:50;1294:49;1335:7;1326:6;1315:9;1311:22;1294:49;:::i;:::-;1284:59;;;961:388;;;;;:::o;1561:131::-;-1:-1:-1;;;;;1636:31:641;;1626:42;;1616:70;;1682:1;1679;1672:12;1697:162;1763:5;1808:3;1799:6;1794:3;1790:16;1786:26;1783:46;;;1825:1;1822;1815:12;1783:46;-1:-1:-1;1847:6:641;1697:162;-1:-1:-1;1697:162:641:o;1864:504::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2082:9;2069:23;2101:31;2126:5;2101:31;:::i;:::-;2151:5;-1:-1:-1;2207:2:641;2192:18;;2179:32;-1:-1:-1;;;;;2223:30:641;;2220:50;;;2266:1;2263;2256:12;2220:50;2289:73;2354:7;2345:6;2334:9;2330:22;2289:73;:::i;2565:247::-;2624:6;2677:2;2665:9;2656:7;2652:23;2648:32;2645:52;;;2693:1;2690;2683:12;2645:52;2732:9;2719:23;2751:31;2776:5;2751:31;:::i;2817:505::-;2928:6;2936;2944;2997:2;2985:9;2976:7;2972:23;2968:32;2965:52;;;3013:1;3010;3003:12;2965:52;3053:9;3040:23;-1:-1:-1;;;;;3078:6:641;3075:30;3072:50;;;3118:1;3115;3108:12;3072:50;3141:73;3206:7;3197:6;3186:9;3182:22;3141:73;:::i;:::-;3131:83;3261:2;3246:18;;3233:32;;-1:-1:-1;3312:2:641;3297:18;;;3284:32;;2817:505;-1:-1:-1;;;;2817:505:641:o;3509:347::-;3560:8;3570:6;3624:3;3617:4;3609:6;3605:17;3601:27;3591:55;;3642:1;3639;3632:12;3591:55;-1:-1:-1;3665:20:641;;-1:-1:-1;;;;;3697:30:641;;3694:50;;;3740:1;3737;3730:12;3694:50;3777:4;3769:6;3765:17;3753:29;;3829:3;3822:4;3813:6;3805;3801:19;3797:30;3794:39;3791:59;;;3846:1;3843;3836:12;3861:712;3984:6;3992;4000;4053:2;4041:9;4032:7;4028:23;4024:32;4021:52;;;4069:1;4066;4059:12;4021:52;4109:9;4096:23;-1:-1:-1;;;;;4179:2:641;4171:6;4168:14;4165:34;;;4195:1;4192;4185:12;4165:34;4218:22;;;;4274:3;4256:16;;;4252:26;4249:46;;;4291:1;4288;4281:12;4249:46;4314:2;;-1:-1:-1;4369:2:641;4354:18;;4341:32;;4385:16;;;4382:36;;;4414:1;4411;4404:12;4382:36;;4453:60;4505:7;4494:8;4483:9;4479:24;4453:60;:::i;:::-;3861:712;;4532:8;;-1:-1:-1;4427:86:641;;-1:-1:-1;;;;3861:712:641:o;4578:416::-;4643:6;4651;4704:2;4692:9;4683:7;4679:23;4675:32;4672:52;;;4720:1;4717;4710:12;4672:52;4759:9;4746:23;4778:31;4803:5;4778:31;:::i;:::-;4828:5;-1:-1:-1;4885:2:641;4870:18;;4857:32;4927:15;;4920:23;4908:36;;4898:64;;4958:1;4955;4948:12;4898:64;4981:7;4971:17;;;4578:416;;;;;:::o;4999:323::-;5075:6;5083;5136:2;5124:9;5115:7;5111:23;5107:32;5104:52;;;5152:1;5149;5142:12;5104:52;5191:9;5178:23;5210:31;5235:5;5210:31;:::i;:::-;5260:5;5312:2;5297:18;;;;5284:32;;-1:-1:-1;;;4999:323:641:o;5616:104::-;-1:-1:-1;;;;;5682:31:641;5670:44;;5616:104::o;5725:986::-;5892:12;;-1:-1:-1;;;;;5888:21:641;;;5876:34;;5929:4;5968:14;;;5962:21;5824:4;5999:12;;;5992:26;;;6067:19;;5815:14;;;6095:20;;;5785:3;;6169:21;;;;5929:4;5785:3;;6142;6133:13;;;6218:184;6232:6;6229:1;6226:13;6218:184;;;6299:13;;6295:22;;6281:37;;6377:15;;;;6254:1;6247:9;;;;;6340:14;;;;6218:184;;;6222:3;6451:4;6444:5;6440:16;6434:23;6427:4;6422:3;6418:14;6411:47;6506:4;6499:5;6495:16;6489:23;6467:45;;6521:50;6565:4;6560:3;6556:14;6540;6521:50;:::i;:::-;6619:4;6612:5;6608:16;6602:23;6580:45;;6634:50;6678:4;6673:3;6669:14;6653;6634:50;:::i;:::-;6700:5;5725:986;-1:-1:-1;;;;;;;5725:986:641:o;6716:873::-;6930:4;6959:2;6999;6988:9;6984:18;7029:2;7018:9;7011:21;7052:6;7087;7081:13;7118:6;7110;7103:22;7156:2;7145:9;7141:18;7134:25;;7218:2;7208:6;7205:1;7201:14;7190:9;7186:30;7182:39;7168:53;;7256:2;7248:6;7244:15;7277:1;7287:273;7301:6;7298:1;7295:13;7287:273;;;7394:2;7390:7;7378:9;7370:6;7366:22;7362:36;7357:3;7350:49;7422:58;7473:6;7464;7458:13;7422:58;:::i;:::-;7412:68;-1:-1:-1;7538:12:641;;;;7503:15;;;;7323:1;7316:9;7287:273;;;-1:-1:-1;7577:6:641;;6716:873;-1:-1:-1;;;;;;;6716:873:641:o;7594:626::-;7691:6;7699;7752:2;7740:9;7731:7;7727:23;7723:32;7720:52;;;7768:1;7765;7758:12;7720:52;7808:9;7795:23;-1:-1:-1;;;;;7878:2:641;7870:6;7867:14;7864:34;;;7894:1;7891;7884:12;7864:34;7932:6;7921:9;7917:22;7907:32;;7977:7;7970:4;7966:2;7962:13;7958:27;7948:55;;7999:1;7996;7989:12;7948:55;8039:2;8026:16;8065:2;8057:6;8054:14;8051:34;;;8081:1;8078;8071:12;8051:34;8134:7;8129:2;8119:6;8116:1;8112:14;8108:2;8104:23;8100:32;8097:45;8094:65;;;8155:1;8152;8145:12;8094:65;8186:2;8178:11;;;;;8208:6;;-1:-1:-1;7594:626:641;;-1:-1:-1;;;;7594:626:641:o;8225:258::-;8297:1;8307:113;8321:6;8318:1;8315:13;8307:113;;;8397:11;;;8391:18;8378:11;;;8371:39;8343:2;8336:10;8307:113;;;8438:6;8435:1;8432:13;8429:48;;;8473:1;8464:6;8459:3;8455:16;8448:27;8429:48;;8225:258;;;:::o;8488:257::-;8529:3;8567:5;8561:12;8594:6;8589:3;8582:19;8610:63;8666:6;8659:4;8654:3;8650:14;8643:4;8636:5;8632:16;8610:63;:::i;:::-;8727:2;8706:15;-1:-1:-1;;8702:29:641;8693:39;;;;8734:4;8689:50;;8488:257;-1:-1:-1;;8488:257:641:o;8750:800::-;8910:4;8939:2;8979;8968:9;8964:18;9009:2;8998:9;8991:21;9032:6;9067;9061:13;9098:6;9090;9083:22;9136:2;9125:9;9121:18;9114:25;;9198:2;9188:6;9185:1;9181:14;9170:9;9166:30;9162:39;9148:53;;9236:2;9228:6;9224:15;9257:1;9267:254;9281:6;9278:1;9275:13;9267:254;;;9374:2;9370:7;9358:9;9350:6;9346:22;9342:36;9337:3;9330:49;9402:39;9434:6;9425;9419:13;9402:39;:::i;:::-;9392:49;-1:-1:-1;9499:12:641;;;;9464:15;;;;9303:1;9296:9;9267:254;;9555:224;-1:-1:-1;;;;;9740:32:641;;;;9722:51;;9710:2;9695:18;;9555:224::o;9992:544::-;10071:6;10079;10087;10140:2;10128:9;10119:7;10115:23;10111:32;10108:52;;;10156:1;10153;10146:12;10108:52;10195:9;10182:23;10214:31;10239:5;10214:31;:::i;:::-;10264:5;-1:-1:-1;10320:2:641;10305:18;;10292:32;-1:-1:-1;;;;;10336:30:641;;10333:50;;;10379:1;10376;10369:12;10333:50;10418:58;10468:7;10459:6;10448:9;10444:22;10418:58;:::i;10541:658::-;10712:2;10764:21;;;10834:13;;10737:18;;;10856:22;;;10683:4;;10712:2;10935:15;;;;10909:2;10894:18;;;10683:4;10978:195;10992:6;10989:1;10986:13;10978:195;;;11057:13;;-1:-1:-1;;;;;11053:39:641;11041:52;;11148:15;;;;11113:12;;;;11089:1;11007:9;10978:195;;;-1:-1:-1;11190:3:641;;10541:658;-1:-1:-1;;;;;;10541:658:641:o;11204:290::-;11405:2;11394:9;11387:21;11368:4;11425:63;11484:2;11473:9;11469:18;11461:6;11425:63;:::i;11904:521::-;11981:4;11987:6;12047:11;12034:25;12141:2;12137:7;12126:8;12110:14;12106:29;12102:43;12082:18;12078:68;12068:96;;12160:1;12157;12150:12;12068:96;12187:33;;12239:20;;;-1:-1:-1;;;;;;12271:30:641;;12268:50;;;12314:1;12311;12304:12;12268:50;12347:4;12335:17;;-1:-1:-1;12378:14:641;12374:27;;;12364:38;;12361:58;;;12415:1;12412;12405:12;12430:127;12491:10;12486:3;12482:20;12479:1;12472:31;12522:4;12519:1;12512:15;12546:4;12543:1;12536:15;12562:127;12623:10;12618:3;12614:20;12611:1;12604:31;12654:4;12651:1;12644:15;12678:4;12675:1;12668:15;12694:135;12733:3;-1:-1:-1;;12754:17:641;;12751:43;;;12774:18;;:::i;:::-;-1:-1:-1;12821:1:641;12810:13;;12694:135::o;13249:173::-;13317:20;;-1:-1:-1;;;;;13366:31:641;;13356:42;;13346:70;;13412:1;13409;13402:12;13346:70;13249:173;;;:::o;13427:186::-;13486:6;13539:2;13527:9;13518:7;13514:23;13510:32;13507:52;;;13555:1;13552;13545:12;13507:52;13578:29;13597:9;13578:29;:::i;14444:128::-;14484:3;14515:1;14511:6;14508:1;14505:13;14502:39;;;14521:18;;:::i;:::-;-1:-1:-1;14557:9:641;;14444:128::o;14577:545::-;14670:4;14676:6;14736:11;14723:25;14830:2;14826:7;14815:8;14799:14;14795:29;14791:43;14771:18;14767:68;14757:96;;14849:1;14846;14839:12;14757:96;14876:33;;14928:20;;;-1:-1:-1;;;;;;14960:30:641;;14957:50;;;15003:1;15000;14993:12;14957:50;15036:4;15024:17;;-1:-1:-1;15087:1:641;15083:14;;;15067;15063:35;15053:46;;15050:66;;;15112:1;15109;15102:12;15127:523;15197:5;15204:6;15264:3;15251:17;15350:2;15346:7;15335:8;15319:14;15315:29;15311:43;15291:18;15287:68;15277:96;;15369:1;15366;15359:12;15277:96;15397:33;;15501:4;15488:18;;;-1:-1:-1;15449:21:641;;-1:-1:-1;;;;;;15518:30:641;;15515:50;;;15561:1;15558;15551:12;15515:50;15618:6;15615:1;15611:14;15595;15591:35;15581:8;15577:50;15574:70;;;15640:1;15637;15630:12;15655:522;15755:6;15750:3;15743:19;15725:3;15781:4;15810:2;15805:3;15801:12;15794:19;;15836:5;15859:1;15869:283;15883:6;15880:1;15877:13;15869:283;;;15960:6;15947:20;15980:33;16005:7;15980:33;:::i;:::-;-1:-1:-1;;;;;16038:33:641;16026:46;;16092:12;;;;16127:15;;;;16068:1;15898:9;15869:283;;;-1:-1:-1;16168:3:641;;15655:522;-1:-1:-1;;;;;15655:522:641:o;16182:1336::-;16397:2;16386:9;16379:21;16360:4;16435:6;16422:20;16451:31;16476:5;16451:31;:::i;:::-;-1:-1:-1;;;;;16518:31:641;16513:2;16498:18;;;16491:59;;;;16593:67;;16644:15;;16648:6;16593:67;:::i;:::-;16679:6;16721:2;16716;16705:9;16701:18;16694:30;16747:86;16828:3;16817:9;16813:19;16799:12;16785;16747:86;:::i;:::-;16733:100;;16894:2;16886:6;16882:15;16869:29;16864:2;16853:9;16849:18;16842:57;16930:35;16961:2;16953:6;16949:15;16930:35;:::i;:::-;16908:57;;16974:55;17024:3;17013:9;17009:19;16993:14;16974:55;:::i;:::-;17060:36;17091:3;17083:6;17079:16;17060:36;:::i;:::-;17038:58;;17105:55;17155:3;17144:9;17140:19;17124:14;17105:55;:::i;:::-;17191:36;17222:3;17214:6;17210:16;17191:36;:::i;:::-;17169:58;;17236:55;17286:3;17275:9;17271:19;17255:14;17236:55;:::i;:::-;17322:36;17353:3;17345:6;17341:16;17322:36;:::i;:::-;17300:58;;17367:55;17417:3;17406:9;17402:19;17386:14;17367:55;:::i;:::-;17483:3;17475:6;17471:16;17458:30;17453:2;17442:9;17438:18;17431:58;;;17506:6;17498:14;;;16182:1336;;;;:::o;17523:406::-;17725:2;17707:21;;;17764:2;17744:18;;;17737:30;17803:34;17798:2;17783:18;;17776:62;-1:-1:-1;;;17869:2:641;17854:18;;17847:40;17919:3;17904:19;;17523:406::o;18229:184::-;18299:6;18352:2;18340:9;18331:7;18327:23;18323:32;18320:52;;;18368:1;18365;18358:12;18320:52;-1:-1:-1;18391:16:641;;18229:184;-1:-1:-1;18229:184:641:o;19345:338::-;19547:2;19529:21;;;19586:2;19566:18;;;19559:30;-1:-1:-1;;;19620:2:641;19605:18;;19598:44;19674:2;19659:18;;19345:338::o;19688:331::-;19793:9;19804;19846:8;19834:10;19831:24;19828:44;;;19868:1;19865;19858:12;19828:44;19897:6;19887:8;19884:20;19881:40;;;19917:1;19914;19907:12;19881:40;-1:-1:-1;;19943:23:641;;;19988:25;;;;;-1:-1:-1;19688:331:641:o;20024:323::-;-1:-1:-1;;;;;;20144:19:641;;20220:11;;;;20251:1;20243:10;;20240:101;;;20328:2;20322;20315:3;20312:1;20308:11;20305:1;20301:19;20297:28;20293:2;20289:37;20285:46;20276:55;;20240:101;;;20024:323;;;;:::o;20612:180::-;20671:6;20724:2;20712:9;20703:7;20699:23;20695:32;20692:52;;;20740:1;20737;20730:12;20692:52;-1:-1:-1;20763:23:641;;20612:180;-1:-1:-1;20612:180:641:o;20797:183::-;20857:4;-1:-1:-1;;;;;20882:6:641;20879:30;20876:56;;;20912:18;;:::i;:::-;-1:-1:-1;20957:1:641;20953:14;20969:4;20949:25;;20797:183::o;20985:662::-;21039:5;21092:3;21085:4;21077:6;21073:17;21069:27;21059:55;;21110:1;21107;21100:12;21059:55;21146:6;21133:20;21172:4;21196:60;21212:43;21252:2;21212:43;:::i;:::-;21196:60;:::i;:::-;21290:15;;;21376:1;21372:10;;;;21360:23;;21356:32;;;21321:12;;;;21400:15;;;21397:35;;;21428:1;21425;21418:12;21397:35;21464:2;21456:6;21452:15;21476:142;21492:6;21487:3;21484:15;21476:142;;;21558:17;;21546:30;;21596:12;;;;21509;;21476:142;;;-1:-1:-1;21636:5:641;20985:662;-1:-1:-1;;;;;;20985:662:641:o;21652:886::-;21704:5;21757:3;21750:4;21742:6;21738:17;21734:27;21724:55;;21775:1;21772;21765:12;21724:55;21811:6;21798:20;21837:4;21861:60;21877:43;21917:2;21877:43;:::i;21861:60::-;21955:15;;;22041:1;22037:10;;;;22025:23;;22021:32;;;21986:12;;;;22065:15;;;22062:35;;;22093:1;22090;22083:12;22062:35;22129:2;22121:6;22117:15;22141:368;22157:6;22152:3;22149:15;22141:368;;;22243:3;22230:17;-1:-1:-1;;;;;22266:11:641;22263:35;22260:125;;;22339:1;22368:2;22364;22357:14;22260:125;22410:56;22462:3;22457:2;22443:11;22435:6;22431:24;22427:33;22410:56;:::i;:::-;22398:69;;-1:-1:-1;22487:12:641;;;;22174;;22141:368;;22543:1448;22704:6;22712;22720;22773:2;22761:9;22752:7;22748:23;22744:32;22741:52;;;22789:1;22786;22779:12;22741:52;22829:9;22816:23;-1:-1:-1;;;;;22899:2:641;22891:6;22888:14;22885:34;;;22915:1;22912;22905:12;22885:34;22953:6;22942:9;22938:22;22928:32;;22998:7;22991:4;22987:2;22983:13;22979:27;22969:55;;23020:1;23017;23010:12;22969:55;23056:2;23043:16;23078:4;23102:60;23118:43;23158:2;23118:43;:::i;23102:60::-;23196:15;;;23278:1;23274:10;;;;23266:19;;23262:28;;;23227:12;;;;23302:19;;;23299:39;;;23334:1;23331;23324:12;23299:39;23358:11;;;;23378:217;23394:6;23389:3;23386:15;23378:217;;;23474:3;23461:17;23491:31;23516:5;23491:31;:::i;:::-;23535:18;;23411:12;;;;23573;;;;23378:217;;;23614:5;-1:-1:-1;;23657:18:641;;23644:32;;-1:-1:-1;;23688:16:641;;;23685:36;;;23717:1;23714;23707:12;23685:36;23740:63;23795:7;23784:8;23773:9;23769:24;23740:63;:::i;:::-;23730:73;;23856:2;23845:9;23841:18;23828:32;23812:48;;23885:2;23875:8;23872:16;23869:36;;;23901:1;23898;23891:12;23869:36;;23924:61;23977:7;23966:8;23955:9;23951:24;23924:61;:::i;:::-;23914:71;;;22543:1448;;;;;:::o;24563:127::-;24624:10;24619:3;24615:20;24612:1;24605:31;24655:4;24652:1;24645:15;24679:4;24676:1;24669:15;25811:125;25851:4;25879:1;25876;25873:8;25870:34;;;25884:18;;:::i;:::-;-1:-1:-1;25921:9:641;;25811:125::o;25941:127::-;26002:10;25997:3;25993:20;25990:1;25983:31;26033:4;26030:1;26023:15;26057:4;26054:1;26047:15;26073:620;26244:3;26275;26322:6;26244:3;26356:310;26370:6;26367:1;26364:13;26356:310;;;26445:6;26432:20;26465:31;26490:5;26465:31;:::i;:::-;-1:-1:-1;;;;;26523:31:641;26509:46;;26578:4;26604:14;;;;26641:15;;;;;26551:1;26385:9;26356:310;;;-1:-1:-1;26682:5:641;;26073:620;-1:-1:-1;;;;;26073:620:641:o;27961:274::-;28090:3;28128:6;28122:13;28144:53;28190:6;28185:3;28178:4;28170:6;28166:17;28144:53;:::i;:::-;28213:16;;;;;27961:274;-1:-1:-1;;27961:274:641:o;28643:219::-;28792:2;28781:9;28774:21;28755:4;28812:44;28852:2;28841:9;28837:18;28829:6;28812:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "79909": [
        {
          "start": 8602,
          "length": 32
        }
      ],
      "79911": [
        {
          "start": 8560,
          "length": 32
        }
      ],
      "79913": [
        {
          "start": 8518,
          "length": 32
        }
      ],
      "79915": [
        {
          "start": 8685,
          "length": 32
        }
      ],
      "79917": [
        {
          "start": 8722,
          "length": 32
        }
      ],
      "79919": [
        {
          "start": 8643,
          "length": 32
        }
      ],
      "87556": [
        {
          "start": 796,
          "length": 32
        },
        {
          "start": 6271,
          "length": 32
        },
        {
          "start": 6319,
          "length": 32
        },
        {
          "start": 6443,
          "length": 32
        },
        {
          "start": 6510,
          "length": 32
        },
        {
          "start": 6586,
          "length": 32
        }
      ],
      "87560": [
        {
          "start": 4351,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addDeposit()": "4a58db19",
    "entryPoint()": "b0d691fe",
    "factory()": "c45a0155",
    "getAllActiveSigners()": "8b52d723",
    "getAllAdmins()": "e9523c97",
    "getAllSigners()": "d42f2f35",
    "getDeposit()": "c399ec88",
    "getNonce()": "d087d288",
    "getPermissionsForSigner(address)": "f15d424e",
    "initialize(address,bytes)": "d1f57894",
    "isActiveSigner(address)": "7dff5a79",
    "isAdmin(address)": "24d7806c",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "1dd756c5",
    "multicall(bytes[])": "ac9650d8",
    "setAdmin(address,bool)": "4b0bddd2",
    "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "40053da6",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd",
    "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "73e925d6",
    "withdrawDepositTo(address,uint256)": "4d44560d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entrypoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizingSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"name\":\"SignerPermissionsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getPermissionsForSigner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isActiveSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"_userOp\",\"type\":\"tuple\"}],\"name\":\"isValidSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"setPermissionsForSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifySignerPermissionRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a request is signed by an authorized account.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AdminUpdated(address,bool)\":{\"notice\":\"Emitted when an admin is set or removed.\"},\"SignerPermissionsUpdated(address,address,(address,address[],uint256,uint128,uint128,uint128,uint128,bytes32))\":{\"notice\":\"Emitted when permissions for a signer are updated.\"}},\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"Deposit funds for this account in Entrypoint.\"},\"entryPoint()\":{\"notice\":\"Returns the EIP 4337 entrypoint contract.\"},\"factory()\":{\"notice\":\"EIP 4337 factory for this contract.\"},\"getAllActiveSigners()\":{\"notice\":\"Returns all signers with active permissions to use the account.\"},\"getAllAdmins()\":{\"notice\":\"Returns all admins of the account.\"},\"getAllSigners()\":{\"notice\":\"Returns all active and inactive signers of the account.\"},\"getDeposit()\":{\"notice\":\"Returns the balance of the account in Entrypoint.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"getPermissionsForSigner(address)\":{\"notice\":\"Returns the restrictions under which a signer can use the smart wallet.\"},\"initialize(address,bytes)\":{\"notice\":\"Initializes the smart contract wallet.\"},\"isActiveSigner(address)\":{\"notice\":\"Returns whether the given account is an active signer on the account.\"},\"isAdmin(address)\":{\"notice\":\"Returns whether the given account is an admin.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"See EIP-1271\"},\"isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Returns whether a signer is authorized to perform transactions using the wallet.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"setAdmin(address,bool)\":{\"notice\":\"Adds / removes an account as an admin.\"},\"setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Sets the permissions for a given signer.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"Withdraw funds for this account from Entrypoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-wallet/utils/AccountCore.sol\":\"AccountCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/dynamic-contracts/extension/AccountPermissions.sol\":{\"keccak256\":\"0x2eca45db646ff0ab71de0103be8e5938811a37cc2e39b6773dfa3da44614984b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93620992c6c9217dda222ea1d3562223b9e43d98f7afa4aad7ef4dcb265688c8\",\"dweb:/ipfs/QmdPwpRYVMjZb1fry14y2wLEDw8Sz4yzQbB2esfcJYJPob\"]},\"contracts/dynamic-contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a\",\"dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM\"]},\"contracts/dynamic-contracts/extension/Initializable.sol\":{\"keccak256\":\"0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d\",\"dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d\"]},\"contracts/eip/ERC1271.sol\":{\"keccak256\":\"0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0\",\"dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/interface/IAccountPermissions.sol\":{\"keccak256\":\"0xa2c0ef93db11c301cac994d254caa4a41d2a2d10184305806bcfa89be6944fa0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0bd17a3fba00aa55f8b5f4b8b96b1697cd99a0f16aa5f89cdb3441d144699850\",\"dweb:/ipfs/QmPkHohPxsZtp9B22i7EEkK2XrrmveyMy1rSYUGiWjU828\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/lib/BytesLib.sol\":{\"keccak256\":\"0xbed6b32c32e2fdbc25ffc9569b5ce8655b321ade31dff76fa2edcae97e56239c\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2b068bd88b6141b2c501dffe39959b02bc39c3dcec9e7c4f6201d347d1f3c73f\",\"dweb:/ipfs/QmXXpP5roDyhBz1uPFRx6i3A9tzrPY4rcdo2GQ6THSmz2K\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"contracts/openzeppelin-presets/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x9d3695e1e674322cf8914e748c87a2f3d01b3ea025ba1a4a65edf313d097ab76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b891b34602e0028ba9bd4d021645e6966e7bdd7d8926dff45fa0b0da3b290214\",\"dweb:/ipfs/QmQdodZQoaMCH5eCjv3ymdgDU4rJ5gNbx3zBdmWUczF3pv\"]},\"contracts/openzeppelin-presets/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/openzeppelin-presets/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x4cae1e8db957cc048252f55d6aecd00b2e83668efc2501f99afc44539c60684a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2921ee18b1d9f9e11880ad9c945b9d4f278b03441e9a6fd4d6316588331c4d\",\"dweb:/ipfs/QmScMvJNDthnuV6S78KNMSZ4DiduJLu82yjVweYbRzMfKG\"]},\"contracts/openzeppelin-presets/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/openzeppelin-presets/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8\",\"dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN\"]},\"contracts/openzeppelin-presets/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/smart-wallet/interfaces/IAccount.sol\":{\"keccak256\":\"0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c\",\"dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL\"]},\"contracts/smart-wallet/interfaces/IAccountCore.sol\":{\"keccak256\":\"0x9fc16418535a5b39d0fd6046e37b245cf57c210a661f1a2e5faf789bfbc745e9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://0d1a4cc4ef21e4fc64e9d647a8d96ae374a1c00ee39d4e4ec26f400253883479\",\"dweb:/ipfs/QmYEZLgNGcaSSaxhw8h9UkYYfnXsFCVVKJuUg8Gm8H36UT\"]},\"contracts/smart-wallet/interfaces/IAccountFactory.sol\":{\"keccak256\":\"0x11fe2002d11d6d3341ae611e767f510ccd6bca402414d2bac4d8c208903f9bcb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://47b4d123bfa8f53cd0862c2e23dbc1297f9c0b76a3f7174e304e942e68bd53ad\",\"dweb:/ipfs/QmNcTheTGy1NgPyAAi1k7vPjcUsYz1t7wrha39HSqjo91e\"]},\"contracts/smart-wallet/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e\",\"dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ\"]},\"contracts/smart-wallet/interfaces/IEntrypoint.sol\":{\"keccak256\":\"0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114\",\"dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK\"]},\"contracts/smart-wallet/interfaces/INonceManager.sol\":{\"keccak256\":\"0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4\",\"dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp\"]},\"contracts/smart-wallet/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"contracts/smart-wallet/non-upgradeable/Account.sol\":{\"keccak256\":\"0x79e4e8f75d70573a8ea011e2c6cff01166ea8e84c83096f25187e74a3c0ecd2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://373588f70bd93b7fd14aee6df5819ae2a928c3c561d3eb9245ae2d063417a1b0\",\"dweb:/ipfs/QmPYSQu9FzhEG2tDdH7kvxQHNxkEtAZsdVZkJgPF5bT5bF\"]},\"contracts/smart-wallet/utils/AccountCore.sol\":{\"keccak256\":\"0x428c4c6f9b8768194909f6252410dca84b3f7009ef9808eae1a90262b01194e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64fa589687490018968f4a3ccae69f657e1cd50cd6721b9a753f99231a78ab1f\",\"dweb:/ipfs/QmRD7TWrnKtPZirdsqVVPTj4cnJsuCST6eLFA7P1tvpZp8\"]},\"contracts/smart-wallet/utils/BaseAccount.sol\":{\"keccak256\":\"0xdd1a564a2151cd6ee4d0cea6a2a4bd02e678600761f784ce909493228a80e69c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460dac3ad82f86bed2d6e33ec36a4c5f61b87e1135fe1fee18f6be3a2246fa67\",\"dweb:/ipfs/QmcoQaEux8rDgfgG1xPadAH5uviBv8oS3JHC3sc6fMRasb\"]},\"contracts/smart-wallet/utils/BaseAccountFactory.sol\":{\"keccak256\":\"0x3a26e6dcf84a38c6791a0f0ed75eb1d05538720e6633f06100f61aeeb12c953d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5f5d3b0c52ace8421b5ddcd3f43296982755696ffbaf8f52cd182031f55c43fc\",\"dweb:/ipfs/QmTMjfoWnRt7RaMgtQfMf92asfG8sQTA45KWgbVeqGiU6C\"]},\"contracts/smart-wallet/utils/Helpers.sol\":{\"keccak256\":\"0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561\",\"dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh\"]},\"contracts/smart-wallet/utils/UserOperation.sol\":{\"keccak256\":\"0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5\",\"dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entrypoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isAdmin",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authorizingSigner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetSigner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "permissions",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SignerPermissionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllActiveSigners",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions[]",
              "name": "signers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAdmins",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllSigners",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions[]",
              "name": "signers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPermissionsForSigner",
          "outputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissions",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "startTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "endTimestamp",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActiveSigner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "struct UserOperation",
              "name": "_userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSigner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isAdmin",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermissionsForSigner"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAccountPermissions.SignerPermissionRequest",
              "name": "req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "approvedTargets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "nativeTokenLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "permissionEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "reqValidityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifySignerPermissionRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawDepositTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "verifySignerPermissionRequest((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a request is signed by an authorized account."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDeposit()": {
            "notice": "Deposit funds for this account in Entrypoint."
          },
          "entryPoint()": {
            "notice": "Returns the EIP 4337 entrypoint contract."
          },
          "factory()": {
            "notice": "EIP 4337 factory for this contract."
          },
          "getAllActiveSigners()": {
            "notice": "Returns all signers with active permissions to use the account."
          },
          "getAllAdmins()": {
            "notice": "Returns all admins of the account."
          },
          "getAllSigners()": {
            "notice": "Returns all active and inactive signers of the account."
          },
          "getDeposit()": {
            "notice": "Returns the balance of the account in Entrypoint."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "getPermissionsForSigner(address)": {
            "notice": "Returns the restrictions under which a signer can use the smart wallet."
          },
          "initialize(address,bytes)": {
            "notice": "Initializes the smart contract wallet."
          },
          "isActiveSigner(address)": {
            "notice": "Returns whether the given account is an active signer on the account."
          },
          "isAdmin(address)": {
            "notice": "Returns whether the given account is an admin."
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "See EIP-1271"
          },
          "isValidSigner(address,(address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Returns whether a signer is authorized to perform transactions using the wallet."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "setAdmin(address,bool)": {
            "notice": "Adds / removes an account as an admin."
          },
          "setPermissionsForSigner((address,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
            "notice": "Sets the permissions for a given signer."
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          },
          "withdrawDepositTo(address,uint256)": {
            "notice": "Withdraw funds for this account from Entrypoint."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/smart-wallet/utils/AccountCore.sol": "AccountCore"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dynamic-contracts/extension/AccountPermissions.sol": {
        "keccak256": "0x2eca45db646ff0ab71de0103be8e5938811a37cc2e39b6773dfa3da44614984b",
        "urls": [
          "bzz-raw://93620992c6c9217dda222ea1d3562223b9e43d98f7afa4aad7ef4dcb265688c8",
          "dweb:/ipfs/QmdPwpRYVMjZb1fry14y2wLEDw8Sz4yzQbB2esfcJYJPob"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/ContractMetadata.sol": {
        "keccak256": "0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33",
        "urls": [
          "bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a",
          "dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Initializable.sol": {
        "keccak256": "0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685",
        "urls": [
          "bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d",
          "dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/ERC1271.sol": {
        "keccak256": "0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e",
        "urls": [
          "bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0",
          "dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IAccountPermissions.sol": {
        "keccak256": "0xa2c0ef93db11c301cac994d254caa4a41d2a2d10184305806bcfa89be6944fa0",
        "urls": [
          "bzz-raw://0bd17a3fba00aa55f8b5f4b8b96b1697cd99a0f16aa5f89cdb3441d144699850",
          "dweb:/ipfs/QmPkHohPxsZtp9B22i7EEkK2XrrmveyMy1rSYUGiWjU828"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/lib/BytesLib.sol": {
        "keccak256": "0xbed6b32c32e2fdbc25ffc9569b5ce8655b321ade31dff76fa2edcae97e56239c",
        "urls": [
          "bzz-raw://2b068bd88b6141b2c501dffe39959b02bc39c3dcec9e7c4f6201d347d1f3c73f",
          "dweb:/ipfs/QmXXpP5roDyhBz1uPFRx6i3A9tzrPY4rcdo2GQ6THSmz2K"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0x9d3695e1e674322cf8914e748c87a2f3d01b3ea025ba1a4a65edf313d097ab76",
        "urls": [
          "bzz-raw://b891b34602e0028ba9bd4d021645e6966e7bdd7d8926dff45fa0b0da3b290214",
          "dweb:/ipfs/QmQdodZQoaMCH5eCjv3ymdgDU4rJ5gNbx3zBdmWUczF3pv"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x4cae1e8db957cc048252f55d6aecd00b2e83668efc2501f99afc44539c60684a",
        "urls": [
          "bzz-raw://ae2921ee18b1d9f9e11880ad9c945b9d4f278b03441e9a6fd4d6316588331c4d",
          "dweb:/ipfs/QmScMvJNDthnuV6S78KNMSZ4DiduJLu82yjVweYbRzMfKG"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e",
        "urls": [
          "bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8",
          "dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "contracts/smart-wallet/interfaces/IAccount.sol": {
        "keccak256": "0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41",
        "urls": [
          "bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c",
          "dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IAccountCore.sol": {
        "keccak256": "0x9fc16418535a5b39d0fd6046e37b245cf57c210a661f1a2e5faf789bfbc745e9",
        "urls": [
          "bzz-raw://0d1a4cc4ef21e4fc64e9d647a8d96ae374a1c00ee39d4e4ec26f400253883479",
          "dweb:/ipfs/QmYEZLgNGcaSSaxhw8h9UkYYfnXsFCVVKJuUg8Gm8H36UT"
        ],
        "license": "Apache 2.0"
      },
      "contracts/smart-wallet/interfaces/IAccountFactory.sol": {
        "keccak256": "0x11fe2002d11d6d3341ae611e767f510ccd6bca402414d2bac4d8c208903f9bcb",
        "urls": [
          "bzz-raw://47b4d123bfa8f53cd0862c2e23dbc1297f9c0b76a3f7174e304e942e68bd53ad",
          "dweb:/ipfs/QmNcTheTGy1NgPyAAi1k7vPjcUsYz1t7wrha39HSqjo91e"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IAggregator.sol": {
        "keccak256": "0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873",
        "urls": [
          "bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e",
          "dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IEntrypoint.sol": {
        "keccak256": "0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d",
        "urls": [
          "bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114",
          "dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/INonceManager.sol": {
        "keccak256": "0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3",
        "urls": [
          "bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4",
          "dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/smart-wallet/non-upgradeable/Account.sol": {
        "keccak256": "0x79e4e8f75d70573a8ea011e2c6cff01166ea8e84c83096f25187e74a3c0ecd2f",
        "urls": [
          "bzz-raw://373588f70bd93b7fd14aee6df5819ae2a928c3c561d3eb9245ae2d063417a1b0",
          "dweb:/ipfs/QmPYSQu9FzhEG2tDdH7kvxQHNxkEtAZsdVZkJgPF5bT5bF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/smart-wallet/utils/AccountCore.sol": {
        "keccak256": "0x428c4c6f9b8768194909f6252410dca84b3f7009ef9808eae1a90262b01194e4",
        "urls": [
          "bzz-raw://64fa589687490018968f4a3ccae69f657e1cd50cd6721b9a753f99231a78ab1f",
          "dweb:/ipfs/QmRD7TWrnKtPZirdsqVVPTj4cnJsuCST6eLFA7P1tvpZp8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/smart-wallet/utils/BaseAccount.sol": {
        "keccak256": "0xdd1a564a2151cd6ee4d0cea6a2a4bd02e678600761f784ce909493228a80e69c",
        "urls": [
          "bzz-raw://460dac3ad82f86bed2d6e33ec36a4c5f61b87e1135fe1fee18f6be3a2246fa67",
          "dweb:/ipfs/QmcoQaEux8rDgfgG1xPadAH5uviBv8oS3JHC3sc6fMRasb"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/utils/BaseAccountFactory.sol": {
        "keccak256": "0x3a26e6dcf84a38c6791a0f0ed75eb1d05538720e6633f06100f61aeeb12c953d",
        "urls": [
          "bzz-raw://5f5d3b0c52ace8421b5ddcd3f43296982755696ffbaf8f52cd182031f55c43fc",
          "dweb:/ipfs/QmTMjfoWnRt7RaMgtQfMf92asfG8sQTA45KWgbVeqGiU6C"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/utils/Helpers.sol": {
        "keccak256": "0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7",
        "urls": [
          "bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561",
          "dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/utils/UserOperation.sol": {
        "keccak256": "0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964",
        "urls": [
          "bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5",
          "dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/smart-wallet/utils/AccountCore.sol",
    "id": 88113,
    "exportedSymbols": {
      "Account": [
        87437
      ],
      "AccountCore": [
        88112
      ],
      "AccountPermissions": [
        19690
      ],
      "AccountPermissionsStorage": [
        18933
      ],
      "BaseAccount": [
        88522
      ],
      "BaseAccountFactory": [
        88878
      ],
      "BytesLib": [
        64248
      ],
      "Clones": [
        76025
      ],
      "ECDSA": [
        79903
      ],
      "EIP712": [
        80057
      ],
      "ERC1271": [
        26771
      ],
      "EnumerableSet": [
        81449
      ],
      "IAccount": [
        85983
      ],
      "IAccountCore": [
        86001
      ],
      "IAccountFactory": [
        86079
      ],
      "IAccountPermissions": [
        49393
      ],
      "IAggregator": [
        86113
      ],
      "IEntryPoint": [
        86317
      ],
      "IMulticall": [
        50168
      ],
      "INonceManager": [
        86336
      ],
      "IStakeManager": [
        86476
      ],
      "InitStorage": [
        21662
      ],
      "Initializable": [
        21884
      ],
      "Multicall": [
        37872
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ],
      "UserOperation": [
        92406
      ],
      "UserOperationLib": [
        92576
      ],
      "ValidationData": [
        91456
      ],
      "_intersectTimeRange": [
        91600
      ],
      "_packValidationData": [
        91637,
        91675
      ],
      "_parseValidationData": [
        91515
      ],
      "calldataKeccak": [
        91685
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9433:359",
    "nodes": [
      {
        "id": 87524,
        "nodeType": "PragmaDirective",
        "src": "39:24:359",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 87525,
        "nodeType": "ImportDirective",
        "src": "195:36:359",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/utils/BaseAccount.sol",
        "file": "./../utils/BaseAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 88523,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87526,
        "nodeType": "ImportDirective",
        "src": "253:39:359",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87527,
        "nodeType": "ImportDirective",
        "src": "293:61:359",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Initializable.sol",
        "file": "../../dynamic-contracts/extension/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 21885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87528,
        "nodeType": "ImportDirective",
        "src": "355:31:359",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC1271.sol",
        "file": "../../eip/ERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 26772,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87529,
        "nodeType": "ImportDirective",
        "src": "387:66:359",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/AccountPermissions.sol",
        "file": "../../dynamic-contracts/extension/AccountPermissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 19691,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87530,
        "nodeType": "ImportDirective",
        "src": "464:34:359",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/utils/BaseAccountFactory.sol",
        "file": "./BaseAccountFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 88879,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87532,
        "nodeType": "ImportDirective",
        "src": "499:57:359",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/non-upgradeable/Account.sol",
        "file": "../non-upgradeable/Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 87438,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87531,
              "name": "Account",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87437,
              "src": "508:7:359",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Account_$87437_$",
                "typeString": "type(contract Account)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87533,
        "nodeType": "ImportDirective",
        "src": "557:65:359",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol",
        "file": "../../openzeppelin-presets/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 79904,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87534,
        "nodeType": "ImportDirective",
        "src": "624:40:359",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/interfaces/IAccountCore.sol",
        "file": "../interfaces/IAccountCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88113,
        "sourceUnit": 86002,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88112,
        "nodeType": "ContractDefinition",
        "src": "1306:8165:359",
        "nodes": [
          {
            "id": 87549,
            "nodeType": "UsingForDirective",
            "src": "1417:24:359",
            "nodes": [],
            "libraryName": {
              "id": 87547,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79903,
              "src": "1423:5:359"
            },
            "typeName": {
              "id": 87548,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1433:7:359",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 87553,
            "nodeType": "UsingForDirective",
            "src": "1446:49:359",
            "nodes": [],
            "libraryName": {
              "id": 87550,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 81449,
              "src": "1452:13:359"
            },
            "typeName": {
              "id": 87552,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87551,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 81162,
                "src": "1470:24:359"
              },
              "referencedDeclaration": 81162,
              "src": "1470:24:359",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$81162_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 87556,
            "nodeType": "VariableDeclaration",
            "src": "1731:32:359",
            "nodes": [],
            "baseFunctions": [
              86000
            ],
            "constant": false,
            "documentation": {
              "id": 87554,
              "nodeType": "StructuredDocumentation",
              "src": "1679:47:359",
              "text": "@notice EIP 4337 factory for this contract."
            },
            "functionSelector": "c45a0155",
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "1756:7:359",
            "scope": 88112,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87555,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:359",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87560,
            "nodeType": "VariableDeclaration",
            "src": "1816:48:359",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 87557,
              "nodeType": "StructuredDocumentation",
              "src": "1770:41:359",
              "text": "@notice EIP 4337 Entrypoint contract."
            },
            "mutability": "immutable",
            "name": "entrypointContract",
            "nameLocation": "1846:18:359",
            "scope": 88112,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntryPoint_$86317",
              "typeString": "contract IEntryPoint"
            },
            "typeName": {
              "id": 87559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87558,
                "name": "IEntryPoint",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 86317,
                "src": "1816:11:359"
              },
              "referencedDeclaration": 86317,
              "src": "1816:11:359",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                "typeString": "contract IEntryPoint"
              }
            },
            "visibility": "private"
          },
          {
            "id": 87564,
            "nodeType": "FunctionDefinition",
            "src": "2116:37:359",
            "nodes": [],
            "body": {
              "id": 87563,
              "nodeType": "Block",
              "src": "2151:2:359",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2123:2:359"
            },
            "returnParameters": {
              "id": 87562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2151:0:359"
            },
            "scope": 88112,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 87588,
            "nodeType": "FunctionDefinition",
            "src": "2159:187:359",
            "nodes": [],
            "body": {
              "id": 87587,
              "nodeType": "Block",
              "src": "2237:109:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87576,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21883,
                      "src": "2247:20:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:22:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87578,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:22:359"
                },
                {
                  "expression": {
                    "id": 87581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87579,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87556,
                      "src": "2279:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87580,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87569,
                      "src": "2289:8:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2279:18:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87582,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:18:359"
                },
                {
                  "expression": {
                    "id": 87585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87583,
                      "name": "entrypointContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87560,
                      "src": "2307:18:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87584,
                      "name": "_entrypoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87567,
                      "src": "2328:11:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "src": "2307:32:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "id": 87586,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:32:359"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4163636f756e74",
                    "id": 87572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2221:9:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f0729608244859f656d32ae4cbc6b0367695d68d8e941a28f5e2d33c6d5182dd",
                      "typeString": "literal_string \"Account\""
                    },
                    "value": "Account"
                  },
                  {
                    "hexValue": "31",
                    "id": 87573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:3:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  }
                ],
                "id": 87574,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 87571,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 80057,
                  "src": "2214:6:359"
                },
                "nodeType": "ModifierInvocation",
                "src": "2214:22:359"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87567,
                  "mutability": "mutable",
                  "name": "_entrypoint",
                  "nameLocation": "2183:11:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87588,
                  "src": "2171:23:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 87566,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87565,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86317,
                      "src": "2171:11:359"
                    },
                    "referencedDeclaration": 86317,
                    "src": "2171:11:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87569,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "2204:8:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87588,
                  "src": "2196:16:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:359",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:43:359"
            },
            "returnParameters": {
              "id": 87575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2237:0:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87604,
            "nodeType": "FunctionDefinition",
            "src": "2407:133:359",
            "nodes": [],
            "body": {
              "id": 87603,
              "nodeType": "Block",
              "src": "2493:47:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87599,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87591,
                        "src": "2513:13:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2528:4:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87598,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        88087
                      ],
                      "referencedDeclaration": 88087,
                      "src": "2503:9:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 87601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:30:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87602,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:30:359"
                }
              ]
            },
            "documentation": {
              "id": 87589,
              "nodeType": "StructuredDocumentation",
              "src": "2352:50:359",
              "text": "@notice Initializes the smart contract wallet."
            },
            "functionSelector": "d1f57894",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87595,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21748,
                  "src": "2481:11:359"
                },
                "nodeType": "ModifierInvocation",
                "src": "2481:11:359"
              }
            ],
            "name": "initialize",
            "nameLocation": "2416:10:359",
            "parameters": {
              "id": 87594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87591,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2435:13:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87604,
                  "src": "2427:21:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:359",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87604,
                  "src": "2450:14:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87592,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:5:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:39:359"
            },
            "returnParameters": {
              "id": 87597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:0:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87615,
            "nodeType": "FunctionDefinition",
            "src": "2787:115:359",
            "nodes": [],
            "body": {
              "id": 87614,
              "nodeType": "Block",
              "src": "2860:42:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87612,
                    "name": "entrypointContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87560,
                    "src": "2877:18:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "functionReturnParameters": 87611,
                  "id": 87613,
                  "nodeType": "Return",
                  "src": "2870:25:359"
                }
              ]
            },
            "baseFunctions": [
              88419
            ],
            "documentation": {
              "id": 87605,
              "nodeType": "StructuredDocumentation",
              "src": "2729:53:359",
              "text": "@notice Returns the EIP 4337 entrypoint contract."
            },
            "functionSelector": "b0d691fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "2796:10:359",
            "overrides": {
              "id": 87607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2829:8:359"
            },
            "parameters": {
              "id": 87606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2806:2:359"
            },
            "returnParameters": {
              "id": 87611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87615,
                  "src": "2847:11:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 87609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87608,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86317,
                      "src": "2847:11:359"
                    },
                    "referencedDeclaration": 86317,
                    "src": "2847:11:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:13:359"
            },
            "scope": 88112,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87631,
            "nodeType": "FunctionDefinition",
            "src": "2974:113:359",
            "nodes": [],
            "body": {
              "id": 87630,
              "nodeType": "Block",
              "src": "3026:61:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87626,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3074:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountCore_$88112",
                              "typeString": "contract AccountCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountCore_$88112",
                              "typeString": "contract AccountCore"
                            }
                          ],
                          "id": 87625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3066:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87624,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3066:7:359",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3066:13:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87621,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87615
                          ],
                          "referencedDeclaration": 87615,
                          "src": "3043:10:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$86317_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 87622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3043:12:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 87623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86445,
                      "src": "3043:22:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:37:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87620,
                  "id": 87629,
                  "nodeType": "Return",
                  "src": "3036:44:359"
                }
              ]
            },
            "documentation": {
              "id": 87616,
              "nodeType": "StructuredDocumentation",
              "src": "2908:61:359",
              "text": "@notice Returns the balance of the account in Entrypoint."
            },
            "functionSelector": "c399ec88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "2983:10:359",
            "parameters": {
              "id": 87617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2993:2:359"
            },
            "returnParameters": {
              "id": 87620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87619,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87631,
                  "src": "3017:7:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:9:359"
            },
            "scope": 88112,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87791,
            "nodeType": "FunctionDefinition",
            "src": "3190:2641:359",
            "nodes": [],
            "body": {
              "id": 87790,
              "nodeType": "Block",
              "src": "3297:2534:359",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87646,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3528:4:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87790,
                      "src": "3489:43:359",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                        "typeString": "struct AccountPermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 87645,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87644,
                          "name": "AccountPermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18920,
                          "src": "3489:30:359"
                        },
                        "referencedDeclaration": 18920,
                        "src": "3489:30:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87650,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87647,
                        "name": "AccountPermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18933,
                        "src": "3535:25:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AccountPermissionsStorage_$18933_$",
                          "typeString": "type(library AccountPermissionsStorage)"
                        }
                      },
                      "id": 87648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountPermissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18932,
                      "src": "3535:51:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$18920_storage_ptr_$",
                        "typeString": "function () pure returns (struct AccountPermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 87649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:53:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                      "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3489:99:359"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "expression": {
                        "id": 87651,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87646,
                        "src": "3654:4:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                        }
                      },
                      "id": 87652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18902,
                      "src": "3654:12:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 87654,
                    "indexExpression": {
                      "id": 87653,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87634,
                      "src": "3667:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3654:21:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87658,
                  "nodeType": "IfStatement",
                  "src": "3650:63:359",
                  "trueBody": {
                    "id": 87657,
                    "nodeType": "Block",
                    "src": "3677:36:359",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 87655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3698:4:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 87641,
                        "id": 87656,
                        "nodeType": "Return",
                        "src": "3691:11:359"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87661,
                      "mutability": "mutable",
                      "name": "permissions",
                      "nameLocation": "3754:11:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87790,
                      "src": "3723:42:359",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_memory_ptr",
                        "typeString": "struct IAccountPermissions.SignerPermissionsStatic"
                      },
                      "typeName": {
                        "id": 87660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87659,
                          "name": "SignerPermissionsStatic",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49297,
                          "src": "3723:23:359"
                        },
                        "referencedDeclaration": 49297,
                        "src": "3723:23:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_storage_ptr",
                          "typeString": "struct IAccountPermissions.SignerPermissionsStatic"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87666,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 87662,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87646,
                        "src": "3768:4:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                        }
                      },
                      "id": 87663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "signerPermissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18908,
                      "src": "3768:22:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SignerPermissionsStatic_$49297_storage_$",
                        "typeString": "mapping(address => struct IAccountPermissions.SignerPermissionsStatic storage ref)"
                      }
                    },
                    "id": 87665,
                    "indexExpression": {
                      "id": 87664,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87634,
                      "src": "3791:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3768:31:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_storage",
                      "typeString": "struct IAccountPermissions.SignerPermissionsStatic storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3723:76:359"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 87677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87667,
                            "name": "permissions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87661,
                            "src": "3886:11:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_memory_ptr",
                              "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                            }
                          },
                          "id": 87668,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49294,
                          "src": "3886:26:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 87669,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3915:5:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3915:15:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3886:44:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87672,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3946:5:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 87673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3946:15:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 87674,
                            "name": "permissions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87661,
                            "src": "3965:11:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_memory_ptr",
                              "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                            }
                          },
                          "id": 87675,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49296,
                          "src": "3965:24:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3946:43:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3886:103:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 87685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 87678,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87646,
                                "src": "4005:4:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                                  "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                }
                              },
                              "id": 87679,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedTargets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18914,
                              "src": "4005:20:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$81162_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                              }
                            },
                            "id": 87681,
                            "indexExpression": {
                              "id": 87680,
                              "name": "_signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87634,
                              "src": "4026:7:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4005:29:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$81162_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 87682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81258,
                          "src": "4005:36:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$81162_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$81162_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 87683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4005:38:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 87684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4047:1:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4005:43:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3886:162:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87690,
                  "nodeType": "IfStatement",
                  "src": "3869:274:359",
                  "trueBody": {
                    "id": 87689,
                    "nodeType": "Block",
                    "src": "4059:84:359",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 87687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4127:5:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 87641,
                        "id": 87688,
                        "nodeType": "Return",
                        "src": "4120:12:359"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87692,
                      "mutability": "mutable",
                      "name": "sig",
                      "nameLocation": "4307:3:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87790,
                      "src": "4300:10:359",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 87691,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "4300:6:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87697,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87694,
                          "name": "_userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87637,
                          "src": "4334:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 87695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "callData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92391,
                        "src": "4334:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 87693,
                      "name": "getFunctionSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87909,
                      "src": "4313:20:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (bytes calldata) pure returns (bytes4)"
                      }
                    },
                    "id": 87696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4313:38:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4300:51:359"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 87702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87698,
                      "name": "sig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87692,
                      "src": "4366:3:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 87699,
                          "name": "Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87437,
                          "src": "4373:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Account_$87437_$",
                            "typeString": "type(contract Account)"
                          }
                        },
                        "id": 87700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "execute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87045,
                        "src": "4373:15:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                          "typeString": "function Account.execute(address,uint256,bytes calldata)"
                        }
                      },
                      "id": 87701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "4373:24:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "4366:31:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 87734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87730,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87692,
                        "src": "4933:3:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 87731,
                            "name": "Account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87437,
                            "src": "4940:7:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Account_$87437_$",
                              "typeString": "type(contract Account)"
                            }
                          },
                          "id": 87732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "executeBatch",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "4940:20:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                            "typeString": "function Account.executeBatch(address[] calldata,uint256[] calldata,bytes calldata[] calldata)"
                          }
                        },
                        "id": 87733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4940:29:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4933:36:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 87785,
                      "nodeType": "Block",
                      "src": "5722:81:359",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 87783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5787:5:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 87641,
                          "id": 87784,
                          "nodeType": "Return",
                          "src": "5780:12:359"
                        }
                      ]
                    },
                    "id": 87786,
                    "nodeType": "IfStatement",
                    "src": "4929:874:359",
                    "trueBody": {
                      "id": 87782,
                      "nodeType": "Block",
                      "src": "4971:745:359",
                      "statements": [
                        {
                          "assignments": [
                            87739,
                            87742,
                            null
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 87739,
                              "mutability": "mutable",
                              "name": "targets",
                              "nameLocation": "5105:7:359",
                              "nodeType": "VariableDeclaration",
                              "scope": 87782,
                              "src": "5088:24:359",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 87737,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5088:7:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 87738,
                                "nodeType": "ArrayTypeName",
                                "src": "5088:9:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 87742,
                              "mutability": "mutable",
                              "name": "values",
                              "nameLocation": "5131:6:359",
                              "nodeType": "VariableDeclaration",
                              "scope": 87782,
                              "src": "5114:23:359",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[]"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 87740,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5114:7:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 87741,
                                "nodeType": "ArrayTypeName",
                                "src": "5114:9:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              },
                              "visibility": "internal"
                            },
                            null
                          ],
                          "id": 87747,
                          "initialValue": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 87744,
                                  "name": "_userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87637,
                                  "src": "5170:7:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 87745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "callData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 92391,
                                "src": "5170:16:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 87743,
                              "name": "decodeExecuteBatchCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88008,
                              "src": "5143:26:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (address[] memory,uint256[] memory,bytes memory[] memory)"
                              }
                            },
                            "id": 87746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5143:44:359",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5087:100:359"
                        },
                        {
                          "body": {
                            "id": 87780,
                            "nodeType": "Block",
                            "src": "5368:338:359",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 87775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 87764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 87759,
                                        "name": "permissions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87661,
                                        "src": "5411:11:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_memory_ptr",
                                          "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                                        }
                                      },
                                      "id": 87760,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nativeTokenLimitPerTransaction",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 49292,
                                      "src": "5411:42:359",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 87761,
                                        "name": "values",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87742,
                                        "src": "5456:6:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 87763,
                                      "indexExpression": {
                                        "id": 87762,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87749,
                                        "src": "5463:1:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5456:9:359",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5411:54:359",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "id": 87774,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "5489:51:359",
                                    "subExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 87770,
                                            "name": "targets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 87739,
                                            "src": "5529:7:359",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 87772,
                                          "indexExpression": {
                                            "id": 87771,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 87749,
                                            "src": "5537:1:359",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5529:10:359",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 87765,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 87646,
                                              "src": "5490:4:359",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                                                "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                              }
                                            },
                                            "id": 87766,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approvedTargets",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 18914,
                                            "src": "5490:20:359",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$81162_storage_$",
                                              "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                            }
                                          },
                                          "id": 87768,
                                          "indexExpression": {
                                            "id": 87767,
                                            "name": "_signer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 87634,
                                            "src": "5511:7:359",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5490:29:359",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AddressSet_$81162_storage",
                                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                                          }
                                        },
                                        "id": 87769,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "contains",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 81243,
                                        "src": "5490:38:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$81162_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$81162_storage_ptr_$",
                                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                        }
                                      },
                                      "id": 87773,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5490:50:359",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5411:129:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 87779,
                                "nodeType": "IfStatement",
                                "src": "5386:306:359",
                                "trueBody": {
                                  "id": 87778,
                                  "nodeType": "Block",
                                  "src": "5559:133:359",
                                  "statements": [
                                    {
                                      "expression": {
                                        "hexValue": "66616c7365",
                                        "id": 87776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5668:5:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "functionReturnParameters": 87641,
                                      "id": 87777,
                                      "nodeType": "Return",
                                      "src": "5661:12:359"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87752,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87749,
                              "src": "5343:1:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 87753,
                                "name": "targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87739,
                                "src": "5347:7:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 87754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5347:14:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5343:18:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 87781,
                          "initializationExpression": {
                            "assignments": [
                              87749
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 87749,
                                "mutability": "mutable",
                                "name": "i",
                                "nameLocation": "5336:1:359",
                                "nodeType": "VariableDeclaration",
                                "scope": 87781,
                                "src": "5328:9:359",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 87748,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5328:7:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 87751,
                            "initialValue": {
                              "hexValue": "30",
                              "id": 87750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5340:1:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "5328:13:359"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 87757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "5363:3:359",
                              "subExpression": {
                                "id": 87756,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87749,
                                "src": "5363:1:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 87758,
                            "nodeType": "ExpressionStatement",
                            "src": "5363:3:359"
                          },
                          "nodeType": "ForStatement",
                          "src": "5323:383:359"
                        }
                      ]
                    }
                  },
                  "id": 87787,
                  "nodeType": "IfStatement",
                  "src": "4362:1441:359",
                  "trueBody": {
                    "id": 87729,
                    "nodeType": "Block",
                    "src": "4399:524:359",
                    "statements": [
                      {
                        "assignments": [
                          87704,
                          87706
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87704,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4513:6:359",
                            "nodeType": "VariableDeclaration",
                            "scope": 87729,
                            "src": "4505:14:359",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 87703,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4505:7:359",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 87706,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "4529:5:359",
                            "nodeType": "VariableDeclaration",
                            "scope": 87729,
                            "src": "4521:13:359",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 87705,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4521:7:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87711,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 87708,
                                "name": "_userOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87637,
                                "src": "4560:7:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              },
                              "id": 87709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 92391,
                              "src": "4560:16:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 87707,
                            "name": "decodeExecuteCalldata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87957,
                            "src": "4538:21:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$",
                              "typeString": "function (bytes calldata) pure returns (address,uint256)"
                            }
                          },
                          "id": 87710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:39:359",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4504:73:359"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 87724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 87712,
                                "name": "permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87661,
                                "src": "4689:11:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignerPermissionsStatic_$49297_memory_ptr",
                                  "typeString": "struct IAccountPermissions.SignerPermissionsStatic memory"
                                }
                              },
                              "id": 87713,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nativeTokenLimitPerTransaction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49292,
                              "src": "4689:42:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 87714,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87706,
                              "src": "4734:5:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4689:50:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 87723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4743:47:359",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 87721,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87704,
                                  "src": "4783:6:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 87716,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87646,
                                      "src": "4744:4:359",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                                        "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                      }
                                    },
                                    "id": 87717,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approvedTargets",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18914,
                                    "src": "4744:20:359",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$81162_storage_$",
                                      "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                                    }
                                  },
                                  "id": 87719,
                                  "indexExpression": {
                                    "id": 87718,
                                    "name": "_signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87634,
                                    "src": "4765:7:359",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4744:29:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$81162_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 87720,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contains",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 81243,
                                "src": "4744:38:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$81162_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$81162_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 87722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4744:46:359",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4689:101:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87728,
                        "nodeType": "IfStatement",
                        "src": "4685:228:359",
                        "trueBody": {
                          "id": 87727,
                          "nodeType": "Block",
                          "src": "4792:121:359",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 87725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4893:5:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 87641,
                              "id": 87726,
                              "nodeType": "Return",
                              "src": "4886:12:359"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 87788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5820:4:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 87641,
                  "id": 87789,
                  "nodeType": "Return",
                  "src": "5813:11:359"
                }
              ]
            },
            "documentation": {
              "id": 87632,
              "nodeType": "StructuredDocumentation",
              "src": "3093:92:359",
              "text": "@notice Returns whether a signer is authorized to perform transactions using the wallet."
            },
            "functionSelector": "1dd756c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSigner",
            "nameLocation": "3199:13:359",
            "parameters": {
              "id": 87638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87634,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3221:7:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87791,
                  "src": "3213:15:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:7:359",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87637,
                  "mutability": "mutable",
                  "name": "_userOp",
                  "nameLocation": "3253:7:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87791,
                  "src": "3230:30:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 87636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87635,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 92406,
                      "src": "3230:13:359"
                    },
                    "referencedDeclaration": 92406,
                    "src": "3230:13:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$92406_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3212:49:359"
            },
            "returnParameters": {
              "id": 87641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87791,
                  "src": "3291:4:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:4:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3290:6:359"
            },
            "scope": 88112,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87851,
            "nodeType": "FunctionDefinition",
            "src": "5866:636:359",
            "nodes": [],
            "body": {
              "id": 87850,
              "nodeType": "Block",
              "src": "6033:469:359",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87803,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "6051:6:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87850,
                      "src": "6043:14:359",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87802,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6043:7:359",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87808,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87806,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87796,
                        "src": "6074:10:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87804,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87794,
                        "src": "6060:5:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 87805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79664,
                      "src": "6060:13:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 87807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6060:25:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6043:42:359"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87810,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87803,
                        "src": "6108:6:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87809,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19175,
                      "src": "6100:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6100:15:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87815,
                  "nodeType": "IfStatement",
                  "src": "6096:63:359",
                  "trueBody": {
                    "id": 87814,
                    "nodeType": "Block",
                    "src": "6117:42:359",
                    "statements": [
                      {
                        "expression": {
                          "id": 87812,
                          "name": "MAGICVALUE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26760,
                          "src": "6138:10:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 87801,
                        "id": 87813,
                        "nodeType": "Return",
                        "src": "6131:17:359"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87820,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6208:4:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87850,
                      "src": "6169:43:359",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                        "typeString": "struct AccountPermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 87819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87818,
                          "name": "AccountPermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18920,
                          "src": "6169:30:359"
                        },
                        "referencedDeclaration": 18920,
                        "src": "6169:30:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                          "typeString": "struct AccountPermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87824,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87821,
                        "name": "AccountPermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18933,
                        "src": "6215:25:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AccountPermissionsStorage_$18933_$",
                          "typeString": "type(library AccountPermissionsStorage)"
                        }
                      },
                      "id": 87822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountPermissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18932,
                      "src": "6215:51:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$18920_storage_ptr_$",
                        "typeString": "function () pure returns (struct AccountPermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 87823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6215:53:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                      "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6169:99:359"
                },
                {
                  "assignments": [
                    87826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87826,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6286:6:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 87850,
                      "src": "6278:14:359",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87825,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6278:7:359",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87829,
                  "initialValue": {
                    "expression": {
                      "id": 87827,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6295:3:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 87828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6295:10:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6278:27:359"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87836,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87826,
                            "src": "6361:6:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 87831,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87820,
                                "src": "6323:4:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Data_$18920_storage_ptr",
                                  "typeString": "struct AccountPermissionsStorage.Data storage pointer"
                                }
                              },
                              "id": 87832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedTargets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18914,
                              "src": "6323:20:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$81162_storage_$",
                                "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                              }
                            },
                            "id": 87834,
                            "indexExpression": {
                              "id": 87833,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87803,
                              "src": "6344:6:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6323:28:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$81162_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 87835,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81243,
                          "src": "6323:37:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$81162_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$81162_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 87837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6323:45:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e743a2063616c6c6572206e6f7420617070726f766564207461726765742e",
                        "id": 87838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6370:38:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df95de02fe768cfc461af2b115e5107aca0a0e36835e7a43fb57ea398d7095c3",
                          "typeString": "literal_string \"Account: caller not approved target.\""
                        },
                        "value": "Account: caller not approved target."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df95de02fe768cfc461af2b115e5107aca0a0e36835e7a43fb57ea398d7095c3",
                          "typeString": "literal_string \"Account: caller not approved target.\""
                        }
                      ],
                      "id": 87830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6315:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6315:94:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87840,
                  "nodeType": "ExpressionStatement",
                  "src": "6315:94:359"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87842,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87803,
                        "src": "6439:6:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87841,
                      "name": "isActiveSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19222,
                      "src": "6424:14:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6424:22:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87849,
                  "nodeType": "IfStatement",
                  "src": "6420:76:359",
                  "trueBody": {
                    "id": 87848,
                    "nodeType": "Block",
                    "src": "6448:48:359",
                    "statements": [
                      {
                        "expression": {
                          "id": 87846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87844,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87800,
                            "src": "6462:10:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 87845,
                            "name": "MAGICVALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26760,
                            "src": "6475:10:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6462:23:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 87847,
                        "nodeType": "ExpressionStatement",
                        "src": "6462:23:359"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              26770
            ],
            "documentation": {
              "id": 87792,
              "nodeType": "StructuredDocumentation",
              "src": "5837:24:359",
              "text": "@notice See EIP-1271"
            },
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "5875:16:359",
            "overrides": {
              "id": 87798,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5984:8:359"
            },
            "parameters": {
              "id": 87797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87794,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "5900:5:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87851,
                  "src": "5892:13:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87793,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87796,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5920:10:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87851,
                  "src": "5907:23:359",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87795,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5907:5:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5891:40:359"
            },
            "returnParameters": {
              "id": 87801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87800,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "6017:10:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87851,
                  "src": "6010:17:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 87799,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6010:6:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6009:19:359"
            },
            "scope": 88112,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87868,
            "nodeType": "FunctionDefinition",
            "src": "6757:111:359",
            "nodes": [],
            "body": {
              "id": 87867,
              "nodeType": "Block",
              "src": "6794:74:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87863,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6855:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccountCore_$88112",
                              "typeString": "contract AccountCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AccountCore_$88112",
                              "typeString": "contract AccountCore"
                            }
                          ],
                          "id": 87862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6847:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6847:7:359",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6847:13:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87855,
                            "name": "entryPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              87615
                            ],
                            "referencedDeclaration": 87615,
                            "src": "6804:10:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$86317_$",
                              "typeString": "function () view returns (contract IEntryPoint)"
                            }
                          },
                          "id": 87856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:12:359",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 87857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86451,
                        "src": "6804:22:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 87860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 87858,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6835:3:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6835:9:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6804:42:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 87865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6804:57:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87866,
                  "nodeType": "ExpressionStatement",
                  "src": "6804:57:359"
                }
              ]
            },
            "documentation": {
              "id": 87852,
              "nodeType": "StructuredDocumentation",
              "src": "6695:57:359",
              "text": "@notice Deposit funds for this account in Entrypoint."
            },
            "functionSelector": "4a58db19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDeposit",
            "nameLocation": "6766:10:359",
            "parameters": {
              "id": 87853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6776:2:359"
            },
            "returnParameters": {
              "id": 87854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:0:359"
            },
            "scope": 88112,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87886,
            "nodeType": "FunctionDefinition",
            "src": "6939:158:359",
            "nodes": [],
            "body": {
              "id": 87885,
              "nodeType": "Block",
              "src": "7032:65:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87881,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87871,
                        "src": "7066:15:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87882,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87873,
                        "src": "7083:6:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87878,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            87615
                          ],
                          "referencedDeclaration": 87615,
                          "src": "7042:10:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$86317_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 87879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7042:12:359",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 87880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86475,
                      "src": "7042:23:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 87883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7042:48:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87884,
                  "nodeType": "ExpressionStatement",
                  "src": "7042:48:359"
                }
              ]
            },
            "documentation": {
              "id": 87869,
              "nodeType": "StructuredDocumentation",
              "src": "6874:60:359",
              "text": "@notice Withdraw funds for this account from Entrypoint."
            },
            "functionSelector": "4d44560d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87876,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87875,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18961,
                  "src": "7022:9:359"
                },
                "nodeType": "ModifierInvocation",
                "src": "7022:9:359"
              }
            ],
            "name": "withdrawDepositTo",
            "nameLocation": "6948:17:359",
            "parameters": {
              "id": 87874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87871,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "6982:15:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87886,
                  "src": "6966:31:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6966:15:359",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87873,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7007:6:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87886,
                  "src": "6999:14:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6999:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6965:49:359"
            },
            "returnParameters": {
              "id": 87877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7032:0:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87909,
            "nodeType": "FunctionDefinition",
            "src": "7286:192:359",
            "nodes": [],
            "body": {
              "id": 87908,
              "nodeType": "Block",
              "src": "7385:93:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87894,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87888,
                            "src": "7403:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 87895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7403:11:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 87896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7418:1:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "7403:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 87898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7421:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 87893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7395:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7395:43:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87900,
                  "nodeType": "ExpressionStatement",
                  "src": "7395:43:359"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 87903,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87888,
                          "src": "7462:4:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "endExpression": {
                          "hexValue": "34",
                          "id": 87904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7468:1:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "id": 87905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "7462:8:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      ],
                      "id": 87902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7455:6:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 87901,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "7455:6:359",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7455:16:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 87892,
                  "id": 87907,
                  "nodeType": "Return",
                  "src": "7448:23:359"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFunctionSignature",
            "nameLocation": "7295:20:359",
            "parameters": {
              "id": 87889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87888,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7331:4:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87909,
                  "src": "7316:19:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7316:5:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7315:21:359"
            },
            "returnParameters": {
              "id": 87892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87891,
                  "mutability": "mutable",
                  "name": "functionSelector",
                  "nameLocation": "7367:16:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87909,
                  "src": "7360:23:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 87890,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7360:6:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7359:25:359"
            },
            "scope": 88112,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87957,
            "nodeType": "FunctionDefinition",
            "src": "7484:393:359",
            "nodes": [],
            "body": {
              "id": 87956,
              "nodeType": "Block",
              "src": "7592:285:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87919,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87911,
                            "src": "7610:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 87920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7610:11:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_68_by_1",
                            "typeString": "int_const 68"
                          },
                          "id": 87925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "id": 87923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "34",
                              "id": 87921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7625:1:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 87922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7629:2:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "7625:6:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 87924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7634:2:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "7625:11:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_68_by_1",
                            "typeString": "int_const 68"
                          }
                        },
                        "src": "7610:26:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 87927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7638:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 87918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7602:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7602:53:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87929,
                  "nodeType": "ExpressionStatement",
                  "src": "7602:53:359"
                },
                {
                  "expression": {
                    "id": 87941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87930,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87914,
                      "src": "7720:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 87933,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87911,
                            "src": "7741:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "hexValue": "3336",
                            "id": 87935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7748:2:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          },
                          "id": 87936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "7741:10:359",
                          "startExpression": {
                            "hexValue": "34",
                            "id": 87934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7746:1:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 87938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7754:7:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87937,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7754:7:359",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 87939,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7753:9:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 87931,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "7730:3:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 87932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "7730:10:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 87940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7730:33:359",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7720:43:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87942,
                  "nodeType": "ExpressionStatement",
                  "src": "7720:43:359"
                },
                {
                  "expression": {
                    "id": 87954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87943,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87916,
                      "src": "7827:6:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 87946,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87911,
                            "src": "7847:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "hexValue": "3638",
                            "id": 87948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7855:2:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            },
                            "value": "68"
                          },
                          "id": 87949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "7847:11:359",
                          "startExpression": {
                            "hexValue": "3336",
                            "id": 87947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7852:2:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 87951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7861:7:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 87950,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7861:7:359",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 87952,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7860:9:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 87944,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "7836:3:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 87945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "7836:10:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 87953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7836:34:359",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7827:43:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87955,
                  "nodeType": "ExpressionStatement",
                  "src": "7827:43:359"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeExecuteCalldata",
            "nameLocation": "7493:21:359",
            "parameters": {
              "id": 87912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87911,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7530:4:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87957,
                  "src": "7515:19:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87910,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7515:5:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7514:21:359"
            },
            "returnParameters": {
              "id": 87917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87914,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "7567:7:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87957,
                  "src": "7559:15:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7559:7:359",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87916,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "7584:6:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 87957,
                  "src": "7576:14:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7576:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7558:33:359"
            },
            "scope": 88112,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88008,
            "nodeType": "FunctionDefinition",
            "src": "7883:405:359",
            "nodes": [],
            "body": {
              "id": 88007,
              "nodeType": "Block",
              "src": "8116:172:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87972,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87959,
                            "src": "8134:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 87973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8134:11:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "id": 87980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            },
                            "id": 87978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "id": 87976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "34",
                                "id": 87974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8149:1:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 87975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8153:2:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "8149:6:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 87977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8158:2:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "8149:11:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 87979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8163:2:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "8149:16:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        },
                        "src": "8134:31:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4461746120746f6f2073686f7274",
                        "id": 87982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8167:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        },
                        "value": "Data too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e317ef9d09d12d6fc846d063aee6fbc5f7eb8a1938244a68f46e5a8680db4a94",
                          "typeString": "literal_string \"Data too short\""
                        }
                      ],
                      "id": 87971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8126:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8126:58:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87984,
                  "nodeType": "ExpressionStatement",
                  "src": "8126:58:359"
                },
                {
                  "expression": {
                    "id": 88005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 87985,
                          "name": "_targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87963,
                          "src": "8196:8:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 87986,
                          "name": "_values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87966,
                          "src": "8206:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 87987,
                          "name": "_callData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87969,
                          "src": "8215:9:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        }
                      ],
                      "id": 87988,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8195:30:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 87991,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87959,
                            "src": "8239:4:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 87993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "8239:8:359",
                          "startExpression": {
                            "hexValue": "34",
                            "id": 87992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8244:1:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 87995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8250:7:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87994,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8250:7:359",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8250:9:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "type(address[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 87998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8261:7:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 87997,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8261:7:359",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8261:9:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "type(uint256[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 88001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8272:5:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 88000,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8272:5:359",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8272:7:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "type(bytes memory[] memory)"
                              }
                            }
                          ],
                          "id": 88003,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8249:31:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                            "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                            "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                          }
                        ],
                        "expression": {
                          "id": 87989,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "8228:3:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 87990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "8228:10:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 88004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8228:53:359",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                      }
                    },
                    "src": "8195:86:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88006,
                  "nodeType": "ExpressionStatement",
                  "src": "8195:86:359"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeExecuteBatchCalldata",
            "nameLocation": "7892:26:359",
            "parameters": {
              "id": 87960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87959,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7934:4:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88008,
                  "src": "7919:19:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 87958,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7919:5:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7918:21:359"
            },
            "returnParameters": {
              "id": 87970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87963,
                  "mutability": "mutable",
                  "name": "_targets",
                  "nameLocation": "8017:8:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88008,
                  "src": "8000:25:359",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87961,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8000:7:359",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87962,
                    "nodeType": "ArrayTypeName",
                    "src": "8000:9:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87966,
                  "mutability": "mutable",
                  "name": "_values",
                  "nameLocation": "8056:7:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88008,
                  "src": "8039:24:359",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87964,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8039:7:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87965,
                    "nodeType": "ArrayTypeName",
                    "src": "8039:9:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87969,
                  "mutability": "mutable",
                  "name": "_callData",
                  "nameLocation": "8092:9:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88008,
                  "src": "8077:24:359",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87967,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8077:5:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 87968,
                    "nodeType": "ArrayTypeName",
                    "src": "8077:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7986:125:359"
            },
            "scope": 88112,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88045,
            "nodeType": "FunctionDefinition",
            "src": "8355:391:359",
            "nodes": [],
            "body": {
              "id": 88044,
              "nodeType": "Block",
              "src": "8529:217:359",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88021,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "8547:4:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 88044,
                      "src": "8539:12:359",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 88020,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8539:7:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88025,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88022,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88014,
                        "src": "8554:10:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 88023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79848,
                      "src": "8554:33:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 88024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8554:35:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8539:50:359"
                },
                {
                  "assignments": [
                    88027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88027,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "8607:6:359",
                      "nodeType": "VariableDeclaration",
                      "scope": 88044,
                      "src": "8599:14:359",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8599:7:359",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88033,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88030,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88012,
                          "src": "8629:6:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 88031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92405,
                        "src": "8629:16:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88028,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88021,
                        "src": "8616:4:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 88029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79664,
                      "src": "8616:12:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 88032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8616:30:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8599:47:359"
                },
                {
                  "condition": {
                    "id": 88038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8661:30:359",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 88035,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88027,
                          "src": "8676:6:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 88036,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88012,
                          "src": "8684:6:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        ],
                        "id": 88034,
                        "name": "isValidSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87791,
                        "src": "8662:13:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserOperation_$92406_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (address,struct UserOperation calldata) view returns (bool)"
                        }
                      },
                      "id": 88037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8662:29:359",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88041,
                  "nodeType": "IfStatement",
                  "src": "8657:64:359",
                  "trueBody": {
                    "expression": {
                      "id": 88039,
                      "name": "SIG_VALIDATION_FAILED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88395,
                      "src": "8700:21:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 88019,
                    "id": 88040,
                    "nodeType": "Return",
                    "src": "8693:28:359"
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 88042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8738:1:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 88019,
                  "id": 88043,
                  "nodeType": "Return",
                  "src": "8731:8:359"
                }
              ]
            },
            "baseFunctions": [
              88481
            ],
            "documentation": {
              "id": 88009,
              "nodeType": "StructuredDocumentation",
              "src": "8294:56:359",
              "text": "@notice Validates the signature of a user operation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "8364:18:359",
            "overrides": {
              "id": 88016,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8475:8:359"
            },
            "parameters": {
              "id": 88015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88012,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "8406:6:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88045,
                  "src": "8383:29:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 88011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88010,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 92406,
                      "src": "8383:13:359"
                    },
                    "referencedDeclaration": 92406,
                    "src": "8383:13:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$92406_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88014,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "8422:10:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88045,
                  "src": "8414:18:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88013,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8414:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8382:51:359"
            },
            "returnParameters": {
              "id": 88019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88018,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "8509:14:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88045,
                  "src": "8501:22:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8501:7:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8500:24:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88087,
            "nodeType": "FunctionDefinition",
            "src": "8802:382:359",
            "nodes": [],
            "body": {
              "id": 88086,
              "nodeType": "Block",
              "src": "8880:304:359",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88057,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88048,
                        "src": "8906:8:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88058,
                        "name": "_isAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88050,
                        "src": "8916:8:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8890:5:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_AccountCore_$88112_$",
                          "typeString": "type(contract super AccountCore)"
                        }
                      },
                      "id": 88056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19630,
                      "src": "8890:15:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 88059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8890:35:359",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88060,
                  "nodeType": "ExpressionStatement",
                  "src": "8890:35:359"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 88061,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87556,
                          "src": "8939:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 88062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "8939:12:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 88063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8939:19:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 88064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8961:1:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8939:23:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88085,
                  "nodeType": "IfStatement",
                  "src": "8935:243:359",
                  "trueBody": {
                    "id": 88084,
                    "nodeType": "Block",
                    "src": "8964:214:359",
                    "statements": [
                      {
                        "condition": {
                          "id": 88066,
                          "name": "_isAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88050,
                          "src": "8982:8:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 88082,
                          "nodeType": "Block",
                          "src": "9082:86:359",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 88079,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 88048,
                                    "src": "9144:8:359",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 88076,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87556,
                                        "src": "9119:7:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 88075,
                                      "name": "BaseAccountFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88878,
                                      "src": "9100:18:359",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$88878_$",
                                        "typeString": "type(contract BaseAccountFactory)"
                                      }
                                    },
                                    "id": 88077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9100:27:359",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BaseAccountFactory_$88878",
                                      "typeString": "contract BaseAccountFactory"
                                    }
                                  },
                                  "id": 88078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onSignerRemoved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 88739,
                                  "src": "9100:43:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 88080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9100:53:359",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 88081,
                              "nodeType": "ExpressionStatement",
                              "src": "9100:53:359"
                            }
                          ]
                        },
                        "id": 88083,
                        "nodeType": "IfStatement",
                        "src": "8978:190:359",
                        "trueBody": {
                          "id": 88074,
                          "nodeType": "Block",
                          "src": "8992:84:359",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 88071,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 88048,
                                    "src": "9052:8:359",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 88068,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 87556,
                                        "src": "9029:7:359",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 88067,
                                      "name": "BaseAccountFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88878,
                                      "src": "9010:18:359",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$88878_$",
                                        "typeString": "type(contract BaseAccountFactory)"
                                      }
                                    },
                                    "id": 88069,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9010:27:359",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BaseAccountFactory_$88878",
                                      "typeString": "contract BaseAccountFactory"
                                    }
                                  },
                                  "id": 88070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onSignerAdded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 88703,
                                  "src": "9010:41:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 88072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9010:51:359",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 88073,
                              "nodeType": "ExpressionStatement",
                              "src": "9010:51:359"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              19630
            ],
            "documentation": {
              "id": 88046,
              "nodeType": "StructuredDocumentation",
              "src": "8752:45:359",
              "text": "@notice Makes the given account an admin."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAdmin",
            "nameLocation": "8811:9:359",
            "overrides": {
              "id": 88052,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8871:8:359"
            },
            "parameters": {
              "id": 88051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88048,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "8829:8:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88087,
                  "src": "8821:16:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8821:7:359",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88050,
                  "mutability": "mutable",
                  "name": "_isAdmin",
                  "nameLocation": "8844:8:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88087,
                  "src": "8839:13:359",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8839:4:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8820:33:359"
            },
            "returnParameters": {
              "id": 88053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8880:0:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88111,
            "nodeType": "FunctionDefinition",
            "src": "9241:228:359",
            "nodes": [],
            "body": {
              "id": 88110,
              "nodeType": "Block",
              "src": "9345:124:359",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 88095,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87556,
                          "src": "9359:7:359",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 88096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "9359:12:359",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 88097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9359:19:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 88098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9381:1:359",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9359:23:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88109,
                  "nodeType": "IfStatement",
                  "src": "9355:108:359",
                  "trueBody": {
                    "id": 88108,
                    "nodeType": "Block",
                    "src": "9384:79:359",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88104,
                                "name": "_req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88091,
                                "src": "9440:4:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SignerPermissionRequest_$49278_calldata_ptr",
                                  "typeString": "struct IAccountPermissions.SignerPermissionRequest calldata"
                                }
                              },
                              "id": 88105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "signer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49262,
                              "src": "9440:11:359",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 88101,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87556,
                                  "src": "9417:7:359",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 88100,
                                "name": "BaseAccountFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88878,
                                "src": "9398:18:359",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_BaseAccountFactory_$88878_$",
                                  "typeString": "type(contract BaseAccountFactory)"
                                }
                              },
                              "id": 88102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9398:27:359",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseAccountFactory_$88878",
                                "typeString": "contract BaseAccountFactory"
                              }
                            },
                            "id": 88103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onSignerAdded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88703,
                            "src": "9398:41:359",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 88106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9398:54:359",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88107,
                        "nodeType": "ExpressionStatement",
                        "src": "9398:54:359"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              19579
            ],
            "documentation": {
              "id": 88088,
              "nodeType": "StructuredDocumentation",
              "src": "9190:46:359",
              "text": "@notice Runs after every `changeRole` run."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterSignerPermissionsUpdate",
            "nameLocation": "9250:29:359",
            "overrides": {
              "id": 88093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9336:8:359"
            },
            "parameters": {
              "id": 88092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88091,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "9313:4:359",
                  "nodeType": "VariableDeclaration",
                  "scope": 88111,
                  "src": "9280:37:359",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignerPermissionRequest_$49278_calldata_ptr",
                    "typeString": "struct IAccountPermissions.SignerPermissionRequest"
                  },
                  "typeName": {
                    "id": 88090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88089,
                      "name": "SignerPermissionRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49278,
                      "src": "9280:23:359"
                    },
                    "referencedDeclaration": 49278,
                    "src": "9280:23:359",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignerPermissionRequest_$49278_storage_ptr",
                      "typeString": "struct IAccountPermissions.SignerPermissionRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9279:39:359"
            },
            "returnParameters": {
              "id": 88094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9345:0:359"
            },
            "scope": 88112,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87535,
              "name": "IAccountCore",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 86001,
              "src": "1330:12:359"
            },
            "id": 87536,
            "nodeType": "InheritanceSpecifier",
            "src": "1330:12:359"
          },
          {
            "baseName": {
              "id": 87537,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21884,
              "src": "1344:13:359"
            },
            "id": 87538,
            "nodeType": "InheritanceSpecifier",
            "src": "1344:13:359"
          },
          {
            "baseName": {
              "id": 87539,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "1359:9:359"
            },
            "id": 87540,
            "nodeType": "InheritanceSpecifier",
            "src": "1359:9:359"
          },
          {
            "baseName": {
              "id": 87541,
              "name": "BaseAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88522,
              "src": "1370:11:359"
            },
            "id": 87542,
            "nodeType": "InheritanceSpecifier",
            "src": "1370:11:359"
          },
          {
            "baseName": {
              "id": 87543,
              "name": "ERC1271",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26771,
              "src": "1383:7:359"
            },
            "id": 87544,
            "nodeType": "InheritanceSpecifier",
            "src": "1383:7:359"
          },
          {
            "baseName": {
              "id": 87545,
              "name": "AccountPermissions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19690,
              "src": "1392:18:359"
            },
            "id": 87546,
            "nodeType": "InheritanceSpecifier",
            "src": "1392:18:359"
          }
        ],
        "canonicalName": "AccountCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88112,
          19690,
          80057,
          26771,
          88522,
          37872,
          21884,
          86001,
          50168,
          49393,
          85983
        ],
        "name": "AccountCore",
        "nameLocation": "1315:11:359",
        "scope": 88113,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 359
}