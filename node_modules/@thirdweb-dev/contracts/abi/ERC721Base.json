{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002ea138038062002ea18339810160408190526200003491620004ca565b733cc6cdda760b79bafa08df41ecfa224f810dceb6600185858160029080519060200190620000659291906200033a565b5080516200007b9060039060208401906200033a565b505060008055506200008e8282620000c8565b506200009c905085620001f6565b620000b1826001600160801b03831662000248565b620000bd6001620002f3565b5050505050620005ba565b6daaeb6d7670e522a718067333cd4e3b15620001f2576001600160a01b0382163b15620001ab5780156200016a57604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200014d57600080fd5b505af115801562000162573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af29039060440162000132565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200014d57600080fd5b5050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620002915760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b82805462000348906200057d565b90600052602060002090601f0160209004810192826200036c5760008555620003b7565b82601f106200038757805160ff1916838001178555620003b7565b82800160010185558215620003b7579182015b82811115620003b75782518255916020019190600101906200039a565b50620003c5929150620003c9565b5090565b5b80821115620003c55760008155600101620003ca565b80516001600160a01b0381168114620003f857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200042557600080fd5b81516001600160401b0380821115620004425762000442620003fd565b604051601f8301601f19908116603f011681019082821181831017156200046d576200046d620003fd565b816040528381526020925086838588010111156200048a57600080fd5b600091505b83821015620004ae57858201830151818301840152908201906200048f565b83821115620004c05760008385830101525b9695505050505050565b600080600080600060a08688031215620004e357600080fd5b620004ee86620003e0565b60208701519095506001600160401b03808211156200050c57600080fd5b6200051a89838a0162000413565b955060408801519150808211156200053157600080fd5b50620005408882890162000413565b9350506200055160608701620003e0565b60808701519092506001600160801b03811681146200056f57600080fd5b809150509295509295909350565b600181811c908216806200059257607f821691505b60208210811415620005b457634e487b7160e01b600052602260045260246000fd5b50919050565b6128d780620005ca6000396000f3fe608060405234801561001057600080fd5b50600436106101b05760003560e01c8063504c6e01116100f5578063504c6e011461035957806357fd845514610366578063600dd5ea146103795780636352211e1461038c57806363b45e2d1461039f57806370a08231146103a7578063754a81d9146103ba5780638da5cb5b146103cd578063938e3d7b146103d557806395d89b41146103e85780639bcf7a15146103f0578063a22cb46514610403578063ac9650d814610416578063b24f2d3914610436578063b88d4fde14610454578063c87b56dd14610467578063e8a3d4851461047a578063e985e9c51461048257600080fd5b806275a317146101b557806301ffc9a7146101ca57806306fdde03146101f2578063081812fc14610207578063095ea7b31461022757806313af40351461023a57806318160ddd1461024d57806323b872dd146102635780632419f51b146102765780632a55205a1461028957806332f0cd64146102bb5780633b1475a7146102ce57806341f43434146102d657806342842e0e146102eb57806342966c68146102fe578063430c2081146103115780634cc157df14610324575b600080fd5b6101c86101c3366004612126565b610495565b005b6101dd6101d8366004612189565b6104f3565b60405190151581526020015b60405180910390f35b6101fa610560565b6040516101e991906121fe565b61021a610215366004612211565b6105f2565b6040516101e9919061222a565b6101c861023536600461223e565b610636565b6101c8610248366004612268565b61064f565b600154600054035b6040519081526020016101e9565b6101c8610271366004612283565b61067f565b610255610284366004612211565b6106aa565b61029c6102973660046122bf565b610718565b604080516001600160a01b0390931683526020830191909152016101e9565b6101c86102c93660046122ef565b610755565b600054610255565b61021a6daaeb6d7670e522a718067333cd4e81565b6101c86102f9366004612283565b6107c6565b6101c861030c366004612211565b6107eb565b6101dd61031f36600461223e565b6107f6565b610337610332366004612211565b610855565b604080516001600160a01b03909316835261ffff9091166020830152016101e9565b600e546101dd9060ff1681565b6101c8610374366004612268565b6108c0565b6101c861038736600461223e565b610930565b61021a61039a366004612211565b61095e565b600c54610255565b6102556103b5366004612268565b610970565b6101c86103c836600461230c565b6109be565b61021a610a02565b6101c86103e3366004612389565b610a11565b6101fa610a3e565b6101c86103fe3660046123bd565b610a4d565b6101c86104113660046123e2565b610a7c565b610429610424366004612419565b610a90565b6040516101e9919061248d565b600a546001600160a01b03811690600160a01b900461ffff16610337565b6101c86104623660046124ef565b610b84565b6101fa610475366004612211565b610bb1565b6101fa610c9f565b6101dd61049036600461254a565b610d2d565b61049d610d5b565b6104c25760405162461bcd60e51b81526004016104b99061257d565b60405180910390fd5b6104d46104ce60005490565b82610d7e565b6104ef82600160405180602001604052806000815250610df7565b5050565b60006301ffc9a760e01b6001600160e01b03198316148061052457506380ac58cd60e01b6001600160e01b03198316145b8061053f5750635b5e139f60e01b6001600160e01b03198316145b8061055a57506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461056f906125ae565b80601f016020809104026020016040519081016040528092919081815260200182805461059b906125ae565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b60006105fd82610f90565b61061a576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b8161064081610fbb565b61064a838361106e565b505050565b610657610d5b565b6106735760405162461bcd60e51b81526004016104b9906125e9565b61067c816110f0565b50565b826001600160a01b03811633146106995761069933610fbb565b6106a4848484611142565b50505050565b60006106b5600c5490565b82106106f35760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016104b9565b600c828154811061070657610706612611565b90600052602060002001549050919050565b60008060008061072786610855565b90945084925061ffff169050612710610740828761263d565b61074a9190612672565b925050509250929050565b61075d610d5b565b6107bd5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016104b9565b61067c8161114d565b826001600160a01b03811633146107e0576107e033610fbb565b6106a4848484611194565b61067c8160016111af565b6000806108028361095e565b9050806001600160a01b0316846001600160a01b0316148061082957506108298185610d2d565b8061084d5750836001600160a01b0316610842846105f2565b6001600160a01b0316145b949350505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561089c57805160208201516108b6565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6108c8610d5b565b6109255760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b60648201526084016104b9565b61067c81600161135e565b610938610d5b565b6109545760405162461bcd60e51b81526004016104b9906125e9565b6104ef8282611456565b6000610969826114da565b5192915050565b60006001600160a01b038216610999576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6109c6610d5b565b6109e25760405162461bcd60e51b81526004016104b99061257d565b6109f56109ee60005490565b84846115f4565b50506106a4848483610df7565b6009546001600160a01b031690565b610a19610d5b565b610a355760405162461bcd60e51b81526004016104b9906125e9565b61067c81611661565b60606003805461056f906125ae565b610a55610d5b565b610a715760405162461bcd60e51b81526004016104b9906125e9565b61064a838383611743565b81610a8681610fbb565b61064a83836117ea565b6060816001600160401b03811115610aaa57610aaa612084565b604051908082528060200260200182016040528015610add57816020015b6060815260200190600190039081610ac85790505b50905060005b82811015610b7d57610b4d30858584818110610b0157610b01612611565b9050602002810190610b139190612686565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061188092505050565b828281518110610b5f57610b5f612611565b60200260200101819052508080610b75906126d3565b915050610ae3565b5092915050565b836001600160a01b0381163314610b9e57610b9e33610fbb565b610baa858585856118ac565b5050505050565b6000818152600f6020526040812080546060929190610bcf906125ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfb906125ae565b8015610c485780601f10610c1d57610100808354040283529160200191610c48565b820191906000526020600020905b815481529060010190602001808311610c2b57829003601f168201915b50505050509050600081511115610c5f5792915050565b6000610c6a846118f7565b905080610c7685611a93565b604051602001610c879291906126ee565b60405160208183030381529060405292505050919050565b60088054610cac906125ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906125ae565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6000610d65610a02565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f602052604090208054610d97906125ae565b159050610dd85760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b60448201526064016104b9565b6000828152600f60209081526040909120825161064a92840190611fcf565b6000546001600160a01b038416610e2057604051622e076360e81b815260040160405180910390fd5b82610e3e5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081850190610ed790611b90565b15610f4d575b60405182906001600160a01b03881690600090600080516020612882833981519152908290a4610f166000878480600101955087611b9f565b610f33576040516368d2bf6b60e11b815260040160405180910390fd5b808210610edd578260005414610f4857600080fd5b610f80565b5b6040516001830192906001600160a01b03881690600090600080516020612882833981519152908290a4808210610f4e575b5060009081556106a49085838684565b600080548210801561055a575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff161561067c576daaeb6d7670e522a718067333cd4e3b1561067c57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061100e903090859060040161271d565b602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f9190612737565b61067c5780604051633b79c77360e21b81526004016104b9919061222a565b60006110798261095e565b9050806001600160a01b0316836001600160a01b031614156110ae5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146110e5576110c88133610d2d565b6110e5576040516367d9dca160e11b815260040160405180910390fd5b61064a838383611c87565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61064a838383611ce3565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b61064a83838360405180602001604052806000815250610b84565b60006111ba836114da565b80519091508215611220576000336001600160a01b03831614806111e357506111e38233610d2d565b806111fe5750336111f3866105f2565b6001600160a01b0316145b90508061121e57604051632ce44b5f60e11b815260040160405180910390fd5b505b61122c60008583611c87565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661132657600054821461132657805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020612882833981519152908390a4505060018054810190555050565b6daaeb6d7670e522a718067333cd4e3b156104ef576001600160a01b0382163b156114255780156113f257604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe906113bc903090869060040161271d565b600060405180830381600087803b1580156113d657600080fd5b505af11580156113ea573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af2903906113bc903090869060040161271d565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e486906113bc90309060040161222a565b6127108111156114785760405162461bcd60e51b81526004016104b990612754565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6040805160608101825260008082526020820181905291810191909152816000548110156115db57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906115d95780516001600160a01b031615611570579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156115d4579392505050565b611570565b505b604051636f96cda160e11b815260040160405180910390fd5b600080611601848661277d565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611658929091860190611fcf565b50935093915050565b600060088054611670906125ae565b80601f016020809104026020016040519081016040528092919081815260200182805461169c906125ae565b80156116e95780601f106116be576101008083540402835291602001916116e9565b820191906000526020600020905b8154815290600101906020018083116116cc57829003601f168201915b5050855193945061170593600893506020870192509050611fcf565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611737929190612795565b60405180910390a15050565b6127108111156117655760405162461bcd60e51b81526004016104b990612754565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6001600160a01b0382163314156118145760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606118a5838360405180606001604052806027815260200161285b60279139611ebb565b9392505050565b6118b7848484611ce3565b6118c9836001600160a01b0316611b90565b156106a4576118da84848484611b9f565b6106a4576040516368d2bf6b60e11b815260040160405180910390fd5b60606000611904600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561195457602002820191906000526020600020905b815481526020019060010190808311611940575b5050505050905060005b82811015611a585781818151811061197857611978612611565b6020026020010151851015611a4657600d600083838151811061199d5761199d612611565b6020026020010151815260200190815260200160002080546119be906125ae565b80601f01602080910402602001604051908101604052809291908181526020018280546119ea906125ae565b8015611a375780601f10611a0c57610100808354040283529160200191611a37565b820191906000526020600020905b815481529060010190602001808311611a1a57829003601f168201915b50505050509350505050919050565b611a5160018261277d565b905061195e565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016104b9565b606081611ab75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ae15780611acb816126d3565b9150611ada9050600a83612672565b9150611abb565b6000816001600160401b03811115611afb57611afb612084565b6040519080825280601f01601f191660200182016040528015611b25576020820181803683370190505b5090505b841561084d57611b3a6001836127c3565b9150611b47600a866127da565b611b5290603061277d565b60f81b818381518110611b6757611b67612611565b60200101906001600160f81b031916908160001a905350611b89600a86612672565b9450611b29565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611bd49033908990889088906004016127ee565b6020604051808303816000875af1925050508015611c0f575060408051601f3d908101601f19168201909252611c0c91810190612821565b60015b611c6a573d808015611c3d576040519150601f19603f3d011682016040523d82523d6000602084013e611c42565b606091505b508051611c62576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611cee826114da565b9050836001600160a01b031681600001516001600160a01b031614611d255760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611d435750611d438533610d2d565b80611d5e575033611d53846105f2565b6001600160a01b0316145b905080611d7e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611da557604051633a954ecd60e21b815260040160405180910390fd5b611db160008487611c87565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611e84576000548214611e8457805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061288283398151915260405160405180910390a4610baa565b6060611ec684611b90565b611f215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104b9565b600080856001600160a01b031685604051611f3c919061283e565b600060405180830381855af49150503d8060008114611f77576040519150601f19603f3d011682016040523d82523d6000602084013e611f7c565b606091505b5091509150611f8c828286611f96565b9695505050505050565b60608315611fa55750816118a5565b825115611fb55782518084602001fd5b8160405162461bcd60e51b81526004016104b991906121fe565b828054611fdb906125ae565b90600052602060002090601f016020900481019282611ffd5760008555612043565b82601f1061201657805160ff1916838001178555612043565b82800160010185558215612043579182015b82811115612043578251825591602001919060010190612028565b5061204f929150612053565b5090565b5b8082111561204f5760008155600101612054565b80356001600160a01b038116811461207f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120ab57600080fd5b81356001600160401b03808211156120c5576120c5612084565b604051601f8301601f19908116603f011681019082821181831017156120ed576120ed612084565b8160405283815286602085880101111561210657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561213957600080fd5b61214283612068565b915060208301356001600160401b0381111561215d57600080fd5b6121698582860161209a565b9150509250929050565b6001600160e01b03198116811461067c57600080fd5b60006020828403121561219b57600080fd5b81356118a581612173565b60005b838110156121c15781810151838201526020016121a9565b838111156106a45750506000910152565b600081518084526121ea8160208601602086016121a6565b601f01601f19169290920160200192915050565b6020815260006118a560208301846121d2565b60006020828403121561222357600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6000806040838503121561225157600080fd5b61225a83612068565b946020939093013593505050565b60006020828403121561227a57600080fd5b6118a582612068565b60008060006060848603121561229857600080fd5b6122a184612068565b92506122af60208501612068565b9150604084013590509250925092565b600080604083850312156122d257600080fd5b50508035926020909101359150565b801515811461067c57600080fd5b60006020828403121561230157600080fd5b81356118a5816122e1565b6000806000806080858703121561232257600080fd5b61232b85612068565b93506020850135925060408501356001600160401b038082111561234e57600080fd5b61235a8883890161209a565b9350606087013591508082111561237057600080fd5b5061237d8782880161209a565b91505092959194509250565b60006020828403121561239b57600080fd5b81356001600160401b038111156123b157600080fd5b61084d8482850161209a565b6000806000606084860312156123d257600080fd5b833592506122af60208501612068565b600080604083850312156123f557600080fd5b6123fe83612068565b9150602083013561240e816122e1565b809150509250929050565b6000806020838503121561242c57600080fd5b82356001600160401b038082111561244357600080fd5b818501915085601f83011261245757600080fd5b81358181111561246657600080fd5b8660208260051b850101111561247b57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124e257603f198886030184526124d08583516121d2565b945092850192908501906001016124b4565b5092979650505050505050565b6000806000806080858703121561250557600080fd5b61250e85612068565b935061251c60208601612068565b92506040850135915060608501356001600160401b0381111561253e57600080fd5b61237d8782880161209a565b6000806040838503121561255d57600080fd5b61256683612068565b915061257460208401612068565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c908216806125c257607f821691505b602082108114156125e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561265757612657612627565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826126815761268161265c565b500490565b6000808335601e1984360301811261269d57600080fd5b8301803591506001600160401b038211156126b757600080fd5b6020019150368190038213156126cc57600080fd5b9250929050565b60006000198214156126e7576126e7612627565b5060010190565b600083516127008184602088016121a6565b8351908301906127148183602088016121a6565b01949350505050565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561274957600080fd5b81516118a5816122e1565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6000821982111561279057612790612627565b500190565b6040815260006127a860408301856121d2565b82810360208401526127ba81856121d2565b95945050505050565b6000828210156127d5576127d5612627565b500390565b6000826127e9576127e961265c565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f8c908301846121d2565b60006020828403121561283357600080fd5b81516118a581612173565b600082516128508184602087016121a6565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205ef6704c78bb8672dd0ea52ae9f744a8424c473dfd295ed0133b33e4f543761d64736f6c634300080c0033",
    "sourceMap": "1128:8221:28:-:0;;;1722:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:42:117;516:4;1903:5:28;1910:7;1893:5:87;1885;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1908:17:87;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2121:7:87;1935:31;;-1:-1:-1;1313:52:130;1323:30;1355:9;1313;:52::i;:::-;-1:-1:-1;1929:26:28::1;::::0;-1:-1:-1;1941:13:28;1929:11:::1;:26::i;:::-;1965:56;1990:17:::0;-1:-1:-1;;;;;1965:56:28;::::1;:24;:56::i;:::-;2031:29;2055:4;2031:23;:29::i;:::-;1722:345:::0;;;;;1128:8221;;2349:783:130;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;2817:4;2763:92;;;2336:34:641;-1:-1:-1;;;;;2406:15:641;;2386:18;;;2379:43;905:42:130;;2763:45;;2271:18:641;;2763:92:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:130;;2958:4;2902:94;;;2336:34:641;-1:-1:-1;;;;;2406:15:641;;2386:18;;;2379:43;905:42:130;;2902:47;;2271:18:641;;2902:94:130;2124:304:641;2603:513:130;3053:48;;-1:-1:-1;;;3053:48:130;;3095:4;3053:48;;;2579:51:641;905:42:130;;3053:33;;2552:18:641;;3053:48:130;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;2843:2:641;3571:25:139;;;2825:21:641;2882:2;2862:18;;;2855:30;-1:-1:-1;;;2901:18:641;;;2894:45;2956:18;;3571:25:139;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3131:25:641;;;3711:46:139;;3119:2:641;3104:18;3711:46:139;;;;;;;3430:334;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;3307:41:641;;;577:33:129;;3295:2:641;3280:18;577:33:129;;;;;;;457:160;:::o;1128:8221:28:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1128:8221:28;;;-1:-1:-1;1128:8221:28;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:641;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:641;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:641:o;1218:901::-;1344:6;1352;1360;1368;1376;1429:3;1417:9;1408:7;1404:23;1400:33;1397:53;;;1446:1;1443;1436:12;1397:53;1469:40;1499:9;1469:40;:::i;:::-;1553:2;1538:18;;1532:25;1459:50;;-1:-1:-1;;;;;;1606:14:641;;;1603:34;;;1633:1;1630;1623:12;1603:34;1656:61;1709:7;1700:6;1689:9;1685:22;1656:61;:::i;:::-;1646:71;;1763:2;1752:9;1748:18;1742:25;1726:41;;1792:2;1782:8;1779:16;1776:36;;;1808:1;1805;1798:12;1776:36;;1831:63;1886:7;1875:8;1864:9;1860:24;1831:63;:::i;:::-;1821:73;;;1913:49;1958:2;1947:9;1943:18;1913:49;:::i;:::-;2005:3;1990:19;;1984:26;1903:59;;-1:-1:-1;;;;;;2039:31:641;;2029:42;;2019:70;;2085:1;2082;2075:12;2019:70;2108:5;2098:15;;;1218:901;;;;;;;;:::o;3359:380::-;3438:1;3434:12;;;;3481;;;3502:61;;3556:4;3548:6;3544:17;3534:27;;3502:61;3609:2;3601:6;3598:14;3578:18;3575:38;3572:161;;;3655:10;3650:3;3646:20;3643:1;3636:31;3690:4;3687:1;3680:15;3718:4;3715:1;3708:15;3572:161;;3359:380;;;:::o;:::-;1128:8221:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101b05760003560e01c8063504c6e01116100f5578063504c6e011461035957806357fd845514610366578063600dd5ea146103795780636352211e1461038c57806363b45e2d1461039f57806370a08231146103a7578063754a81d9146103ba5780638da5cb5b146103cd578063938e3d7b146103d557806395d89b41146103e85780639bcf7a15146103f0578063a22cb46514610403578063ac9650d814610416578063b24f2d3914610436578063b88d4fde14610454578063c87b56dd14610467578063e8a3d4851461047a578063e985e9c51461048257600080fd5b806275a317146101b557806301ffc9a7146101ca57806306fdde03146101f2578063081812fc14610207578063095ea7b31461022757806313af40351461023a57806318160ddd1461024d57806323b872dd146102635780632419f51b146102765780632a55205a1461028957806332f0cd64146102bb5780633b1475a7146102ce57806341f43434146102d657806342842e0e146102eb57806342966c68146102fe578063430c2081146103115780634cc157df14610324575b600080fd5b6101c86101c3366004612126565b610495565b005b6101dd6101d8366004612189565b6104f3565b60405190151581526020015b60405180910390f35b6101fa610560565b6040516101e991906121fe565b61021a610215366004612211565b6105f2565b6040516101e9919061222a565b6101c861023536600461223e565b610636565b6101c8610248366004612268565b61064f565b600154600054035b6040519081526020016101e9565b6101c8610271366004612283565b61067f565b610255610284366004612211565b6106aa565b61029c6102973660046122bf565b610718565b604080516001600160a01b0390931683526020830191909152016101e9565b6101c86102c93660046122ef565b610755565b600054610255565b61021a6daaeb6d7670e522a718067333cd4e81565b6101c86102f9366004612283565b6107c6565b6101c861030c366004612211565b6107eb565b6101dd61031f36600461223e565b6107f6565b610337610332366004612211565b610855565b604080516001600160a01b03909316835261ffff9091166020830152016101e9565b600e546101dd9060ff1681565b6101c8610374366004612268565b6108c0565b6101c861038736600461223e565b610930565b61021a61039a366004612211565b61095e565b600c54610255565b6102556103b5366004612268565b610970565b6101c86103c836600461230c565b6109be565b61021a610a02565b6101c86103e3366004612389565b610a11565b6101fa610a3e565b6101c86103fe3660046123bd565b610a4d565b6101c86104113660046123e2565b610a7c565b610429610424366004612419565b610a90565b6040516101e9919061248d565b600a546001600160a01b03811690600160a01b900461ffff16610337565b6101c86104623660046124ef565b610b84565b6101fa610475366004612211565b610bb1565b6101fa610c9f565b6101dd61049036600461254a565b610d2d565b61049d610d5b565b6104c25760405162461bcd60e51b81526004016104b99061257d565b60405180910390fd5b6104d46104ce60005490565b82610d7e565b6104ef82600160405180602001604052806000815250610df7565b5050565b60006301ffc9a760e01b6001600160e01b03198316148061052457506380ac58cd60e01b6001600160e01b03198316145b8061053f5750635b5e139f60e01b6001600160e01b03198316145b8061055a57506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461056f906125ae565b80601f016020809104026020016040519081016040528092919081815260200182805461059b906125ae565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b60006105fd82610f90565b61061a576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b8161064081610fbb565b61064a838361106e565b505050565b610657610d5b565b6106735760405162461bcd60e51b81526004016104b9906125e9565b61067c816110f0565b50565b826001600160a01b03811633146106995761069933610fbb565b6106a4848484611142565b50505050565b60006106b5600c5490565b82106106f35760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016104b9565b600c828154811061070657610706612611565b90600052602060002001549050919050565b60008060008061072786610855565b90945084925061ffff169050612710610740828761263d565b61074a9190612672565b925050509250929050565b61075d610d5b565b6107bd5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016104b9565b61067c8161114d565b826001600160a01b03811633146107e0576107e033610fbb565b6106a4848484611194565b61067c8160016111af565b6000806108028361095e565b9050806001600160a01b0316846001600160a01b0316148061082957506108298185610d2d565b8061084d5750836001600160a01b0316610842846105f2565b6001600160a01b0316145b949350505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561089c57805160208201516108b6565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6108c8610d5b565b6109255760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b60648201526084016104b9565b61067c81600161135e565b610938610d5b565b6109545760405162461bcd60e51b81526004016104b9906125e9565b6104ef8282611456565b6000610969826114da565b5192915050565b60006001600160a01b038216610999576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6109c6610d5b565b6109e25760405162461bcd60e51b81526004016104b99061257d565b6109f56109ee60005490565b84846115f4565b50506106a4848483610df7565b6009546001600160a01b031690565b610a19610d5b565b610a355760405162461bcd60e51b81526004016104b9906125e9565b61067c81611661565b60606003805461056f906125ae565b610a55610d5b565b610a715760405162461bcd60e51b81526004016104b9906125e9565b61064a838383611743565b81610a8681610fbb565b61064a83836117ea565b6060816001600160401b03811115610aaa57610aaa612084565b604051908082528060200260200182016040528015610add57816020015b6060815260200190600190039081610ac85790505b50905060005b82811015610b7d57610b4d30858584818110610b0157610b01612611565b9050602002810190610b139190612686565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061188092505050565b828281518110610b5f57610b5f612611565b60200260200101819052508080610b75906126d3565b915050610ae3565b5092915050565b836001600160a01b0381163314610b9e57610b9e33610fbb565b610baa858585856118ac565b5050505050565b6000818152600f6020526040812080546060929190610bcf906125ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfb906125ae565b8015610c485780601f10610c1d57610100808354040283529160200191610c48565b820191906000526020600020905b815481529060010190602001808311610c2b57829003601f168201915b50505050509050600081511115610c5f5792915050565b6000610c6a846118f7565b905080610c7685611a93565b604051602001610c879291906126ee565b60405160208183030381529060405292505050919050565b60088054610cac906125ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906125ae565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b505050505081565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6000610d65610a02565b6001600160a01b0316336001600160a01b031614905090565b6000828152600f602052604090208054610d97906125ae565b159050610dd85760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b60448201526064016104b9565b6000828152600f60209081526040909120825161064a92840190611fcf565b6000546001600160a01b038416610e2057604051622e076360e81b815260040160405180910390fd5b82610e3e5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b4290931692909202919091179055819081850190610ed790611b90565b15610f4d575b60405182906001600160a01b03881690600090600080516020612882833981519152908290a4610f166000878480600101955087611b9f565b610f33576040516368d2bf6b60e11b815260040160405180910390fd5b808210610edd578260005414610f4857600080fd5b610f80565b5b6040516001830192906001600160a01b03881690600090600080516020612882833981519152908290a4808210610f4e575b5060009081556106a49085838684565b600080548210801561055a575050600090815260046020526040902054600160e01b900460ff161590565b600e5460ff161561067c576daaeb6d7670e522a718067333cd4e3b1561067c57604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c61711349061100e903090859060040161271d565b602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f9190612737565b61067c5780604051633b79c77360e21b81526004016104b9919061222a565b60006110798261095e565b9050806001600160a01b0316836001600160a01b031614156110ae5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146110e5576110c88133610d2d565b6110e5576040516367d9dca160e11b815260040160405180910390fd5b61064a838383611c87565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61064a838383611ce3565b600e805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b61064a83838360405180602001604052806000815250610b84565b60006111ba836114da565b80519091508215611220576000336001600160a01b03831614806111e357506111e38233610d2d565b806111fe5750336111f3866105f2565b6001600160a01b0316145b90508061121e57604051632ce44b5f60e11b815260040160405180910390fd5b505b61122c60008583611c87565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661132657600054821461132657805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020612882833981519152908390a4505060018054810190555050565b6daaeb6d7670e522a718067333cd4e3b156104ef576001600160a01b0382163b156114255780156113f257604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe906113bc903090869060040161271d565b600060405180830381600087803b1580156113d657600080fd5b505af11580156113ea573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af2903906113bc903090869060040161271d565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e486906113bc90309060040161222a565b6127108111156114785760405162461bcd60e51b81526004016104b990612754565b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6040805160608101825260008082526020820181905291810191909152816000548110156115db57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906115d95780516001600160a01b031615611570579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156115d4579392505050565b611570565b505b604051636f96cda160e11b815260040160405180910390fd5b600080611601848661277d565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611658929091860190611fcf565b50935093915050565b600060088054611670906125ae565b80601f016020809104026020016040519081016040528092919081815260200182805461169c906125ae565b80156116e95780601f106116be576101008083540402835291602001916116e9565b820191906000526020600020905b8154815290600101906020018083116116cc57829003601f168201915b5050855193945061170593600893506020870192509050611fcf565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611737929190612795565b60405180910390a15050565b6127108111156117655760405162461bcd60e51b81526004016104b990612754565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6001600160a01b0382163314156118145760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60606118a5838360405180606001604052806027815260200161285b60279139611ebb565b9392505050565b6118b7848484611ce3565b6118c9836001600160a01b0316611b90565b156106a4576118da84848484611b9f565b6106a4576040516368d2bf6b60e11b815260040160405180910390fd5b60606000611904600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561195457602002820191906000526020600020905b815481526020019060010190808311611940575b5050505050905060005b82811015611a585781818151811061197857611978612611565b6020026020010151851015611a4657600d600083838151811061199d5761199d612611565b6020026020010151815260200190815260200160002080546119be906125ae565b80601f01602080910402602001604051908101604052809291908181526020018280546119ea906125ae565b8015611a375780601f10611a0c57610100808354040283529160200191611a37565b820191906000526020600020905b815481529060010190602001808311611a1a57829003601f168201915b50505050509350505050919050565b611a5160018261277d565b905061195e565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016104b9565b606081611ab75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ae15780611acb816126d3565b9150611ada9050600a83612672565b9150611abb565b6000816001600160401b03811115611afb57611afb612084565b6040519080825280601f01601f191660200182016040528015611b25576020820181803683370190505b5090505b841561084d57611b3a6001836127c3565b9150611b47600a866127da565b611b5290603061277d565b60f81b818381518110611b6757611b67612611565b60200101906001600160f81b031916908160001a905350611b89600a86612672565b9450611b29565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611bd49033908990889088906004016127ee565b6020604051808303816000875af1925050508015611c0f575060408051601f3d908101601f19168201909252611c0c91810190612821565b60015b611c6a573d808015611c3d576040519150601f19603f3d011682016040523d82523d6000602084013e611c42565b606091505b508051611c62576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611cee826114da565b9050836001600160a01b031681600001516001600160a01b031614611d255760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611d435750611d438533610d2d565b80611d5e575033611d53846105f2565b6001600160a01b0316145b905080611d7e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611da557604051633a954ecd60e21b815260040160405180910390fd5b611db160008487611c87565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611e84576000548214611e8457805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061288283398151915260405160405180910390a4610baa565b6060611ec684611b90565b611f215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104b9565b600080856001600160a01b031685604051611f3c919061283e565b600060405180830381855af49150503d8060008114611f77576040519150601f19603f3d011682016040523d82523d6000602084013e611f7c565b606091505b5091509150611f8c828286611f96565b9695505050505050565b60608315611fa55750816118a5565b825115611fb55782518084602001fd5b8160405162461bcd60e51b81526004016104b991906121fe565b828054611fdb906125ae565b90600052602060002090601f016020900481019282611ffd5760008555612043565b82601f1061201657805160ff1916838001178555612043565b82800160010185558215612043579182015b82811115612043578251825591602001919060010190612028565b5061204f929150612053565b5090565b5b8082111561204f5760008155600101612054565b80356001600160a01b038116811461207f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120ab57600080fd5b81356001600160401b03808211156120c5576120c5612084565b604051601f8301601f19908116603f011681019082821181831017156120ed576120ed612084565b8160405283815286602085880101111561210657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561213957600080fd5b61214283612068565b915060208301356001600160401b0381111561215d57600080fd5b6121698582860161209a565b9150509250929050565b6001600160e01b03198116811461067c57600080fd5b60006020828403121561219b57600080fd5b81356118a581612173565b60005b838110156121c15781810151838201526020016121a9565b838111156106a45750506000910152565b600081518084526121ea8160208601602086016121a6565b601f01601f19169290920160200192915050565b6020815260006118a560208301846121d2565b60006020828403121561222357600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6000806040838503121561225157600080fd5b61225a83612068565b946020939093013593505050565b60006020828403121561227a57600080fd5b6118a582612068565b60008060006060848603121561229857600080fd5b6122a184612068565b92506122af60208501612068565b9150604084013590509250925092565b600080604083850312156122d257600080fd5b50508035926020909101359150565b801515811461067c57600080fd5b60006020828403121561230157600080fd5b81356118a5816122e1565b6000806000806080858703121561232257600080fd5b61232b85612068565b93506020850135925060408501356001600160401b038082111561234e57600080fd5b61235a8883890161209a565b9350606087013591508082111561237057600080fd5b5061237d8782880161209a565b91505092959194509250565b60006020828403121561239b57600080fd5b81356001600160401b038111156123b157600080fd5b61084d8482850161209a565b6000806000606084860312156123d257600080fd5b833592506122af60208501612068565b600080604083850312156123f557600080fd5b6123fe83612068565b9150602083013561240e816122e1565b809150509250929050565b6000806020838503121561242c57600080fd5b82356001600160401b038082111561244357600080fd5b818501915085601f83011261245757600080fd5b81358181111561246657600080fd5b8660208260051b850101111561247b57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124e257603f198886030184526124d08583516121d2565b945092850192908501906001016124b4565b5092979650505050505050565b6000806000806080858703121561250557600080fd5b61250e85612068565b935061251c60208601612068565b92506040850135915060608501356001600160401b0381111561253e57600080fd5b61237d8782880161209a565b6000806040838503121561255d57600080fd5b61256683612068565b915061257460208401612068565b90509250929050565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b600181811c908216806125c257607f821691505b602082108114156125e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561265757612657612627565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826126815761268161265c565b500490565b6000808335601e1984360301811261269d57600080fd5b8301803591506001600160401b038211156126b757600080fd5b6020019150368190038213156126cc57600080fd5b9250929050565b60006000198214156126e7576126e7612627565b5060010190565b600083516127008184602088016121a6565b8351908301906127148183602088016121a6565b01949350505050565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561274957600080fd5b81516118a5816122e1565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6000821982111561279057612790612627565b500190565b6040815260006127a860408301856121d2565b82810360208401526127ba81856121d2565b95945050505050565b6000828210156127d5576127d5612627565b500390565b6000826127e9576127e961265c565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f8c908301846121d2565b60006020828403121561283357600080fd5b81516118a581612173565b600082516128508184602087016121a6565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205ef6704c78bb8672dd0ea52ae9f744a8424c473dfd295ed0133b33e4f543761d64736f6c634300080c0033",
    "sourceMap": "1128:8221:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217;;;;;;:::i;:::-;;:::i;:::-;;2317:444;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:641;;1993:22;1975:41;;1963:2;1948:18;2317:444:28;;;;;;;;6131:98:87;;;:::i;:::-;;;;;;;:::i;7617:200::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6870:208:28:-;;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;:::i;:::-;;:::i;2284:306:87:-;2543:12;;2337:7;2527:13;:28;2284:306;;;3767:25:641;;;3755:2;3740:18;2284:306:87;3621:177:641;7125:208:28;;;;;;:::i;:::-;;:::i;1277:203:114:-;;;;;;:::i;:::-;;:::i;1421:347:139:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4581:32:641;;;4563:51;;4645:2;4630:18;;4623:34;;;;4536:18;1421:347:139;4389:274:641;243:208:129;;;;;;:::i;:::-;;:::i;5809:104:28:-;5867:7;5893:13;5809:104;;806:142:130;;905:42;806:142;;7384:216:28;;;;;;:::i;:::-;;:::i;5467:87::-;;;;;;:::i;:::-;;:::i;6013:357::-;;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5468:32:641;;;5450:51;;5549:6;5537:19;;;5532:2;5517:18;;5510:47;5423:18;2008:381:139;5278:285:641;205:31:129;;;;;;;;;530:199:117;;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;:::i;:::-;;:::i;5946:123:87:-;;;;;;:::i;:::-;;:::i;980:96:114:-;1054:8;:15;980:96;;3372:203:87;;;;;;:::i;:::-;;:::i;4868:325:28:-;;;;;;:::i;:::-;;:::i;871:86:132:-;;;:::i;1003:188:116:-;;;;;;:::i;:::-;;:::i;6293:102:87:-;;;:::i;4281:288:139:-;;;;;;:::i;:::-;;:::i;6602:227:28:-;;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;2599:16;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;7651:249:28;;;;;;:::i;:::-;;:::i;3175:379::-;;;;;;:::i;:::-;;:::i;565:34:116:-;;;:::i;8232:162:87:-;;;;;;:::i;:::-;;:::i;4090:217:28:-;4177:10;:8;:10::i;:::-;4169:46;;;;-1:-1:-1;;;4169:46:28;;;;;;;:::i;:::-;;;;;;;;;4225:44;4238:19;5867:7;5893:13;;5809:104;4238:19;4259:9;4225:12;:44::i;:::-;4279:21;4289:3;4294:1;4279:21;;;;;;;;;;;;:9;:21::i;:::-;4090:217;;:::o;2317:444::-;2420:4;-1:-1:-1;;;;;;;;;2455:25:28;;;;:100;;-1:-1:-1;;;;;;;;;;2530:25:28;;;2455:100;:175;;;-1:-1:-1;;;;;;;;;;2605:25:28;;;2455:175;:274;;;-1:-1:-1;;;;;;;2688:41:28;;-1:-1:-1;;;2688:41:28;2455:274;2436:293;2317:444;-1:-1:-1;;2317:444:28:o;6131:98:87:-;6185:13;6217:5;6210:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6131:98;:::o;7617:200::-;7685:7;7709:16;7717:7;7709;:16::i;:::-;7704:64;;7734:34;;-1:-1:-1;;;7734:34:87;;;;;;;;;;;7704:64;-1:-1:-1;7786:24:87;;;;:15;:24;;;;;;-1:-1:-1;;;;;7786:24:87;;7617:200::o;6870:208:28:-;7015:8;1812:30:130;1833:8;1812:20;:30::i;:::-;7039:32:28::1;7053:8;7063:7;7039:13;:32::i;:::-;6870:208:::0;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;7125:208:28:-;7273:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7289:37:28::1;7308:4;7314:2;7318:7;7289:18;:37::i;:::-;7125:208:::0;;;;:::o;1277:203:114:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:114;;10759:2:641;1407:23:114;;;10741:21:641;10798:2;10778:18;;;10771:30;-1:-1:-1;;;10817:18:641;;;10810:43;10870:18;;1407:23:114;10557:337:641;1360:81:114;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;11795:2:641;313:84:129;;;11777:21:641;11834:2;11814:18;;;11807:30;11873:34;11853:18;;;11846:62;-1:-1:-1;;;11924:18:641;;;11917:41;11975:19;;313:84:129;11593:407:641;313:84:129;407:37;431:12;407:23;:37::i;7384:216:28:-;7536:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7552:41:28::1;7575:4;7581:2;7585:7;7552:22;:41::i;5467:87::-:0;5526:21;5532:8;5542:4;5526:5;:21::i;6013:357::-;6138:24;6178:13;6194:17;6202:8;6194:7;:17::i;:::-;6178:33;;6257:5;-1:-1:-1;;;;;6244:18:28;:9;-1:-1:-1;;;;;6244:18:28;;:68;;;;6278:34;6295:5;6302:9;6278:16;:34::i;:::-;6244:118;;;;6353:9;-1:-1:-1;;;;;6328:34:28;:21;6340:8;6328:11;:21::i;:::-;-1:-1:-1;;;;;6328:34:28;;6244:118;6221:142;6013:357;-1:-1:-1;;;;6013:357:28:o;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;530:199:117:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:117;;12207:2:641;601:81:117;;;12189:21:641;12246:2;12226:18;;;12219:30;12285:34;12265:18;;;12258:62;-1:-1:-1;;;12336:18:641;;;12329:38;12384:19;;601:81:117;12005:404:641;601:81:117;692:30;702:13;717:4;692:9;:30::i;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;5946:123:87:-;6010:7;6036:21;6049:7;6036:12;:21::i;:::-;:26;;5946:123;-1:-1:-1;;5946:123:87:o;3372:203::-;3436:7;-1:-1:-1;;;;;3459:19:87;;3455:60;;3487:28;;-1:-1:-1;;;3487:28:87;;;;;;;;;;;3455:60;-1:-1:-1;;;;;;3540:19:87;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3540:27:87;;3372:203::o;4868:325:28:-;5036:10;:8;:10::i;:::-;5028:46;;;;-1:-1:-1;;;5028:46:28;;;;;;;:::i;:::-;5084:60;5103:19;5867:7;5893:13;;5809:104;5103:19;5124:9;5135:8;5084:18;:60::i;:::-;;;5154:32;5164:3;5169:9;5180:5;5154:9;:32::i;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6293:102:87:-;6349:13;6381:7;6374:14;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;6602:227:28:-;6755:8;1812:30:130;1833:8;1812:20;:30::i;:::-;6779:43:28::1;6803:8;6813;6779:23;:43::i;698:319:127:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;7651:249:28:-;7830:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;7846:47:28::1;7869:4;7875:2;7879:7;7888:4;7846:22;:47::i;:::-;7651:249:::0;;;;;:::o;3175:379::-;3274:29;3306:17;;;:7;:17;;;;;3274:49;;3249:13;;3274:29;3306:17;3274:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:1;3343:15;3337:29;:33;3333:86;;;3393:15;3175:379;-1:-1:-1;;3175:379:28:o;3333:86::-;3429:22;3454:21;3466:8;3454:11;:21::i;:::-;3429:46;;3516:8;3526:19;:8;:17;:19::i;:::-;3499:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3485:62;;;;3175:379;;;:::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8232:162:87:-;-1:-1:-1;;;;;8352:25:87;;;8329:4;8352:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8232:162::o;8611:102:28:-;8662:4;8699:7;:5;:7::i;:::-;-1:-1:-1;;;;;8685:21:28;:10;-1:-1:-1;;;;;8685:21:28;;8678:28;;8611:102;:::o;8103:202::-;8209:17;;;;:7;:17;;;;;8203:31;;;;;:::i;:::-;:36;;-1:-1:-1;8195:64:28;;;;-1:-1:-1;;;8195:64:28;;13757:2:641;8195:64:28;;;13739:21:641;13796:2;13776:18;;;13769:30;-1:-1:-1;;;13815:18:641;;;13808:45;13870:18;;8195:64:28;13555:339:641;8195:64:28;8269:17;;;;:7;:17;;;;;;;;:29;;;;;;;;:::i;10271:1708:87:-;10389:20;10412:13;-1:-1:-1;;;;;10439:16:87;;10435:48;;10464:19;;-1:-1:-1;;;10464:19:87;;;;;;;;;;;10435:48;10497:13;10493:44;;10519:18;;-1:-1:-1;;;10519:18:87;;;;;;;;;;;10493:44;-1:-1:-1;;;;;10880:16:87;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;10938:49:87;;-1:-1:-1;;;;;10880:44:87;;;;;;;10938:49;;;-1:-1:-1;;;;;;;;;10880:44:87;;;;;;10938:49;;;;;;;;;;;;;;;;11002:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;11051:66:87;;;-1:-1:-1;;;11101:15:87;11051:66;;;;;;;;;;;;;11002:25;;11195:23;;;;11237:15;;:13;:15::i;:::-;11233:618;;;11272:308;11302:38;;11327:12;;-1:-1:-1;;;;;11302:38:87;;;11319:1;;-1:-1:-1;;;;;;;;;;;11302:38:87;11319:1;;11302:38;11367:69;11406:1;11410:2;11414:14;;;;;;11430:5;11367:30;:69::i;:::-;11362:172;;11471:40;;-1:-1:-1;;;11471:40:87;;;;;;;;;;;11362:172;11575:3;11560:12;:18;11272:308;;11659:12;11642:13;;:29;11638:43;;11673:8;;;11638:43;11233:618;;;11720:117;11750:40;;11775:14;;;;;-1:-1:-1;;;;;11750:40:87;;;11767:1;;-1:-1:-1;;;;;;;;;;;11750:40:87;11767:1;;11750:40;11832:3;11817:12;:18;11720:117;;11233:618;-1:-1:-1;11864:13:87;:28;;;11912:60;;11945:2;11949:12;11963:8;11912:60;:::i;9558:172::-;9615:4;9678:13;;9668:7;:23;9638:85;;;;-1:-1:-1;;9696:20:87;;;;:11;:20;;;;;:27;-1:-1:-1;;;9696:27:87;;;;9695:28;;9558:172::o;1866:477:130:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:130;;905:42;;2168;;:67;;2219:4;;2226:8;;2168:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2285:8;2266:28;;-1:-1:-1;;;2266:28:130;;;;;;;;:::i;7164:392:87:-;7244:13;7260:24;7276:7;7260:15;:24::i;:::-;7244:40;;7304:5;-1:-1:-1;;;;;7298:11:87;:2;-1:-1:-1;;;;;7298:11:87;;7294:48;;;7318:24;;-1:-1:-1;;;7318:24:87;;;;;;;;;;;7294:48;719:10:325;-1:-1:-1;;;;;7357:21:87;;;7353:158;;7397:37;7414:5;719:10:325;8232:162:87;:::i;7397:37::-;7392:119;;7461:35;;-1:-1:-1;;;7461:35:87;;;;;;;;;;;7392:119;7521:28;7530:2;7534:7;7543:5;7521:8;:28::i;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;8456:164:87:-;8585:28;8595:4;8601:2;8605:7;8585:9;:28::i;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;1975:41:641;;;577:33:129;;1963:2:641;1948:18;577:33:129;;;;;;;457:160;:::o;8686:179:87:-;8819:39;8836:4;8842:2;8846:7;8819:39;;;;;;;;;;;;:16;:39::i;16073:2355::-;16152:35;16190:21;16203:7;16190:12;:21::i;:::-;16237:18;;16152:59;;-1:-1:-1;16266:284:87;;;;16299:22;719:10:325;-1:-1:-1;;;;;16325:20:87;;;;:76;;-1:-1:-1;16365:36:87;16382:4;719:10:325;8232:162:87;:::i;16365:36::-;16325:132;;;-1:-1:-1;719:10:325;16421:20:87;16433:7;16421:11;:20::i;:::-;-1:-1:-1;;;;;16421:36:87;;16325:132;16299:159;;16478:17;16473:66;;16504:35;;-1:-1:-1;;;16504:35:87;;;;;;;;;;;16473:66;16285:265;16266:284;16673:35;16690:1;16694:7;16703:4;16673:8;:35::i;:::-;-1:-1:-1;;;;;17032:18:87;;;16998:31;17032:18;;;:12;:18;;;;;;;;17064:24;;-1:-1:-1;;;;;;;;;;17064:24:87;;;;;;;;;-1:-1:-1;;;;;;17064:24:87;;;;17102:29;;;;;17087:1;17102:29;;;;;;;;-1:-1:-1;;;;;;17102:29:87;;;;;;;;;;17261:20;;;:11;:20;;;;;;17295;;-1:-1:-1;;;;17362:15:87;17329:49;;;-1:-1:-1;;;17329:49:87;-1:-1:-1;;;;;;17329:49:87;;;;;;;;;;17392:22;-1:-1:-1;;;17392:22:87;;;17680:11;;;17739:24;;;;;17781:13;;17032:18;;17739:24;;17781:13;17777:377;;17988:13;;17973:11;:28;17969:171;;18025:20;;18093:28;;;;-1:-1:-1;;;;;18067:54:87;-1:-1:-1;;;18067:54:87;-1:-1:-1;;;;;;18067:54:87;;;-1:-1:-1;;;;;18025:20:87;;18067:54;;;;17969:171;-1:-1:-1;;18179:35:87;;18206:7;;-1:-1:-1;18202:1:87;;-1:-1:-1;;;;;;18179:35:87;;;-1:-1:-1;;;;;;;;;;;18179:35:87;18202:1;;18179:35;-1:-1:-1;;18397:12:87;:14;;;;;;-1:-1:-1;;16073:2355:87:o;2349:783:130:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;905:42;;2763:45;;:92;;2817:4;;2824:30;;2763:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:217:28;;:::o;2726:289:130:-;2902:94;;-1:-1:-1;;;2902:94:130;;905:42;;2902:47;;:94;;2958:4;;2965:30;;2902:94;;;:::i;2603:513::-;3053:48;;-1:-1:-1;;;3053:48:130;;905:42;;3053:33;;:48;;3095:4;;3053:48;;;:::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3767:25:641;;;3711:46:139;;3755:2:641;3740:18;3711:46:139;;;;;;;3430:334;;:::o;4715:1174:87:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4825:7:87;4923:13;;4916:4;:20;4912:913;;;4960:31;4994:17;;;:11;:17;;;;;;;;;4960:51;;;;;;;;;-1:-1:-1;;;;;4960:51:87;;;;-1:-1:-1;;;4960:51:87;;-1:-1:-1;;;;;4960:51:87;;;;;;;;-1:-1:-1;;;4960:51:87;;;;;;;;;;;;;;5033:774;;5086:14;;-1:-1:-1;;;;;5086:28:87;;5082:107;;5153:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5082:107::-;-1:-1:-1;;;5549:6:87;5597:17;;;;:11;:17;;;;;;;;;5585:29;;;;;;;;;-1:-1:-1;;;;;5585:29:87;;;;;-1:-1:-1;;;5585:29:87;;-1:-1:-1;;;;;5585:29:87;;;;;;;;-1:-1:-1;;;5585:29:87;;;;;;;;;;;;;5648:28;5644:115;;5719:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5644:115::-;5506:279;;;4938:887;4912:913;5851:31;;-1:-1:-1;;;5851:31:87;;;;;;;;;;;2840:362:114;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:114;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:114;;-1:-1:-1;3159:36:114;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;3767:25:641;;;4918:49:139;;4886:29;;4983:43;;3740:18:641;4983:43:139;;;;;;;4671:362;;;:::o;7884:282:87:-;-1:-1:-1;;;;;7982:24:87;;719:10:325;7982:24:87;7978:54;;;8015:17;;-1:-1:-1;;;8015:17:87;;;;;;;;;;;7978:54;719:10:325;8043:32:87;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8043:42:87;;;;;;;;;;;;:53;;-1:-1:-1;;8043:53:87;;;;;;;;;;8111:48;;1975:41:641;;;8043:42:87;;719:10:325;8111:48:87;;1948:18:641;8111:48:87;;;;;;;7884:282;;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:281:o;8931:381:87:-;9092:28;9102:4;9108:2;9112:7;9092:9;:28::i;:::-;9134:15;:2;-1:-1:-1;;;;;9134:13:87;;:15::i;:::-;9130:176;;;9168:56;9199:4;9205:2;9209:7;9218:5;9168:30;:56::i;:::-;9163:143;;9251:40;;-1:-1:-1;;;9251:40:87;;;;;;;;;;;2153:390:114;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:114;;-1:-1:-1;;;2511:25:114;;15525:2:641;2511:25:114;;;15507:21:641;15564:2;15544:18;;;15537:30;-1:-1:-1;;;15583:18:641;;;15576:45;15638:18;;2511:25:114;15323:339:641;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;1137:320:281;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;19209:650:87:-;19387:72;;-1:-1:-1;;;19387:72:87;;19367:4;;-1:-1:-1;;;;;19387:36:87;;;;;:72;;719:10:325;;19438:4:87;;19444:7;;19453:5;;19387:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19387:72:87;;;;;;;;-1:-1:-1;;19387:72:87;;;;;;;;;;;;:::i;:::-;;;19383:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19618:13:87;;19614:229;;19663:40;;-1:-1:-1;;;19663:40:87;;;;;;;;;;;19614:229;19803:6;19797:13;19788:6;19784:2;19780:15;19773:38;19383:470;-1:-1:-1;;;;;;19505:55:87;-1:-1:-1;;;19505:55:87;;-1:-1:-1;19209:650:87;;;;;;:::o;18539:189::-;18649:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18649:29:87;-1:-1:-1;;;;;18649:29:87;;;;;;;;;18693:28;;18649:24;;18693:28;;;;;;;18539:189;;;:::o;13614:2082::-;13724:35;13762:21;13775:7;13762:12;:21::i;:::-;13724:59;;13820:4;-1:-1:-1;;;;;13798:26:87;:13;:18;;;-1:-1:-1;;;;;13798:26:87;;13794:67;;13833:28;;-1:-1:-1;;;13833:28:87;;;;;;;;;;;13794:67;13872:22;719:10:325;-1:-1:-1;;;;;13898:20:87;;;;:72;;-1:-1:-1;13934:36:87;13951:4;719:10:325;8232:162:87;:::i;13934:36::-;13898:124;;;-1:-1:-1;719:10:325;13986:20:87;13998:7;13986:11;:20::i;:::-;-1:-1:-1;;;;;13986:36:87;;13898:124;13872:151;;14039:17;14034:66;;14065:35;;-1:-1:-1;;;14065:35:87;;;;;;;;;;;14034:66;-1:-1:-1;;;;;14114:16:87;;14110:52;;14139:23;;-1:-1:-1;;;14139:23:87;;;;;;;;;;;14110:52;14278:35;14295:1;14299:7;14308:4;14278:8;:35::i;:::-;-1:-1:-1;;;;;14603:18:87;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;14603:31:87;;;-1:-1:-1;;;;;14603:31:87;;;-1:-1:-1;;14603:31:87;;;;;;;14648:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14648:29:87;;;;;;;;;;;14726:20;;;:11;:20;;;;;;14760:18;;-1:-1:-1;;;;;;14792:49:87;;;;-1:-1:-1;;;14825:15:87;14792:49;;;;;;;;;;15111:11;;15170:24;;;;;15212:13;;14726:20;;15170:24;;15212:13;15208:377;;15419:13;;15404:11;:28;15400:171;;15456:20;;15524:28;;;;-1:-1:-1;;;;;15498:54:87;-1:-1:-1;;;15498:54:87;-1:-1:-1;;;;;;15498:54:87;;;-1:-1:-1;;;;;15456:20:87;;15498:54;;;;15400:171;14579:1016;;;15629:7;15625:2;-1:-1:-1;;;;;15610:27:87;15619:4;-1:-1:-1;;;;;15610:27:87;-1:-1:-1;;;;;;;;;;;15610:27:87;;;;;;;;;15647:42;7125:208:28;6922:387:281;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;16864:2:641;7087:69:281;;;16846:21:641;16903:2;16883:18;;;16876:30;16942:34;16922:18;;;16915:62;-1:-1:-1;;;16993:18:641;;;16986:36;17039:19;;7087:69:281;16662:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:641;82:20;;-1:-1:-1;;;;;131:31:641;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;-1:-1:-1;;;;;537:2:641;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:641;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:396::-;1126:6;1134;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1306:2;1295:9;1291:18;1278:32;-1:-1:-1;;;;;1325:6:641;1322:30;1319:50;;;1365:1;1362;1355:12;1319:50;1388;1430:7;1421:6;1410:9;1406:22;1388:50;:::i;:::-;1378:60;;;1048:396;;;;;:::o;1449:131::-;-1:-1:-1;;;;;;1523:32:641;;1513:43;;1503:71;;1570:1;1567;1560:12;1585:245;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1751:9;1738:23;1770:30;1794:5;1770:30;:::i;2027:258::-;2099:1;2109:113;2123:6;2120:1;2117:13;2109:113;;;2199:11;;;2193:18;2180:11;;;2173:39;2145:2;2138:10;2109:113;;;2240:6;2237:1;2234:13;2231:48;;;-1:-1:-1;;2275:1:641;2257:16;;2250:27;2027:258::o;2290:::-;2332:3;2370:5;2364:12;2397:6;2392:3;2385:19;2413:63;2469:6;2462:4;2457:3;2453:14;2446:4;2439:5;2435:16;2413:63;:::i;:::-;2530:2;2509:15;-1:-1:-1;;2505:29:641;2496:39;;;;2537:4;2492:50;;2290:258;-1:-1:-1;;2290:258:641:o;2553:220::-;2702:2;2691:9;2684:21;2665:4;2722:45;2763:2;2752:9;2748:18;2740:6;2722:45;:::i;2778:180::-;2837:6;2890:2;2878:9;2869:7;2865:23;2861:32;2858:52;;;2906:1;2903;2896:12;2858:52;-1:-1:-1;2929:23:641;;2778:180;-1:-1:-1;2778:180:641:o;2963:203::-;-1:-1:-1;;;;;3127:32:641;;;;3109:51;;3097:2;3082:18;;2963:203::o;3171:254::-;3239:6;3247;3300:2;3288:9;3279:7;3275:23;3271:32;3268:52;;;3316:1;3313;3306:12;3268:52;3339:29;3358:9;3339:29;:::i;:::-;3329:39;3415:2;3400:18;;;;3387:32;;-1:-1:-1;;;3171:254:641:o;3430:186::-;3489:6;3542:2;3530:9;3521:7;3517:23;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3581:29;3600:9;3581:29;:::i;3803:328::-;3880:6;3888;3896;3949:2;3937:9;3928:7;3924:23;3920:32;3917:52;;;3965:1;3962;3955:12;3917:52;3988:29;4007:9;3988:29;:::i;:::-;3978:39;;4036:38;4070:2;4059:9;4055:18;4036:38;:::i;:::-;4026:48;;4121:2;4110:9;4106:18;4093:32;4083:42;;3803:328;;;;;:::o;4136:248::-;4204:6;4212;4265:2;4253:9;4244:7;4240:23;4236:32;4233:52;;;4281:1;4278;4271:12;4233:52;-1:-1:-1;;4304:23:641;;;4374:2;4359:18;;;4346:32;;-1:-1:-1;4136:248:641:o;4668:118::-;4754:5;4747:13;4740:21;4733:5;4730:32;4720:60;;4776:1;4773;4766:12;4791:241;4847:6;4900:2;4888:9;4879:7;4875:23;4871:32;4868:52;;;4916:1;4913;4906:12;4868:52;4955:9;4942:23;4974:28;4996:5;4974:28;:::i;5568:685::-;5673:6;5681;5689;5697;5750:3;5738:9;5729:7;5725:23;5721:33;5718:53;;;5767:1;5764;5757:12;5718:53;5790:29;5809:9;5790:29;:::i;:::-;5780:39;;5866:2;5855:9;5851:18;5838:32;5828:42;;5921:2;5910:9;5906:18;5893:32;-1:-1:-1;;;;;5985:2:641;5977:6;5974:14;5971:34;;;6001:1;5998;5991:12;5971:34;6024:50;6066:7;6057:6;6046:9;6042:22;6024:50;:::i;:::-;6014:60;;6127:2;6116:9;6112:18;6099:32;6083:48;;6156:2;6146:8;6143:16;6140:36;;;6172:1;6169;6162:12;6140:36;;6195:52;6239:7;6228:8;6217:9;6213:24;6195:52;:::i;:::-;6185:62;;;5568:685;;;;;;;:::o;6258:322::-;6327:6;6380:2;6368:9;6359:7;6355:23;6351:32;6348:52;;;6396:1;6393;6386:12;6348:52;6436:9;6423:23;-1:-1:-1;;;;;6461:6:641;6458:30;6455:50;;;6501:1;6498;6491:12;6455:50;6524;6566:7;6557:6;6546:9;6542:22;6524:50;:::i;6585:322::-;6662:6;6670;6678;6731:2;6719:9;6710:7;6706:23;6702:32;6699:52;;;6747:1;6744;6737:12;6699:52;6783:9;6770:23;6760:33;;6812:38;6846:2;6835:9;6831:18;6812:38;:::i;6912:315::-;6977:6;6985;7038:2;7026:9;7017:7;7013:23;7009:32;7006:52;;;7054:1;7051;7044:12;7006:52;7077:29;7096:9;7077:29;:::i;:::-;7067:39;;7156:2;7145:9;7141:18;7128:32;7169:28;7191:5;7169:28;:::i;:::-;7216:5;7206:15;;;6912:315;;;;;:::o;7232:626::-;7329:6;7337;7390:2;7378:9;7369:7;7365:23;7361:32;7358:52;;;7406:1;7403;7396:12;7358:52;7446:9;7433:23;-1:-1:-1;;;;;7516:2:641;7508:6;7505:14;7502:34;;;7532:1;7529;7522:12;7502:34;7570:6;7559:9;7555:22;7545:32;;7615:7;7608:4;7604:2;7600:13;7596:27;7586:55;;7637:1;7634;7627:12;7586:55;7677:2;7664:16;7703:2;7695:6;7692:14;7689:34;;;7719:1;7716;7709:12;7689:34;7772:7;7767:2;7757:6;7754:1;7750:14;7746:2;7742:23;7738:32;7735:45;7732:65;;;7793:1;7790;7783:12;7732:65;7824:2;7816:11;;;;;7846:6;;-1:-1:-1;7232:626:641;;-1:-1:-1;;;;7232:626:641:o;7863:801::-;8023:4;8052:2;8092;8081:9;8077:18;8122:2;8111:9;8104:21;8145:6;8180;8174:13;8211:6;8203;8196:22;8249:2;8238:9;8234:18;8227:25;;8311:2;8301:6;8298:1;8294:14;8283:9;8279:30;8275:39;8261:53;;8349:2;8341:6;8337:15;8370:1;8380:255;8394:6;8391:1;8388:13;8380:255;;;8487:2;8483:7;8471:9;8463:6;8459:22;8455:36;8450:3;8443:49;8515:40;8548:6;8539;8533:13;8515:40;:::i;:::-;8505:50;-1:-1:-1;8613:12:641;;;;8578:15;;;;8416:1;8409:9;8380:255;;;-1:-1:-1;8652:6:641;;7863:801;-1:-1:-1;;;;;;;7863:801:641:o;8669:538::-;8764:6;8772;8780;8788;8841:3;8829:9;8820:7;8816:23;8812:33;8809:53;;;8858:1;8855;8848:12;8809:53;8881:29;8900:9;8881:29;:::i;:::-;8871:39;;8929:38;8963:2;8952:9;8948:18;8929:38;:::i;:::-;8919:48;;9014:2;9003:9;8999:18;8986:32;8976:42;;9069:2;9058:9;9054:18;9041:32;-1:-1:-1;;;;;9088:6:641;9085:30;9082:50;;;9128:1;9125;9118:12;9082:50;9151;9193:7;9184:6;9173:9;9169:22;9151:50;:::i;9212:260::-;9280:6;9288;9341:2;9329:9;9320:7;9316:23;9312:32;9309:52;;;9357:1;9354;9347:12;9309:52;9380:29;9399:9;9380:29;:::i;:::-;9370:39;;9428:38;9462:2;9451:9;9447:18;9428:38;:::i;:::-;9418:48;;9212:260;;;;;:::o;9477:347::-;9679:2;9661:21;;;9718:2;9698:18;;;9691:30;-1:-1:-1;;;9752:2:641;9737:18;;9730:53;9815:2;9800:18;;9477:347::o;9829:380::-;9908:1;9904:12;;;;9951;;;9972:61;;10026:4;10018:6;10014:17;10004:27;;9972:61;10079:2;10071:6;10068:14;10048:18;10045:38;10042:161;;;10125:10;10120:3;10116:20;10113:1;10106:31;10160:4;10157:1;10150:15;10188:4;10185:1;10178:15;10042:161;;9829:380;;;:::o;10214:338::-;10416:2;10398:21;;;10455:2;10435:18;;;10428:30;-1:-1:-1;;;10489:2:641;10474:18;;10467:44;10543:2;10528:18;;10214:338::o;10899:127::-;10960:10;10955:3;10951:20;10948:1;10941:31;10991:4;10988:1;10981:15;11015:4;11012:1;11005:15;11031:127;11092:10;11087:3;11083:20;11080:1;11073:31;11123:4;11120:1;11113:15;11147:4;11144:1;11137:15;11163:168;11203:7;11269:1;11265;11261:6;11257:14;11254:1;11251:21;11246:1;11239:9;11232:17;11228:45;11225:71;;;11276:18;;:::i;:::-;-1:-1:-1;11316:9:641;;11163:168::o;11336:127::-;11397:10;11392:3;11388:20;11385:1;11378:31;11428:4;11425:1;11418:15;11452:4;11449:1;11442:15;11468:120;11508:1;11534;11524:35;;11539:18;;:::i;:::-;-1:-1:-1;11573:9:641;;11468:120::o;12414:521::-;12491:4;12497:6;12557:11;12544:25;12651:2;12647:7;12636:8;12620:14;12616:29;12612:43;12592:18;12588:68;12578:96;;12670:1;12667;12660:12;12578:96;12697:33;;12749:20;;;-1:-1:-1;;;;;;12781:30:641;;12778:50;;;12824:1;12821;12814:12;12778:50;12857:4;12845:17;;-1:-1:-1;12888:14:641;12884:27;;;12874:38;;12871:58;;;12925:1;12922;12915:12;12871:58;12414:521;;;;;:::o;12940:135::-;12979:3;-1:-1:-1;;13000:17:641;;12997:43;;;13020:18;;:::i;:::-;-1:-1:-1;13067:1:641;13056:13;;12940:135::o;13080:470::-;13259:3;13297:6;13291:13;13313:53;13359:6;13354:3;13347:4;13339:6;13335:17;13313:53;:::i;:::-;13429:13;;13388:16;;;;13451:57;13429:13;13388:16;13485:4;13473:17;;13451:57;:::i;:::-;13524:20;;13080:470;-1:-1:-1;;;;13080:470:641:o;13899:304::-;-1:-1:-1;;;;;14129:15:641;;;14111:34;;14181:15;;14176:2;14161:18;;14154:43;14061:2;14046:18;;13899:304::o;14208:245::-;14275:6;14328:2;14316:9;14307:7;14303:23;14299:32;14296:52;;;14344:1;14341;14334:12;14296:52;14376:9;14370:16;14395:28;14417:5;14395:28;:::i;14458:339::-;14660:2;14642:21;;;14699:2;14679:18;;;14672:30;-1:-1:-1;;;14733:2:641;14718:18;;14711:45;14788:2;14773:18;;14458:339::o;14802:128::-;14842:3;14873:1;14869:6;14866:1;14863:13;14860:39;;;14879:18;;:::i;:::-;-1:-1:-1;14915:9:641;;14802:128::o;14935:383::-;15132:2;15121:9;15114:21;15095:4;15158:45;15199:2;15188:9;15184:18;15176:6;15158:45;:::i;:::-;15251:9;15243:6;15239:22;15234:2;15223:9;15219:18;15212:50;15279:33;15305:6;15297;15279:33;:::i;:::-;15271:41;14935:383;-1:-1:-1;;;;;14935:383:641:o;15667:125::-;15707:4;15735:1;15732;15729:8;15726:34;;;15740:18;;:::i;:::-;-1:-1:-1;15777:9:641;;15667:125::o;15797:112::-;15829:1;15855;15845:35;;15860:18;;:::i;:::-;-1:-1:-1;15894:9:641;;15797:112::o;15914:489::-;-1:-1:-1;;;;;16183:15:641;;;16165:34;;16235:15;;16230:2;16215:18;;16208:43;16282:2;16267:18;;16260:34;;;16330:3;16325:2;16310:18;;16303:31;;;16108:4;;16351:46;;16377:19;;16369:6;16351:46;:::i;16408:249::-;16477:6;16530:2;16518:9;16509:7;16505:23;16501:32;16498:52;;;16546:1;16543;16536:12;16498:52;16578:9;16572:16;16597:30;16621:5;16597:30;:::i;17069:274::-;17198:3;17236:6;17230:13;17252:53;17298:6;17293:3;17286:4;17278:6;17274:17;17252:53;:::i;:::-;17321:16;;;;;17069:274;-1:-1:-1;;17069:274:641:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchMintTo(address,uint256,string,bytes)": "754a81d9",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "mintTo(address,string)": "0075a317",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchMintTo(address,uint256,string,bytes)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_data\":\"Additional data to pass along during the minting of the NFT.\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC165: https://eips.ethereum.org/EIPS/eip-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchMintTo(address,uint256,string,bytes)\":{\"notice\":\"Lets an authorized address mint multiple NFTs at once to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"}},\"notice\":\"The `ERC721Base` smart contract implements the ERC721 NFT standard, along with the ERC721A optimization to the standard.  It includes the following additions to standard ERC721 logic:      - Ability to mint NFTs via the provided `mint` function.      - Contract metadata for royalty support on platforms such as OpenSea that use        off-chain information to distribute roaylties.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - EIP 2981 compliance for royalty support on NFT marketplaces.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC721Base.sol\":\"ERC721Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC721Base.sol\":{\"keccak256\":\"0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7\",\"dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea\",\"dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchMintTo(address,uint256,string,bytes)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_data": "Additional data to pass along during the minting of the NFT.",
              "_quantity": "The number of NFTs to mint.",
              "_to": "The recipient of the NFT to mint."
            }
          },
          "burn(uint256)": {
            "details": "ERC721A's `_burn(uint256,bool)` internally checks for token approvals.",
            "params": {
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintTo(address,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_to": "The recipient of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFT minted."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC165: https://eips.ethereum.org/EIPS/eip-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See `BatchMintMetadata` for handling of metadata in this contract.",
            "params": {
              "_tokenId": "The tokenId of an NFT."
            }
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchMintTo(address,uint256,string,bytes)": {
            "notice": "Lets an authorized address mint multiple NFTs at once to a recipient."
          },
          "burn(uint256)": {
            "notice": "Lets an owner or approved operator burn the NFT of the given tokenId."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "mintTo(address,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the metadata URI for an NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC721Base.sol": "ERC721Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC721Base.sol": {
        "keccak256": "0x16b239d596e9cacc57616b08c92efecab02e34ebd8385fb2bc5cc5860d9504d3",
        "urls": [
          "bzz-raw://231408431040d404956efc2cdae57c8a5d4555c28a2ac30a9dca0f5610db59d7",
          "dweb:/ipfs/QmSVrgSyQBHfrqzRxKU2QP5TQHDdi79JnDjkLQiPJNeGqX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10",
        "urls": [
          "bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea",
          "dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC721Base.sol",
    "id": 10897,
    "exportedSymbols": {
      "BatchMintMetadata": [
        34496
      ],
      "ContractMetadata": [
        34723
      ],
      "DefaultOperatorFilterer": [
        34762
      ],
      "ERC721A": [
        29541
      ],
      "ERC721Base": [
        10896
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC165": [
        31146
      ],
      "IERC2981": [
        31290
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IRoyalty": [
        50644
      ],
      "Multicall": [
        37872
      ],
      "OperatorFilterer": [
        38148
      ],
      "Ownable": [
        38400
      ],
      "Royalty": [
        39646
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9311:28",
    "nodes": [
      {
        "id": 10430,
        "nodeType": "PragmaDirective",
        "src": "39:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 10432,
        "nodeType": "ImportDirective",
        "src": "86:59:28",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApprove.sol",
        "file": "../eip/ERC721AVirtualApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 29542,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10431,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29541,
              "src": "95:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721A_$29541_$",
                "typeString": "type(contract ERC721A)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10433,
        "nodeType": "ImportDirective",
        "src": "147:43:28",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10434,
        "nodeType": "ImportDirective",
        "src": "191:36:28",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10435,
        "nodeType": "ImportDirective",
        "src": "228:34:28",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10436,
        "nodeType": "ImportDirective",
        "src": "263:34:28",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10437,
        "nodeType": "ImportDirective",
        "src": "298:44:28",
        "nodes": [],
        "absolutePath": "contracts/extension/BatchMintMetadata.sol",
        "file": "../extension/BatchMintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 34497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10438,
        "nodeType": "ImportDirective",
        "src": "343:50:28",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFilterer.sol",
        "file": "../extension/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 34763,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10439,
        "nodeType": "ImportDirective",
        "src": "395:30:28",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10897,
        "sourceUnit": 65768,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10896,
        "nodeType": "ContractDefinition",
        "src": "1128:8221:28",
        "nodes": [
          {
            "id": 10457,
            "nodeType": "UsingForDirective",
            "src": "1284:28:28",
            "nodes": [],
            "libraryName": {
              "id": 10455,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65767,
              "src": "1290:9:28"
            },
            "typeName": {
              "id": 10456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 10461,
            "nodeType": "VariableDeclaration",
            "src": "1494:42:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fullURI",
            "nameLocation": "1529:7:28",
            "scope": 10896,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 10460,
              "keyType": {
                "id": 10458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1502:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1494:26:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 10459,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1513:6:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 10492,
            "nodeType": "FunctionDefinition",
            "src": "1722:345:28",
            "nodes": [],
            "body": {
              "id": 10491,
              "nodeType": "Block",
              "src": "1919:148:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10479,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10463,
                        "src": "1941:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10478,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "1929:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10481,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:26:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10483,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10469,
                        "src": "1990:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10484,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10471,
                        "src": "2009:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 10482,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "1965:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:56:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10486,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:56:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 10488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2055:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10487,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37988,
                      "src": "2031:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 10489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:29:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10490,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:29:28"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10474,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10465,
                    "src": "1903:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 10475,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10467,
                    "src": "1910:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 10476,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10473,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "1895:7:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1895:23:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10463,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1751:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10492,
                  "src": "1743:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10465,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1788:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10492,
                  "src": "1774:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10467,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1817:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10492,
                  "src": "1803:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10466,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10469,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1842:17:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10492,
                  "src": "1834:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10471,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1877:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10492,
                  "src": "1869:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 10470,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:161:28"
            },
            "returnParameters": {
              "id": 10477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10523,
            "nodeType": "FunctionDefinition",
            "src": "2317:444:28",
            "nodes": [],
            "body": {
              "id": 10522,
              "nodeType": "Block",
              "src": "2426:335:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 10513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 10505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10503,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10495,
                            "src": "2455:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783031666663396137",
                            "id": 10504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2470:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33540519_by_1",
                              "typeString": "int_const 33540519"
                            },
                            "value": "0x01ffc9a7"
                          },
                          "src": "2455:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 10508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10506,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10495,
                            "src": "2530:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783830616335386364",
                            "id": 10507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2545:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2158778573_by_1",
                              "typeString": "int_const 2158778573"
                            },
                            "value": "0x80ac58cd"
                          },
                          "src": "2530:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2455:100:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 10512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10510,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10495,
                          "src": "2605:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783562356531333966",
                          "id": 10511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2620:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1532892063_by_1",
                            "typeString": "int_const 1532892063"
                          },
                          "value": "0x5b5e139f"
                        },
                        "src": "2605:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2455:175:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 10519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10514,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10495,
                        "src": "2688:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10516,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31290,
                              "src": "2708:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 10515,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2703:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 10517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:14:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$31290",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 10518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2703:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2688:41:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2455:274:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10502,
                  "id": 10521,
                  "nodeType": "Return",
                  "src": "2436:293:28"
                }
              ]
            },
            "baseFunctions": [
              28306,
              31145
            ],
            "documentation": {
              "id": 10493,
              "nodeType": "StructuredDocumentation",
              "src": "2253:59:28",
              "text": "@dev See ERC165: https://eips.ethereum.org/EIPS/eip-165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2326:17:28",
            "overrides": {
              "id": 10499,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10497,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "2393:7:28"
                },
                {
                  "id": 10498,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "2402:7:28"
                }
              ],
              "src": "2384:26:28"
            },
            "parameters": {
              "id": 10496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10495,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2351:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "2344:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10494,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2344:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2343:20:28"
            },
            "returnParameters": {
              "id": 10502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "2420:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:6:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10567,
            "nodeType": "FunctionDefinition",
            "src": "3175:379:28",
            "nodes": [],
            "body": {
              "id": 10566,
              "nodeType": "Block",
              "src": "3264:290:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10533,
                      "mutability": "mutable",
                      "name": "fullUriForToken",
                      "nameLocation": "3288:15:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10566,
                      "src": "3274:29:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10532,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3274:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10537,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10534,
                      "name": "fullURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10461,
                      "src": "3306:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 10536,
                    "indexExpression": {
                      "id": 10535,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10526,
                      "src": "3314:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3306:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3274:49:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 10540,
                            "name": "fullUriForToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10533,
                            "src": "3343:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 10539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3337:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 10538,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3337:5:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3337:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 10542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3337:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3369:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3337:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10548,
                  "nodeType": "IfStatement",
                  "src": "3333:86:28",
                  "trueBody": {
                    "id": 10547,
                    "nodeType": "Block",
                    "src": "3372:47:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 10545,
                          "name": "fullUriForToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10533,
                          "src": "3393:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 10531,
                        "id": 10546,
                        "nodeType": "Return",
                        "src": "3386:22:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10550,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3443:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10566,
                      "src": "3429:22:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10549,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3429:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10554,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10552,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10526,
                        "src": "3466:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10551,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34443,
                      "src": "3454:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 10553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3429:46:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10559,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10550,
                            "src": "3516:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 10560,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10526,
                                "src": "3526:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65649,
                              "src": "3526:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 10562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:19:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 10557,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3499:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3499:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3499:47:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3492:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 10555,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3492:6:28",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:55:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 10531,
                  "id": 10565,
                  "nodeType": "Return",
                  "src": "3485:62:28"
                }
              ]
            },
            "baseFunctions": [
              28550
            ],
            "documentation": {
              "id": 10524,
              "nodeType": "StructuredDocumentation",
              "src": "2953:217:28",
              "text": "  @notice         Returns the metadata URI for an NFT.\n  @dev            See `BatchMintMetadata` for handling of metadata in this contract.\n  @param _tokenId The tokenId of an NFT."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3184:8:28",
            "overrides": {
              "id": 10528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3231:8:28"
            },
            "parameters": {
              "id": 10527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10526,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3201:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10567,
                  "src": "3193:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3192:18:28"
            },
            "returnParameters": {
              "id": 10531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10567,
                  "src": "3249:13:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3248:15:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10594,
            "nodeType": "FunctionDefinition",
            "src": "4090:217:28",
            "nodes": [],
            "body": {
              "id": 10593,
              "nodeType": "Block",
              "src": "4159:148:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10576,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10853,
                          "src": "4177:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4177:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 10578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4189:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 10575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4169:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:46:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10580,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:46:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10582,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10647,
                          "src": "4238:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4238:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10584,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10572,
                        "src": "4259:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10581,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10826,
                      "src": "4225:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 10585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:44:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10586,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:44:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10588,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10570,
                        "src": "4289:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 10589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4294:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 10590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4297:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 10587,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28791,
                        28954
                      ],
                      "referencedDeclaration": 28954,
                      "src": "4279:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 10591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10592,
                  "nodeType": "ExpressionStatement",
                  "src": "4279:21:28"
                }
              ]
            },
            "documentation": {
              "id": 10568,
              "nodeType": "StructuredDocumentation",
              "src": "3741:344:28",
              "text": "  @notice          Lets an authorized address mint an NFT to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _tokenURI The full metadata URI for the NFT minted."
            },
            "functionSelector": "0075a317",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "4099:6:28",
            "parameters": {
              "id": 10573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10570,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4114:3:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10594,
                  "src": "4106:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4106:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10572,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "4133:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10594,
                  "src": "4119:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10571,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4105:38:28"
            },
            "returnParameters": {
              "id": 10574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4159:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10626,
            "nodeType": "FunctionDefinition",
            "src": "4868:325:28",
            "nodes": [],
            "body": {
              "id": 10625,
              "nodeType": "Block",
              "src": "5018:175:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10607,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10853,
                          "src": "5036:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5036:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 10609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5048:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 10606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5028:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:46:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10611,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:46:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10613,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10647,
                          "src": "5103:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5103:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10615,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10599,
                        "src": "5124:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10616,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10601,
                        "src": "5135:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10612,
                      "name": "_batchMintMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34495,
                      "src": "5084:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) returns (uint256,uint256)"
                      }
                    },
                    "id": 10617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 10618,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:60:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10620,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10597,
                        "src": "5164:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10621,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10599,
                        "src": "5169:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10622,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "5180:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10619,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28791,
                        28954
                      ],
                      "referencedDeclaration": 28954,
                      "src": "5154:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 10623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5154:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10624,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:32:28"
                }
              ]
            },
            "documentation": {
              "id": 10595,
              "nodeType": "StructuredDocumentation",
              "src": "4313:550:28",
              "text": "  @notice          Lets an authorized address mint multiple NFTs at once to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _quantity The number of NFTs to mint.\n  @param _baseURI  The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\n  @param _data     Additional data to pass along during the minting of the NFT."
            },
            "functionSelector": "754a81d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintTo",
            "nameLocation": "4877:11:28",
            "parameters": {
              "id": 10604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10597,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4906:3:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10626,
                  "src": "4898:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4898:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10599,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4927:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10626,
                  "src": "4919:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10601,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "4960:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10626,
                  "src": "4946:22:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4946:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10603,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4991:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10626,
                  "src": "4978:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10602,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4888:114:28"
            },
            "returnParameters": {
              "id": 10605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5018:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10638,
            "nodeType": "FunctionDefinition",
            "src": "5467:87:28",
            "nodes": [],
            "body": {
              "id": 10637,
              "nodeType": "Block",
              "src": "5516:38:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10633,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10629,
                        "src": "5532:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 10634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5542:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10632,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29254,
                        29436
                      ],
                      "referencedDeclaration": 29436,
                      "src": "5526:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 10635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5526:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10636,
                  "nodeType": "ExpressionStatement",
                  "src": "5526:21:28"
                }
              ]
            },
            "documentation": {
              "id": 10627,
              "nodeType": "StructuredDocumentation",
              "src": "5199:263:28",
              "text": "  @notice         Lets an owner or approved operator burn the NFT of the given tokenId.\n  @dev            ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\n  @param _tokenId The tokenId of the NFT to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5476:4:28",
            "parameters": {
              "id": 10630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10629,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5489:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10638,
                  "src": "5481:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5480:18:28"
            },
            "returnParameters": {
              "id": 10631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5516:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 10647,
            "nodeType": "FunctionDefinition",
            "src": "5809:104:28",
            "nodes": [],
            "body": {
              "id": 10646,
              "nodeType": "Block",
              "src": "5876:37:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10644,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28191,
                    "src": "5893:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10643,
                  "id": 10645,
                  "nodeType": "Return",
                  "src": "5886:20:28"
                }
              ]
            },
            "documentation": {
              "id": 10639,
              "nodeType": "StructuredDocumentation",
              "src": "5738:66:28",
              "text": "@notice The tokenId assigned to the next new NFT to be minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "5818:17:28",
            "parameters": {
              "id": 10640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5835:2:28"
            },
            "returnParameters": {
              "id": 10643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10647,
                  "src": "5867:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5867:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5866:9:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10682,
            "nodeType": "FunctionDefinition",
            "src": "6013:357:28",
            "nodes": [],
            "body": {
              "id": 10681,
              "nodeType": "Block",
              "src": "6168:202:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10658,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6186:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "6178:13:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6178:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10662,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10660,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10652,
                        "src": "6202:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10659,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28487,
                      "src": "6194:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 10661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6194:17:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6178:33:28"
                },
                {
                  "expression": {
                    "id": 10679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10663,
                      "name": "isApprovedOrOwnerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10655,
                      "src": "6221:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 10671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 10666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10664,
                                "name": "_operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10650,
                                "src": "6244:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 10665,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10658,
                                "src": "6257:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6244:18:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 10668,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10658,
                                  "src": "6295:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 10669,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10650,
                                  "src": "6302:9:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10667,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28679,
                                "src": "6278:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 10670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6278:34:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6244:68:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 10673,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10652,
                                  "src": "6340:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 10672,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28627,
                                "src": "6328:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 10674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6328:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 10675,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10650,
                              "src": "6353:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6328:34:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6244:118:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10678,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6243:120:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6221:142:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10680,
                  "nodeType": "ExpressionStatement",
                  "src": "6221:142:28"
                }
              ]
            },
            "documentation": {
              "id": 10648,
              "nodeType": "StructuredDocumentation",
              "src": "5919:89:28",
              "text": "@notice Returns whether a given address is the owner, or approved to transfer an NFT."
            },
            "functionSelector": "430c2081",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "6022:17:28",
            "parameters": {
              "id": 10653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10650,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "6048:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "6040:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6040:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10652,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6067:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "6059:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6059:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6039:37:28"
            },
            "returnParameters": {
              "id": 10656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10655,
                  "mutability": "mutable",
                  "name": "isApprovedOrOwnerOf",
                  "nameLocation": "6143:19:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "6138:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6138:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6137:26:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10703,
            "nodeType": "FunctionDefinition",
            "src": "6602:227:28",
            "nodes": [],
            "body": {
              "id": 10702,
              "nodeType": "Block",
              "src": "6769:60:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10698,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10685,
                        "src": "6803:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10699,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10687,
                        "src": "6813:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 10695,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6779:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$10896_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 10697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28661,
                      "src": "6779:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 10700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6779:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10701,
                  "nodeType": "ExpressionStatement",
                  "src": "6779:43:28"
                }
              ]
            },
            "baseFunctions": [
              28661
            ],
            "documentation": {
              "id": 10683,
              "nodeType": "StructuredDocumentation",
              "src": "6557:40:28",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10692,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10685,
                    "src": "6755:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10693,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10691,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38051,
                  "src": "6727:27:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "6727:37:28"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "6611:17:28",
            "overrides": {
              "id": 10690,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10689,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "6710:7:28"
                }
              ],
              "src": "6701:17:28"
            },
            "parameters": {
              "id": 10688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10685,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6637:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10703,
                  "src": "6629:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10687,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6652:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10703,
                  "src": "6647:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6647:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:33:28"
            },
            "returnParameters": {
              "id": 10694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6769:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10724,
            "nodeType": "FunctionDefinition",
            "src": "6870:208:28",
            "nodes": [],
            "body": {
              "id": 10723,
              "nodeType": "Block",
              "src": "7029:49:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10719,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10706,
                        "src": "7053:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10720,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10708,
                        "src": "7063:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10716,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7039:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$10896_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 10718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28605,
                      "src": "7039:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7039:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10722,
                  "nodeType": "ExpressionStatement",
                  "src": "7039:32:28"
                }
              ]
            },
            "baseFunctions": [
              28605
            ],
            "documentation": {
              "id": 10704,
              "nodeType": "StructuredDocumentation",
              "src": "6835:30:28",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10713,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10706,
                    "src": "7015:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10714,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10712,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38051,
                  "src": "6987:27:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "6987:37:28"
              }
            ],
            "name": "approve",
            "nameLocation": "6879:7:28",
            "overrides": {
              "id": 10711,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10710,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "6970:7:28"
                }
              ],
              "src": "6961:17:28"
            },
            "parameters": {
              "id": 10709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10706,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6895:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10724,
                  "src": "6887:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6887:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10708,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6913:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10724,
                  "src": "6905:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6905:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6886:35:28"
            },
            "returnParameters": {
              "id": 10715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7029:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10748,
            "nodeType": "FunctionDefinition",
            "src": "7125:208:28",
            "nodes": [],
            "body": {
              "id": 10747,
              "nodeType": "Block",
              "src": "7279:54:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10742,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10727,
                        "src": "7308:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10743,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10729,
                        "src": "7314:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10744,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10731,
                        "src": "7318:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10739,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7289:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$10896_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 10741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "7289:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7289:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10746,
                  "nodeType": "ExpressionStatement",
                  "src": "7289:37:28"
                }
              ]
            },
            "baseFunctions": [
              28697
            ],
            "documentation": {
              "id": 10725,
              "nodeType": "StructuredDocumentation",
              "src": "7084:36:28",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10736,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10727,
                    "src": "7273:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10737,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10735,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "7253:19:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "7253:25:28"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "7134:12:28",
            "overrides": {
              "id": 10734,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10733,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "7244:7:28"
                }
              ],
              "src": "7235:17:28"
            },
            "parameters": {
              "id": 10732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10727,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7164:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10748,
                  "src": "7156:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7156:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10729,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7186:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10748,
                  "src": "7178:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10731,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7206:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10748,
                  "src": "7198:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7198:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7146:73:28"
            },
            "returnParameters": {
              "id": 10738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7279:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10772,
            "nodeType": "FunctionDefinition",
            "src": "7384:216:28",
            "nodes": [],
            "body": {
              "id": 10771,
              "nodeType": "Block",
              "src": "7542:58:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10766,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10751,
                        "src": "7575:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10767,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10753,
                        "src": "7581:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10768,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10755,
                        "src": "7585:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10763,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7552:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$10896_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 10765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28716,
                      "src": "7552:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10770,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:41:28"
                }
              ]
            },
            "baseFunctions": [
              28716
            ],
            "documentation": {
              "id": 10749,
              "nodeType": "StructuredDocumentation",
              "src": "7339:40:28",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10760,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10751,
                    "src": "7536:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10759,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "7516:19:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "7516:25:28"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7393:16:28",
            "overrides": {
              "id": 10758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10757,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "7507:7:28"
                }
              ],
              "src": "7498:17:28"
            },
            "parameters": {
              "id": 10756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10751,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7427:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10772,
                  "src": "7419:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7419:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10753,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7449:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10772,
                  "src": "7441:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7441:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10755,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7469:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10772,
                  "src": "7461:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7461:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:73:28"
            },
            "returnParameters": {
              "id": 10762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7542:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10799,
            "nodeType": "FunctionDefinition",
            "src": "7651:249:28",
            "nodes": [],
            "body": {
              "id": 10798,
              "nodeType": "Block",
              "src": "7836:64:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10792,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10775,
                        "src": "7869:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10777,
                        "src": "7875:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10794,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10779,
                        "src": "7879:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10795,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10781,
                        "src": "7888:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10789,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7846:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$10896_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 10791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28752,
                      "src": "7846:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 10796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7846:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10797,
                  "nodeType": "ExpressionStatement",
                  "src": "7846:47:28"
                }
              ]
            },
            "baseFunctions": [
              28752
            ],
            "documentation": {
              "id": 10773,
              "nodeType": "StructuredDocumentation",
              "src": "7606:40:28",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10786,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10775,
                    "src": "7830:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10787,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10785,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "7810:19:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "7810:25:28"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7660:16:28",
            "overrides": {
              "id": 10784,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10783,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "7801:7:28"
                }
              ],
              "src": "7792:17:28"
            },
            "parameters": {
              "id": 10782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10775,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7694:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10799,
                  "src": "7686:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7686:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10777,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7716:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10799,
                  "src": "7708:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10779,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7736:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10799,
                  "src": "7728:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7728:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10781,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7766:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10799,
                  "src": "7753:17:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10780,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7676:100:28"
            },
            "returnParameters": {
              "id": 10788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7836:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 10826,
            "nodeType": "FunctionDefinition",
            "src": "8103:202:28",
            "nodes": [],
            "body": {
              "id": 10825,
              "nodeType": "Block",
              "src": "8185:120:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 10809,
                                  "name": "fullURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10461,
                                  "src": "8209:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                    "typeString": "mapping(uint256 => string storage ref)"
                                  }
                                },
                                "id": 10811,
                                "indexExpression": {
                                  "id": 10810,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10801,
                                  "src": "8217:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8209:17:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 10808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8203:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 10807,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "8203:5:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8203:24:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 10813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8203:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8238:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8203:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55524920616c726561647920736574",
                        "id": 10816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8241:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27d33880a42c6c5e26aeadac7f095967881b47de4646734561d17c92845393d6",
                          "typeString": "literal_string \"URI already set\""
                        },
                        "value": "URI already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27d33880a42c6c5e26aeadac7f095967881b47de4646734561d17c92845393d6",
                          "typeString": "literal_string \"URI already set\""
                        }
                      ],
                      "id": 10806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8195:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8195:64:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10818,
                  "nodeType": "ExpressionStatement",
                  "src": "8195:64:28"
                },
                {
                  "expression": {
                    "id": 10823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10819,
                        "name": "fullURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10461,
                        "src": "8269:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 10821,
                      "indexExpression": {
                        "id": 10820,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10801,
                        "src": "8277:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8269:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10822,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10803,
                      "src": "8289:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8269:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10824,
                  "nodeType": "ExpressionStatement",
                  "src": "8269:29:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nameLocation": "8112:12:28",
            "parameters": {
              "id": 10804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10801,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8133:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10826,
                  "src": "8125:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8125:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10803,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "8157:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10826,
                  "src": "8143:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8143:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8124:43:28"
            },
            "returnParameters": {
              "id": 10805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8185:0:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10840,
            "nodeType": "FunctionDefinition",
            "src": "8401:121:28",
            "nodes": [],
            "body": {
              "id": 10839,
              "nodeType": "Block",
              "src": "8477:45:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10833,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8494:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8494:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10835,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "8508:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8508:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8494:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10832,
                  "id": 10838,
                  "nodeType": "Return",
                  "src": "8487:28:28"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 10827,
              "nodeType": "StructuredDocumentation",
              "src": "8311:85:28",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "8410:18:28",
            "overrides": {
              "id": 10829,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8453:8:28"
            },
            "parameters": {
              "id": 10828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8428:2:28"
            },
            "returnParameters": {
              "id": 10832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10840,
                  "src": "8471:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10830,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8471:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8470:6:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10853,
            "nodeType": "FunctionDefinition",
            "src": "8611:102:28",
            "nodes": [],
            "body": {
              "id": 10852,
              "nodeType": "Block",
              "src": "8668:45:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10846,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8685:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8685:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10848,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "8699:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8699:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8685:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10845,
                  "id": 10851,
                  "nodeType": "Return",
                  "src": "8678:28:28"
                }
              ]
            },
            "documentation": {
              "id": 10841,
              "nodeType": "StructuredDocumentation",
              "src": "8528:78:28",
              "text": "@dev Returns whether a token can be minted in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMint",
            "nameLocation": "8620:8:28",
            "parameters": {
              "id": 10842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8628:2:28"
            },
            "returnParameters": {
              "id": 10845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10853,
                  "src": "8662:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10843,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8662:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8661:6:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10867,
            "nodeType": "FunctionDefinition",
            "src": "8797:115:28",
            "nodes": [],
            "body": {
              "id": 10866,
              "nodeType": "Block",
              "src": "8867:45:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10860,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8884:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8884:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10862,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "8898:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8898:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8884:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10859,
                  "id": 10865,
                  "nodeType": "Return",
                  "src": "8877:28:28"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 10854,
              "nodeType": "StructuredDocumentation",
              "src": "8719:73:28",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "8806:12:28",
            "overrides": {
              "id": 10856,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8843:8:28"
            },
            "parameters": {
              "id": 10855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8818:2:28"
            },
            "returnParameters": {
              "id": 10859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10867,
                  "src": "8861:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8861:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8860:6:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10881,
            "nodeType": "FunctionDefinition",
            "src": "9003:121:28",
            "nodes": [],
            "body": {
              "id": 10880,
              "nodeType": "Block",
              "src": "9079:45:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10874,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9096:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9096:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10876,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "9110:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9110:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9096:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10873,
                  "id": 10879,
                  "nodeType": "Return",
                  "src": "9089:28:28"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 10868,
              "nodeType": "StructuredDocumentation",
              "src": "8918:80:28",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "9012:18:28",
            "overrides": {
              "id": 10870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9055:8:28"
            },
            "parameters": {
              "id": 10869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9030:2:28"
            },
            "returnParameters": {
              "id": 10873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10881,
                  "src": "9073:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10871,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9073:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9072:6:28"
            },
            "scope": 10896,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10895,
            "nodeType": "FunctionDefinition",
            "src": "9223:124:28",
            "nodes": [],
            "body": {
              "id": 10894,
              "nodeType": "Block",
              "src": "9302:45:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10888,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9319:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9319:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10890,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "9333:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9333:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9319:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10887,
                  "id": 10893,
                  "nodeType": "Return",
                  "src": "9312:28:28"
                }
              ]
            },
            "baseFunctions": [
              37993
            ],
            "documentation": {
              "id": 10882,
              "nodeType": "StructuredDocumentation",
              "src": "9130:88:28",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "9232:26:28",
            "overrides": {
              "id": 10884,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9278:8:28"
            },
            "parameters": {
              "id": 10883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9258:2:28"
            },
            "returnParameters": {
              "id": 10887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10895,
                  "src": "9296:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10885,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9296:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9295:6:28"
            },
            "scope": 10896,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10441,
              "name": "ERC721A",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29541,
              "src": "1155:7:28"
            },
            "id": 10442,
            "nodeType": "InheritanceSpecifier",
            "src": "1155:7:28"
          },
          {
            "baseName": {
              "id": 10443,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1168:16:28"
            },
            "id": 10444,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:16:28"
          },
          {
            "baseName": {
              "id": 10445,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "1190:9:28"
            },
            "id": 10446,
            "nodeType": "InheritanceSpecifier",
            "src": "1190:9:28"
          },
          {
            "baseName": {
              "id": 10447,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1205:7:28"
            },
            "id": 10448,
            "nodeType": "InheritanceSpecifier",
            "src": "1205:7:28"
          },
          {
            "baseName": {
              "id": 10449,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1218:7:28"
            },
            "id": 10450,
            "nodeType": "InheritanceSpecifier",
            "src": "1218:7:28"
          },
          {
            "baseName": {
              "id": 10451,
              "name": "BatchMintMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34496,
              "src": "1231:17:28"
            },
            "id": 10452,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:17:28"
          },
          {
            "baseName": {
              "id": 10453,
              "name": "DefaultOperatorFilterer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34762,
              "src": "1254:23:28"
            },
            "id": 10454,
            "nodeType": "InheritanceSpecifier",
            "src": "1254:23:28"
          }
        ],
        "canonicalName": "ERC721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10440,
          "nodeType": "StructuredDocumentation",
          "src": "427:699:28",
          "text": "  The `ERC721Base` smart contract implements the ERC721 NFT standard, along with the ERC721A optimization to the standard.\n  It includes the following additions to standard ERC721 logic:\n      - Ability to mint NFTs via the provided `mint` function.\n      - Contract metadata for royalty support on platforms such as OpenSea that use\n        off-chain information to distribute roaylties.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - EIP 2981 compliance for royalty support on NFT marketplaces."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10896,
          34762,
          38148,
          37994,
          50395,
          34496,
          39646,
          50644,
          31290,
          38400,
          50418,
          37872,
          50168,
          34723,
          49679,
          29541,
          31493,
          31539,
          31422,
          26795,
          31146,
          78641
        ],
        "name": "ERC721Base",
        "nameLocation": "1137:10:28",
        "scope": 10897,
        "usedErrors": [
          31434,
          31437,
          31440,
          31443,
          31446,
          31449,
          31452,
          31455,
          31458,
          31461,
          31464,
          31467,
          31470,
          38005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 28
}