{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IDropClaimCondition_V2.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "MaxWalletClaimCountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "WalletClaimCountUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_proofMaxQuantityPerTransaction",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropClaimCondition_V2.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getClaimTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastClaimTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextValidClaimTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWalletClaimCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerTransaction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "waitTimeInSecondsBetweenClaims",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDropClaimCondition_V2.ClaimCondition[]",
          "name": "_phases",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "setMaxWalletClaimCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "setWalletClaimCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verifyMaxQuantityPerTransaction",
          "type": "bool"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_proofMaxQuantityPerTransaction",
          "type": "uint256"
        }
      ],
      "name": "verifyClaimMerkleProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validMerkleProof",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "merkleProofIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletClaimCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b6200252f1760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b61520e806200015c6000396000f3fe6080604052600436106102a15760003560e01c80637a5a8e7e116101615780637a5a8e7e146106e95780637ecebe00146106fc57806386ee745d1461071c5780638e539e8c146107515780639010d07c1461077157806391d1485414610791578063938e3d7b146107b157806395d89b41146107d15780639ab24eb0146107e6578063a0a8e46014610806578063a217fddf1461081a578063a457c2d71461082f578063a9059cbb1461084f578063ac9650d81461086f578063af3be8901461089c578063afb82916146108d3578063c3cda520146108f3578063c68907de14610913578063ca15c87314610928578063cb2ef6f714610948578063d45573f614610967578063d505accf1461099e578063d547741f146109be578063d637ed59146109de578063dd62ed3e146109fb578063dfad80a614610a1b578063e23b816414610a3b578063e8a3d48514610a5b578063f1127ed814610a7057600080fd5b806301ffc9a7146102a657806305981769146102db57806306fdde0314610300578063079fe40e14610322578063095ea7b31461035b57806318160ddd1461037b5780631e7ac4881461039157806323b872dd146103b3578063248a9ca3146103d35780632ab4d052146103f35780632f2ff15d1461040a578063313ce5671461042a5780633644e5151461044c57806336568abe1461046157806339509351146104815780633a46b1a8146104a15780633ea33f29146104c15780633f3e4c11146104e157806342966c68146105015780634352ab4114610521578063508679571461054f578063572b6c051461056f578063587cde1e1461058f5780635c19a95c146105af5780636f4f2837146105cf5780636f8934f4146105ef5780636fcfff451461067457806370a08231146106a957806379cc6790146106c9575b600080fd5b3480156102b257600080fd5b506102c66102c1366004614536565b610aba565b60405190151581526020015b60405180910390f35b3480156102e757600080fd5b506102f26102605481565b6040519081526020016102d2565b34801561030c57600080fd5b50610315610acb565b6040516102d291906145b8565b34801561032e57600080fd5b5061025f54610343906001600160a01b031681565b6040516001600160a01b0390911681526020016102d2565b34801561036757600080fd5b506102c66103763660046145f0565b610b5e565b34801561038757600080fd5b50610161546102f2565b34801561039d57600080fd5b506103b16103ac3660046145f0565b610b80565b005b3480156103bf57600080fd5b506102c66103ce36600461461c565b610c47565b3480156103df57600080fd5b506102f26103ee36600461465d565b610c77565b3480156103ff57600080fd5b506102f26102615481565b34801561041657600080fd5b506103b1610425366004614676565b610c8c565b34801561043657600080fd5b5060125b60405160ff90911681526020016102d2565b34801561045857600080fd5b506102f2610cad565b34801561046d57600080fd5b506103b161047c366004614676565b610cbc565b34801561048d57600080fd5b506102c661049c3660046145f0565b610d4a565b3480156104ad57600080fd5b506102f26104bc3660046145f0565b610d76565b3480156104cd57600080fd5b506103b16104dc3660046145f0565b610dba565b3480156104ed57600080fd5b506103b16104fc36600461465d565b610e13565b34801561050d57600080fd5b506103b161051c36600461465d565b610e5c565b34801561052d57600080fd5b506102f261053c3660046146a6565b6102676020526000908152604090205481565b34801561055b57600080fd5b506103b161056a36600461465d565b610e70565b34801561057b57600080fd5b506102c661058a3660046146a6565b610eb1565b34801561059b57600080fd5b506103436105aa3660046146a6565b610ecf565b3480156105bb57600080fd5b506103b16105ca3660046146a6565b610eee565b3480156105db57600080fd5b506103b16105ea3660046146a6565b610eff565b3480156105fb57600080fd5b5061060f61060a36600461465d565b610f56565b6040516102d29190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0918201516001600160a01b0316918101919091526101000190565b34801561068057600080fd5b5061069461068f3660046146a6565b611022565b60405163ffffffff90911681526020016102d2565b3480156106b557600080fd5b506102f26106c43660046146a6565b611045565b3480156106d557600080fd5b506103b16106e43660046145f0565b611061565b6103b16106f7366004614707565b61107d565b34801561070857600080fd5b506102f26107173660046146a6565b611259565b34801561072857600080fd5b5061073c610737366004614676565b611278565b604080519283526020830191909152016102d2565b34801561075d57600080fd5b506102f261076c36600461465d565b6112cd565b34801561077d57600080fd5b5061034361078c36600461478b565b6112fa565b34801561079d57600080fd5b506102c66107ac366004614676565b611313565b3480156107bd57600080fd5b506103b16107cc3660046147ad565b61133e565b3480156107dd57600080fd5b5061031561142d565b3480156107f257600080fd5b506102f26108013660046146a6565b61143d565b34801561081257600080fd5b50600261043a565b34801561082657600080fd5b506102f2600081565b34801561083b57600080fd5b506102c661084a3660046145f0565b6114c5565b34801561085b57600080fd5b506102c661086a3660046145f0565b611556565b34801561087b57600080fd5b5061088f61088a36600461481e565b61156e565b6040516102d2919061485f565b3480156108a857600080fd5b506108bc6108b73660046148c1565b611662565b6040805192151583526020830191909152016102d2565b3480156108df57600080fd5b506103b16108ee366004614940565b611869565b3480156108ff57600080fd5b506103b161090e3660046149b8565b611b5a565b34801561091f57600080fd5b506102f2611c8c565b34801561093457600080fd5b506102f261094336600461465d565b611d41565b34801561095457600080fd5b5068044726f7045524332360bc1b6102f2565b34801561097357600080fd5b5061025e5461025d54604080516001600160a01b03909316835261ffff9091166020830152016102d2565b3480156109aa57600080fd5b506103b16109b9366004614a12565b611d59565b3480156109ca57600080fd5b506103b16109d9366004614676565b611eb1565b3480156109ea57600080fd5b50610262546102635461073c919082565b348015610a0757600080fd5b506102f2610a16366004614a80565b611ecd565b348015610a2757600080fd5b506103b1610a36366004614be0565b611ef9565b348015610a4757600080fd5b506103b1610a56366004614cc8565b6120ce565b348015610a6757600080fd5b5061031561241c565b348015610a7c57600080fd5b50610a90610a8b366004614d4d565b6124ab565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102d2565b6000610ac58261253e565b92915050565b60606101628054610adb90614d84565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0790614d84565b8015610b545780601f10610b2957610100808354040283529160200191610b54565b820191906000526020600020905b815481529060010190602001808311610b3757829003601f168201915b5050505050905090565b600080610b69612563565b9050610b7681858561256d565b5060019392505050565b6000610b8b81612692565b612710821115610bd25760405162461bcd60e51b815260206004820152600d60248201526c313839901e1e9018981818181760991b60448201526064015b60405180910390fd5b61025d80546001600160801b0319166001600160401b03841617905561025e80546001600160a01b0385166001600160a01b031990911681179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b600080610c52612563565b9050610c5f8582856126a3565b610c6a85858561271d565b60019150505b9392505050565b600090815260fb602052604090206001015490565b610c9582610c77565b610c9e81612692565b610ca883836128ec565b505050565b6000610cb761290f565b905090565b610cc4612563565b6001600160a01b0316816001600160a01b031614610d3c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610bc9565b610d46828261298c565b5050565b600080610d55612563565b9050610b76818585610d678589611ecd565b610d719190614dcf565b61256d565b6000438210610d975760405162461bcd60e51b8152600401610bc990614de7565b6001600160a01b038316600090815261022b60205260409020610c7090836129af565b6000610dc581612692565b6001600160a01b0383166000818152610267602052604090819020849055517f8973b95d42472e89416ea69404f8038c041db700af9ec294e7b4cd4e1ff2801c90610c3a9085815260200190565b6000610e1e81612692565b6102618290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b610e6d610e67612563565b82612a6b565b50565b6000610e7b81612692565b6102608290556040518281527ff9d383c69b6255cbd431ca23734f43bdf15e694c7494956c917498469bcbce7390602001610e50565b6001600160a01b031660009081526065602052604090205460ff1690565b6001600160a01b03908116600090815261022a60205260409020541690565b610e6d610ef9612563565b82612a75565b6000610f0a81612692565b61025f80546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b610faa6040518061010001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b031681525090565b5060009081526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b031660e082015290565b6001600160a01b038116600090815261022b6020526040812054610ac590612af6565b6001600160a01b0316600090815261015f602052604090205490565b6110738261106d612563565b836126a3565b610d468282612a6b565b600260015414156110d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bc9565b60026001556110de33610eb1565b806110f85750326110ed612563565b6001600160a01b0316145b61112a5760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610bc9565b6000611134611c8c565b9050600061114d82611144612563565b8a888888611662565b509050600083158061116f575060008381526102646020526040902060050154155b90506111868361117d612563565b8b8b8b86611869565b8180156111935750600084115b156111de576111de6111a3612563565b6000858152610266602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b6111e9898989612b5f565b6111f48a848b612cb2565b896001600160a01b0316611206612563565b6001600160a01b0316847f9c4945d842cc8c6704877a0defcd9ab09f6d77b24a369a95c2610506c6c38ee78c60405161124191815260200190565b60405180910390a45050600180555050505050505050565b6001600160a01b03811660009081526101f76020526040812054610ac5565b6000828152610265602090815260408083206001600160a01b03851684529091528120549081156112c65750600083815261026460205260409020600401548101818110156112c657506000195b9250929050565b60004382106112ee5760405162461bcd60e51b8152600401610bc990614de7565b610ac561022c836129af565b600082815261012d60205260408120610c709083612d63565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061134981612692565b600061025c805461135990614d84565b80601f016020809104026020016040519081016040528092919081815260200182805461138590614d84565b80156113d25780601f106113a7576101008083540402835291602001916113d2565b820191906000526020600020905b8154815290600101906020018083116113b557829003601f168201915b50505050509050838361025c91906113eb92919061442d565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681858560405161141f93929190614e1e565b60405180910390a150505050565b60606101638054610adb90614d84565b6001600160a01b038116600090815261022b602052604081205480156114b2576001600160a01b038316600090815261022b60205260409020611481600183614e64565b8154811061149157611491614e7b565b600091825260209091200154600160201b90046001600160e01b03166114b5565b60005b6001600160e01b03169392505050565b6000806114d0612563565b905060006114de8286611ecd565b90508381101561153e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bc9565b61154b828686840361256d565b506001949350505050565b600080611561612563565b9050610b7681858561271d565b6060816001600160401b0381111561158857611588614aae565b6040519080825280602002602001820160405280156115bb57816020015b60608152602001906001900390816115a65790505b50905060005b8281101561165b5761162b308585848181106115df576115df614e7b565b90506020028101906115f19190614e91565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612d6f92505050565b82828151811061163d5761163d614e7b565b6020026020010181905250808061165390614ed7565b9150506115c1565b5092915050565b600086815261026460209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e08301528291901561185d5761175686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516001600160601b031960608d901b1660208201526034810188905260540160405160208183030381529060405280519060200120612e61565b90935091508261179c5760405162461bcd60e51b81526020600482015260116024820152703737ba1034b7103bb434ba32b634b9ba1760791b6044820152606401610bc9565b6000898152610266602090815260408083206001600160981b0360088d901c168452909152902054600160ff8a161b161561180a5760405162461bcd60e51b815260206004820152600e60248201526d383937b7b31031b630b4b6b2b21760911b6044820152606401610bc9565b8315806118175750838711155b61185d5760405162461bcd60e51b815260206004820152601760248201527634b73b30b634b21038bab0b73a34ba3c90383937b7b31760491b6044820152606401610bc9565b50965096945050505050565b60008681526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e083018190529085161480156118f457508060c0015183145b61194c5760405162461bcd60e51b8152602060048201526024808201527f696e76616c69642063757272656e6379206f722070726963652073706563696660448201526334b2b21760e11b6064820152608401610bc9565b6000851180156119685750811580611968575080606001518511155b6119b05760405162461bcd60e51b815260206004820152601960248201527834b73b30b634b21038bab0b73a34ba3c9031b630b4b6b2b21760391b6044820152606401610bc9565b80602001518582604001516119c59190614dcf565b1115611a0d5760405162461bcd60e51b815260206004820152601760248201527632bc31b2b2b21036b0bc1036b4b73a1039bab838363c9760491b6044820152606401610bc9565b6102615461026054811580611a3657508187611a296101615490565b611a339190614dcf565b11155b611a7d5760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610bc9565b801580611aaf57506001600160a01b038816600090815261026760205260409020548190611aac908990614dcf565b11155b611afb5760405162461bcd60e51b815260206004820152601d60248201527f65786365656420636c61696d206c696d697420666f722077616c6c65740000006044820152606401610bc9565b6000611b078a8a611278565b91505080421015611b4e5760405162461bcd60e51b815260206004820152601160248201527031b0b73737ba1031b630b4b6903cb2ba1760791b6044820152606401610bc9565b50505050505050505050565b83421115611baa5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610bc9565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611c2490611c1c9060a00160405160208183030381529060405280519060200120612f2f565b858585612f7d565b9050611c2f81612fa5565b8614611c795760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610bc9565b611c838188612a75565b50505050505050565b61026354610262546000918291611ca39190614dcf565b90505b61026254811115611cfc576102646000611cc1600184614e64565b8152602001908152602001600020600001544210611cea57611ce4600182614e64565b91505090565b80611cf481614ef2565b915050611ca6565b5060405162461bcd60e51b815260206004820152601960248201527837379030b1ba34bb329036b4b73a1031b7b73234ba34b7b71760391b6044820152606401610bc9565b600081815261012d60205260408120610ac590612fce565b83421115611da95760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610bc9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888611dd88c612fa5565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611e3382612f2f565b90506000611e4382878787612f7d565b9050896001600160a01b0316816001600160a01b031614611ea65760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610bc9565b611b4e8a8a8a61256d565b611eba82610c77565b611ec381612692565b610ca8838361298c565b6001600160a01b0391821660009081526101606020908152604080832093909416825291909152205490565b600054610100900460ff1615808015611f195750600054600160ff909116105b80611f3a5750611f283061252f565b158015611f3a575060005460ff166001145b611f9d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bc9565b6000805460ff191660011790558015611fc0576000805461ff0019166101001790555b611fc985612fd8565b611fd288613067565b611fdc88886130b1565b8551611ff09061025c9060208901906144ad565b5061025f80546001600160a01b038087166001600160a01b03199283161790925561025e80549286169290911691909117905561025d80546001600160801b0384166001600160801b031990911617905561204c60008a613101565b6120646000805160206151728339815191528a613101565b61207d6000805160206151728339815191526000613101565b80156120c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b60006120d981612692565b61026254610263548184156120f5576120f28284614dcf565b90505b6102638690556102628190556000805b878110156122c057801580612135575088888281811061212757612127614e7b565b905061010002016000013582105b6121945760405162461bcd60e51b815260206004820152602a60248201527f737461727454696d657374616d70206d75737420626520696e20617363656e6460448201526934b7339037b93232b91760b11b6064820152608401610bc9565b6000610264816121a48487614dcf565b81526020019081526020016000206002015490508989838181106121ca576121ca614e7b565b90506101000201602001358111156122215760405162461bcd60e51b815260206004820152601a6024820152796d617820737570706c7920636c61696d656420616c726561647960301b6044820152606401610bc9565b89898381811061223357612233614e7b565b61010002919091019050610264600061224c8588614dcf565b815260200190815260200160002081816122669190614f09565b5081905061026460006122798588614dcf565b815260208101919091526040016000206002015589898381811061229f5761229f614e7b565b905061010002016000013592505080806122b890614ed7565b915050612105565b50851561234057835b8281101561233a57600081815261026460209081526040822082815560018101839055600281018390556003810183905560048101839055600581018390556006810192909255600790910180546001600160a01b031916905561026690528061233281614ed7565b9150506122c9565b506123d9565b868311156123d957865b838110156123d75761026460006123618386614dcf565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810182905560070180546001600160a01b0319169055610266906123bf8386614dcf565b815260200152806123cf81614ed7565b91505061234a565b505b7f22ddd1bcb3816651679299dbffccb94973edec10c32e88dc2f4735c7699a02ca888860405161240a929190614f7a565b60405180910390a15050505050505050565b61025c805461242a90614d84565b80601f016020809104026020016040519081016040528092919081815260200182805461245690614d84565b80156124a35780601f10612478576101008083540402835291602001916124a3565b820191906000526020600020905b81548152906001019060200180831161248657829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261022b60205260409020805463ffffffff84169081106124f0576124f0614e7b565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b60006001600160e01b03198216635a05180f60e01b1480610ac55750610ac58261310b565b6000610cb7613140565b6001600160a01b0383166125cf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bc9565b6001600160a01b0382166126305760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bc9565b6001600160a01b038381166000818152610160602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610e6d8161269e612563565b613162565b60006126af8484611ecd565b90506000198114612717578181101561270a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610bc9565b612717848484840361256d565b50505050565b6001600160a01b0383166127815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bc9565b6001600160a01b0382166127e35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bc9565b6127ee8383836131c6565b6001600160a01b038316600090815261015f6020526040902054818110156128675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bc9565b6001600160a01b03808516600090815261015f602052604080822085850390559185168152908120805484929061289f908490614dcf565b92505081905550826001600160a01b0316846001600160a01b03166000805160206151b9833981519152846040516128d991815260200190565b60405180910390a3612717848484613287565b6128f68282613292565b600082815261012d60205260409020610ca89082613319565b6000610cb77f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61293f6101c35490565b6101c4546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b612996828261332e565b600082815261012d60205260409020610ca890826133b3565b8154600090815b81811015612a135760006129ca82846133c8565b9050848682815481106129df576129df614e7b565b60009182526020909120015463ffffffff1611156129ff57809250612a0d565b612a0a816001614dcf565b91505b506129b6565b8115612a565784612a25600184614e64565b81548110612a3557612a35614e7b565b600091825260209091200154600160201b90046001600160e01b0316612a59565b60005b6001600160e01b031695945050505050565b610d4682826133e3565b6000612a8083610ecf565b90506000612a8d84611045565b6001600160a01b03858116600081815261022a602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46127178284836133fc565b600063ffffffff821115612b5b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610bc9565b5090565b80612b6957505050565b6000670de0b6b3a7640000612b7e8386615011565b612b889190615030565b905060008111612bcd5760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610bc9565b61025d5460009061271090612beb906001600160801b031684615011565b612bf59190615030565b90506001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c6457813414612c645760405162461bcd60e51b815260206004820152601660248201527536bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610bc9565b612c8384612c70612563565b61025e546001600160a01b03168461353b565b612cab84612c8f612563565b61025f546001600160a01b0316612ca68587614e64565b61353b565b5050505050565b6000828152610264602052604081206002018054839290612cd4908490614dcf565b90915550506000828152610265602052604081204291612cf2612563565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550806102676000612d24612563565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254612d539190614dcf565b90915550610ca890508382613585565b6000610c70838361358f565b6060612d7a8361252f565b612dd55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bc9565b600080846001600160a01b031684604051612df09190615052565b600060405180830381855af49150503d8060008114612e2b576040519150601f19603f3d011682016040523d82523d6000602084013e612e30565b606091505b5091509150612e588282604051806060016040528060278152602001615192602791396135b9565b95945050505050565b6000808281805b8751811015612f2357612e7c600283615011565b91506000888281518110612e9257612e92614e7b565b60200260200101519050808411612ed4576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612f10565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612f0d9190614dcf565b92505b5080612f1b81614ed7565b915050612e68565b50941495939450505050565b6000610ac5612f3c61290f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000612f8e878787876135f2565b91509150612f9b816136d5565b5095945050505050565b6001600160a01b03811660009081526101f7602052604090208054600181018255905b50919050565b6000610ac5825490565b600054610100900460ff16612fff5760405162461bcd60e51b8152600401610bc99061506e565b60005b8151811015610d465760016065600084848151811061302357613023614e7b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061305f81614ed7565b915050613002565b600054610100900460ff1661308e5760405162461bcd60e51b8152600401610bc99061506e565b610e6d81604051806040016040528060018152602001603160f81b81525061388b565b600054610100900460ff166130d85760405162461bcd60e51b8152600401610bc99061506e565b81516130ec906101629060208501906144ad565b508051610ca8906101639060208401906144ad565b610d4682826128ec565b60006001600160e01b03198216637965db0b60e01b1480610ac557506301ffc9a760e01b6001600160e01b0319831614610ac5565b600061314b33610eb1565b1561315d575060131936013560601c90565b503390565b61316c8282611313565b610d4657613184816001600160a01b031660146138ce565b61318f8360206138ce565b6040516020016131a09291906150b9565b60408051601f198184030181529082905262461bcd60e51b8252610bc9916004016145b8565b6131df6000805160206151728339815191526000611313565b1580156131f457506001600160a01b03831615155b801561320857506001600160a01b03821615155b15610ca85761322560008051602061517283398151915284611313565b80613243575061324360008051602061517283398151915283611313565b610ca85760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610bc9565b610ca8838383613a69565b61329c8282611313565b610d4657600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556132d5612563565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610c70836001600160a01b038416613a84565b6133388282611313565b15610d4657600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff1916905561336f612563565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610c70836001600160a01b038416613ad3565b60006133d76002848418615030565b610c7090848416614dcf565b6133ed8282613bc6565b61271761022c613d1883613d24565b816001600160a01b0316836001600160a01b03161415801561341e5750600081115b15610ca8576001600160a01b038316156134ad576001600160a01b038316600090815261022b60205260408120819061345a90613d1885613d24565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516134a2929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610ca8576001600160a01b038216600090815261022b6020526040812081906134e490613e9b85613d24565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161352c929190918252602082015260400190565b60405180910390a25050505050565b8061354557612717565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613579576135748282613ea7565b612717565b61271784848484613f49565b610d468282613fa2565b60008260000182815481106135a6576135a6614e7b565b9060005260206000200154905092915050565b606083156135c8575081610c70565b8251156135d85782518084602001fd5b8160405162461bcd60e51b8152600401610bc991906145b8565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561361f57506000905060036136cc565b8460ff16601b1415801561363757508460ff16601c14155b1561364857506000905060046136cc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561369c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166136c5576000600192509250506136cc565b9150600090505b94509492505050565b60008160048111156136e9576136e9615128565b14156136f25750565b600181600481111561370657613706615128565b141561374f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610bc9565b600281600481111561376357613763615128565b14156137b15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bc9565b60038160048111156137c5576137c5615128565b141561381e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bc9565b600481600481111561383257613832615128565b1415610e6d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bc9565b600054610100900460ff166138b25760405162461bcd60e51b8152600401610bc99061506e565b8151602092830120815191909201206101c3919091556101c455565b606060006138dd836002615011565b6138e8906002614dcf565b6001600160401b038111156138ff576138ff614aae565b6040519080825280601f01601f191660200182016040528015613929576020820181803683370190505b509050600360fc1b8160008151811061394457613944614e7b565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061397357613973614e7b565b60200101906001600160f81b031916908160001a9053506000613997846002615011565b6139a2906001614dcf565b90505b6001811115613a1a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106139d6576139d6614e7b565b1a60f81b8282815181106139ec576139ec614e7b565b60200101906001600160f81b031916908160001a90535060049490941c93613a1381614ef2565b90506139a5565b508315610c705760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bc9565b610ca8613a7584610ecf565b613a7e84610ecf565b836133fc565b6000818152600183016020526040812054613acb57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ac5565b506000610ac5565b60008181526001830160205260408120548015613bbc576000613af7600183614e64565b8554909150600090613b0b90600190614e64565b9050818114613b70576000866000018281548110613b2b57613b2b614e7b565b9060005260206000200154905080876000018481548110613b4e57613b4e614e7b565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613b8157613b8161513e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ac5565b6000915050610ac5565b6001600160a01b038216613c265760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bc9565b613c32826000836131c6565b6001600160a01b038216600090815261015f602052604090205481811015613ca75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bc9565b6001600160a01b038316600090815261015f6020526040812083830390556101618054849290613cd8908490614e64565b90915550506040518281526000906001600160a01b038516906000805160206151b98339815191529060200160405180910390a3610ca883600084613287565b6000610c708284614e64565b825460009081908015613d6e5785613d3d600183614e64565b81548110613d4d57613d4d614e7b565b600091825260209091200154600160201b90046001600160e01b0316613d71565b60005b6001600160e01b03169250613d8a83858763ffffffff16565b9150600081118015613dc857504386613da4600184614e64565b81548110613db457613db4614e7b565b60009182526020909120015463ffffffff16145b15613e2857613dd68261402e565b86613de2600184614e64565b81548110613df257613df2614e7b565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613e92565b856040518060400160405280613e3d43612af6565b63ffffffff168152602001613e518561402e565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610c708284614dcf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613ef4576040519150601f19603f3d011682016040523d82523d6000602084013e613ef9565b606091505b5050905080610ca85760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bc9565b816001600160a01b0316836001600160a01b03161415613f6857612717565b6001600160a01b038316301415613f8d576135746001600160a01b0385168383614097565b6127176001600160a01b0385168484846140fa565b613fac8282614132565b610161546001600160e01b03101561401f5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610bc9565b61271761022c613e9b83613d24565b60006001600160e01b03821115612b5b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610bc9565b6040516001600160a01b038316602482015260448101829052610ca890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614215565b6040516001600160a01b03808516602483015283166044820152606481018290526127179085906323b872dd60e01b906084016140c3565b6001600160a01b0382166141885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bc9565b614194600083836131c6565b8061016160008282546141a79190614dcf565b90915550506001600160a01b038216600090815261015f6020526040812080548392906141d5908490614dcf565b90915550506040518181526001600160a01b038316906000906000805160206151b98339815191529060200160405180910390a3610d4660008383613287565b600061426a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142e79092919063ffffffff16565b805190915015610ca857808060200190518101906142889190615154565b610ca85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bc9565b60606142f684846000856142fe565b949350505050565b60608247101561435f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bc9565b6143688561252f565b6143b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bc9565b600080866001600160a01b031685876040516143d09190615052565b60006040518083038185875af1925050503d806000811461440d576040519150601f19603f3d011682016040523d82523d6000602084013e614412565b606091505b50915091506144228282866135b9565b979650505050505050565b82805461443990614d84565b90600052602060002090601f01602090048101928261445b57600085556144a1565b82601f106144745782800160ff198235161785556144a1565b828001600101855582156144a1579182015b828111156144a1578235825591602001919060010190614486565b50612b5b929150614521565b8280546144b990614d84565b90600052602060002090601f0160209004810192826144db57600085556144a1565b82601f106144f457805160ff19168380011785556144a1565b828001600101855582156144a1579182015b828111156144a1578251825591602001919060010190614506565b5b80821115612b5b5760008155600101614522565b60006020828403121561454857600080fd5b81356001600160e01b031981168114610c7057600080fd5b60005b8381101561457b578181015183820152602001614563565b838111156127175750506000910152565b600081518084526145a4816020860160208601614560565b601f01601f19169290920160200192915050565b602081526000610c70602083018461458c565b6001600160a01b0381168114610e6d57600080fd5b80356145eb816145cb565b919050565b6000806040838503121561460357600080fd5b823561460e816145cb565b946020939093013593505050565b60008060006060848603121561463157600080fd5b833561463c816145cb565b9250602084013561464c816145cb565b929592945050506040919091013590565b60006020828403121561466f57600080fd5b5035919050565b6000806040838503121561468957600080fd5b82359150602083013561469b816145cb565b809150509250929050565b6000602082840312156146b857600080fd5b8135610c70816145cb565b60008083601f8401126146d557600080fd5b5081356001600160401b038111156146ec57600080fd5b6020830191508360208260051b85010111156112c657600080fd5b600080600080600080600060c0888a03121561472257600080fd5b873561472d816145cb565b9650602088013595506040880135614744816145cb565b94506060880135935060808801356001600160401b0381111561476657600080fd5b6147728a828b016146c3565b989b979a5095989497959660a090950135949350505050565b6000806040838503121561479e57600080fd5b50508035926020909101359150565b600080602083850312156147c057600080fd5b82356001600160401b03808211156147d757600080fd5b818501915085601f8301126147eb57600080fd5b8135818111156147fa57600080fd5b86602082850101111561480c57600080fd5b60209290920196919550909350505050565b6000806020838503121561483157600080fd5b82356001600160401b0381111561484757600080fd5b614853858286016146c3565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156148b457603f198886030184526148a285835161458c565b94509285019290850190600101614886565b5092979650505050505050565b60008060008060008060a087890312156148da57600080fd5b8635955060208701356148ec816145cb565b94506040870135935060608701356001600160401b0381111561490e57600080fd5b61491a89828a016146c3565b979a9699509497949695608090950135949350505050565b8015158114610e6d57600080fd5b60008060008060008060c0878903121561495957600080fd5b86359550602087013561496b816145cb565b9450604087013593506060870135614982816145cb565b92506080870135915060a087013561499981614932565b809150509295509295509295565b803560ff811681146145eb57600080fd5b60008060008060008060c087890312156149d157600080fd5b86356149dc816145cb565b955060208701359450604087013593506149f8606088016149a7565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614a2d57600080fd5b8735614a38816145cb565b96506020880135614a48816145cb565b95506040880135945060608801359350614a64608089016149a7565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614a9357600080fd5b8235614a9e816145cb565b9150602083013561469b816145cb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614aec57614aec614aae565b604052919050565b600082601f830112614b0557600080fd5b81356001600160401b03811115614b1e57614b1e614aae565b614b31601f8201601f1916602001614ac4565b818152846020838601011115614b4657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112614b7457600080fd5b813560206001600160401b03821115614b8f57614b8f614aae565b8160051b614b9e828201614ac4565b9283528481018201928281019087851115614bb857600080fd5b83870192505b84831015614422578235614bd1816145cb565b82529183019190830190614bbe565b600080600080600080600080610100898b031215614bfd57600080fd5b614c06896145e0565b975060208901356001600160401b0380821115614c2257600080fd5b614c2e8c838d01614af4565b985060408b0135915080821115614c4457600080fd5b614c508c838d01614af4565b975060608b0135915080821115614c6657600080fd5b614c728c838d01614af4565b965060808b0135915080821115614c8857600080fd5b50614c958b828c01614b63565b945050614ca460a08a016145e0565b9250614cb260c08a016145e0565b915060e089013590509295985092959890939650565b600080600060408486031215614cdd57600080fd5b83356001600160401b0380821115614cf457600080fd5b818601915086601f830112614d0857600080fd5b813581811115614d1757600080fd5b8760208260081b8501011115614d2c57600080fd5b60209283019550935050840135614d4281614932565b809150509250925092565b60008060408385031215614d6057600080fd5b8235614d6b816145cb565b9150602083013563ffffffff8116811461469b57600080fd5b600181811c90821680614d9857607f821691505b60208210811415612fc857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614de257614de2614db9565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b604081526000614e31604083018661458c565b8281036020840152838152838560208301376000602085830101526020601f19601f860116820101915050949350505050565b600082821015614e7657614e76614db9565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112614ea857600080fd5b8301803591506001600160401b03821115614ec257600080fd5b6020019150368190038213156112c657600080fd5b6000600019821415614eeb57614eeb614db9565b5060010190565b600081614f0157614f01614db9565b506000190190565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556007810160e0830135614f5b816145cb565b81546001600160a01b0319166001600160a01b03919091161790555050565b6020808252818101839052600090604080840186845b87811015615004578135835284820135858401528382013584840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e080830135614fe3816145cb565b6001600160a01b031690840152610100928301929190910190600101614f90565b5090979650505050505050565b600081600019048311821515161561502b5761502b614db9565b500290565b60008261504d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251615064818460208701614560565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516150eb816017850160208801614560565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161511c816028840160208801614560565b01602801949350505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006020828403121561516657600080fd5b8151610c708161493256fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212208835385e003abb33ee727045837d490269f52bd411dff6ff30c6ec12fadee16564736f6c634300080c0033",
    "sourceMap": "1173:20051:273:-:0;;;3309:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1173:20051:273;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1173:20051:273;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102a15760003560e01c80637a5a8e7e116101615780637a5a8e7e146106e95780637ecebe00146106fc57806386ee745d1461071c5780638e539e8c146107515780639010d07c1461077157806391d1485414610791578063938e3d7b146107b157806395d89b41146107d15780639ab24eb0146107e6578063a0a8e46014610806578063a217fddf1461081a578063a457c2d71461082f578063a9059cbb1461084f578063ac9650d81461086f578063af3be8901461089c578063afb82916146108d3578063c3cda520146108f3578063c68907de14610913578063ca15c87314610928578063cb2ef6f714610948578063d45573f614610967578063d505accf1461099e578063d547741f146109be578063d637ed59146109de578063dd62ed3e146109fb578063dfad80a614610a1b578063e23b816414610a3b578063e8a3d48514610a5b578063f1127ed814610a7057600080fd5b806301ffc9a7146102a657806305981769146102db57806306fdde0314610300578063079fe40e14610322578063095ea7b31461035b57806318160ddd1461037b5780631e7ac4881461039157806323b872dd146103b3578063248a9ca3146103d35780632ab4d052146103f35780632f2ff15d1461040a578063313ce5671461042a5780633644e5151461044c57806336568abe1461046157806339509351146104815780633a46b1a8146104a15780633ea33f29146104c15780633f3e4c11146104e157806342966c68146105015780634352ab4114610521578063508679571461054f578063572b6c051461056f578063587cde1e1461058f5780635c19a95c146105af5780636f4f2837146105cf5780636f8934f4146105ef5780636fcfff451461067457806370a08231146106a957806379cc6790146106c9575b600080fd5b3480156102b257600080fd5b506102c66102c1366004614536565b610aba565b60405190151581526020015b60405180910390f35b3480156102e757600080fd5b506102f26102605481565b6040519081526020016102d2565b34801561030c57600080fd5b50610315610acb565b6040516102d291906145b8565b34801561032e57600080fd5b5061025f54610343906001600160a01b031681565b6040516001600160a01b0390911681526020016102d2565b34801561036757600080fd5b506102c66103763660046145f0565b610b5e565b34801561038757600080fd5b50610161546102f2565b34801561039d57600080fd5b506103b16103ac3660046145f0565b610b80565b005b3480156103bf57600080fd5b506102c66103ce36600461461c565b610c47565b3480156103df57600080fd5b506102f26103ee36600461465d565b610c77565b3480156103ff57600080fd5b506102f26102615481565b34801561041657600080fd5b506103b1610425366004614676565b610c8c565b34801561043657600080fd5b5060125b60405160ff90911681526020016102d2565b34801561045857600080fd5b506102f2610cad565b34801561046d57600080fd5b506103b161047c366004614676565b610cbc565b34801561048d57600080fd5b506102c661049c3660046145f0565b610d4a565b3480156104ad57600080fd5b506102f26104bc3660046145f0565b610d76565b3480156104cd57600080fd5b506103b16104dc3660046145f0565b610dba565b3480156104ed57600080fd5b506103b16104fc36600461465d565b610e13565b34801561050d57600080fd5b506103b161051c36600461465d565b610e5c565b34801561052d57600080fd5b506102f261053c3660046146a6565b6102676020526000908152604090205481565b34801561055b57600080fd5b506103b161056a36600461465d565b610e70565b34801561057b57600080fd5b506102c661058a3660046146a6565b610eb1565b34801561059b57600080fd5b506103436105aa3660046146a6565b610ecf565b3480156105bb57600080fd5b506103b16105ca3660046146a6565b610eee565b3480156105db57600080fd5b506103b16105ea3660046146a6565b610eff565b3480156105fb57600080fd5b5061060f61060a36600461465d565b610f56565b6040516102d29190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0918201516001600160a01b0316918101919091526101000190565b34801561068057600080fd5b5061069461068f3660046146a6565b611022565b60405163ffffffff90911681526020016102d2565b3480156106b557600080fd5b506102f26106c43660046146a6565b611045565b3480156106d557600080fd5b506103b16106e43660046145f0565b611061565b6103b16106f7366004614707565b61107d565b34801561070857600080fd5b506102f26107173660046146a6565b611259565b34801561072857600080fd5b5061073c610737366004614676565b611278565b604080519283526020830191909152016102d2565b34801561075d57600080fd5b506102f261076c36600461465d565b6112cd565b34801561077d57600080fd5b5061034361078c36600461478b565b6112fa565b34801561079d57600080fd5b506102c66107ac366004614676565b611313565b3480156107bd57600080fd5b506103b16107cc3660046147ad565b61133e565b3480156107dd57600080fd5b5061031561142d565b3480156107f257600080fd5b506102f26108013660046146a6565b61143d565b34801561081257600080fd5b50600261043a565b34801561082657600080fd5b506102f2600081565b34801561083b57600080fd5b506102c661084a3660046145f0565b6114c5565b34801561085b57600080fd5b506102c661086a3660046145f0565b611556565b34801561087b57600080fd5b5061088f61088a36600461481e565b61156e565b6040516102d2919061485f565b3480156108a857600080fd5b506108bc6108b73660046148c1565b611662565b6040805192151583526020830191909152016102d2565b3480156108df57600080fd5b506103b16108ee366004614940565b611869565b3480156108ff57600080fd5b506103b161090e3660046149b8565b611b5a565b34801561091f57600080fd5b506102f2611c8c565b34801561093457600080fd5b506102f261094336600461465d565b611d41565b34801561095457600080fd5b5068044726f7045524332360bc1b6102f2565b34801561097357600080fd5b5061025e5461025d54604080516001600160a01b03909316835261ffff9091166020830152016102d2565b3480156109aa57600080fd5b506103b16109b9366004614a12565b611d59565b3480156109ca57600080fd5b506103b16109d9366004614676565b611eb1565b3480156109ea57600080fd5b50610262546102635461073c919082565b348015610a0757600080fd5b506102f2610a16366004614a80565b611ecd565b348015610a2757600080fd5b506103b1610a36366004614be0565b611ef9565b348015610a4757600080fd5b506103b1610a56366004614cc8565b6120ce565b348015610a6757600080fd5b5061031561241c565b348015610a7c57600080fd5b50610a90610a8b366004614d4d565b6124ab565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102d2565b6000610ac58261253e565b92915050565b60606101628054610adb90614d84565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0790614d84565b8015610b545780601f10610b2957610100808354040283529160200191610b54565b820191906000526020600020905b815481529060010190602001808311610b3757829003601f168201915b5050505050905090565b600080610b69612563565b9050610b7681858561256d565b5060019392505050565b6000610b8b81612692565b612710821115610bd25760405162461bcd60e51b815260206004820152600d60248201526c313839901e1e9018981818181760991b60448201526064015b60405180910390fd5b61025d80546001600160801b0319166001600160401b03841617905561025e80546001600160a01b0385166001600160a01b031990911681179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b600080610c52612563565b9050610c5f8582856126a3565b610c6a85858561271d565b60019150505b9392505050565b600090815260fb602052604090206001015490565b610c9582610c77565b610c9e81612692565b610ca883836128ec565b505050565b6000610cb761290f565b905090565b610cc4612563565b6001600160a01b0316816001600160a01b031614610d3c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610bc9565b610d46828261298c565b5050565b600080610d55612563565b9050610b76818585610d678589611ecd565b610d719190614dcf565b61256d565b6000438210610d975760405162461bcd60e51b8152600401610bc990614de7565b6001600160a01b038316600090815261022b60205260409020610c7090836129af565b6000610dc581612692565b6001600160a01b0383166000818152610267602052604090819020849055517f8973b95d42472e89416ea69404f8038c041db700af9ec294e7b4cd4e1ff2801c90610c3a9085815260200190565b6000610e1e81612692565b6102618290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b610e6d610e67612563565b82612a6b565b50565b6000610e7b81612692565b6102608290556040518281527ff9d383c69b6255cbd431ca23734f43bdf15e694c7494956c917498469bcbce7390602001610e50565b6001600160a01b031660009081526065602052604090205460ff1690565b6001600160a01b03908116600090815261022a60205260409020541690565b610e6d610ef9612563565b82612a75565b6000610f0a81612692565b61025f80546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b610faa6040518061010001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b031681525090565b5060009081526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b031660e082015290565b6001600160a01b038116600090815261022b6020526040812054610ac590612af6565b6001600160a01b0316600090815261015f602052604090205490565b6110738261106d612563565b836126a3565b610d468282612a6b565b600260015414156110d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bc9565b60026001556110de33610eb1565b806110f85750326110ed612563565b6001600160a01b0316145b61112a5760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610bc9565b6000611134611c8c565b9050600061114d82611144612563565b8a888888611662565b509050600083158061116f575060008381526102646020526040902060050154155b90506111868361117d612563565b8b8b8b86611869565b8180156111935750600084115b156111de576111de6111a3612563565b6000858152610266602090815260408083206001600160981b03600886901c16845290915290208054600160ff9093169290921b9091179055565b6111e9898989612b5f565b6111f48a848b612cb2565b896001600160a01b0316611206612563565b6001600160a01b0316847f9c4945d842cc8c6704877a0defcd9ab09f6d77b24a369a95c2610506c6c38ee78c60405161124191815260200190565b60405180910390a45050600180555050505050505050565b6001600160a01b03811660009081526101f76020526040812054610ac5565b6000828152610265602090815260408083206001600160a01b03851684529091528120549081156112c65750600083815261026460205260409020600401548101818110156112c657506000195b9250929050565b60004382106112ee5760405162461bcd60e51b8152600401610bc990614de7565b610ac561022c836129af565b600082815261012d60205260408120610c709083612d63565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061134981612692565b600061025c805461135990614d84565b80601f016020809104026020016040519081016040528092919081815260200182805461138590614d84565b80156113d25780601f106113a7576101008083540402835291602001916113d2565b820191906000526020600020905b8154815290600101906020018083116113b557829003601f168201915b50505050509050838361025c91906113eb92919061442d565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681858560405161141f93929190614e1e565b60405180910390a150505050565b60606101638054610adb90614d84565b6001600160a01b038116600090815261022b602052604081205480156114b2576001600160a01b038316600090815261022b60205260409020611481600183614e64565b8154811061149157611491614e7b565b600091825260209091200154600160201b90046001600160e01b03166114b5565b60005b6001600160e01b03169392505050565b6000806114d0612563565b905060006114de8286611ecd565b90508381101561153e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bc9565b61154b828686840361256d565b506001949350505050565b600080611561612563565b9050610b7681858561271d565b6060816001600160401b0381111561158857611588614aae565b6040519080825280602002602001820160405280156115bb57816020015b60608152602001906001900390816115a65790505b50905060005b8281101561165b5761162b308585848181106115df576115df614e7b565b90506020028101906115f19190614e91565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612d6f92505050565b82828151811061163d5761163d614e7b565b6020026020010181905250808061165390614ed7565b9150506115c1565b5092915050565b600086815261026460209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e08301528291901561185d5761175686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516001600160601b031960608d901b1660208201526034810188905260540160405160208183030381529060405280519060200120612e61565b90935091508261179c5760405162461bcd60e51b81526020600482015260116024820152703737ba1034b7103bb434ba32b634b9ba1760791b6044820152606401610bc9565b6000898152610266602090815260408083206001600160981b0360088d901c168452909152902054600160ff8a161b161561180a5760405162461bcd60e51b815260206004820152600e60248201526d383937b7b31031b630b4b6b2b21760911b6044820152606401610bc9565b8315806118175750838711155b61185d5760405162461bcd60e51b815260206004820152601760248201527634b73b30b634b21038bab0b73a34ba3c90383937b7b31760491b6044820152606401610bc9565b50965096945050505050565b60008681526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e083018190529085161480156118f457508060c0015183145b61194c5760405162461bcd60e51b8152602060048201526024808201527f696e76616c69642063757272656e6379206f722070726963652073706563696660448201526334b2b21760e11b6064820152608401610bc9565b6000851180156119685750811580611968575080606001518511155b6119b05760405162461bcd60e51b815260206004820152601960248201527834b73b30b634b21038bab0b73a34ba3c9031b630b4b6b2b21760391b6044820152606401610bc9565b80602001518582604001516119c59190614dcf565b1115611a0d5760405162461bcd60e51b815260206004820152601760248201527632bc31b2b2b21036b0bc1036b4b73a1039bab838363c9760491b6044820152606401610bc9565b6102615461026054811580611a3657508187611a296101615490565b611a339190614dcf565b11155b611a7d5760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610bc9565b801580611aaf57506001600160a01b038816600090815261026760205260409020548190611aac908990614dcf565b11155b611afb5760405162461bcd60e51b815260206004820152601d60248201527f65786365656420636c61696d206c696d697420666f722077616c6c65740000006044820152606401610bc9565b6000611b078a8a611278565b91505080421015611b4e5760405162461bcd60e51b815260206004820152601160248201527031b0b73737ba1031b630b4b6903cb2ba1760791b6044820152606401610bc9565b50505050505050505050565b83421115611baa5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610bc9565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611c2490611c1c9060a00160405160208183030381529060405280519060200120612f2f565b858585612f7d565b9050611c2f81612fa5565b8614611c795760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610bc9565b611c838188612a75565b50505050505050565b61026354610262546000918291611ca39190614dcf565b90505b61026254811115611cfc576102646000611cc1600184614e64565b8152602001908152602001600020600001544210611cea57611ce4600182614e64565b91505090565b80611cf481614ef2565b915050611ca6565b5060405162461bcd60e51b815260206004820152601960248201527837379030b1ba34bb329036b4b73a1031b7b73234ba34b7b71760391b6044820152606401610bc9565b600081815261012d60205260408120610ac590612fce565b83421115611da95760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610bc9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888611dd88c612fa5565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611e3382612f2f565b90506000611e4382878787612f7d565b9050896001600160a01b0316816001600160a01b031614611ea65760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610bc9565b611b4e8a8a8a61256d565b611eba82610c77565b611ec381612692565b610ca8838361298c565b6001600160a01b0391821660009081526101606020908152604080832093909416825291909152205490565b600054610100900460ff1615808015611f195750600054600160ff909116105b80611f3a5750611f283061252f565b158015611f3a575060005460ff166001145b611f9d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bc9565b6000805460ff191660011790558015611fc0576000805461ff0019166101001790555b611fc985612fd8565b611fd288613067565b611fdc88886130b1565b8551611ff09061025c9060208901906144ad565b5061025f80546001600160a01b038087166001600160a01b03199283161790925561025e80549286169290911691909117905561025d80546001600160801b0384166001600160801b031990911617905561204c60008a613101565b6120646000805160206151728339815191528a613101565b61207d6000805160206151728339815191526000613101565b80156120c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b60006120d981612692565b61026254610263548184156120f5576120f28284614dcf565b90505b6102638690556102628190556000805b878110156122c057801580612135575088888281811061212757612127614e7b565b905061010002016000013582105b6121945760405162461bcd60e51b815260206004820152602a60248201527f737461727454696d657374616d70206d75737420626520696e20617363656e6460448201526934b7339037b93232b91760b11b6064820152608401610bc9565b6000610264816121a48487614dcf565b81526020019081526020016000206002015490508989838181106121ca576121ca614e7b565b90506101000201602001358111156122215760405162461bcd60e51b815260206004820152601a6024820152796d617820737570706c7920636c61696d656420616c726561647960301b6044820152606401610bc9565b89898381811061223357612233614e7b565b61010002919091019050610264600061224c8588614dcf565b815260200190815260200160002081816122669190614f09565b5081905061026460006122798588614dcf565b815260208101919091526040016000206002015589898381811061229f5761229f614e7b565b905061010002016000013592505080806122b890614ed7565b915050612105565b50851561234057835b8281101561233a57600081815261026460209081526040822082815560018101839055600281018390556003810183905560048101839055600581018390556006810192909255600790910180546001600160a01b031916905561026690528061233281614ed7565b9150506122c9565b506123d9565b868311156123d957865b838110156123d75761026460006123618386614dcf565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810182905560070180546001600160a01b0319169055610266906123bf8386614dcf565b815260200152806123cf81614ed7565b91505061234a565b505b7f22ddd1bcb3816651679299dbffccb94973edec10c32e88dc2f4735c7699a02ca888860405161240a929190614f7a565b60405180910390a15050505050505050565b61025c805461242a90614d84565b80601f016020809104026020016040519081016040528092919081815260200182805461245690614d84565b80156124a35780601f10612478576101008083540402835291602001916124a3565b820191906000526020600020905b81548152906001019060200180831161248657829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261022b60205260409020805463ffffffff84169081106124f0576124f0614e7b565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b60006001600160e01b03198216635a05180f60e01b1480610ac55750610ac58261310b565b6000610cb7613140565b6001600160a01b0383166125cf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bc9565b6001600160a01b0382166126305760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bc9565b6001600160a01b038381166000818152610160602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610e6d8161269e612563565b613162565b60006126af8484611ecd565b90506000198114612717578181101561270a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610bc9565b612717848484840361256d565b50505050565b6001600160a01b0383166127815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bc9565b6001600160a01b0382166127e35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bc9565b6127ee8383836131c6565b6001600160a01b038316600090815261015f6020526040902054818110156128675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bc9565b6001600160a01b03808516600090815261015f602052604080822085850390559185168152908120805484929061289f908490614dcf565b92505081905550826001600160a01b0316846001600160a01b03166000805160206151b9833981519152846040516128d991815260200190565b60405180910390a3612717848484613287565b6128f68282613292565b600082815261012d60205260409020610ca89082613319565b6000610cb77f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61293f6101c35490565b6101c4546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b612996828261332e565b600082815261012d60205260409020610ca890826133b3565b8154600090815b81811015612a135760006129ca82846133c8565b9050848682815481106129df576129df614e7b565b60009182526020909120015463ffffffff1611156129ff57809250612a0d565b612a0a816001614dcf565b91505b506129b6565b8115612a565784612a25600184614e64565b81548110612a3557612a35614e7b565b600091825260209091200154600160201b90046001600160e01b0316612a59565b60005b6001600160e01b031695945050505050565b610d4682826133e3565b6000612a8083610ecf565b90506000612a8d84611045565b6001600160a01b03858116600081815261022a602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46127178284836133fc565b600063ffffffff821115612b5b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610bc9565b5090565b80612b6957505050565b6000670de0b6b3a7640000612b7e8386615011565b612b889190615030565b905060008111612bcd5760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610bc9565b61025d5460009061271090612beb906001600160801b031684615011565b612bf59190615030565b90506001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612c6457813414612c645760405162461bcd60e51b815260206004820152601660248201527536bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610bc9565b612c8384612c70612563565b61025e546001600160a01b03168461353b565b612cab84612c8f612563565b61025f546001600160a01b0316612ca68587614e64565b61353b565b5050505050565b6000828152610264602052604081206002018054839290612cd4908490614dcf565b90915550506000828152610265602052604081204291612cf2612563565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550806102676000612d24612563565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254612d539190614dcf565b90915550610ca890508382613585565b6000610c70838361358f565b6060612d7a8361252f565b612dd55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bc9565b600080846001600160a01b031684604051612df09190615052565b600060405180830381855af49150503d8060008114612e2b576040519150601f19603f3d011682016040523d82523d6000602084013e612e30565b606091505b5091509150612e588282604051806060016040528060278152602001615192602791396135b9565b95945050505050565b6000808281805b8751811015612f2357612e7c600283615011565b91506000888281518110612e9257612e92614e7b565b60200260200101519050808411612ed4576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612f10565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612f0d9190614dcf565b92505b5080612f1b81614ed7565b915050612e68565b50941495939450505050565b6000610ac5612f3c61290f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000612f8e878787876135f2565b91509150612f9b816136d5565b5095945050505050565b6001600160a01b03811660009081526101f7602052604090208054600181018255905b50919050565b6000610ac5825490565b600054610100900460ff16612fff5760405162461bcd60e51b8152600401610bc99061506e565b60005b8151811015610d465760016065600084848151811061302357613023614e7b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061305f81614ed7565b915050613002565b600054610100900460ff1661308e5760405162461bcd60e51b8152600401610bc99061506e565b610e6d81604051806040016040528060018152602001603160f81b81525061388b565b600054610100900460ff166130d85760405162461bcd60e51b8152600401610bc99061506e565b81516130ec906101629060208501906144ad565b508051610ca8906101639060208401906144ad565b610d4682826128ec565b60006001600160e01b03198216637965db0b60e01b1480610ac557506301ffc9a760e01b6001600160e01b0319831614610ac5565b600061314b33610eb1565b1561315d575060131936013560601c90565b503390565b61316c8282611313565b610d4657613184816001600160a01b031660146138ce565b61318f8360206138ce565b6040516020016131a09291906150b9565b60408051601f198184030181529082905262461bcd60e51b8252610bc9916004016145b8565b6131df6000805160206151728339815191526000611313565b1580156131f457506001600160a01b03831615155b801561320857506001600160a01b03821615155b15610ca85761322560008051602061517283398151915284611313565b80613243575061324360008051602061517283398151915283611313565b610ca85760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610bc9565b610ca8838383613a69565b61329c8282611313565b610d4657600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556132d5612563565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610c70836001600160a01b038416613a84565b6133388282611313565b15610d4657600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff1916905561336f612563565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610c70836001600160a01b038416613ad3565b60006133d76002848418615030565b610c7090848416614dcf565b6133ed8282613bc6565b61271761022c613d1883613d24565b816001600160a01b0316836001600160a01b03161415801561341e5750600081115b15610ca8576001600160a01b038316156134ad576001600160a01b038316600090815261022b60205260408120819061345a90613d1885613d24565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516134a2929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610ca8576001600160a01b038216600090815261022b6020526040812081906134e490613e9b85613d24565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161352c929190918252602082015260400190565b60405180910390a25050505050565b8061354557612717565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613579576135748282613ea7565b612717565b61271784848484613f49565b610d468282613fa2565b60008260000182815481106135a6576135a6614e7b565b9060005260206000200154905092915050565b606083156135c8575081610c70565b8251156135d85782518084602001fd5b8160405162461bcd60e51b8152600401610bc991906145b8565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561361f57506000905060036136cc565b8460ff16601b1415801561363757508460ff16601c14155b1561364857506000905060046136cc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561369c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166136c5576000600192509250506136cc565b9150600090505b94509492505050565b60008160048111156136e9576136e9615128565b14156136f25750565b600181600481111561370657613706615128565b141561374f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610bc9565b600281600481111561376357613763615128565b14156137b15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bc9565b60038160048111156137c5576137c5615128565b141561381e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bc9565b600481600481111561383257613832615128565b1415610e6d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bc9565b600054610100900460ff166138b25760405162461bcd60e51b8152600401610bc99061506e565b8151602092830120815191909201206101c3919091556101c455565b606060006138dd836002615011565b6138e8906002614dcf565b6001600160401b038111156138ff576138ff614aae565b6040519080825280601f01601f191660200182016040528015613929576020820181803683370190505b509050600360fc1b8160008151811061394457613944614e7b565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061397357613973614e7b565b60200101906001600160f81b031916908160001a9053506000613997846002615011565b6139a2906001614dcf565b90505b6001811115613a1a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106139d6576139d6614e7b565b1a60f81b8282815181106139ec576139ec614e7b565b60200101906001600160f81b031916908160001a90535060049490941c93613a1381614ef2565b90506139a5565b508315610c705760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bc9565b610ca8613a7584610ecf565b613a7e84610ecf565b836133fc565b6000818152600183016020526040812054613acb57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ac5565b506000610ac5565b60008181526001830160205260408120548015613bbc576000613af7600183614e64565b8554909150600090613b0b90600190614e64565b9050818114613b70576000866000018281548110613b2b57613b2b614e7b565b9060005260206000200154905080876000018481548110613b4e57613b4e614e7b565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613b8157613b8161513e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ac5565b6000915050610ac5565b6001600160a01b038216613c265760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bc9565b613c32826000836131c6565b6001600160a01b038216600090815261015f602052604090205481811015613ca75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bc9565b6001600160a01b038316600090815261015f6020526040812083830390556101618054849290613cd8908490614e64565b90915550506040518281526000906001600160a01b038516906000805160206151b98339815191529060200160405180910390a3610ca883600084613287565b6000610c708284614e64565b825460009081908015613d6e5785613d3d600183614e64565b81548110613d4d57613d4d614e7b565b600091825260209091200154600160201b90046001600160e01b0316613d71565b60005b6001600160e01b03169250613d8a83858763ffffffff16565b9150600081118015613dc857504386613da4600184614e64565b81548110613db457613db4614e7b565b60009182526020909120015463ffffffff16145b15613e2857613dd68261402e565b86613de2600184614e64565b81548110613df257613df2614e7b565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613e92565b856040518060400160405280613e3d43612af6565b63ffffffff168152602001613e518561402e565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610c708284614dcf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613ef4576040519150601f19603f3d011682016040523d82523d6000602084013e613ef9565b606091505b5050905080610ca85760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bc9565b816001600160a01b0316836001600160a01b03161415613f6857612717565b6001600160a01b038316301415613f8d576135746001600160a01b0385168383614097565b6127176001600160a01b0385168484846140fa565b613fac8282614132565b610161546001600160e01b03101561401f5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610bc9565b61271761022c613e9b83613d24565b60006001600160e01b03821115612b5b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610bc9565b6040516001600160a01b038316602482015260448101829052610ca890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614215565b6040516001600160a01b03808516602483015283166044820152606481018290526127179085906323b872dd60e01b906084016140c3565b6001600160a01b0382166141885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bc9565b614194600083836131c6565b8061016160008282546141a79190614dcf565b90915550506001600160a01b038216600090815261015f6020526040812080548392906141d5908490614dcf565b90915550506040518181526001600160a01b038316906000906000805160206151b98339815191529060200160405180910390a3610d4660008383613287565b600061426a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142e79092919063ffffffff16565b805190915015610ca857808060200190518101906142889190615154565b610ca85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bc9565b60606142f684846000856142fe565b949350505050565b60608247101561435f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bc9565b6143688561252f565b6143b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bc9565b600080866001600160a01b031685876040516143d09190615052565b60006040518083038185875af1925050503d806000811461440d576040519150601f19603f3d011682016040523d82523d6000602084013e614412565b606091505b50915091506144228282866135b9565b979650505050505050565b82805461443990614d84565b90600052602060002090601f01602090048101928261445b57600085556144a1565b82601f106144745782800160ff198235161785556144a1565b828001600101855582156144a1579182015b828111156144a1578235825591602001919060010190614486565b50612b5b929150614521565b8280546144b990614d84565b90600052602060002090601f0160209004810192826144db57600085556144a1565b82601f106144f457805160ff19168380011785556144a1565b828001600101855582156144a1579182015b828111156144a1578251825591602001919060010190614506565b5b80821115612b5b5760008155600101614522565b60006020828403121561454857600080fd5b81356001600160e01b031981168114610c7057600080fd5b60005b8381101561457b578181015183820152602001614563565b838111156127175750506000910152565b600081518084526145a4816020860160208601614560565b601f01601f19169290920160200192915050565b602081526000610c70602083018461458c565b6001600160a01b0381168114610e6d57600080fd5b80356145eb816145cb565b919050565b6000806040838503121561460357600080fd5b823561460e816145cb565b946020939093013593505050565b60008060006060848603121561463157600080fd5b833561463c816145cb565b9250602084013561464c816145cb565b929592945050506040919091013590565b60006020828403121561466f57600080fd5b5035919050565b6000806040838503121561468957600080fd5b82359150602083013561469b816145cb565b809150509250929050565b6000602082840312156146b857600080fd5b8135610c70816145cb565b60008083601f8401126146d557600080fd5b5081356001600160401b038111156146ec57600080fd5b6020830191508360208260051b85010111156112c657600080fd5b600080600080600080600060c0888a03121561472257600080fd5b873561472d816145cb565b9650602088013595506040880135614744816145cb565b94506060880135935060808801356001600160401b0381111561476657600080fd5b6147728a828b016146c3565b989b979a5095989497959660a090950135949350505050565b6000806040838503121561479e57600080fd5b50508035926020909101359150565b600080602083850312156147c057600080fd5b82356001600160401b03808211156147d757600080fd5b818501915085601f8301126147eb57600080fd5b8135818111156147fa57600080fd5b86602082850101111561480c57600080fd5b60209290920196919550909350505050565b6000806020838503121561483157600080fd5b82356001600160401b0381111561484757600080fd5b614853858286016146c3565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156148b457603f198886030184526148a285835161458c565b94509285019290850190600101614886565b5092979650505050505050565b60008060008060008060a087890312156148da57600080fd5b8635955060208701356148ec816145cb565b94506040870135935060608701356001600160401b0381111561490e57600080fd5b61491a89828a016146c3565b979a9699509497949695608090950135949350505050565b8015158114610e6d57600080fd5b60008060008060008060c0878903121561495957600080fd5b86359550602087013561496b816145cb565b9450604087013593506060870135614982816145cb565b92506080870135915060a087013561499981614932565b809150509295509295509295565b803560ff811681146145eb57600080fd5b60008060008060008060c087890312156149d157600080fd5b86356149dc816145cb565b955060208701359450604087013593506149f8606088016149a7565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614a2d57600080fd5b8735614a38816145cb565b96506020880135614a48816145cb565b95506040880135945060608801359350614a64608089016149a7565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614a9357600080fd5b8235614a9e816145cb565b9150602083013561469b816145cb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614aec57614aec614aae565b604052919050565b600082601f830112614b0557600080fd5b81356001600160401b03811115614b1e57614b1e614aae565b614b31601f8201601f1916602001614ac4565b818152846020838601011115614b4657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112614b7457600080fd5b813560206001600160401b03821115614b8f57614b8f614aae565b8160051b614b9e828201614ac4565b9283528481018201928281019087851115614bb857600080fd5b83870192505b84831015614422578235614bd1816145cb565b82529183019190830190614bbe565b600080600080600080600080610100898b031215614bfd57600080fd5b614c06896145e0565b975060208901356001600160401b0380821115614c2257600080fd5b614c2e8c838d01614af4565b985060408b0135915080821115614c4457600080fd5b614c508c838d01614af4565b975060608b0135915080821115614c6657600080fd5b614c728c838d01614af4565b965060808b0135915080821115614c8857600080fd5b50614c958b828c01614b63565b945050614ca460a08a016145e0565b9250614cb260c08a016145e0565b915060e089013590509295985092959890939650565b600080600060408486031215614cdd57600080fd5b83356001600160401b0380821115614cf457600080fd5b818601915086601f830112614d0857600080fd5b813581811115614d1757600080fd5b8760208260081b8501011115614d2c57600080fd5b60209283019550935050840135614d4281614932565b809150509250925092565b60008060408385031215614d6057600080fd5b8235614d6b816145cb565b9150602083013563ffffffff8116811461469b57600080fd5b600181811c90821680614d9857607f821691505b60208210811415612fc857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614de257614de2614db9565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b604081526000614e31604083018661458c565b8281036020840152838152838560208301376000602085830101526020601f19601f860116820101915050949350505050565b600082821015614e7657614e76614db9565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112614ea857600080fd5b8301803591506001600160401b03821115614ec257600080fd5b6020019150368190038213156112c657600080fd5b6000600019821415614eeb57614eeb614db9565b5060010190565b600081614f0157614f01614db9565b506000190190565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556007810160e0830135614f5b816145cb565b81546001600160a01b0319166001600160a01b03919091161790555050565b6020808252818101839052600090604080840186845b87811015615004578135835284820135858401528382013584840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e080830135614fe3816145cb565b6001600160a01b031690840152610100928301929190910190600101614f90565b5090979650505050505050565b600081600019048311821515161561502b5761502b614db9565b500290565b60008261504d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251615064818460208701614560565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516150eb816017850160208801614560565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161511c816028840160208801614560565b01602801949350505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006020828403121561516657600080fd5b8151610c708161493256fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212208835385e003abb33ee727045837d490269f52bd411dff6ff30c6ec12fadee16564736f6c634300080c0033",
    "sourceMap": "1173:20051:273:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:231;;;;;;;;;;-1:-1:-1;5056:231:273;;;;;:::i;:::-;;:::i;:::-;;;470:14:641;;463:22;445:41;;433:2;418:18;5056:231:273;;;;;;;;2563:34;;;;;;;;;;;;;;;;;;;643:25:641;;;631:2;616:18;2563:34:273;497:177:641;2493:98:447;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2463:35:273:-;;;;;;;;;;-1:-1:-1;2463:35:273;;;;-1:-1:-1;;;;;2463:35:273;;;;;;-1:-1:-1;;;;;1594:32:641;;;1576:51;;1564:2;1549:18;2463:35:273;1430:203:641;4770:197:447;;;;;;;;;;-1:-1:-1;4770:197:447;;;;;:::i;:::-;;:::i;3581:106::-;;;;;;;;;;-1:-1:-1;3668:12:447;;3581:106;;19549:394:273;;;;;;;;;;-1:-1:-1;19549:394:273;;;;;:::i;:::-;;:::i;:::-;;5529:286:447;;;;;;;;;;-1:-1:-1;5529:286:447;;;;;:::i;:::-;;:::i;4721:129:425:-;;;;;;;;;;-1:-1:-1;4721:129:425;;;;;:::i;:::-;;:::i;2652:29:273:-;;;;;;;;;;;;;;;;5146:145:425;;;;;;;;;;-1:-1:-1;5146:145:425;;;;;:::i;:::-;;:::i;3430:91:447:-;;;;;;;;;;-1:-1:-1;3512:2:447;3430:91;;;3553:4:641;3541:17;;;3523:36;;3511:2;3496:18;3430:91:447;3381:184:641;3282:113:452;;;;;;;;;;;;;:::i;6255:214:425:-;;;;;;;;;;-1:-1:-1;6255:214:425;;;;;:::i;:::-;;:::i;6210:234:447:-;;;;;;;;;;-1:-1:-1;6210:234:447;;;;;:::i;:::-;;:::i;3133:265:450:-;;;;;;;;;;-1:-1:-1;3133:265:450;;;;;:::i;:::-;;:::i;18289:209:273:-;;;;;;;;;;-1:-1:-1;18289:209:273;;;;;:::i;:::-;;:::i;18985:192::-;;;;;;;;;;-1:-1:-1;18985:192:273;;;;;:::i;:::-;;:::i;848:89:449:-;;;;;;;;;;-1:-1:-1;848:89:449;;;;;:::i;:::-;;:::i;3059:51:273:-;;;;;;;;;;-1:-1:-1;3059:51:273;;;;;:::i;:::-;;;;;;;;;;;;;;18671:180;;;;;;;;;;-1:-1:-1;18671:180:273;;;;;:::i;:::-;;:::i;918:134:304:-;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;2526:126:450:-;;;;;;;;;;-1:-1:-1;2526:126:450;;;;;:::i;:::-;;:::i;5567:112::-;;;;;;;;;;-1:-1:-1;5567:112:450;;;;;:::i;:::-;;:::i;19259:207:273:-;;;;;;;;;;-1:-1:-1;19259:207:273;;;;;:::i;:::-;;:::i;17659:173::-;;;;;;;;;;-1:-1:-1;17659:173:273;;;;;:::i;:::-;;:::i;:::-;;;;;;4238:13:641;;4220:32;;4308:4;4296:17;;;4290:24;4268:20;;;4261:54;4371:4;4359:17;;;4353:24;4331:20;;;4324:54;4434:4;4422:17;;;4416:24;4394:20;;;4387:54;4497:4;4485:17;;;4479:24;4457:20;;;4450:54;4560:4;4548:17;;;4542:24;4520:20;;;4513:54;4623:4;4611:17;;;4605:24;4583:20;;;4576:54;4690:4;4678:17;;;4672:24;-1:-1:-1;;;;;4668:50:641;4646:20;;;4639:80;;;;4207:3;4192:19;;4007:718;2278:160:450;;;;;;;;;;-1:-1:-1;2278:160:450;;;;;:::i;:::-;;:::i;:::-;;;4904:10:641;4892:23;;;4874:42;;4862:2;4847:18;2278:160:450;4730:192:641;3745:125:447;;;;;;;;;;-1:-1:-1;3745:125:447;;;;;:::i;:::-;;:::i;1243:161:449:-;;;;;;;;;;-1:-1:-1;1243:161:449;;;;;:::i;:::-;;:::i;6202:2452:273:-;;;;;;:::i;:::-;;:::i;3032:126:452:-;;;;;;;;;;-1:-1:-1;3032:126:452;;;;;:::i;:::-;;:::i;16906:688:273:-;;;;;;;;;;-1:-1:-1;16906:688:273;;;;;:::i;:::-;;:::i;:::-;;;;6718:25:641;;;6774:2;6759:18;;6752:34;;;;6691:18;16906:688:273;6544:248:641;3677:256:450;;;;;;;;;;-1:-1:-1;3677:256:450;;;;;:::i;:::-;;:::i;1770:151:424:-;;;;;;;;;;-1:-1:-1;1770:151:424;;;;;:::i;:::-;;:::i;3203:145:425:-;;;;;;;;;;-1:-1:-1;3203:145:425;;;;;:::i;:::-;;:::i;20025:213:273:-;;;;;;;;;;-1:-1:-1;20025:213:273;;;;;:::i;:::-;;:::i;2704:102:447:-;;;;;;;;;;;;;:::i;2731:209:450:-;;;;;;;;;;-1:-1:-1;2731:209:450;;;;;:::i;:::-;;:::i;4739:95:273:-;;;;;;;;;;-1:-1:-1;1831:1:273;4739:95;;2324:49:425;;;;;;;;;;-1:-1:-1;2324:49:425;2369:4;2324:49;;6931:427:447;;;;;;;;;;-1:-1:-1;6931:427:447;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:447;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15068:1093:273:-;;;;;;;;;;-1:-1:-1;15068:1093:273;;;;;:::i;:::-;;:::i;:::-;;;;9882:14:641;;9875:22;9857:41;;9929:2;9914:18;;9907:34;;;;9830:18;15068:1093:273;9689:258:641;13411:1565:273;;;;;;;;;;-1:-1:-1;13411:1565:273;;;;;:::i;:::-;;:::i;5756:585:450:-;;;;;;;;;;-1:-1:-1;5756:585:450;;;;;:::i;:::-;;:::i;16430:377:273:-;;;;;;;;;;;;;:::i;2089:140:424:-;;;;;;;;;;-1:-1:-1;2089:140:424;;;;;:::i;:::-;;:::i;4592:91:273:-;;;;;;;;;;-1:-1:-1;;;;4592:91:273;;17895:140;;;;;;;;;;-1:-1:-1;17983:20:273;;18012:14;;17895:140;;;-1:-1:-1;;;;;17983:20:273;;;11740:51:641;;11839:6;11827:19;;;11822:2;11807:18;;11800:47;11713:18;17895:140:273;11568:285:641;2334:637:452;;;;;;;;;;-1:-1:-1;2334:637:452;;;;;:::i;:::-;;:::i;5571:147:425:-;;;;;;;;;;-1:-1:-1;5571:147:425;;;;;:::i;:::-;;:::i;2755:40:273:-;;;;;;;;;;-1:-1:-1;2755:40:273;;;;;;;;;4313:149:447;;;;;;;;;;-1:-1:-1;4313:149:447;;;;;:::i;:::-;;:::i;3402:950:273:-;;;;;;;;;;-1:-1:-1;3402:950:273;;;;;:::i;:::-;;:::i;8753:2859::-;;;;;;;;;;-1:-1:-1;8753:2859:273;;;;;:::i;:::-;;:::i;2054:25::-;;;;;;;;;;;;;:::i;2055:148:450:-;;;;;;;;;;-1:-1:-1;2055:148:450;;;;;:::i;:::-;;:::i;:::-;;;;17441:13:641;;17456:10;17437:30;17419:49;;17528:4;17516:17;;;17510:24;-1:-1:-1;;;;;17506:50:641;17484:20;;;17477:80;;;;17392:18;2055:148:450;17213:350:641;5056:231:273;5217:4;5244:36;5268:11;5244:23;:36::i;:::-;5237:43;5056:231;-1:-1:-1;;5056:231:273:o;2493:98:447:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:447;;4770:197;-1:-1:-1;;;4770:197:447:o;19549:394:273:-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;2167:6:273::1;19709:26:::0;::::1;;19701:52;;;::::0;-1:-1:-1;;;19701:52:273;;18155:2:641;19701:52:273::1;::::0;::::1;18137:21:641::0;18194:2;18174:18;;;18167:30;-1:-1:-1;;;18213:18:641;;;18206:43;18266:18;;19701:52:273::1;;;;;;;;;19764:14;:40:::0;;-1:-1:-1;;;;;;19764:40:273::1;-1:-1:-1::0;;;;;19764:40:273;::::1;;::::0;;19814:20:::1;:44:::0;;-1:-1:-1;;;;;19814:44:273;::::1;-1:-1:-1::0;;;;;;19814:44:273;;::::1;::::0;::::1;::::0;;;19874:62:::1;::::0;643:25:641;;;19874:62:273::1;::::0;631:2:641;616:18;19874:62:273::1;;;;;;;;19549:394:::0;;;:::o;5529:286:447:-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;4721:129:425:-;4795:7;4821:12;;;:6;:12;;;;;:22;;;;4721:129::o;5146:145::-;5229:18;5242:4;5229:12;:18::i;:::-;2802:16;2813:4;2802:10;:16::i;:::-;5259:25:::1;5270:4;5276:7;5259:10;:25::i;:::-;5146:145:::0;;;:::o;3282:113:452:-;3342:7;3368:20;:18;:20::i;:::-;3361:27;;3282:113;:::o;6255:214:425:-;6361:12;:10;:12::i;:::-;-1:-1:-1;;;;;6350:23:425;:7;-1:-1:-1;;;;;6350:23:425;;6342:83;;;;-1:-1:-1;;;6342:83:425;;18497:2:641;6342:83:425;;;18479:21:641;18536:2;18516:18;;;18509:30;18575:34;18555:18;;;18548:62;-1:-1:-1;;;18626:18:641;;;18619:45;18681:19;;6342:83:425;18295:411:641;6342:83:425;6436:26;6448:4;6454:7;6436:11;:26::i;:::-;6255:214;;:::o;6210:234:447:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;3133:265:450:-;3231:7;3272:12;3258:11;:26;3250:70;;;;-1:-1:-1;;;3250:70:450;;;;;;;:::i;:::-;-1:-1:-1;;;;;3356:21:450;;;;;;:12;:21;;;;;3337:54;;3379:11;3337:18;:54::i;18289:209:273:-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;-1:-1:-1;;;;;18400:26:273;::::1;;::::0;;;:16:::1;:26;::::0;;;;;;:35;;;18450:41;::::1;::::0;::::1;::::0;18429:6;643:25:641;;631:2;616:18;;497:177;18985:192:273;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;19085:14:273::1;:32:::0;;;19132:38:::1;::::0;643:25:641;;;19132:38:273::1;::::0;631:2:641;616:18;19132:38:273::1;;;;;;;;18985:192:::0;;:::o;848:89:449:-;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;:::-;848:89;:::o;18671:180:273:-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;18767:19:273::1;:28:::0;;;18810:34:::1;::::0;643:25:641;;;18810:34:273::1;::::0;631:2:641;616:18;18810:34:273::1;497:177:641::0;918:134:304;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;2526:126:450:-;-1:-1:-1;;;;;2626:19:450;;;2600:7;2626:19;;;:10;:19;;;;;;;;2526:126::o;5567:112::-;5638:34;5648:12;:10;:12::i;:::-;5662:9;5638;:34::i;19259:207:273:-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;19364:20:273::1;:37:::0;;-1:-1:-1;;;;;;19364:37:273::1;-1:-1:-1::0;;;;;19364:37:273;::::1;::::0;;::::1;::::0;;;19416:43:::1;::::0;::::1;::::0;-1:-1:-1;;19416:43:273::1;19259:207:::0;;:::o;17659:173::-;17735:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17735:31:273;-1:-1:-1;17790:35:273;;;;:21;:35;;;;;;;;;17778:47;;;;;;;;;;;;;;;;;;;;;;17790:21;17778:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17778:47:273;;;;;;17659:173::o;2278:160:450:-;-1:-1:-1;;;;;2402:21:450;;2348:6;2402:21;;;:12;:21;;;;;:28;2373:58;;:28;:58::i;3745:125:447:-;-1:-1:-1;;;;;3845:18:447;3819:7;3845:18;;;:9;:18;;;;;;;3745:125::o;1243:161:449:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;6202:2452:273:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;19538:2:641;2561:63:438;;;19520:21:641;19577:2;19557:18;;;19550:30;19616:33;19596:18;;;19589:61;19667:18;;2561:63:438;19336:355:641;2561:63:438;1815:1;2699:7;:18;6469:30:273::1;6488:10;6469:18;:30::i;:::-;:59;;;-1:-1:-1::0;6519:9:273::1;6503:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;6503:25:273::1;;6469:59;6461:75;;;::::0;-1:-1:-1;;;6461:75:273;;19898:2:641;6461:75:273::1;::::0;::::1;19880:21:641::0;19937:1;19917:18;;;19910:29;-1:-1:-1;;;19955:18:641;;;19948:33;19998:18;;6461:75:273::1;19696:326:641::0;6461:75:273::1;6584:25;6612:27;:25;:27::i;:::-;6584:55;;7050:21;7077:178;7113:17;7144:12;:10;:12::i;:::-;7170:9;7193:7;;7214:31;7077:22;:178::i;:::-;-1:-1:-1::0;7049:206:273;-1:-1:-1;7609:38:273::1;7650:36:::0;;;:117:::1;;-1:-1:-1::0;7765:1:273::1;7702:40:::0;;;:21;:40:::1;::::0;;;;:51:::1;;::::0;:65;7650:117:::1;7609:158;;7777:199;7802:17;7833:12;:10;:12::i;:::-;7859:9;7882;7905:14;7933:33;7777:11;:199::i;:::-;7991:16;:55;;;;;8045:1;8011:31;:35;7991:55;7987:346;;;8231:91;8307:12;:10;:12::i;:::-;8231:55;::::0;;;:36;:55:::1;::::0;;;;;;;-1:-1:-1;;;;;1244:1:475;1235:10;;;;1299:20;;;;;;;:28;;1270:1;1284:4;1276:12;;;1270:19;;;;1299:28;;;;;1148:186;8231:91:273::1;8389:55;8407:9;8418;8429:14;8389:17;:55::i;:::-;8501:62;8523:9;8534:17;8553:9;8501:21;:62::i;:::-;8626:9;-1:-1:-1::0;;;;;8579:68:273::1;8612:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;8579:68:273::1;8593:17;8579:68;8637:9;8579:68;;;;643:25:641::0;;631:2;616:18;;497:177;8579:68:273::1;;;;;;;;-1:-1:-1::0;;1772:1:438;2872:22;;-1:-1:-1;;;;;;;;6202:2452:273:o;3032:126:452:-;-1:-1:-1;;;;;3127:14:452;;3101:7;3127:14;;;:7;:14;;;;;929::465;3127:24:452;838:112:465;16906:688:273;17018:26;17114:52;;;:38;:52;;;;;;;;-1:-1:-1;;;;;17114:62:273;;;;;;;;;;;17191:23;;17187:401;;-1:-1:-1;17345:35:273;;;;:21;:35;;;;;:66;;;17304:107;;17434:44;;;17430:134;;;-1:-1:-1;;;17430:134:273;16906:688;;;;;:::o;3677:256:450:-;3764:7;3805:12;3791:11;:26;3783:70;;;;-1:-1:-1;;;3783:70:450;;;;;;;:::i;:::-;3870:56;3889:23;3914:11;3870:18;:56::i;1770:151:424:-;1860:7;1886:18;;;:12;:18;;;;;:28;;1908:5;1886:21;:28::i;3203:145:425:-;3289:4;3312:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3312:29:425;;;;;;;;;;;;;;;3203:145::o;20025:213:273:-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;20119:21:273::1;20143:11;20119:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20178:4;;20164:11;:18;;;;;;;:::i;:::-;;20198:33;20217:7;20226:4;;20198:33;;;;;;;;:::i;:::-;;;;;;;;20109:129;20025:213:::0;;;:::o;2704:102:447:-;2760:13;2792:7;2785:14;;;;;:::i;2731:209:450:-;-1:-1:-1;;;;;2837:21:450;;2804:7;2837:21;;;:12;:21;;;;;:28;2882:8;;:51;;-1:-1:-1;;;;;2897:21:450;;;;;;:12;:21;;;;;2919:7;2925:1;2919:3;:7;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2897:36:450;;-1:-1:-1;;;;;2897:36:450;2882:51;;;2893:1;2882:51;-1:-1:-1;;;;;2875:58:450;;2731:209;-1:-1:-1;;;2731:209:450:o;6931:427:447:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:447;;21040:2:641;7140:85:447;;;21022:21:641;21079:2;21059:18;;;21052:30;21118:34;21098:18;;;21091:62;-1:-1:-1;;;21169:18:641;;;21162:35;21214:19;;7140:85:447;20838:401:641;7140:85:447;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:447;;6931:427;-1:-1:-1;;;;6931:427:447:o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;15068:1093:273:-;15295:21;15396:35;;;:21;:35;;;;;;;;15354:77;;;;;;;;;;;;;;;;;;;;;;15396:21;15354:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15354:77:273;;;;;15295:21;;15354:77;15446:42;15442:713;;15543:191;15579:7;;15543:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;15604:28:273;;;;15660:59;;-1:-1:-1;;;;;;22112:2:641;22083:15;;;22079:45;15660:59:273;;;22067:58:641;22141:12;;;22134:28;;;22178:12;;15660:59:273;;;;;;;;;;;;15650:70;;;;;;15543:18;:191::i;:::-;15504:230;;-1:-1:-1;15504:230:273;-1:-1:-1;15504:230:273;15748:46;;;;-1:-1:-1;;;15748:46:273;;22403:2:641;15748:46:273;;;22385:21:641;22442:2;22422:18;;;22415:30;-1:-1:-1;;;22461:18:641;;;22454:47;22518:18;;15748:46:273;22201:341:641;15748:46:273;15834:50;;;;:36;:50;;;;;;;;-1:-1:-1;;;;;681:1:475;672:10;;;;743:20;;;;;;;;707:1;721:4;713:12;;707:19;743:27;:32;15808:156:273;;;;-1:-1:-1;;;15808:156:273;;22749:2:641;15808:156:273;;;22731:21:641;22788:2;22768:18;;;22761:30;-1:-1:-1;;;22807:18:641;;;22800:44;22861:18;;15808:156:273;22547:338:641;15808:156:273;16003:36;;;:84;;;16056:31;16043:9;:44;;16003:84;15978:166;;;;-1:-1:-1;;;15978:166:273;;23092:2:641;15978:166:273;;;23074:21:641;23131:2;23111:18;;;23104:30;-1:-1:-1;;;23150:18:641;;;23143:53;23213:18;;15978:166:273;22890:347:641;15978:166:273;15344:817;15068:1093;;;;;;;;;:::o;13411:1565::-;13648:39;13690:35;;;:21;:35;;;;;;;;;13648:77;;;;;;;;;;;;;;;;;;;;;;13690:21;13648:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13648:77:273;;;;;;;;;13757:39;;;;:92;;;;;13818:17;:31;;;13800:14;:49;13757:92;13736:175;;;;-1:-1:-1;;;13736:175:273;;23444:2:641;13736:175:273;;;23426:21:641;23483:2;23463:18;;;23456:30;23522:34;23502:18;;;23495:62;-1:-1:-1;;;23573:18:641;;;23566:34;23617:19;;13736:175:273;23242:400:641;13736:175:273;14063:1;14051:9;:13;:129;;;;;14086:31;14085:32;:94;;;;14134:17;:45;;;14121:9;:58;;14085:94;14030:201;;;;-1:-1:-1;;;14030:201:273;;23849:2:641;14030:201:273;;;23831:21:641;23888:2;23868:18;;;23861:30;-1:-1:-1;;;23907:18:641;;;23900:55;23972:18;;14030:201:273;23647:349:641;14030:201:273;14309:17;:36;;;14296:9;14262:17;:31;;;:43;;;;:::i;:::-;:83;;14241:153;;;;-1:-1:-1;;;14241:153:273;;24203:2:641;14241:153:273;;;24185:21:641;24242:2;24222:18;;;24215:30;-1:-1:-1;;;24261:18:641;;;24254:53;24324:18;;14241:153:273;24001:347:641;14241:153:273;14431:14;;14486:19;;14523:20;;;:68;;;14576:15;14563:9;14547:13;3668:12:447;;;3581:106;14547:13:273;:25;;;;:::i;:::-;:44;;14523:68;14515:105;;;;-1:-1:-1;;;14515:105:273;;24555:2:641;14515:105:273;;;24537:21:641;24594:2;24574:18;;;24567:30;-1:-1:-1;;;24613:18:641;;;24606:54;24677:18;;14515:105:273;24353:348:641;14515:105:273;14651:25;;;:91;;-1:-1:-1;;;;;;14680:26:273;;;;;;:16;:26;;;;;;14722:20;;14680:38;;14709:9;;14680:38;:::i;:::-;:62;;14651:91;14630:167;;;;-1:-1:-1;;;14630:167:273;;24908:2:641;14630:167:273;;;24890:21:641;24947:2;24927:18;;;24920:30;24986:31;24966:18;;;24959:59;25035:18;;14630:167:273;24706:353:641;14630:167:273;14811:31;14846:41;14864:12;14878:8;14846:17;:41::i;:::-;14808:79;;;14924:23;14905:15;:42;;14897:72;;;;-1:-1:-1;;;14897:72:273;;25266:2:641;14897:72:273;;;25248:21:641;25305:2;25285:18;;;25278:30;-1:-1:-1;;;25324:18:641;;;25317:47;25381:18;;14897:72:273;25064:341:641;14897:72:273;13638:1338;;;;13411:1565;;;;;;:::o;5756:585:450:-;5975:6;5956:15;:25;;5948:67;;;;-1:-1:-1;;;5948:67:450;;25612:2:641;5948:67:450;;;25594:21:641;25651:2;25631:18;;;25624:30;25690:31;25670:18;;;25663:59;25739:18;;5948:67:450;25410:353:641;5948:67:450;6107:58;;;1744:71;6107:58;;;25999:25:641;-1:-1:-1;;;;;26060:32:641;;26040:18;;;26033:60;;;;26109:18;;;26102:34;;;26152:18;;;26145:34;;;6025:14:450;;6042:180;;6080:87;;25971:19:641;;6107:58:450;;;;;;;;;;;;6097:69;;;;;;6080:16;:87::i;:::-;6181:1;6196;6211;6042:24;:180::i;:::-;6025:197;;6249:17;6259:6;6249:9;:17::i;:::-;6240:5;:26;6232:64;;;;-1:-1:-1;;;6232:64:450;;26392:2:641;6232:64:450;;;26374:21:641;26431:2;26411:18;;;26404:30;-1:-1:-1;;;26450:18:641;;;26443:55;26515:18;;6232:64:450;26190:349:641;6232:64:450;6306:28;6316:6;6324:9;6306;:28::i;:::-;5938:403;5756:585;;;;;;:::o;16430:377:273:-;16556:20;;:14;16524:29;16488:7;;;;16524:52;;16556:20;16524:52;:::i;:::-;16512:64;;16507:248;16582:14;:29;16578:33;;16507:248;;;16655:21;:28;16677:5;16681:1;16677;:5;:::i;:::-;16655:28;;;;;;;;;;;:43;;;16636:15;:62;16632:113;;16725:5;16729:1;16725;:5;:::i;:::-;16718:12;;;16430:377;:::o;16632:113::-;16613:3;;;;:::i;:::-;;;;16507:248;;;-1:-1:-1;16765:35:273;;-1:-1:-1;;;16765:35:273;;26887:2:641;16765:35:273;;;26869:21:641;26926:2;26906:18;;;26899:30;-1:-1:-1;;;26945:18:641;;;26938:55;27010:18;;16765:35:273;26685:349:641;2089:140:424;2169:7;2195:18;;;:12;:18;;;;;:27;;:25;:27::i;2334:637:452:-;2569:8;2550:15;:27;;2542:69;;;;-1:-1:-1;;;2542:69:452;;27241:2:641;2542:69:452;;;27223:21:641;27280:2;27260:18;;;27253:30;27319:31;27299:18;;;27292:59;27368:18;;2542:69:452;27039:353:641;2542:69:452;2622:18;1369:95;2682:5;2689:7;2698:5;2705:16;2715:5;2705:9;:16::i;:::-;2653:79;;;;;;27684:25:641;;;;-1:-1:-1;;;;;27783:15:641;;;27763:18;;;27756:43;27835:15;;;;27815:18;;;27808:43;27867:18;;;27860:34;27910:19;;;27903:35;27954:19;;;27947:35;;;27656:19;;2653:79:452;;;;;;;;;;;;2643:90;;;;;;2622:111;;2744:12;2759:28;2776:10;2759:16;:28::i;:::-;2744:43;;2798:14;2815:39;2840:4;2846:1;2849;2852;2815:24;:39::i;:::-;2798:56;;2882:5;-1:-1:-1;;;;;2872:15:452;:6;-1:-1:-1;;;;;2872:15:452;;2864:58;;;;-1:-1:-1;;;2864:58:452;;28195:2:641;2864:58:452;;;28177:21:641;28234:2;28214:18;;;28207:30;28273:32;28253:18;;;28246:60;28323:18;;2864:58:452;27993:354:641;2864:58:452;2933:31;2942:5;2949:7;2958:5;2933:8;:31::i;5571:147:425:-;5655:18;5668:4;5655:12;:18::i;:::-;2802:16;2813:4;2802:10;:16::i;:::-;5685:26:::1;5697:4;5703:7;5685:11;:26::i;4313:149:447:-:0;-1:-1:-1;;;;;4428:18:447;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;3402:950:273:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;28554:2:641;3157:201:436;;;28536:21:641;28593:2;28573:18;;;28566:30;28632:34;28612:18;;;28605:62;-1:-1:-1;;;28683:18:641;;;28676:44;28737:19;;3157:201:436;28352:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3817:51:273::1;3849:18;3817:31;:51::i;:::-;3878:25;3897:5;3878:18;:25::i;:::-;3913:38;3936:5;3943:7;3913:22;:38::i;:::-;4007:26:::0;;::::1;::::0;:11:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4043:20:273::1;:44:::0;;-1:-1:-1;;;;;4043:44:273;;::::1;-1:-1:-1::0;;;;;;4043:44:273;;::::1;;::::0;;;4097:20:::1;:44:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4151:14:::1;:41:::0;;-1:-1:-1;;;;;4151:41:273;::::1;-1:-1:-1::0;;;;;;4151:41:273;;::::1;;::::0;;4203:45:::1;4043:20;4234:13:::0;4203:10:::1;:45::i;:::-;4258:40;-1:-1:-1::0;;;;;;;;;;;4284:13:273::1;4258:10;:40::i;:::-;4308:37;-1:-1:-1::0;;;;;;;;;;;4342:1:273::1;4308:10;:37::i;:::-;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;3523:36:641;;3553:14:436;;3511:2:641;3496:18;3553:14:436;;;;;;;3479:99;3101:483;3402:950:273;;;;;;;;:::o;8753:2859::-;2369:4:425;2802:16;2369:4;2802:10;:16::i;:::-;8942:14:273::1;:29:::0;9010:20;;8942:29;9520:108;::::1;;;9578:39;9599:18:::0;9578;:39:::1;:::i;:::-;9562:55;;9520:108;9638:20:::0;:37;;;:14:::1;9685:45:::0;;;:29:::1;::::0;9786:671:::1;9806:18:::0;;::::1;9786:671;;;9870:6:::0;;;:65:::1;;;9910:7;;9918:1;9910:10;;;;;;;:::i;:::-;;;;;;:25;;;9880:27;:55;9870:65;9845:166;;;::::0;-1:-1:-1;;;9845:166:273;;29168:2:641;9845:166:273::1;::::0;::::1;29150:21:641::0;29207:2;29187:18;;;29180:30;29246:34;29226:18;;;29219:62;-1:-1:-1;;;29297:18:641;;;29290:40;29347:19;;9845:166:273::1;28966:406:641::0;9845:166:273::1;10026:28;10057:21:::0;10026:28;10079:17:::1;10095:1:::0;10079:13;:17:::1;:::i;:::-;10057:40;;;;;;;;;;;:54;;;10026:85;;10157:7;;10165:1;10157:10;;;;;;;:::i;:::-;;;;;;:29;;;10133:20;:53;;10125:92;;;::::0;-1:-1:-1;;;10125:92:273;;29579:2:641;10125:92:273::1;::::0;::::1;29561:21:641::0;29618:2;29598:18;;;29591:30;-1:-1:-1;;;29637:18:641;;;29630:56;29703:18;;10125:92:273::1;29377:350:641::0;10125:92:273::1;10275:7;;10283:1;10275:10;;;;;;;:::i;:::-;;;::::0;;;::::1;::::0;-1:-1:-1;10232:21:273;:40:::1;10254:17;10270:1:::0;10254:13;:17:::1;:::i;:::-;10232:40;;;;;;;;;;;:53;;;;;;:::i;:::-;-1:-1:-1::0;10356:20:273;;-1:-1:-1;10299:21:273;:40:::1;10321:17;10337:1:::0;10321:13;:17:::1;:::i;:::-;10299:40:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;10299:40:273;:54:::1;;:77:::0;10421:7;;10429:1;10421:10;;::::1;;;;;:::i;:::-;;;;;;:25;;;10391:55;;9831:626;9826:3;;;;;:::i;:::-;;;;9786:671;;;;10985:22;10981:578;;;11040:18:::0;11023:189:::1;11064:13;11060:1;:17;11023:189;;;11109:24;::::0;;;:21;:24:::1;::::0;;;;;;11102:31;;;::::1;::::0;::::1;::::0;;;11109:21:::1;11102:31:::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;11102:31:273::1;::::0;;11158:36;:39;;11131:1;11079:3:::1;11131:1:::0;11079:3:::1;:::i;:::-;;;;11023:189;;;;10981:578;;;11246:35:::0;;::::1;11242:307;;;11318:7:::0;11301:234:::1;11338:18;11334:1;:22;11301:234;;;11392:21:::0;:40:::1;11414:17;11430:1:::0;11414:13;:17:::1;:::i;:::-;11392:40:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11392:40:273;;;11385:47;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;;;;;;11385:47:273::1;::::0;;11461:36;;11498:17:::1;11514:1:::0;11498:13;:17:::1;:::i;:::-;11461:55:::0;;::::1;;::::0;11358:3;::::1;::::0;::::1;:::i;:::-;;;;11301:234;;;;11242:307;11574:31;11597:7;;11574:31;;;;;;;:::i;:::-;;;;;;;;8903:2709;;;;8753:2859:::0;;;;:::o;2054:25::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2055:148:450:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2170:21:450;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2163:33;;;;;;;;;2170:26;;2163:33;;;;;;-1:-1:-1;;;2163:33:450;;-1:-1:-1;;;;;2163:33:450;;;;;;;;;2055:148;-1:-1:-1;;;2055:148:450:o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;962:223:424:-;1047:4;-1:-1:-1;;;;;;1070:68:424;;-1:-1:-1;;;1070:68:424;;:108;;;1142:36;1166:11;1142:23;:36::i;20758:231:273:-;20907:14;20944:38;:36;:38::i;10447:370:447:-;-1:-1:-1;;;;;10578:19:447;;10570:68;;;;-1:-1:-1;;;10570:68:447;;32149:2:641;10570:68:447;;;32131:21:641;32188:2;32168:18;;;32161:30;32227:34;32207:18;;;32200:62;-1:-1:-1;;;32278:18:641;;;32271:34;32322:19;;10570:68:447;31947:400:641;10570:68:447;-1:-1:-1;;;;;10656:21:447;;10648:68;;;;-1:-1:-1;;;10648:68:447;;32554:2:641;10648:68:447;;;32536:21:641;32593:2;32573:18;;;32566:30;32632:34;32612:18;;;32605:62;-1:-1:-1;;;32683:18:641;;;32676:32;32725:19;;10648:68:447;32352:398:641;10648:68:447;-1:-1:-1;;;;;10727:18:447;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;643:25:641;;;10778:32:447;;616:18:641;10778:32:447;;;;;;;10447:370;;;:::o;3642:103:425:-;3708:30;3719:4;3725:12;:10;:12::i;:::-;3708:10;:30::i;11098:441:447:-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:447;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:447;;32957:2:641;11347:68:447;;;32939:21:641;32996:2;32976:18;;;32969:30;33035:31;33015:18;;;33008:59;33084:18;;11347:68:447;32755:353:641;11347:68:447;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:447;;7930:68;;;;-1:-1:-1;;;7930:68:447;;33315:2:641;7930:68:447;;;33297:21:641;33354:2;33334:18;;;33327:30;33393:34;33373:18;;;33366:62;-1:-1:-1;;;33444:18:641;;;33437:35;33489:19;;7930:68:447;33113:401:641;7930:68:447;-1:-1:-1;;;;;8016:16:447;;8008:64;;;;-1:-1:-1;;;8008:64:447;;33721:2:641;8008:64:447;;;33703:21:641;33760:2;33740:18;;;33733:30;33799:34;33779:18;;;33772:62;-1:-1:-1;;;33850:18:641;;;33843:33;33893:19;;8008:64:447;33519:399:641;8008:64:447;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;-1:-1:-1;;;;;8154:15:447;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:447;;34125:2:641;8179:72:447;;;34107:21:641;34164:2;34144:18;;;34137:30;34203:34;34183:18;;;34176:62;-1:-1:-1;;;34254:18:641;;;34247:36;34300:19;;8179:72:447;33923:402:641;8179:72:447;-1:-1:-1;;;;;8285:15:447;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:447;8391:4;-1:-1:-1;;;;;8382:26:447;-1:-1:-1;;;;;;;;;;;8401:6:447;8382:26;;;;643:25:641;;631:2;616:18;;497:177;8382:26:447;;;;;;;;8419:37;8439:4;8445:2;8449:6;8419:19;:37::i;2317:166:424:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;38578:25:641;;;38619:18;;;38612:34;;;38662:18;;;38655:34;;;3228:13:470;38705:18:641;;;38698:34;3251:4:470;38748:19:641;;;38741:61;3148:7:470;;38550:19:641;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;2572:171:424;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:18;;;;:12;:18;;;;;:34;;2728:7;2702:25;:34::i;4017:1469:450:-;5138:12;;4116:7;;;5185:240;5198:4;5192:3;:10;5185:240;;;5218:11;5232:34;5256:3;5261:4;5232:23;:34::i;:::-;5218:48;;5307:11;5284:5;5290:3;5284:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;5280:135;;;5345:3;5338:10;;5280:135;;;5393:7;:3;5399:1;5393:7;:::i;:::-;5387:13;;5280:135;5204:221;5185:240;;;5442:9;;:37;;5458:5;5464:8;5471:1;5464:4;:8;:::i;:::-;5458:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;5458:21:450;;-1:-1:-1;;;;;5458:21:450;5442:37;;;5454:1;5442:37;-1:-1:-1;;;;;5435:44:450;;4017:1469;-1:-1:-1;;;;;4017:1469:450:o;20592:160:273:-;20717:28;20729:7;20738:6;20717:11;:28::i;7743:380:450:-;7827:23;7853:20;7863:9;7853;:20::i;:::-;7827:46;;7883:24;7910:20;7920:9;7910;:20::i;:::-;-1:-1:-1;;;;;7940:21:450;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7940:33:450;;;;;;;;;;7989:54;;7883:47;;-1:-1:-1;7940:33:450;7989:54;;;;;;7940:21;7989:54;8054:62;8071:15;8088:9;8099:16;8054;:62::i;15190:187:474:-;15246:6;15281:16;15272:25;;;15264:76;;;;-1:-1:-1;;;15264:76:474;;34532:2:641;15264:76:474;;;34514:21:641;34571:2;34551:18;;;34544:30;34610:34;34590:18;;;34583:62;-1:-1:-1;;;34661:18:641;;;34654:36;34707:19;;15264:76:474;34330:402:641;15264:76:474;-1:-1:-1;15364:5:474;15190:187::o;11704:872:273:-;11853:19;11849:56;;11704:872;;;:::o;11849:56::-;12005:18;12064:7;12027:33;12046:14;12027:16;:33;:::i;:::-;12026:45;;;;:::i;:::-;12005:66;;12102:1;12089:10;:14;12081:43;;;;-1:-1:-1;;;12081:43:273;;35334:2:641;12081:43:273;;;35316:21:641;35373:2;35353:18;;;35346:30;-1:-1:-1;;;35392:18:641;;;35385:46;35448:18;;12081:43:273;35132:340:641;12081:43:273;12172:14;;12135:20;;2167:6;;12159:27;;-1:-1:-1;;;;;12172:14:273;12159:10;:27;:::i;:::-;12158:39;;;;:::i;:::-;12135:62;-1:-1:-1;;;;;;12212:45:273;;397:42:277;12212:45:273;12208:134;;;12294:10;12281:9;:23;12273:58;;;;-1:-1:-1;;;12273:58:273;;35679:2:641;12273:58:273;;;35661:21:641;35718:2;35698:18;;;35691:30;-1:-1:-1;;;35737:18:641;;;35730:52;35799:18;;12273:58:273;35477:346:641;12273:58:273;12352:97;12389:9;12400:12;:10;:12::i;:::-;12414:20;;-1:-1:-1;;;;;12414:20:273;12436:12;12352:36;:97::i;:::-;12459:110;12496:9;12507:12;:10;:12::i;:::-;12521:20;;-1:-1:-1;;;;;12521:20:273;12543:25;12556:12;12543:10;:25;:::i;:::-;12459:36;:110::i;:::-;11839:737;;11704:872;;;:::o;12631:681::-;12835:35;;;;:21;:35;;;;;:21;:49;:74;;12888:21;;12835:35;:74;;12888:21;;12835:74;:::i;:::-;;;;-1:-1:-1;;13112:52:273;;;;:38;:52;;;;;13181:15;;13165:12;:10;:12::i;:::-;-1:-1:-1;;;;;13112:66:273;-1:-1:-1;;;;;13112:66:273;;;;;;;;;;;;:84;;;;13240:21;13206:16;:30;13223:12;:10;:12::i;:::-;-1:-1:-1;;;;;13206:30:273;-1:-1:-1;;;;;13206:30:273;;;;;;;;;;;;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;13272:33:273;;-1:-1:-1;13278:3:273;13283:21;13272:5;:33::i;9297:156:477:-;9371:7;9421:22;9425:3;9437:5;9421:3;:22::i;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;36030:2:641;1226:88:466;;;36012:21:641;36069:2;36049:18;;;36042:30;36108:34;36088:18;;;36081:62;-1:-1:-1;;;36159:18:641;;;36152:36;36205:19;;1226:88:466;35828:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;36671:19:641;;;36706:12;;;36699:28;;;36743:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;36671:19:641;;;36706:12;;;36699:28;;;36743:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;39071:27:641;39114:11;;;39107:27;;;39150:12;;;39143:28;;;8674:7:469;;39187:12:641;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:469;6925:270;-1:-1:-1;;;;;6925:270:469:o;3526:214:452:-;-1:-1:-1;;;;;3657:14:452;;3586:15;3657:14;;;:7;:14;;;;;929::465;;1061:1;1043:19;;;;929:14;3716:17:452;3603:137;3526:214;;;:::o;8840:115:477:-;8903:7;8929:19;8937:3;4455:18;;4373:107;670:242:304;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2061:125:452::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2145:34:452::1;2169:4;2145:34;;;;;;;;;;;;;-1:-1:-1::0;;;2145:34:452::1;;::::0;:23:::1;:34::i;2269:159:447:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2381:13:447;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:447;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;7154:110:425:-:0;7232:25;7243:4;7249:7;7232:10;:25::i;2903:213::-;2988:4;-1:-1:-1;;;;;;3011:58:425;;-1:-1:-1;;;3011:58:425;;:98;;-1:-1:-1;;;;;;;;;;1168:51:471;;;3073:36:425;1060:166:471;1058:401:304;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;3282:113:452:o;4026:514:425:-;4114:22;4122:4;4128:7;4114;:22::i;:::-;4109:425;;4297:52;4336:7;-1:-1:-1;;;;;4297:52:425;4346:2;4297:30;:52::i;:::-;4420:49;4459:4;4466:2;4420:30;:49::i;:::-;4204:287;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4204:287:425;;;;;;;;;;-1:-1:-1;;;4152:371:425;;;;;;;:::i;5564:409:273:-;5772:34;-1:-1:-1;;;;;;;;;;;5803:1:273;5772:7;:34::i;:::-;5771:35;:57;;;;-1:-1:-1;;;;;;5810:18:273;;;;5771:57;:77;;;;-1:-1:-1;;;;;;5832:16:273;;;;5771:77;5767:200;;;5872:28;-1:-1:-1;;;;;;;;;;;5895:4:273;5872:7;:28::i;:::-;:58;;;;5904:26;-1:-1:-1;;;;;;;;;;;5927:2:273;5904:7;:26::i;:::-;5864:92;;;;-1:-1:-1;;;5864:92:273;;38171:2:641;5864:92:273;;;38153:21:641;38210:2;38190:18;;;38183:30;-1:-1:-1;;;38229:18:641;;;38222:51;38290:18;;5864:92:273;37969:345:641;5293:228:273;5471:43;5497:4;5503:2;5507:6;5471:25;:43::i;7804:233:425:-;7887:22;7895:4;7901:7;7887;:22::i;:::-;7882:149;;7925:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7925:29:425;;;;;;;;;:36;;-1:-1:-1;;7925:36:425;7957:4;7925:36;;;8007:12;:10;:12::i;:::-;-1:-1:-1;;;;;7980:40:425;7998:7;-1:-1:-1;;;;;7980:40:425;7992:4;7980:40;;;;;;;;;;7804:233;;:::o;8039:150:477:-;8109:4;8132:50;8137:3;-1:-1:-1;;;;;8157:23:477;;8132:4;:50::i;8208:234:425:-;8291:22;8299:4;8305:7;8291;:22::i;:::-;8287:149;;;8361:5;8329:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8329:29:425;;;;;;;;;:37;;-1:-1:-1;;8329:37:425;;;8412:12;:10;:12::i;:::-;-1:-1:-1;;;;;8385:40:425;8403:7;-1:-1:-1;;;;;8385:40:425;8397:4;8385:40;;;;;;;;;;8208:234;;:::o;8357:156:477:-;8430:4;8453:53;8461:3;-1:-1:-1;;;;;8481:23:477;;8453:7;:53::i;817:153:473:-;879:7;952:11;962:1;953:5;;;952:11;:::i;:::-;942:21;;943:5;;;942:21;:::i;7009:190:450:-;7093:28;7105:7;7114:6;7093:11;:28::i;:::-;7132:60;7149:23;7174:9;7185:6;7132:16;:60::i;8129:627::-;8256:3;-1:-1:-1;;;;;8249:10:450;:3;-1:-1:-1;;;;;8249:10:450;;;:24;;;;;8272:1;8263:6;:10;8249:24;8245:505;;;-1:-1:-1;;;;;8293:17:450;;;8289:221;;-1:-1:-1;;;;;8388:17:450;;8331;8388;;;:12;:17;;;;;8331;;8371:54;;8407:9;8418:6;8371:16;:54::i;:::-;8330:95;;;;8469:3;-1:-1:-1;;;;;8448:47:450;;8474:9;8485;8448:47;;;;;;6718:25:641;;;6774:2;6759:18;;6752:34;6706:2;6691:18;;6544:248;8448:47:450;;;;;;;;8312:198;;8289:221;-1:-1:-1;;;;;8528:17:450;;;8524:216;;-1:-1:-1;;;;;8623:17:450;;8566;8623;;;:12;:17;;;;;8566;;8606:49;;8642:4;8648:6;8606:16;:49::i;:::-;8565:90;;;;8699:3;-1:-1:-1;;;;;8678:47:450;;8704:9;8715;8678:47;;;;;;6718:25:641;;;6774:2;6759:18;;6752:34;6706:2;6691:18;;6544:248;8678:47:450;;;;;;;;8547:193;;8129:627;;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;:::-;703:173;;;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;20426:160:273:-;20551:28;20563:7;20572:6;20551:11;:28::i;4822:118:477:-;4889:7;4915:3;:11;;4927:5;4915:18;;;;;;;;:::i;:::-;;;;;;;;;4908:25;;4822:118;;;;:::o;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;39437:25:641;;;39510:4;39498:17;;39478:18;;;39471:45;;;;39532:18;;;39525:34;;;39575:18;;;39568:34;;;6603:24:469;;39409:19:641;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;39947:2:641;788:34:469;;;39929:21:641;39986:2;39966:18;;;39959:30;-1:-1:-1;;;40005:18:641;;;39998:54;40069:18;;788:34:469;39745:348:641;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;40300:2:641;903:41:469;;;40282:21:641;40339:2;40319:18;;;40312:30;40378:33;40358:18;;;40351:61;40429:18;;903:41:469;40098:355:641;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;40660:2:641;1020:44:469;;;40642:21:641;40699:2;40679:18;;;40672:30;40738:34;40718:18;;;40711:62;-1:-1:-1;;;40789:18:641;;;40782:32;40831:19;;1020:44:469;40458:398:641;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;41063:2:641;1140:44:469;;;41045:21:641;41102:2;41082:18;;;41075:30;41141:34;41121:18;;;41114:62;-1:-1:-1;;;41192:18:641;;;41185:32;41234:19;;1140:44:469;40861:398:641;2459:297:470;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;1663:441:467:-;1738:13;1763:19;1795:10;1799:6;1795:1;:10;:::i;:::-;:14;;1808:1;1795:14;:::i;:::-;-1:-1:-1;;;;;1785:25:467;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1785:25:467;;1763:47;;-1:-1:-1;;;1820:6:467;1827:1;1820:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1820:15:467;;;;;;;;;-1:-1:-1;;;1845:6:467;1852:1;1845:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1845:15:467;;;;;;;;-1:-1:-1;1875:9:467;1887:10;1891:6;1887:1;:10;:::i;:::-;:14;;1900:1;1887:14;:::i;:::-;1875:26;;1870:132;1907:1;1903;:5;1870:132;;;-1:-1:-1;;;1954:5:467;1962:3;1954:11;1941:25;;;;;;;:::i;:::-;;;;1929:6;1936:1;1929:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1929:37:467;;;;;;;;-1:-1:-1;1990:1:467;1980:11;;;;;1910:3;;;:::i;:::-;;;1870:132;;;-1:-1:-1;2019:10:467;;2011:55;;;;-1:-1:-1;;;2011:55:467;;41466:2:641;2011:55:467;;;41448:21:641;;;41485:18;;;41478:30;41544:34;41524:18;;;41517:62;41596:18;;2011:55:467;41264:356:641;7332:254:450;7523:56;7540:15;7550:4;7540:9;:15::i;:::-;7557:13;7567:2;7557:9;:13::i;:::-;7572:6;7523:16;:56::i;2124:404:477:-;2187:4;4261:19;;;:12;;;:19;;;;;;2203:319;;-1:-1:-1;2245:23:477;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2457:11;;2203:319;-1:-1:-1;2506:5:477;2499:12;;2696:1388;2762:4;2899:19;;;:12;;;:19;;;;;;2933:15;;2929:1149;;3302:21;3326:14;3339:1;3326:10;:14;:::i;:::-;3374:18;;3302:38;;-1:-1:-1;3354:17:477;;3374:22;;3395:1;;3374:22;:::i;:::-;3354:42;;3428:13;3415:9;:26;3411:398;;3461:17;3481:3;:11;;3493:9;3481:22;;;;;;;;:::i;:::-;;;;;;;;;3461:42;;3632:9;3603:3;:11;;3615:13;3603:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3715:23;;;:12;;;:23;;;;;:36;;;3411:398;3887:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3979:3;:12;;:19;3992:5;3979:19;;;;;;;;;;;3972:26;;;4020:4;4013:11;;;;;;;2929:1149;4062:5;4055:12;;;;;9448:576:447;-1:-1:-1;;;;;9531:21:447;;9523:67;;;;-1:-1:-1;;;9523:67:447;;41959:2:641;9523:67:447;;;41941:21:641;41998:2;41978:18;;;41971:30;42037:34;42017:18;;;42010:62;-1:-1:-1;;;42088:18:641;;;42081:31;42129:19;;9523:67:447;41757:397:641;9523:67:447;9601:49;9622:7;9639:1;9643:6;9601:20;:49::i;:::-;-1:-1:-1;;;;;9686:18:447;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:447;;42361:2:641;9714:71:447;;;42343:21:641;42400:2;42380:18;;;42373:30;42439:34;42419:18;;;42412:62;-1:-1:-1;;;42490:18:641;;;42483:32;42532:19;;9714:71:447;42159:398:641;9714:71:447;-1:-1:-1;;;;;9819:18:447;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:447;;643:25:641;;;9947:1:447;;-1:-1:-1;;;;;9921:37:447;;;-1:-1:-1;;;;;;;;;;;9921:37:447;631:2:641;616:18;9921:37:447;;;;;;;9969:48;9989:7;10006:1;10010:6;9969:19;:48::i;9534:101:450:-;9597:7;9623:5;9627:1;9623;:5;:::i;8762:664::-;8994:12;;8932:17;;;;9028:8;;:35;;9043:5;9049:7;9055:1;9049:3;:7;:::i;:::-;9043:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;9043:20:450;;-1:-1:-1;;;;;9043:20:450;9028:35;;;9039:1;9028:35;-1:-1:-1;;;;;9016:47:450;;;9085:20;9088:9;9099:5;9085:2;:20;;:::i;:::-;9073:32;;9126:1;9120:3;:7;:51;;;;-1:-1:-1;9159:12:450;9131:5;9137:7;9143:1;9137:3;:7;:::i;:::-;9131:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;9120:51;9116:304;;;9210:40;9240:9;9210:29;:40::i;:::-;9187:5;9193:7;9199:1;9193:3;:7;:::i;:::-;9187:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:63;;;;;-1:-1:-1;;;;;9187:63:450;;;;;-1:-1:-1;;;;;9187:63:450;;;;;;9116:304;;;9281:5;9292:116;;;;;;;;9315:42;9344:12;9315:28;:42::i;:::-;9292:116;;;;;;9366:40;9396:9;9366:29;:40::i;:::-;-1:-1:-1;;;;;9292:116:450;;;;;;9281:128;;;;;;;-1:-1:-1;9281:128:450;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9281:128:450;;;;;;;;;;;;9116:304;8970:456;8762:664;;;;;;:::o;9432:96::-;9490:7;9516:5;9520:1;9516;:5;:::i;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;42974:2:641;2758:48:277;;;42956:21:641;43013:2;42993:18;;;42986:30;-1:-1:-1;;;43032:18:641;;;43025:58;43100:18;;2758:48:277;42772:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;6635:285:450:-;6719:28;6731:7;6740:6;6719:11;:28::i;:::-;3668:12:447;;-1:-1:-1;;;;;;6765:29:450;6757:90;;;;-1:-1:-1;;;6757:90:450;;43331:2:641;6757:90:450;;;43313:21:641;43370:2;43350:18;;;43343:30;43409:34;43389:18;;;43382:62;-1:-1:-1;;;43460:18:641;;;43453:46;43516:19;;6757:90:450;43129:412:641;6757:90:450;6858:55;6875:23;6900:4;6906:6;6858:16;:55::i;2762:192:474:-;2819:7;-1:-1:-1;;;;;2846:26:474;;;2838:78;;;;-1:-1:-1;;;2838:78:474;;43748:2:641;2838:78:474;;;43730:21:641;43787:2;43767:18;;;43760:30;43826:34;43806:18;;;43799:62;-1:-1:-1;;;43877:18:641;;;43870:37;43924:19;;2838:78:474;43546:403:641;729:205:321;868:58;;-1:-1:-1;;;;;44146:32:641;;868:58:321;;;44128:51:641;44195:18;;;44188:34;;;841:86:321;;861:5;;-1:-1:-1;;;891:23:321;44101:18:641;;868:58:321;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;44491:15:641;;;1105:68:321;;;44473:34:641;44543:15;;44523:18;;;44516:43;44575:18;;;44568:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;44408:18:641;;1105:68:321;44233:375:641;8739:389:447;-1:-1:-1;;;;;8822:21:447;;8814:65;;;;-1:-1:-1;;;8814:65:447;;44815:2:641;8814:65:447;;;44797:21:641;44854:2;44834:18;;;44827:30;44893:33;44873:18;;;44866:61;44944:18;;8814:65:447;44613:355:641;8814:65:447;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:447;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:447;;643:25:641;;;-1:-1:-1;;;;;9025:37:447;;;9042:1;;-1:-1:-1;;;;;;;;;;;9025:37:447;631:2:641;616:18;9025:37:447;;;;;;;9073:48;9101:1;9105:7;9114:6;9073:19;:48::i;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;45425:2:641;3839:85:321;;;45407:21:641;45464:2;45444:18;;;45437:30;45503:34;45483:18;;;45476:62;-1:-1:-1;;;45554:18:641;;;45547:40;45604:19;;3839:85:321;45223:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:281:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:281;;45836:2:641;5103:81:281;;;45818:21:641;45875:2;45855:18;;;45848:30;45914:34;45894:18;;;45887:62;-1:-1:-1;;;45965:18:641;;;45958:36;46011:19;;5103:81:281;45634:402:641;5103:81:281;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;46243:2:641;5194:60:281;;;46225:21:641;46282:2;46262:18;;;46255:30;46321:31;46301:18;;;46294:59;46370:18;;5194:60:281;46041:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:641;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:641;;209:43;;199:71;;266:1;263;256:12;679:258;751:1;761:113;775:6;772:1;769:13;761:113;;;851:11;;;845:18;832:11;;;825:39;797:2;790:10;761:113;;;892:6;889:1;886:13;883:48;;;-1:-1:-1;;927:1:641;909:16;;902:27;679:258::o;942:::-;984:3;1022:5;1016:12;1049:6;1044:3;1037:19;1065:63;1121:6;1114:4;1109:3;1105:14;1098:4;1091:5;1087:16;1065:63;:::i;:::-;1182:2;1161:15;-1:-1:-1;;1157:29:641;1148:39;;;;1189:4;1144:50;;942:258;-1:-1:-1;;942:258:641:o;1205:220::-;1354:2;1343:9;1336:21;1317:4;1374:45;1415:2;1404:9;1400:18;1392:6;1374:45;:::i;1638:131::-;-1:-1:-1;;;;;1713:31:641;;1703:42;;1693:70;;1759:1;1756;1749:12;1774:134;1842:20;;1871:31;1842:20;1871:31;:::i;:::-;1774:134;;;:::o;1913:315::-;1981:6;1989;2042:2;2030:9;2021:7;2017:23;2013:32;2010:52;;;2058:1;2055;2048:12;2010:52;2097:9;2084:23;2116:31;2141:5;2116:31;:::i;:::-;2166:5;2218:2;2203:18;;;;2190:32;;-1:-1:-1;;;1913:315:641:o;2233:456::-;2310:6;2318;2326;2379:2;2367:9;2358:7;2354:23;2350:32;2347:52;;;2395:1;2392;2385:12;2347:52;2434:9;2421:23;2453:31;2478:5;2453:31;:::i;:::-;2503:5;-1:-1:-1;2560:2:641;2545:18;;2532:32;2573:33;2532:32;2573:33;:::i;:::-;2233:456;;2625:7;;-1:-1:-1;;;2679:2:641;2664:18;;;;2651:32;;2233:456::o;2694:180::-;2753:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;-1:-1:-1;2845:23:641;;2694:180;-1:-1:-1;2694:180:641:o;3061:315::-;3129:6;3137;3190:2;3178:9;3169:7;3165:23;3161:32;3158:52;;;3206:1;3203;3196:12;3158:52;3242:9;3229:23;3219:33;;3302:2;3291:9;3287:18;3274:32;3315:31;3340:5;3315:31;:::i;:::-;3365:5;3355:15;;;3061:315;;;;;:::o;3755:247::-;3814:6;3867:2;3855:9;3846:7;3842:23;3838:32;3835:52;;;3883:1;3880;3873:12;3835:52;3922:9;3909:23;3941:31;3966:5;3941:31;:::i;4927:367::-;4990:8;5000:6;5054:3;5047:4;5039:6;5035:17;5031:27;5021:55;;5072:1;5069;5062:12;5021:55;-1:-1:-1;5095:20:641;;-1:-1:-1;;;;;5127:30:641;;5124:50;;;5170:1;5167;5160:12;5124:50;5207:4;5199:6;5195:17;5183:29;;5267:3;5260:4;5250:6;5247:1;5243:14;5235:6;5231:27;5227:38;5224:47;5221:67;;;5284:1;5281;5274:12;5299:920;5430:6;5438;5446;5454;5462;5470;5478;5531:3;5519:9;5510:7;5506:23;5502:33;5499:53;;;5548:1;5545;5538:12;5499:53;5587:9;5574:23;5606:31;5631:5;5606:31;:::i;:::-;5656:5;-1:-1:-1;5708:2:641;5693:18;;5680:32;;-1:-1:-1;5764:2:641;5749:18;;5736:32;5777:33;5736:32;5777:33;:::i;:::-;5829:7;-1:-1:-1;5883:2:641;5868:18;;5855:32;;-1:-1:-1;5938:3:641;5923:19;;5910:33;-1:-1:-1;;;;;5955:30:641;;5952:50;;;5998:1;5995;5988:12;5952:50;6037:70;6099:7;6090:6;6079:9;6075:22;6037:70;:::i;:::-;5299:920;;;;-1:-1:-1;5299:920:641;;;;;;6208:3;6193:19;;;6180:33;;5299:920;-1:-1:-1;;;;5299:920:641:o;6797:248::-;6865:6;6873;6926:2;6914:9;6905:7;6901:23;6897:32;6894:52;;;6942:1;6939;6932:12;6894:52;-1:-1:-1;;6965:23:641;;;7035:2;7020:18;;;7007:32;;-1:-1:-1;6797:248:641:o;7050:592::-;7121:6;7129;7182:2;7170:9;7161:7;7157:23;7153:32;7150:52;;;7198:1;7195;7188:12;7150:52;7238:9;7225:23;-1:-1:-1;;;;;7308:2:641;7300:6;7297:14;7294:34;;;7324:1;7321;7314:12;7294:34;7362:6;7351:9;7347:22;7337:32;;7407:7;7400:4;7396:2;7392:13;7388:27;7378:55;;7429:1;7426;7419:12;7378:55;7469:2;7456:16;7495:2;7487:6;7484:14;7481:34;;;7511:1;7508;7501:12;7481:34;7556:7;7551:2;7542:6;7538:2;7534:15;7530:24;7527:37;7524:57;;;7577:1;7574;7567:12;7524:57;7608:2;7600:11;;;;;7630:6;;-1:-1:-1;7050:592:641;;-1:-1:-1;;;;7050:592:641:o;7647:448::-;7744:6;7752;7805:2;7793:9;7784:7;7780:23;7776:32;7773:52;;;7821:1;7818;7811:12;7773:52;7861:9;7848:23;-1:-1:-1;;;;;7886:6:641;7883:30;7880:50;;;7926:1;7923;7916:12;7880:50;7965:70;8027:7;8018:6;8007:9;8003:22;7965:70;:::i;:::-;8054:8;;7939:96;;-1:-1:-1;7647:448:641;-1:-1:-1;;;;7647:448:641:o;8100:801::-;8260:4;8289:2;8329;8318:9;8314:18;8359:2;8348:9;8341:21;8382:6;8417;8411:13;8448:6;8440;8433:22;8486:2;8475:9;8471:18;8464:25;;8548:2;8538:6;8535:1;8531:14;8520:9;8516:30;8512:39;8498:53;;8586:2;8578:6;8574:15;8607:1;8617:255;8631:6;8628:1;8625:13;8617:255;;;8724:2;8720:7;8708:9;8700:6;8696:22;8692:36;8687:3;8680:49;8752:40;8785:6;8776;8770:13;8752:40;:::i;:::-;8742:50;-1:-1:-1;8850:12:641;;;;8815:15;;;;8653:1;8646:9;8617:255;;;-1:-1:-1;8889:6:641;;8100:801;-1:-1:-1;;;;;;;8100:801:641:o;8906:778::-;9028:6;9036;9044;9052;9060;9068;9121:3;9109:9;9100:7;9096:23;9092:33;9089:53;;;9138:1;9135;9128:12;9089:53;9174:9;9161:23;9151:33;;9234:2;9223:9;9219:18;9206:32;9247:31;9272:5;9247:31;:::i;:::-;9297:5;-1:-1:-1;9349:2:641;9334:18;;9321:32;;-1:-1:-1;9404:2:641;9389:18;;9376:32;-1:-1:-1;;;;;9420:30:641;;9417:50;;;9463:1;9460;9453:12;9417:50;9502:70;9564:7;9555:6;9544:9;9540:22;9502:70;:::i;:::-;8906:778;;;;-1:-1:-1;8906:778:641;;;;;9673:3;9658:19;;;9645:33;;8906:778;-1:-1:-1;;;;8906:778:641:o;9952:118::-;10038:5;10031:13;10024:21;10017:5;10014:32;10004:60;;10060:1;10057;10050:12;10075:730;10176:6;10184;10192;10200;10208;10216;10269:3;10257:9;10248:7;10244:23;10240:33;10237:53;;;10286:1;10283;10276:12;10237:53;10322:9;10309:23;10299:33;;10382:2;10371:9;10367:18;10354:32;10395:31;10420:5;10395:31;:::i;:::-;10445:5;-1:-1:-1;10497:2:641;10482:18;;10469:32;;-1:-1:-1;10553:2:641;10538:18;;10525:32;10566:33;10525:32;10566:33;:::i;:::-;10618:7;-1:-1:-1;10672:3:641;10657:19;;10644:33;;-1:-1:-1;10729:3:641;10714:19;;10701:33;10743:30;10701:33;10743:30;:::i;:::-;10792:7;10782:17;;;10075:730;;;;;;;;:::o;10810:156::-;10876:20;;10936:4;10925:16;;10915:27;;10905:55;;10956:1;10953;10946:12;10971:592;11073:6;11081;11089;11097;11105;11113;11166:3;11154:9;11145:7;11141:23;11137:33;11134:53;;;11183:1;11180;11173:12;11134:53;11222:9;11209:23;11241:31;11266:5;11241:31;:::i;:::-;11291:5;-1:-1:-1;11343:2:641;11328:18;;11315:32;;-1:-1:-1;11394:2:641;11379:18;;11366:32;;-1:-1:-1;11417:36:641;11449:2;11434:18;;11417:36;:::i;:::-;11407:46;;11500:3;11489:9;11485:19;11472:33;11462:43;;11552:3;11541:9;11537:19;11524:33;11514:43;;10971:592;;;;;;;;:::o;11858:734::-;11969:6;11977;11985;11993;12001;12009;12017;12070:3;12058:9;12049:7;12045:23;12041:33;12038:53;;;12087:1;12084;12077:12;12038:53;12126:9;12113:23;12145:31;12170:5;12145:31;:::i;:::-;12195:5;-1:-1:-1;12252:2:641;12237:18;;12224:32;12265:33;12224:32;12265:33;:::i;:::-;12317:7;-1:-1:-1;12371:2:641;12356:18;;12343:32;;-1:-1:-1;12422:2:641;12407:18;;12394:32;;-1:-1:-1;12445:37:641;12477:3;12462:19;;12445:37;:::i;:::-;12435:47;;12529:3;12518:9;12514:19;12501:33;12491:43;;12581:3;12570:9;12566:19;12553:33;12543:43;;11858:734;;;;;;;;;;:::o;12597:388::-;12665:6;12673;12726:2;12714:9;12705:7;12701:23;12697:32;12694:52;;;12742:1;12739;12732:12;12694:52;12781:9;12768:23;12800:31;12825:5;12800:31;:::i;:::-;12850:5;-1:-1:-1;12907:2:641;12892:18;;12879:32;12920:33;12879:32;12920:33;:::i;12990:127::-;13051:10;13046:3;13042:20;13039:1;13032:31;13082:4;13079:1;13072:15;13106:4;13103:1;13096:15;13122:275;13193:2;13187:9;13258:2;13239:13;;-1:-1:-1;;13235:27:641;13223:40;;-1:-1:-1;;;;;13278:34:641;;13314:22;;;13275:62;13272:88;;;13340:18;;:::i;:::-;13376:2;13369:22;13122:275;;-1:-1:-1;13122:275:641:o;13402:531::-;13445:5;13498:3;13491:4;13483:6;13479:17;13475:27;13465:55;;13516:1;13513;13506:12;13465:55;13552:6;13539:20;-1:-1:-1;;;;;13574:2:641;13571:26;13568:52;;;13600:18;;:::i;:::-;13644:55;13687:2;13668:13;;-1:-1:-1;;13664:27:641;13693:4;13660:38;13644:55;:::i;:::-;13724:2;13715:7;13708:19;13770:3;13763:4;13758:2;13750:6;13746:15;13742:26;13739:35;13736:55;;;13787:1;13784;13777:12;13736:55;13852:2;13845:4;13837:6;13833:17;13826:4;13817:7;13813:18;13800:55;13900:1;13875:16;;;13893:4;13871:27;13864:38;;;;13879:7;13402:531;-1:-1:-1;;;13402:531:641:o;13938:787::-;13992:5;14045:3;14038:4;14030:6;14026:17;14022:27;14012:55;;14063:1;14060;14053:12;14012:55;14099:6;14086:20;14125:4;-1:-1:-1;;;;;14144:2:641;14141:26;14138:52;;;14170:18;;:::i;:::-;14216:2;14213:1;14209:10;14239:28;14263:2;14259;14255:11;14239:28;:::i;:::-;14301:15;;;14371;;;14367:24;;;14332:12;;;;14403:15;;;14400:35;;;14431:1;14428;14421:12;14400:35;14467:2;14459:6;14455:15;14444:26;;14479:217;14495:6;14490:3;14487:15;14479:217;;;14575:3;14562:17;14592:31;14617:5;14592:31;:::i;:::-;14636:18;;14512:12;;;;14674;;;;14479:217;;14730:1264;14907:6;14915;14923;14931;14939;14947;14955;14963;15016:3;15004:9;14995:7;14991:23;14987:33;14984:53;;;15033:1;15030;15023:12;14984:53;15056:29;15075:9;15056:29;:::i;:::-;15046:39;;15136:2;15125:9;15121:18;15108:32;-1:-1:-1;;;;;15200:2:641;15192:6;15189:14;15186:34;;;15216:1;15213;15206:12;15186:34;15239:50;15281:7;15272:6;15261:9;15257:22;15239:50;:::i;:::-;15229:60;;15342:2;15331:9;15327:18;15314:32;15298:48;;15371:2;15361:8;15358:16;15355:36;;;15387:1;15384;15377:12;15355:36;15410:52;15454:7;15443:8;15432:9;15428:24;15410:52;:::i;:::-;15400:62;;15515:2;15504:9;15500:18;15487:32;15471:48;;15544:2;15534:8;15531:16;15528:36;;;15560:1;15557;15550:12;15528:36;15583:52;15627:7;15616:8;15605:9;15601:24;15583:52;:::i;:::-;15573:62;;15688:3;15677:9;15673:19;15660:33;15644:49;;15718:2;15708:8;15705:16;15702:36;;;15734:1;15731;15724:12;15702:36;;15757:63;15812:7;15801:8;15790:9;15786:24;15757:63;:::i;:::-;15747:73;;;15839:39;15873:3;15862:9;15858:19;15839:39;:::i;:::-;15829:49;;15897:39;15931:3;15920:9;15916:19;15897:39;:::i;:::-;15887:49;;15983:3;15972:9;15968:19;15955:33;15945:43;;14730:1264;;;;;;;;;;;:::o;15999:785::-;16126:6;16134;16142;16195:2;16183:9;16174:7;16170:23;16166:32;16163:52;;;16211:1;16208;16201:12;16163:52;16251:9;16238:23;-1:-1:-1;;;;;16321:2:641;16313:6;16310:14;16307:34;;;16337:1;16334;16327:12;16307:34;16375:6;16364:9;16360:22;16350:32;;16420:7;16413:4;16409:2;16405:13;16401:27;16391:55;;16442:1;16439;16432:12;16391:55;16482:2;16469:16;16508:2;16500:6;16497:14;16494:34;;;16524:1;16521;16514:12;16494:34;16579:7;16572:4;16562:6;16559:1;16555:14;16551:2;16547:23;16543:34;16540:47;16537:67;;;16600:1;16597;16590:12;16537:67;16631:4;16623:13;;;;-1:-1:-1;16655:6:641;-1:-1:-1;;16696:20:641;;16683:34;16726:28;16683:34;16726:28;:::i;:::-;16773:5;16763:15;;;15999:785;;;;;:::o;16789:419::-;16856:6;16864;16917:2;16905:9;16896:7;16892:23;16888:32;16885:52;;;16933:1;16930;16923:12;16885:52;16972:9;16959:23;16991:31;17016:5;16991:31;:::i;:::-;17041:5;-1:-1:-1;17098:2:641;17083:18;;17070:32;17146:10;17133:24;;17121:37;;17111:65;;17172:1;17169;17162:12;17568:380;17647:1;17643:12;;;;17690;;;17711:61;;17765:4;17757:6;17753:17;17743:27;;17711:61;17818:2;17810:6;17807:14;17787:18;17784:38;17781:161;;;17864:10;17859:3;17855:20;17852:1;17845:31;17899:4;17896:1;17889:15;17927:4;17924:1;17917:15;18711:127;18772:10;18767:3;18763:20;18760:1;18753:31;18803:4;18800:1;18793:15;18827:4;18824:1;18817:15;18843:128;18883:3;18914:1;18910:6;18907:1;18904:13;18901:39;;;18920:18;;:::i;:::-;-1:-1:-1;18956:9:641;;18843:128::o;18976:355::-;19178:2;19160:21;;;19217:2;19197:18;;;19190:30;19256:33;19251:2;19236:18;;19229:61;19322:2;19307:18;;18976:355::o;20027:544::-;20234:2;20223:9;20216:21;20197:4;20260:45;20301:2;20290:9;20286:18;20278:6;20260:45;:::i;:::-;20353:9;20345:6;20341:22;20336:2;20325:9;20321:18;20314:50;20388:6;20380;20373:22;20442:6;20434;20429:2;20421:6;20417:15;20404:45;20495:1;20490:2;20481:6;20473;20469:19;20465:28;20458:39;20562:2;20555;20551:7;20546:2;20538:6;20534:15;20530:29;20522:6;20518:42;20514:51;20506:59;;;20027:544;;;;;;:::o;20576:125::-;20616:4;20644:1;20641;20638:8;20635:34;;;20649:18;;:::i;:::-;-1:-1:-1;20686:9:641;;20576:125::o;20706:127::-;20767:10;20762:3;20758:20;20755:1;20748:31;20798:4;20795:1;20788:15;20822:4;20819:1;20812:15;21244:521;21321:4;21327:6;21387:11;21374:25;21481:2;21477:7;21466:8;21450:14;21446:29;21442:43;21422:18;21418:68;21408:96;;21500:1;21497;21490:12;21408:96;21527:33;;21579:20;;;-1:-1:-1;;;;;;21611:30:641;;21608:50;;;21654:1;21651;21644:12;21608:50;21687:4;21675:17;;-1:-1:-1;21718:14:641;21714:27;;;21704:38;;21701:58;;;21755:1;21752;21745:12;21770:135;21809:3;-1:-1:-1;;21830:17:641;;21827:43;;;21850:18;;:::i;:::-;-1:-1:-1;21897:1:641;21886:13;;21770:135::o;26544:136::-;26583:3;26611:5;26601:39;;26620:18;;:::i;:::-;-1:-1:-1;;;26656:18:641;;26544:136::o;29732:799::-;29911:5;29898:19;29892:4;29885:33;29972:2;29965:5;29961:14;29948:28;29944:1;29938:4;29934:12;29927:50;30031:2;30024:5;30020:14;30007:28;30003:1;29997:4;29993:12;29986:50;30090:2;30083:5;30079:14;30066:28;30062:1;30056:4;30052:12;30045:50;30149:3;30142:5;30138:15;30125:29;30121:1;30115:4;30111:12;30104:51;30209:3;30202:5;30198:15;30185:29;30181:1;30175:4;30171:12;30164:51;30269:3;30262:5;30258:15;30245:29;30241:1;30235:4;30231:12;30224:51;30312:1;30306:4;30302:12;30362:3;30355:5;30351:15;30338:29;30376:33;30401:7;30376:33;:::i;:::-;30444:17;;-1:-1:-1;;;;;;30440:48:641;-1:-1:-1;;;;;30490:33:641;;;;30437:87;30418:107;;-1:-1:-1;;29732:799:641:o;30536:1406::-;30785:2;30837:21;;;30810:18;;;30893:22;;;30756:4;;30934:2;30952:18;;;30993:6;30756:4;31027:889;31041:6;31038:1;31035:13;31027:889;;;31102:20;;31090:33;;31170:15;;;31157:29;31143:12;;;31136:51;31234:15;;;31221:29;31207:12;;;31200:51;31274:4;31325:15;;;31312:29;31298:12;;;31291:51;31365:4;31416:15;;;31403:29;31389:12;;;31382:51;31456:4;31507:15;;;31494:29;31480:12;;;31473:51;31547:4;31598:15;;;31585:29;31571:12;;;31564:51;31638:4;31681:15;;;31668:29;31710:31;31668:29;31710:31;:::i;:::-;-1:-1:-1;;;;;31775:31:641;31761:12;;;31754:53;31830:6;31856:12;;;;31891:15;;;;;31803:1;31056:9;31027:889;;;-1:-1:-1;31933:3:641;;30536:1406;-1:-1:-1;;;;;;;30536:1406:641:o;34737:168::-;34777:7;34843:1;34839;34835:6;34831:14;34828:1;34825:21;34820:1;34813:9;34806:17;34802:45;34799:71;;;34850:18;;:::i;:::-;-1:-1:-1;34890:9:641;;34737:168::o;34910:217::-;34950:1;34976;34966:132;;35020:10;35015:3;35011:20;35008:1;35001:31;35055:4;35052:1;35045:15;35083:4;35080:1;35073:15;34966:132;-1:-1:-1;35112:9:641;;34910:217::o;36235:274::-;36364:3;36402:6;36396:13;36418:53;36464:6;36459:3;36452:4;36444:6;36440:17;36418:53;:::i;:::-;36487:16;;;;;36235:274;-1:-1:-1;;36235:274:641:o;36766:407::-;36968:2;36950:21;;;37007:2;36987:18;;;36980:30;37046:34;37041:2;37026:18;;37019:62;-1:-1:-1;;;37112:2:641;37097:18;;37090:41;37163:3;37148:19;;36766:407::o;37178:786::-;-1:-1:-1;;;37584:3:641;37577:38;37559:3;37644:6;37638:13;37660:62;37715:6;37710:2;37705:3;37701:12;37694:4;37686:6;37682:17;37660:62;:::i;:::-;-1:-1:-1;;;37781:2:641;37741:16;;;37773:11;;;37766:40;37831:13;;37853:63;37831:13;37902:2;37894:11;;37887:4;37875:17;;37853:63;:::i;:::-;37936:17;37955:2;37932:26;;37178:786;-1:-1:-1;;;;37178:786:641:o;39613:127::-;39674:10;39669:3;39665:20;39662:1;39655:31;39705:4;39702:1;39695:15;39729:4;39726:1;39719:15;41625:127;41686:10;41681:3;41677:20;41674:1;41667:31;41717:4;41714:1;41707:15;41741:4;41738:1;41731:15;44973:245;45040:6;45093:2;45081:9;45072:7;45068:23;45064:32;45061:52;;;45109:1;45106;45099:12;45061:52;45141:9;45135:16;45160:28;45182:5;45160:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "claim(address,uint256,address,uint256,bytes32[],uint256)": "7a5a8e7e",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getActiveClaimConditionId()": "c68907de",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getClaimTimestamp(uint256,address)": "86ee745d",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPlatformFeeInfo()": "d45573f6",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getVotes(address)": "9ab24eb0",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,address,uint256)": "dfad80a6",
    "isTrustedForwarder(address)": "572b6c05",
    "maxTotalSupply()": "2ab4d052",
    "maxWalletClaimCount()": "05981769",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)": "e23b8164",
    "setContractURI(string)": "938e3d7b",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setMaxWalletClaimCount(uint256)": "50867957",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setWalletClaimCount(address,uint256)": "3ea33f29",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,bool)": "afb82916",
    "verifyClaimMerkleProof(uint256,address,uint256,bytes32[],uint256)": "af3be890",
    "walletClaimCount(address)": "4352ab41"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MaxWalletClaimCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"WalletClaimCountUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_proofMaxQuantityPerTransaction\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getClaimTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastClaimTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextValidClaimTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"_phases\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletClaimCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"setWalletClaimCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verifyMaxQuantityPerTransaction\",\"type\":\"bool\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_proofMaxQuantityPerTransaction\",\"type\":\"uint256\"}],\"name\":\"verifyClaimMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validMerkleProof\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"merkleProofIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"claim(address,uint256,address,uint256,bytes32[],uint256)\":{\"details\":\"Lets an account claim tokens.\"},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getClaimTimestamp(uint256,address)\":{\"details\":\"Returns the timestamp for when a claimer is eligible for claiming tokens again.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,address,uint256)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)\":{\"details\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setMaxTotalSupply(uint256)\":{\"details\":\"Set global maximum supply. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value.\"},\"setMaxWalletClaimCount(uint256)\":{\"details\":\"Set a maximum number of tokens that can be claimed by any wallet. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value.\"},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Lets a contract admin update the platform fee recipient and bps\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Lets a contract admin set the recipient for all primary sales.\"},\"setWalletClaimCount(address,uint256)\":{\"details\":\"Lets a contract admin set a claim count for a wallet.\"},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verifyClaim(uint256,address,uint256,address,uint256,bool)\":{\"details\":\"Checks a request to claim tokens against the active claim condition's criteria.\"},\"verifyClaimMerkleProof(uint256,address,uint256,bytes32[],uint256)\":{\"details\":\"Checks whether a claimer meets the claim condition's allowlist criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"},\"claimCondition\":{\"details\":\"The set of all claim conditions, at any given moment.\"},\"contractURI\":{\"details\":\"Contract level metadata.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of tokens.\"},\"maxWalletClaimCount\":{\"details\":\"The max number of tokens a wallet can claim.\"},\"platformFeeBps\":{\"details\":\"The % of primary sales collected as platform fees.\"},\"platformFeeRecipient\":{\"details\":\"The address that receives all platform fees from all sales.\"},\"primarySaleRecipient\":{\"details\":\"The address that receives all primary sales value.\"},\"walletClaimCount\":{\"details\":\"Mapping from address => number of tokens a wallet has claimed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/pre-builts/DropERC20_V2.sol\":\"DropERC20_V2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/interfaces/IThirdwebContract.sol\":{\"keccak256\":\"0x98ea2478723e7fd94c44f498f78e75076d306aa716ff255adf55bda2822c1e78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bebec94a0c258e86877260bbecdd0b5b6052ec5de16e39f3a4b2f0ce4c0134e\",\"dweb:/ipfs/QmdVLqwwSBPiTbpLdfkcZDhHMNd1GaKgAKPE2fVk5WibrK\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/legacy-contracts/interfaces/drop/IDropClaimCondition_V2.sol\":{\"keccak256\":\"0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3\",\"dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr\"]},\"contracts/legacy-contracts/interfaces/drop/IDropERC20_V2.sol\":{\"keccak256\":\"0x650e674408c7f34bd83a38479f2fc56b2501bda7d9b62b4c174565be8d6cdbe9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://373c6cb6983d94c92abf3cc47b677ede94638ada4663385f932aba6072e07efe\",\"dweb:/ipfs/QmSxUitgtfuLztV3TW6CWRmQDzYj271snVseFBndzjDkde\"]},\"contracts/legacy-contracts/pre-builts/DropERC20_V2.sol\":{\"keccak256\":\"0xa6355ca826c24d05761d4895b7a0d395f651a8e33257a1be748d37a1d81a1174\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d2ab8e1315c58fcfb2ef0bcbd6a081b2494a9aacf69b4012d3b9342848ccc428\",\"dweb:/ipfs/QmQb9Xbnc4evjEdwEgGWTqB4v6mXpyXmy3bjXUJaRFy9QB\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/FeeType.sol\":{\"keccak256\":\"0xf796f4f6126beb66821215c7bd0477c9aa39c986ba44a2001158f03e21b49381\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2bf468022e505664a9e256cd01b62960542ee299c0dadfb567c5204d28b45657\",\"dweb:/ipfs/QmQUBaCm6SnaPgNxHEvx3DwmqeGNPvYsY4goxTHCzoMspP\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02\",\"dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0\",\"dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol\":{\"keccak256\":\"0x266cee2afdf743513e8022da480684ed0c63147f469a766d499c7ae3c518e276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://639f78e22e3da7b4eaa472a31b719cb10f182023d0b1469601e4e75f0bb99e95\",\"dweb:/ipfs/QmWKbk7nneevjSKSAcwCjaDQqwFH2uiZ5j7Nh2PxFPcGqt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IDropClaimCondition_V2.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxWalletClaimCountUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WalletClaimCountUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "_proofMaxQuantityPerTransaction",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IDropClaimCondition_V2.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastClaimTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextValidClaimTimestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWalletClaimCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDropClaimCondition_V2.ClaimCondition[]",
              "name": "_phases",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerTransaction",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "waitTimeInSecondsBetweenClaims",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_count",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxWalletClaimCount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_count",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWalletClaimCount"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verifyMaxQuantityPerTransaction",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "_proofMaxQuantityPerTransaction",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaimMerkleProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "validMerkleProof",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "merkleProofIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "walletClaimCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "claim(address,uint256,address,uint256,bytes32[],uint256)": {
            "details": "Lets an account claim tokens."
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getClaimTimestamp(uint256,address)": {
            "details": "Returns the timestamp for when a claimer is eligible for claiming tokens again."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,address,uint256)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)": {
            "details": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Set global maximum supply. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value."
          },
          "setMaxWalletClaimCount(uint256)": {
            "details": "Set a maximum number of tokens that can be claimed by any wallet. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Lets a contract admin update the platform fee recipient and bps"
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Lets a contract admin set the recipient for all primary sales."
          },
          "setWalletClaimCount(address,uint256)": {
            "details": "Lets a contract admin set a claim count for a wallet."
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,bool)": {
            "details": "Checks a request to claim tokens against the active claim condition's criteria."
          },
          "verifyClaimMerkleProof(uint256,address,uint256,bytes32[],uint256)": {
            "details": "Checks whether a claimer meets the claim condition's allowlist criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/legacy-contracts/pre-builts/DropERC20_V2.sol": "DropERC20_V2"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IThirdwebContract.sol": {
        "keccak256": "0x98ea2478723e7fd94c44f498f78e75076d306aa716ff255adf55bda2822c1e78",
        "urls": [
          "bzz-raw://8bebec94a0c258e86877260bbecdd0b5b6052ec5de16e39f3a4b2f0ce4c0134e",
          "dweb:/ipfs/QmdVLqwwSBPiTbpLdfkcZDhHMNd1GaKgAKPE2fVk5WibrK"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/interfaces/drop/IDropClaimCondition_V2.sol": {
        "keccak256": "0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a",
        "urls": [
          "bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3",
          "dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/interfaces/drop/IDropERC20_V2.sol": {
        "keccak256": "0x650e674408c7f34bd83a38479f2fc56b2501bda7d9b62b4c174565be8d6cdbe9",
        "urls": [
          "bzz-raw://373c6cb6983d94c92abf3cc47b677ede94638ada4663385f932aba6072e07efe",
          "dweb:/ipfs/QmSxUitgtfuLztV3TW6CWRmQDzYj271snVseFBndzjDkde"
        ],
        "license": "Apache-2.0"
      },
      "contracts/legacy-contracts/pre-builts/DropERC20_V2.sol": {
        "keccak256": "0xa6355ca826c24d05761d4895b7a0d395f651a8e33257a1be748d37a1d81a1174",
        "urls": [
          "bzz-raw://d2ab8e1315c58fcfb2ef0bcbd6a081b2494a9aacf69b4012d3b9342848ccc428",
          "dweb:/ipfs/QmQb9Xbnc4evjEdwEgGWTqB4v6mXpyXmy3bjXUJaRFy9QB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/FeeType.sol": {
        "keccak256": "0xf796f4f6126beb66821215c7bd0477c9aa39c986ba44a2001158f03e21b49381",
        "urls": [
          "bzz-raw://2bf468022e505664a9e256cd01b62960542ee299c0dadfb567c5204d28b45657",
          "dweb:/ipfs/QmQUBaCm6SnaPgNxHEvx3DwmqeGNPvYsY4goxTHCzoMspP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c",
        "urls": [
          "bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a",
          "dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3",
        "urls": [
          "bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02",
          "dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6",
        "urls": [
          "bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268",
          "dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol": {
        "keccak256": "0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3",
        "urls": [
          "bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0",
          "dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f",
        "urls": [
          "bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9",
          "dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
        "urls": [
          "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
          "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834",
        "urls": [
          "bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b",
          "dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol": {
        "keccak256": "0x266cee2afdf743513e8022da480684ed0c63147f469a766d499c7ae3c518e276",
        "urls": [
          "bzz-raw://639f78e22e3da7b4eaa472a31b719cb10f182023d0b1469601e4e75f0bb99e95",
          "dweb:/ipfs/QmWKbk7nneevjSKSAcwCjaDQqwFH2uiZ5j7Nh2PxFPcGqt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55",
        "urls": [
          "bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e",
          "dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/legacy-contracts/pre-builts/DropERC20_V2.sol",
    "id": 61534,
    "exportedSymbols": {
      "AccessControlEnumerableUpgradeable": [
        148804
      ],
      "AccessControlUpgradeable": [
        149144
      ],
      "AddressUpgradeable": [
        157438
      ],
      "BitMapsUpgradeable": [
        161424
      ],
      "ContextUpgradeable": [
        157714
      ],
      "CountersUpgradeable": [
        157788
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DropERC20_V2": [
        61533
      ],
      "ECDSAUpgradeable": [
        158725
      ],
      "EIP712Upgradeable": [
        158875
      ],
      "ERC165Upgradeable": [
        158919
      ],
      "ERC20BurnableUpgradeable": [
        154516
      ],
      "ERC20PermitUpgradeable": [
        155389
      ],
      "ERC20Upgradeable": [
        154374
      ],
      "ERC20VotesUpgradeable": [
        155173
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "EnumerableSetUpgradeable": [
        162364
      ],
      "FeeType": [
        64506
      ],
      "IAccessControlEnumerableUpgradeable": [
        149169
      ],
      "IAccessControlUpgradeable": [
        149242
      ],
      "IDropERC20_V2": [
        58332
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC20": [
        31216
      ],
      "IERC20MetadataUpgradeable": [
        155198
      ],
      "IERC20PermitUpgradeable": [
        155425
      ],
      "IERC20Upgradeable": [
        154452
      ],
      "IPlatformFee": [
        50559
      ],
      "IPrimarySale": [
        50580
      ],
      "IThirdwebContract": [
        55679
      ],
      "IVotesUpgradeable": [
        151699
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "MathUpgradeable": [
        159435
      ],
      "MerkleProof": [
        64593
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "ReentrancyGuardUpgradeable": [
        152055
      ],
      "SafeCastUpgradeable": [
        161286
      ],
      "SafeERC20": [
        78527
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:21186:273",
    "nodes": [
      {
        "id": 60278,
        "nodeType": "PragmaDirective",
        "src": "39:24:273",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 60279,
        "nodeType": "ImportDirective",
        "src": "135:97:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 154517,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60280,
        "nodeType": "ImportDirective",
        "src": "233:94:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 155174,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60281,
        "nodeType": "ImportDirective",
        "src": "329:91:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 148805,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60282,
        "nodeType": "ImportDirective",
        "src": "421:85:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 152056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60283,
        "nodeType": "ImportDirective",
        "src": "508:82:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/structs/BitMapsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 161425,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60284,
        "nodeType": "ImportDirective",
        "src": "591:76:273",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60285,
        "nodeType": "ImportDirective",
        "src": "717:48:273",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IThirdwebContract.sol",
        "file": "../../interfaces/IThirdwebContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 55680,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60286,
        "nodeType": "ImportDirective",
        "src": "807:52:273",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IPlatformFee.sol",
        "file": "../../extension/interface/IPlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 50560,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60287,
        "nodeType": "ImportDirective",
        "src": "860:52:273",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IPrimarySale.sol",
        "file": "../../extension/interface/IPrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 50581,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60289,
        "nodeType": "ImportDirective",
        "src": "914:69:273",
        "nodes": [],
        "absolutePath": "contracts/legacy-contracts/interfaces/drop/IDropERC20_V2.sol",
        "file": "../interfaces/drop/IDropERC20_V2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 58333,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60288,
              "name": "IDropERC20_V2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58332,
              "src": "923:13:273",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IDropERC20_V2_$58332_$",
                "typeString": "type(contract IDropERC20_V2)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60290,
        "nodeType": "ImportDirective",
        "src": "985:73:273",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60291,
        "nodeType": "ImportDirective",
        "src": "1060:35:273",
        "nodes": [],
        "absolutePath": "contracts/lib/MerkleProof.sol",
        "file": "../../lib/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 64594,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60292,
        "nodeType": "ImportDirective",
        "src": "1096:43:273",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60293,
        "nodeType": "ImportDirective",
        "src": "1140:31:273",
        "nodes": [],
        "absolutePath": "contracts/lib/FeeType.sol",
        "file": "../../lib/FeeType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61534,
        "sourceUnit": 64507,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61533,
        "nodeType": "ContractDefinition",
        "src": "1173:20051:273",
        "nodes": [
          {
            "id": 60319,
            "nodeType": "UsingForDirective",
            "src": "1486:55:273",
            "nodes": [],
            "libraryName": {
              "id": 60316,
              "name": "BitMapsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 161424,
              "src": "1492:18:273"
            },
            "typeName": {
              "id": 60318,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60317,
                "name": "BitMapsUpgradeable.BitMap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 161294,
                "src": "1515:25:273"
              },
              "referencedDeclaration": 161294,
              "src": "1515:25:273",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$161294_storage_ptr",
                "typeString": "struct BitMapsUpgradeable.BitMap"
              }
            }
          },
          {
            "id": 60325,
            "nodeType": "VariableDeclaration",
            "src": "1731:59:273",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1756:11:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 60320,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "44726f704552433230",
                  "id": 60323,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1778:11:273",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                    "typeString": "literal_string \"DropERC20\""
                  },
                  "value": "DropERC20"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                    "typeString": "literal_string \"DropERC20\""
                  }
                ],
                "id": 60322,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1770:7:273",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 60321,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1770:7:273",
                  "typeDescriptions": {}
                }
              },
              "id": 60324,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1770:20:273",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 60328,
            "nodeType": "VariableDeclaration",
            "src": "1796:36:273",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1821:7:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 60326,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1796:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 60327,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1831:1:273",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 60334,
            "nodeType": "VariableDeclaration",
            "src": "1942:67:273",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 60329,
              "nodeType": "StructuredDocumentation",
              "src": "1839:98:273",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "1967:13:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 60330,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1942:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 60332,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1993:15:273",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 60331,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1983:9:273",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 60333,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1983:26:273",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 60337,
            "nodeType": "VariableDeclaration",
            "src": "2054:25:273",
            "nodes": [],
            "baseFunctions": [
              55672
            ],
            "constant": false,
            "documentation": {
              "id": 60335,
              "nodeType": "StructuredDocumentation",
              "src": "2016:33:273",
              "text": "@dev Contract level metadata."
            },
            "functionSelector": "e8a3d485",
            "mutability": "mutable",
            "name": "contractURI",
            "nameLocation": "2068:11:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 60336,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2054:6:273",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60341,
            "nodeType": "VariableDeclaration",
            "src": "2131:42:273",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 60338,
              "nodeType": "StructuredDocumentation",
              "src": "2086:40:273",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2157:7:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 60339,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "2131:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 60340,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2167:6:273",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "internal"
          },
          {
            "id": 60344,
            "nodeType": "VariableDeclaration",
            "src": "2244:31:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60342,
              "nodeType": "StructuredDocumentation",
              "src": "2180:59:273",
              "text": "@dev The % of primary sales collected as platform fees."
            },
            "mutability": "mutable",
            "name": "platformFeeBps",
            "nameLocation": "2261:14:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 60343,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "2244:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60347,
            "nodeType": "VariableDeclaration",
            "src": "2355:37:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60345,
              "nodeType": "StructuredDocumentation",
              "src": "2282:68:273",
              "text": "@dev The address that receives all platform fees from all sales."
            },
            "mutability": "mutable",
            "name": "platformFeeRecipient",
            "nameLocation": "2372:20:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2355:7:273",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60350,
            "nodeType": "VariableDeclaration",
            "src": "2463:35:273",
            "nodes": [],
            "baseFunctions": [
              50568
            ],
            "constant": false,
            "documentation": {
              "id": 60348,
              "nodeType": "StructuredDocumentation",
              "src": "2399:59:273",
              "text": "@dev The address that receives all primary sales value."
            },
            "functionSelector": "079fe40e",
            "mutability": "mutable",
            "name": "primarySaleRecipient",
            "nameLocation": "2478:20:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60349,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2463:7:273",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60353,
            "nodeType": "VariableDeclaration",
            "src": "2563:34:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60351,
              "nodeType": "StructuredDocumentation",
              "src": "2505:53:273",
              "text": "@dev The max number of tokens a wallet can claim."
            },
            "functionSelector": "05981769",
            "mutability": "mutable",
            "name": "maxWalletClaimCount",
            "nameLocation": "2578:19:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2563:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60356,
            "nodeType": "VariableDeclaration",
            "src": "2652:29:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60354,
              "nodeType": "StructuredDocumentation",
              "src": "2604:43:273",
              "text": "@dev Global max total supply of tokens."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2667:14:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60355,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2652:7:273",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60360,
            "nodeType": "VariableDeclaration",
            "src": "2755:40:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60357,
              "nodeType": "StructuredDocumentation",
              "src": "2688:62:273",
              "text": "@dev The set of all claim conditions, at any given moment."
            },
            "functionSelector": "d637ed59",
            "mutability": "mutable",
            "name": "claimCondition",
            "nameLocation": "2781:14:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList"
            },
            "typeName": {
              "id": 60359,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60358,
                "name": "ClaimConditionList",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58142,
                "src": "2755:18:273"
              },
              "referencedDeclaration": 58142,
              "src": "2755:18:273",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage_ptr",
                "typeString": "struct IDropClaimCondition_V2.ClaimConditionList"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60365,
            "nodeType": "VariableDeclaration",
            "src": "3059:51:273",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60361,
              "nodeType": "StructuredDocumentation",
              "src": "2983:71:273",
              "text": "@dev Mapping from address => number of tokens a wallet has claimed."
            },
            "functionSelector": "4352ab41",
            "mutability": "mutable",
            "name": "walletClaimCount",
            "nameLocation": "3094:16:273",
            "scope": 61533,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 60364,
              "keyType": {
                "id": 60362,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3067:7:273",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3059:27:273",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60363,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3078:7:273",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 60371,
            "nodeType": "FunctionDefinition",
            "src": "3309:28:273",
            "nodes": [],
            "body": {
              "id": 60370,
              "nodeType": "Block",
              "src": "3335:2:273",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 60368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60367,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3323:11:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "3323:11:273"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3320:2:273"
            },
            "returnParameters": {
              "id": 60369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60445,
            "nodeType": "FunctionDefinition",
            "src": "3402:950:273",
            "nodes": [],
            "body": {
              "id": 60444,
              "nodeType": "Block",
              "src": "3732:620:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60395,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60383,
                        "src": "3849:18:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 60394,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75702,
                      "src": "3817:31:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 60396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:51:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60397,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:51:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60399,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60376,
                        "src": "3897:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 60398,
                      "name": "__ERC20Permit_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155246,
                      "src": "3878:18:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 60400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3878:25:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60401,
                  "nodeType": "ExpressionStatement",
                  "src": "3878:25:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60403,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60376,
                        "src": "3936:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 60404,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60378,
                        "src": "3943:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 60402,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153828,
                      "src": "3913:22:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 60405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:38:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60406,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:38:273"
                },
                {
                  "expression": {
                    "id": 60409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60407,
                      "name": "contractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60337,
                      "src": "4007:11:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60408,
                      "name": "_contractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60380,
                      "src": "4021:12:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4007:26:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60410,
                  "nodeType": "ExpressionStatement",
                  "src": "4007:26:273"
                },
                {
                  "expression": {
                    "id": 60413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60411,
                      "name": "primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60350,
                      "src": "4043:20:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60412,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60385,
                      "src": "4066:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4043:44:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60414,
                  "nodeType": "ExpressionStatement",
                  "src": "4043:44:273"
                },
                {
                  "expression": {
                    "id": 60417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60415,
                      "name": "platformFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60347,
                      "src": "4097:20:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60416,
                      "name": "_platformFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60387,
                      "src": "4120:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4097:44:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60418,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:44:273"
                },
                {
                  "expression": {
                    "id": 60424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60419,
                      "name": "platformFeeBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60344,
                      "src": "4151:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60422,
                          "name": "_platformFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60389,
                          "src": "4176:15:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4168:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 60420,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4168:7:273",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4168:24:273",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4151:41:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 60425,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:41:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60427,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148847,
                        "src": "4214:18:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60428,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60374,
                        "src": "4234:13:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60426,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149047,
                      "src": "4203:10:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4203:45:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60430,
                  "nodeType": "ExpressionStatement",
                  "src": "4203:45:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60432,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60334,
                        "src": "4269:13:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60433,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60374,
                        "src": "4284:13:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60431,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149047,
                      "src": "4258:10:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4258:40:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60435,
                  "nodeType": "ExpressionStatement",
                  "src": "4258:40:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60437,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60334,
                        "src": "4319:13:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4342:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4334:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60438,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4334:7:273",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4334:10:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60436,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149047,
                      "src": "4308:10:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4308:37:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60443,
                  "nodeType": "ExpressionStatement",
                  "src": "4308:37:273"
                }
              ]
            },
            "documentation": {
              "id": 60372,
              "nodeType": "StructuredDocumentation",
              "src": "3343:54:273",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "dfad80a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60392,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60391,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3720:11:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "3720:11:273"
              }
            ],
            "name": "initialize",
            "nameLocation": "3411:10:273",
            "parameters": {
              "id": 60390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60374,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3439:13:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3431:21:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60376,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3476:5:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3462:19:273",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60378,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3505:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3491:21:273",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60380,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3536:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3522:26:273",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60383,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3575:18:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3558:35:273",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60381,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3558:7:273",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 60382,
                    "nodeType": "ArrayTypeName",
                    "src": "3558:9:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60385,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3611:21:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3603:29:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60387,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "3650:21:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3642:29:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60389,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3689:15:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60445,
                  "src": "3681:23:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3421:289:273"
            },
            "returnParameters": {
              "id": 60393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3732:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60454,
            "nodeType": "FunctionDefinition",
            "src": "4592:91:273",
            "nodes": [],
            "body": {
              "id": 60453,
              "nodeType": "Block",
              "src": "4648:35:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60451,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60325,
                    "src": "4665:11:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 60450,
                  "id": 60452,
                  "nodeType": "Return",
                  "src": "4658:18:273"
                }
              ]
            },
            "baseFunctions": [
              55660
            ],
            "documentation": {
              "id": 60446,
              "nodeType": "StructuredDocumentation",
              "src": "4545:42:273",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "4601:12:273",
            "parameters": {
              "id": 60447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4613:2:273"
            },
            "returnParameters": {
              "id": 60450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60454,
                  "src": "4639:7:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:9:273"
            },
            "scope": 61533,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60466,
            "nodeType": "FunctionDefinition",
            "src": "4739:95:273",
            "nodes": [],
            "body": {
              "id": 60465,
              "nodeType": "Block",
              "src": "4796:38:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60462,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60328,
                        "src": "4819:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 60461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4813:5:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 60460,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4813:5:273",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 60463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:14:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 60459,
                  "id": 60464,
                  "nodeType": "Return",
                  "src": "4806:21:273"
                }
              ]
            },
            "baseFunctions": [
              55666
            ],
            "documentation": {
              "id": 60455,
              "nodeType": "StructuredDocumentation",
              "src": "4689:45:273",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "4748:15:273",
            "parameters": {
              "id": 60456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4763:2:273"
            },
            "returnParameters": {
              "id": 60459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60466,
                  "src": "4789:5:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 60457,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:5:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4788:7:273"
            },
            "scope": 61533,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60482,
            "nodeType": "FunctionDefinition",
            "src": "5056:231:273",
            "nodes": [],
            "body": {
              "id": 60481,
              "nodeType": "Block",
              "src": "5227:60:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60478,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60469,
                        "src": "5268:11:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 60476,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5244:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_V2_$61533_$",
                          "typeString": "type(contract super DropERC20_V2)"
                        }
                      },
                      "id": 60477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 148715,
                      "src": "5244:23:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 60479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5244:36:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 60475,
                  "id": 60480,
                  "nodeType": "Return",
                  "src": "5237:43:273"
                }
              ]
            },
            "baseFunctions": [
              148715
            ],
            "documentation": {
              "id": 60467,
              "nodeType": "StructuredDocumentation",
              "src": "5031:20:273",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5065:17:273",
            "overrides": {
              "id": 60472,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 60471,
                  "name": "AccessControlEnumerableUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148804,
                  "src": "5164:34:273"
                }
              ],
              "src": "5155:44:273"
            },
            "parameters": {
              "id": 60470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60469,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5090:11:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60482,
                  "src": "5083:18:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 60468,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5082:20:273"
            },
            "returnParameters": {
              "id": 60475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60482,
                  "src": "5217:4:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5217:4:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5216:6:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 60503,
            "nodeType": "FunctionDefinition",
            "src": "5293:228:273",
            "nodes": [],
            "body": {
              "id": 60502,
              "nodeType": "Block",
              "src": "5461:60:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60497,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60484,
                        "src": "5497:4:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60498,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60486,
                        "src": "5503:2:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60499,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60488,
                        "src": "5507:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60494,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5471:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_V2_$61533_$",
                          "typeString": "type(contract super DropERC20_V2)"
                        }
                      },
                      "id": 60496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154935,
                      "src": "5471:25:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 60500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5471:43:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60501,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:43:273"
                }
              ]
            },
            "baseFunctions": [
              154368,
              154935
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "5302:19:273",
            "overrides": {
              "id": 60492,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 60490,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "5420:16:273"
                },
                {
                  "id": 60491,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "5438:21:273"
                }
              ],
              "src": "5411:49:273"
            },
            "parameters": {
              "id": 60489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60484,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5339:4:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60503,
                  "src": "5331:12:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5331:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60486,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5361:2:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60503,
                  "src": "5353:10:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60488,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5381:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60503,
                  "src": "5373:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5373:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:72:273"
            },
            "returnParameters": {
              "id": 60493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5461:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 60561,
            "nodeType": "FunctionDefinition",
            "src": "5564:409:273",
            "nodes": [],
            "body": {
              "id": 60560,
              "nodeType": "Block",
              "src": "5702:271:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60518,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60506,
                        "src": "5739:4:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60519,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60508,
                        "src": "5745:2:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60520,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60510,
                        "src": "5749:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60515,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5712:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_V2_$61533_$",
                          "typeString": "type(contract super DropERC20_V2)"
                        }
                      },
                      "id": 60517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154357,
                      "src": "5712:26:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 60521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:44:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60522,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:44:273"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 60537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5771:35:273",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 60524,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60334,
                              "src": "5780:13:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 60527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5803:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 60526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5795:7:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 60525,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5795:7:273",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 60528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5795:10:273",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60523,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148899,
                            "src": "5772:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 60529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5772:34:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60531,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60506,
                          "src": "5810:4:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 60534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5826:1:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 60533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5818:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60532,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5818:7:273",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 60535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5818:10:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5810:18:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5771:57:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 60543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60538,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60508,
                        "src": "5832:2:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5846:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5838:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60539,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5838:7:273",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5838:10:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5832:16:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5771:77:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60559,
                  "nodeType": "IfStatement",
                  "src": "5767:200:273",
                  "trueBody": {
                    "id": 60558,
                    "nodeType": "Block",
                    "src": "5850:117:273",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 60554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 60547,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60334,
                                    "src": "5880:13:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 60548,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60506,
                                    "src": "5895:4:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 60546,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148899,
                                  "src": "5872:7:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 60549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5872:28:273",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 60551,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60334,
                                    "src": "5912:13:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 60552,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60508,
                                    "src": "5927:2:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 60550,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148899,
                                  "src": "5904:7:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 60553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5904:26:273",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5872:58:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 60555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5932:23:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 60545,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5864:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 60556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5864:92:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60557,
                        "nodeType": "ExpressionStatement",
                        "src": "5864:92:273"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              154357
            ],
            "documentation": {
              "id": 60504,
              "nodeType": "StructuredDocumentation",
              "src": "5527:32:273",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "5573:20:273",
            "overrides": {
              "id": 60513,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 60512,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "5684:16:273"
                }
              ],
              "src": "5675:26:273"
            },
            "parameters": {
              "id": 60511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60506,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5611:4:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60561,
                  "src": "5603:12:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5603:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60508,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5633:2:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60561,
                  "src": "5625:10:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5625:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60510,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5653:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60561,
                  "src": "5645:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5645:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5593:72:273"
            },
            "returnParameters": {
              "id": 60514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5702:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60681,
            "nodeType": "FunctionDefinition",
            "src": "6202:2452:273",
            "nodes": [],
            "body": {
              "id": 60680,
              "nodeType": "Block",
              "src": "6451:2203:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 60582,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6488:3:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 60583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6488:10:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60581,
                            "name": "isTrustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75714,
                            "src": "6469:18:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 60584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6469:30:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 60589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 60585,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                61519
                              ],
                              "referencedDeclaration": 61519,
                              "src": "6503:10:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 60586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6503:12:273",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 60587,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "6519:2:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 60588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "6519:9:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6503:25:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6469:59:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "424f54",
                        "id": 60591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6530:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        },
                        "value": "BOT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902cbe3a02736af9827fb6a90bada39e955c0941e08f0c63b3a662a7b17a4e2b",
                          "typeString": "literal_string \"BOT\""
                        }
                      ],
                      "id": 60580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6461:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6461:75:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60593,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:75:273"
                },
                {
                  "assignments": [
                    60595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60595,
                      "mutability": "mutable",
                      "name": "activeConditionId",
                      "nameLocation": "6592:17:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60680,
                      "src": "6584:25:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60594,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6584:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60598,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60596,
                      "name": "getActiveClaimConditionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61251,
                      "src": "6612:25:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 60597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:27:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6584:55:273"
                },
                {
                  "assignments": [
                    60600,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60600,
                      "mutability": "mutable",
                      "name": "validMerkleProof",
                      "nameLocation": "7055:16:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60680,
                      "src": "7050:21:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7050:4:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "  We make allowlist checks (i.e. verifyClaimMerkleProof) before verifying the claim's general\n  validity (i.e. verifyClaim) because we give precedence to the check of allow list quantity\n  restriction over the check of the general claim condition's quantityLimitPerTransaction\n  restriction.",
                  "id": 60609,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60602,
                        "name": "activeConditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60595,
                        "src": "7113:17:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60603,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "7144:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7144:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60605,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60566,
                        "src": "7170:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60606,
                        "name": "_proofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60573,
                        "src": "7193:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 60607,
                        "name": "_proofMaxQuantityPerTransaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60575,
                        "src": "7214:31:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60601,
                      "name": "verifyClaimMerkleProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61207,
                      "src": "7077:22:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256,bytes32[] calldata,uint256) view returns (bool,uint256)"
                      }
                    },
                    "id": 60608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7077:178:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7049:206:273"
                },
                {
                  "assignments": [
                    60611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60611,
                      "mutability": "mutable",
                      "name": "toVerifyMaxQuantityPerTransaction",
                      "nameLocation": "7614:33:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60680,
                      "src": "7609:38:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 60610,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7609:4:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60626,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60612,
                        "name": "_proofMaxQuantityPerTransaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60575,
                        "src": "7650:31:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 60613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7685:1:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7650:36:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 60624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 60615,
                              "name": "claimCondition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60360,
                              "src": "7702:14:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                              }
                            },
                            "id": 60616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "phases",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58130,
                            "src": "7702:21:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                              "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                            }
                          },
                          "id": 60618,
                          "indexExpression": {
                            "id": 60617,
                            "name": "activeConditionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60595,
                            "src": "7724:17:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7702:40:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                            "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                          }
                        },
                        "id": 60619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58116,
                        "src": "7702:51:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7765:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7757:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 60620,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7757:7:273",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7757:10:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "7702:65:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7650:117:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7609:158:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60628,
                        "name": "activeConditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60595,
                        "src": "7802:17:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60629,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "7833:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7833:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60631,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60566,
                        "src": "7859:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60632,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60568,
                        "src": "7882:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60633,
                        "name": "_pricePerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60570,
                        "src": "7905:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60634,
                        "name": "toVerifyMaxQuantityPerTransaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60611,
                        "src": "7933:33:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 60627,
                      "name": "verifyClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61118,
                      "src": "7777:11:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,uint256,address,uint256,bool) view"
                      }
                    },
                    "id": 60635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7777:199:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60636,
                  "nodeType": "ExpressionStatement",
                  "src": "7777:199:273"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60637,
                      "name": "validMerkleProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60600,
                      "src": "7991:16:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60638,
                        "name": "_proofMaxQuantityPerTransaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60575,
                        "src": "8011:31:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 60639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8045:1:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8011:35:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7991:55:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60659,
                  "nodeType": "IfStatement",
                  "src": "7987:346:273",
                  "trueBody": {
                    "id": 60658,
                    "nodeType": "Block",
                    "src": "8048:285:273",
                    "statements": [
                      {
                        "documentation": "  Mark the claimer's use of their position in the allowlist. A spot in an allowlist\n  can be used only once.",
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 60652,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          61519
                                        ],
                                        "referencedDeclaration": 61519,
                                        "src": "8307:10:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 60653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8307:12:273",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 60651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8299:7:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 60650,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8299:7:273",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 60654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8299:21:273",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 60649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8291:7:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 60648,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8291:7:273",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 60655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8291:30:273",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 60642,
                                  "name": "claimCondition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60360,
                                  "src": "8231:14:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                  }
                                },
                                "id": 60645,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "limitMerkleProofClaim",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58141,
                                "src": "8231:36:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BitMap_$161294_storage_$",
                                  "typeString": "mapping(uint256 => struct BitMapsUpgradeable.BitMap storage ref)"
                                }
                              },
                              "id": 60646,
                              "indexExpression": {
                                "id": 60644,
                                "name": "activeConditionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60595,
                                "src": "8268:17:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8231:55:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BitMap_$161294_storage",
                                "typeString": "struct BitMapsUpgradeable.BitMap storage ref"
                              }
                            },
                            "id": 60647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 161389,
                            "src": "8231:59:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BitMap_$161294_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_BitMap_$161294_storage_ptr_$",
                              "typeString": "function (struct BitMapsUpgradeable.BitMap storage pointer,uint256)"
                            }
                          },
                          "id": 60656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8231:91:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60657,
                        "nodeType": "ExpressionStatement",
                        "src": "8231:91:273"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60661,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60566,
                        "src": "8407:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60662,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60568,
                        "src": "8418:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60663,
                        "name": "_pricePerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60570,
                        "src": "8429:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60660,
                      "name": "collectClaimPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60957,
                      "src": "8389:17:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 60664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8389:55:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60665,
                  "nodeType": "ExpressionStatement",
                  "src": "8389:55:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60667,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60564,
                        "src": "8523:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60668,
                        "name": "activeConditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60595,
                        "src": "8534:17:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60669,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60566,
                        "src": "8553:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60666,
                      "name": "transferClaimedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61001,
                      "src": "8501:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 60670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8501:62:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60671,
                  "nodeType": "ExpressionStatement",
                  "src": "8501:62:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 60673,
                        "name": "activeConditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60595,
                        "src": "8593:17:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60674,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "8612:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8612:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60676,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60564,
                        "src": "8626:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60677,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60566,
                        "src": "8637:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60672,
                      "name": "TokensClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58273,
                      "src": "8579:13:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 60678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8579:68:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60679,
                  "nodeType": "EmitStatement",
                  "src": "8574:73:273"
                }
              ]
            },
            "baseFunctions": [
              58321
            ],
            "documentation": {
              "id": 60562,
              "nodeType": "StructuredDocumentation",
              "src": "6159:38:273",
              "text": "@dev Lets an account claim tokens."
            },
            "functionSelector": "7a5a8e7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60577,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152049,
                  "src": "6438:12:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "6438:12:273"
              }
            ],
            "name": "claim",
            "nameLocation": "6211:5:273",
            "parameters": {
              "id": 60576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60564,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6234:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6226:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6226:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60566,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "6261:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6253:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6253:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60568,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "6288:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6280:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6280:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60570,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "6315:14:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6307:22:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60573,
                  "mutability": "mutable",
                  "name": "_proofs",
                  "nameLocation": "6358:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6339:26:273",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60571,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6339:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60572,
                    "nodeType": "ArrayTypeName",
                    "src": "6339:9:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60575,
                  "mutability": "mutable",
                  "name": "_proofMaxQuantityPerTransaction",
                  "nameLocation": "6383:31:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60681,
                  "src": "6375:39:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6375:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6216:204:273"
            },
            "returnParameters": {
              "id": 60579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6451:0:273"
            },
            "scope": 61533,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60879,
            "nodeType": "FunctionDefinition",
            "src": "8753:2859:273",
            "nodes": [],
            "body": {
              "id": 60878,
              "nodeType": "Block",
              "src": "8903:2709:273",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60695,
                      "mutability": "mutable",
                      "name": "existingStartIndex",
                      "nameLocation": "8921:18:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60878,
                      "src": "8913:26:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8913:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60698,
                  "initialValue": {
                    "expression": {
                      "id": 60696,
                      "name": "claimCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60360,
                      "src": "8942:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                        "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                      }
                    },
                    "id": 60697,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentStartId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58123,
                    "src": "8942:29:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8913:58:273"
                },
                {
                  "assignments": [
                    60700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60700,
                      "mutability": "mutable",
                      "name": "existingPhaseCount",
                      "nameLocation": "8989:18:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60878,
                      "src": "8981:26:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8981:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60703,
                  "initialValue": {
                    "expression": {
                      "id": 60701,
                      "name": "claimCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60360,
                      "src": "9010:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                        "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                      }
                    },
                    "id": 60702,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "count",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58125,
                    "src": "9010:20:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8981:49:273"
                },
                {
                  "assignments": [
                    60706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60706,
                      "mutability": "mutable",
                      "name": "newStartIndex",
                      "nameLocation": "9476:13:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60878,
                      "src": "9468:21:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9468:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "  `limitLastClaimTimestamp` and `limitMerkleProofClaim` are mappings that use a\n  claim condition's UID as a key.\n  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n  conditions in `_phases`, effectively resetting the restrictions on claims expressed\n  by `limitLastClaimTimestamp` and `limitMerkleProofClaim`.",
                  "id": 60708,
                  "initialValue": {
                    "id": 60707,
                    "name": "existingStartIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60695,
                    "src": "9492:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9468:42:273"
                },
                {
                  "condition": {
                    "id": 60709,
                    "name": "_resetClaimEligibility",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60688,
                    "src": "9524:22:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60717,
                  "nodeType": "IfStatement",
                  "src": "9520:108:273",
                  "trueBody": {
                    "id": 60716,
                    "nodeType": "Block",
                    "src": "9548:80:273",
                    "statements": [
                      {
                        "expression": {
                          "id": 60714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60710,
                            "name": "newStartIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60706,
                            "src": "9562:13:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 60713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 60711,
                              "name": "existingStartIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60695,
                              "src": "9578:18:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 60712,
                              "name": "existingPhaseCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60700,
                              "src": "9599:18:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9578:39:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9562:55:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60715,
                        "nodeType": "ExpressionStatement",
                        "src": "9562:55:273"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 60723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60718,
                        "name": "claimCondition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60360,
                        "src": "9638:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                        }
                      },
                      "id": 60720,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "count",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58125,
                      "src": "9638:20:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60721,
                        "name": "_phases",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60686,
                        "src": "9661:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                        }
                      },
                      "id": 60722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9661:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9638:37:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60724,
                  "nodeType": "ExpressionStatement",
                  "src": "9638:37:273"
                },
                {
                  "expression": {
                    "id": 60729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60725,
                        "name": "claimCondition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60360,
                        "src": "9685:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                        }
                      },
                      "id": 60727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentStartId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58123,
                      "src": "9685:29:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60728,
                      "name": "newStartIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60706,
                      "src": "9717:13:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9685:45:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60730,
                  "nodeType": "ExpressionStatement",
                  "src": "9685:45:273"
                },
                {
                  "assignments": [
                    60732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60732,
                      "mutability": "mutable",
                      "name": "lastConditionStartTimestamp",
                      "nameLocation": "9749:27:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60878,
                      "src": "9741:35:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9741:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60733,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9741:35:273"
                },
                {
                  "body": {
                    "id": 60809,
                    "nodeType": "Block",
                    "src": "9831:626:273",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 60755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 60748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 60746,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60735,
                                  "src": "9870:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 60747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9875:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9870:6:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 60754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 60749,
                                  "name": "lastConditionStartTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60732,
                                  "src": "9880:27:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 60750,
                                      "name": "_phases",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60686,
                                      "src": "9910:7:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                                      }
                                    },
                                    "id": 60752,
                                    "indexExpression": {
                                      "id": 60751,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60735,
                                      "src": "9918:1:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9910:10:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_calldata_ptr",
                                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata"
                                    }
                                  },
                                  "id": 60753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58106,
                                  "src": "9910:25:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9880:55:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9870:65:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "737461727454696d657374616d70206d75737420626520696e20617363656e64696e67206f726465722e",
                              "id": 60756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9953:44:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a57f1dcf52d88b0f3dbf0947b69df3b4b7237577c3dc517311dc60d3e79e5817",
                                "typeString": "literal_string \"startTimestamp must be in ascending order.\""
                              },
                              "value": "startTimestamp must be in ascending order."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a57f1dcf52d88b0f3dbf0947b69df3b4b7237577c3dc517311dc60d3e79e5817",
                                "typeString": "literal_string \"startTimestamp must be in ascending order.\""
                              }
                            ],
                            "id": 60745,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9845:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 60757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9845:166:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60758,
                        "nodeType": "ExpressionStatement",
                        "src": "9845:166:273"
                      },
                      {
                        "assignments": [
                          60760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 60760,
                            "mutability": "mutable",
                            "name": "supplyClaimedAlready",
                            "nameLocation": "10034:20:273",
                            "nodeType": "VariableDeclaration",
                            "scope": 60809,
                            "src": "10026:28:273",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 60759,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10026:7:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 60768,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 60761,
                                "name": "claimCondition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60360,
                                "src": "10057:14:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                  "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                }
                              },
                              "id": 60762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "phases",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58130,
                              "src": "10057:21:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                              }
                            },
                            "id": 60766,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 60765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 60763,
                                "name": "newStartIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60706,
                                "src": "10079:13:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 60764,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60735,
                                "src": "10095:1:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10079:17:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10057:40:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                              "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                            }
                          },
                          "id": 60767,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyClaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58110,
                          "src": "10057:54:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10026:85:273"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 60775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 60770,
                                "name": "supplyClaimedAlready",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60760,
                                "src": "10133:20:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 60771,
                                    "name": "_phases",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60686,
                                    "src": "10157:7:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                                    }
                                  },
                                  "id": 60773,
                                  "indexExpression": {
                                    "id": 60772,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60735,
                                    "src": "10165:1:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10157:10:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimCondition_$58121_calldata_ptr",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata"
                                  }
                                },
                                "id": 60774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxClaimableSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58108,
                                "src": "10157:29:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10133:53:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d617820737570706c7920636c61696d656420616c7265616479",
                              "id": 60776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10188:28:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab76b5462b76382fa3086395bf5a3e504c614b152fb5cbfe599cb1c63d4a23eb",
                                "typeString": "literal_string \"max supply claimed already\""
                              },
                              "value": "max supply claimed already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab76b5462b76382fa3086395bf5a3e504c614b152fb5cbfe599cb1c63d4a23eb",
                                "typeString": "literal_string \"max supply claimed already\""
                              }
                            ],
                            "id": 60769,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10125:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 60777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10125:92:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60778,
                        "nodeType": "ExpressionStatement",
                        "src": "10125:92:273"
                      },
                      {
                        "expression": {
                          "id": 60789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 60779,
                                "name": "claimCondition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60360,
                                "src": "10232:14:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                  "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                }
                              },
                              "id": 60784,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "phases",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58130,
                              "src": "10232:21:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                              }
                            },
                            "id": 60785,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 60783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 60781,
                                "name": "newStartIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60706,
                                "src": "10254:13:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 60782,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60735,
                                "src": "10270:1:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10254:17:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10232:40:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                              "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 60786,
                              "name": "_phases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60686,
                              "src": "10275:7:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                              }
                            },
                            "id": 60788,
                            "indexExpression": {
                              "id": 60787,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60735,
                              "src": "10283:1:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10275:10:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimCondition_$58121_calldata_ptr",
                              "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata"
                            }
                          },
                          "src": "10232:53:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                            "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                          }
                        },
                        "id": 60790,
                        "nodeType": "ExpressionStatement",
                        "src": "10232:53:273"
                      },
                      {
                        "expression": {
                          "id": 60800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 60791,
                                  "name": "claimCondition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60360,
                                  "src": "10299:14:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                  }
                                },
                                "id": 60796,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "phases",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58130,
                                "src": "10299:21:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                  "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                                }
                              },
                              "id": 60797,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 60795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 60793,
                                  "name": "newStartIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60706,
                                  "src": "10321:13:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 60794,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60735,
                                  "src": "10337:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10321:17:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10299:40:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                              }
                            },
                            "id": 60798,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "supplyClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58110,
                            "src": "10299:54:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60799,
                            "name": "supplyClaimedAlready",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60760,
                            "src": "10356:20:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10299:77:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60801,
                        "nodeType": "ExpressionStatement",
                        "src": "10299:77:273"
                      },
                      {
                        "expression": {
                          "id": 60807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60802,
                            "name": "lastConditionStartTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60732,
                            "src": "10391:27:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 60803,
                                "name": "_phases",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60686,
                                "src": "10421:7:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                                }
                              },
                              "id": 60805,
                              "indexExpression": {
                                "id": 60804,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60735,
                                "src": "10429:1:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10421:10:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_calldata_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata"
                              }
                            },
                            "id": 60806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58106,
                            "src": "10421:25:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10391:55:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60808,
                        "nodeType": "ExpressionStatement",
                        "src": "10391:55:273"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60738,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60735,
                      "src": "9806:1:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 60739,
                        "name": "_phases",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60686,
                        "src": "9810:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                        }
                      },
                      "id": 60740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9810:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9806:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60810,
                  "initializationExpression": {
                    "assignments": [
                      60735
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60735,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9799:1:273",
                        "nodeType": "VariableDeclaration",
                        "scope": 60810,
                        "src": "9791:9:273",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60734,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9791:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60737,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 60736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9803:1:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9791:13:273"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 60743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9826:3:273",
                      "subExpression": {
                        "id": 60742,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60735,
                        "src": "9826:1:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60744,
                    "nodeType": "ExpressionStatement",
                    "src": "9826:3:273"
                  },
                  "nodeType": "ForStatement",
                  "src": "9786:671:273"
                },
                {
                  "condition": {
                    "id": 60811,
                    "name": "_resetClaimEligibility",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60688,
                    "src": "10985:22:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "  Gas refunds (as much as possible)\n  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n  conditions in `_phases`. So, we delete claim conditions with UID < `newStartIndex`.\n  If `_resetClaimEligibility == false`, and there are more existing claim conditions\n  than in `_phases`, we delete the existing claim conditions that don't get replaced\n  by the conditions in `_phases`.",
                  "falseBody": {
                    "id": 60872,
                    "nodeType": "Block",
                    "src": "11228:331:273",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60837,
                            "name": "existingPhaseCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60700,
                            "src": "11246:18:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 60838,
                              "name": "_phases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60686,
                              "src": "11267:7:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                              }
                            },
                            "id": 60839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11267:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11246:35:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60871,
                        "nodeType": "IfStatement",
                        "src": "11242:307:273",
                        "trueBody": {
                          "id": 60870,
                          "nodeType": "Block",
                          "src": "11283:266:273",
                          "statements": [
                            {
                              "body": {
                                "id": 60868,
                                "nodeType": "Block",
                                "src": "11363:172:273",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 60858,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "delete",
                                      "prefix": true,
                                      "src": "11385:47:273",
                                      "subExpression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 60852,
                                            "name": "claimCondition",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60360,
                                            "src": "11392:14:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                            }
                                          },
                                          "id": 60853,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "phases",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58130,
                                          "src": "11392:21:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                            "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                                          }
                                        },
                                        "id": 60857,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 60856,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 60854,
                                            "name": "newStartIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60706,
                                            "src": "11414:13:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "id": 60855,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60842,
                                            "src": "11430:1:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11414:17:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "11392:40:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 60859,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11385:47:273"
                                  },
                                  {
                                    "expression": {
                                      "id": 60866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "delete",
                                      "prefix": true,
                                      "src": "11454:62:273",
                                      "subExpression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 60860,
                                            "name": "claimCondition",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60360,
                                            "src": "11461:14:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                            }
                                          },
                                          "id": 60861,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "limitMerkleProofClaim",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58141,
                                          "src": "11461:36:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BitMap_$161294_storage_$",
                                            "typeString": "mapping(uint256 => struct BitMapsUpgradeable.BitMap storage ref)"
                                          }
                                        },
                                        "id": 60865,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 60864,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 60862,
                                            "name": "newStartIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60706,
                                            "src": "11498:13:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "id": 60863,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60842,
                                            "src": "11514:1:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11498:17:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "11461:55:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BitMap_$161294_storage",
                                          "typeString": "struct BitMapsUpgradeable.BitMap storage ref"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 60867,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11454:62:273"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 60848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 60846,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60842,
                                  "src": "11334:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 60847,
                                  "name": "existingPhaseCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60700,
                                  "src": "11338:18:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11334:22:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 60869,
                              "initializationExpression": {
                                "assignments": [
                                  60842
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 60842,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "11314:1:273",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 60869,
                                    "src": "11306:9:273",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 60841,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11306:7:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 60845,
                                "initialValue": {
                                  "expression": {
                                    "id": 60843,
                                    "name": "_phases",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60686,
                                    "src": "11318:7:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                                    }
                                  },
                                  "id": 60844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "11318:14:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "11306:26:273"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 60850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "11358:3:273",
                                  "subExpression": {
                                    "id": 60849,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60842,
                                    "src": "11358:1:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 60851,
                                "nodeType": "ExpressionStatement",
                                "src": "11358:3:273"
                              },
                              "nodeType": "ForStatement",
                              "src": "11301:234:273"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 60873,
                  "nodeType": "IfStatement",
                  "src": "10981:578:273",
                  "trueBody": {
                    "id": 60836,
                    "nodeType": "Block",
                    "src": "11009:213:273",
                    "statements": [
                      {
                        "body": {
                          "id": 60834,
                          "nodeType": "Block",
                          "src": "11084:128:273",
                          "statements": [
                            {
                              "expression": {
                                "id": 60826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11102:31:273",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 60822,
                                      "name": "claimCondition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60360,
                                      "src": "11109:14:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                        "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                      }
                                    },
                                    "id": 60823,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "phases",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58130,
                                    "src": "11109:21:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                      "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                                    }
                                  },
                                  "id": 60825,
                                  "indexExpression": {
                                    "id": 60824,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60813,
                                    "src": "11131:1:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11109:24:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 60827,
                              "nodeType": "ExpressionStatement",
                              "src": "11102:31:273"
                            },
                            {
                              "expression": {
                                "id": 60832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11151:46:273",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 60828,
                                      "name": "claimCondition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60360,
                                      "src": "11158:14:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                        "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                      }
                                    },
                                    "id": 60829,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "limitMerkleProofClaim",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58141,
                                    "src": "11158:36:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BitMap_$161294_storage_$",
                                      "typeString": "mapping(uint256 => struct BitMapsUpgradeable.BitMap storage ref)"
                                    }
                                  },
                                  "id": 60831,
                                  "indexExpression": {
                                    "id": 60830,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60813,
                                    "src": "11195:1:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11158:39:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BitMap_$161294_storage",
                                    "typeString": "struct BitMapsUpgradeable.BitMap storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 60833,
                              "nodeType": "ExpressionStatement",
                              "src": "11151:46:273"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60816,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60813,
                            "src": "11060:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 60817,
                            "name": "newStartIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60706,
                            "src": "11064:13:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11060:17:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60835,
                        "initializationExpression": {
                          "assignments": [
                            60813
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 60813,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11036:1:273",
                              "nodeType": "VariableDeclaration",
                              "scope": 60835,
                              "src": "11028:9:273",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 60812,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11028:7:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 60815,
                          "initialValue": {
                            "id": 60814,
                            "name": "existingStartIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60695,
                            "src": "11040:18:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11028:30:273"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 60820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11079:3:273",
                            "subExpression": {
                              "id": 60819,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60813,
                              "src": "11079:1:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 60821,
                          "nodeType": "ExpressionStatement",
                          "src": "11079:3:273"
                        },
                        "nodeType": "ForStatement",
                        "src": "11023:189:273"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 60875,
                        "name": "_phases",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60686,
                        "src": "11597:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition calldata[] calldata"
                        }
                      ],
                      "id": 60874,
                      "name": "ClaimConditionsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58280,
                      "src": "11574:22:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_ClaimCondition_$58121_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDropClaimCondition_V2.ClaimCondition memory[] memory)"
                      }
                    },
                    "id": 60876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:31:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60877,
                  "nodeType": "EmitStatement",
                  "src": "11569:36:273"
                }
              ]
            },
            "baseFunctions": [
              58331
            ],
            "documentation": {
              "id": 60682,
              "nodeType": "StructuredDocumentation",
              "src": "8660:88:273",
              "text": "@dev Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."
            },
            "functionSelector": "e23b8164",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60691,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "8879:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60692,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60690,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "8870:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "8870:28:273"
              }
            ],
            "name": "setClaimConditions",
            "nameLocation": "8762:18:273",
            "parameters": {
              "id": 60689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60686,
                  "mutability": "mutable",
                  "name": "_phases",
                  "nameLocation": "8807:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60879,
                  "src": "8781:33:273",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDropClaimCondition_V2.ClaimCondition[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60684,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 60683,
                        "name": "ClaimCondition",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58121,
                        "src": "8781:14:273"
                      },
                      "referencedDeclaration": 58121,
                      "src": "8781:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage_ptr",
                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                      }
                    },
                    "id": 60685,
                    "nodeType": "ArrayTypeName",
                    "src": "8781:16:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimCondition_$58121_storage_$dyn_storage_ptr",
                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60688,
                  "mutability": "mutable",
                  "name": "_resetClaimEligibility",
                  "nameLocation": "8821:22:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60879,
                  "src": "8816:27:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60687,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8816:4:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8780:64:273"
            },
            "returnParameters": {
              "id": 60693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8903:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60957,
            "nodeType": "FunctionDefinition",
            "src": "11704:872:273",
            "nodes": [],
            "body": {
              "id": 60956,
              "nodeType": "Block",
              "src": "11839:737:273",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60889,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60886,
                      "src": "11853:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11871:1:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11853:19:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60894,
                  "nodeType": "IfStatement",
                  "src": "11849:56:273",
                  "trueBody": {
                    "id": 60893,
                    "nodeType": "Block",
                    "src": "11874:31:273",
                    "statements": [
                      {
                        "functionReturnParameters": 60888,
                        "id": 60892,
                        "nodeType": "Return",
                        "src": "11888:7:273"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    60896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60896,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "12013:10:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60956,
                      "src": "12005:18:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12005:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60903,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60897,
                            "name": "_quantityToClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60882,
                            "src": "12027:16:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 60898,
                            "name": "_pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60886,
                            "src": "12046:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12027:33:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 60900,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12026:35:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 60901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12064:7:273",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "12026:45:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12005:66:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60905,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60896,
                          "src": "12089:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 60906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12102:1:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12089:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e7469747920746f6f206c6f77",
                        "id": 60908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12105:18:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        },
                        "value": "quantity too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        }
                      ],
                      "id": 60904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12081:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12081:43:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60910,
                  "nodeType": "ExpressionStatement",
                  "src": "12081:43:273"
                },
                {
                  "assignments": [
                    60912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60912,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "12143:12:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 60956,
                      "src": "12135:20:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60911,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12135:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60919,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60913,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60896,
                            "src": "12159:10:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 60914,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60344,
                            "src": "12172:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "12159:27:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 60916,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12158:29:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 60917,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60341,
                      "src": "12190:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12158:39:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12135:62:273"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 60923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60920,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60884,
                      "src": "12212:9:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 60921,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "12225:19:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 60922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "12225:32:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12212:45:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60933,
                  "nodeType": "IfStatement",
                  "src": "12208:134:273",
                  "trueBody": {
                    "id": 60932,
                    "nodeType": "Block",
                    "src": "12259:83:273",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 60928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 60925,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12281:3:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 60926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12281:9:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 60927,
                                "name": "totalPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60896,
                                "src": "12294:10:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12281:23:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742073656e6420746f74616c2070726963652e",
                              "id": 60929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12306:24:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0299d04d1eea1aa0eb6c3e85a09aa251df8fca9538020f45f62482516c36e90a",
                                "typeString": "literal_string \"must send total price.\""
                              },
                              "value": "must send total price."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0299d04d1eea1aa0eb6c3e85a09aa251df8fca9538020f45f62482516c36e90a",
                                "typeString": "literal_string \"must send total price.\""
                              }
                            ],
                            "id": 60924,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12273:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 60930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12273:58:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60931,
                        "nodeType": "ExpressionStatement",
                        "src": "12273:58:273"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60937,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60884,
                        "src": "12389:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60938,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "12400:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12400:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60940,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60347,
                        "src": "12414:20:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60941,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60912,
                        "src": "12436:12:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60934,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "12352:19:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 60936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "12352:36:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 60942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12352:97:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60943,
                  "nodeType": "ExpressionStatement",
                  "src": "12352:97:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60947,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60884,
                        "src": "12496:9:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60948,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "12507:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12507:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60950,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60350,
                        "src": "12521:20:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60951,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60896,
                          "src": "12543:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 60952,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60912,
                          "src": "12556:12:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12543:25:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60944,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "12459:19:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 60946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "12459:36:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 60954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12459:110:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60955,
                  "nodeType": "ExpressionStatement",
                  "src": "12459:110:273"
                }
              ]
            },
            "documentation": {
              "id": 60880,
              "nodeType": "StructuredDocumentation",
              "src": "11618:81:273",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectClaimPrice",
            "nameLocation": "11713:17:273",
            "parameters": {
              "id": 60887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60882,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "11748:16:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60957,
                  "src": "11740:24:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11740:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60884,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "11782:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60957,
                  "src": "11774:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11774:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60886,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "11809:14:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 60957,
                  "src": "11801:22:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11801:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11730:99:273"
            },
            "returnParameters": {
              "id": 60888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11839:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61001,
            "nodeType": "FunctionDefinition",
            "src": "12631:681:273",
            "nodes": [],
            "body": {
              "id": 61000,
              "nodeType": "Block",
              "src": "12767:545:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "id": 60967,
                            "name": "claimCondition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60360,
                            "src": "12835:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                            }
                          },
                          "id": 60970,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phases",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58130,
                          "src": "12835:21:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                            "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                          }
                        },
                        "id": 60971,
                        "indexExpression": {
                          "id": 60969,
                          "name": "_conditionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60962,
                          "src": "12857:12:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12835:35:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                        }
                      },
                      "id": 60972,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supplyClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58110,
                      "src": "12835:49:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 60973,
                      "name": "_quantityBeingClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60964,
                      "src": "12888:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12835:74:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60975,
                  "nodeType": "ExpressionStatement",
                  "src": "12835:74:273"
                },
                {
                  "expression": {
                    "id": 60986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 60976,
                            "name": "claimCondition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60360,
                            "src": "13112:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                            }
                          },
                          "id": 60981,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "limitLastClaimTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58136,
                          "src": "13112:38:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 60982,
                        "indexExpression": {
                          "id": 60978,
                          "name": "_conditionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60962,
                          "src": "13151:12:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13112:52:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 60983,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60979,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "13165:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13165:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13112:66:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60984,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13181:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 60985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13181:15:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13112:84:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60987,
                  "nodeType": "ExpressionStatement",
                  "src": "13112:84:273"
                },
                {
                  "expression": {
                    "id": 60993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60988,
                        "name": "walletClaimCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60365,
                        "src": "13206:16:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 60991,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60989,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61519
                          ],
                          "referencedDeclaration": 61519,
                          "src": "13223:10:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13223:12:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13206:30:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 60992,
                      "name": "_quantityBeingClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60964,
                      "src": "13240:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13206:55:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60994,
                  "nodeType": "ExpressionStatement",
                  "src": "13206:55:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60996,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60960,
                        "src": "13278:3:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60997,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60964,
                        "src": "13283:21:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60995,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61488
                      ],
                      "referencedDeclaration": 61488,
                      "src": "13272:5:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 60998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13272:33:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60999,
                  "nodeType": "ExpressionStatement",
                  "src": "13272:33:273"
                }
              ]
            },
            "documentation": {
              "id": 60958,
              "nodeType": "StructuredDocumentation",
              "src": "12582:44:273",
              "text": "@dev Transfers the tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferClaimedTokens",
            "nameLocation": "12640:21:273",
            "parameters": {
              "id": 60965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60960,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "12679:3:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61001,
                  "src": "12671:11:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12671:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60962,
                  "mutability": "mutable",
                  "name": "_conditionId",
                  "nameLocation": "12700:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61001,
                  "src": "12692:20:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12692:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60964,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "12730:21:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61001,
                  "src": "12722:29:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12722:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12661:96:273"
            },
            "returnParameters": {
              "id": 60966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12767:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61118,
            "nodeType": "FunctionDefinition",
            "src": "13411:1565:273",
            "nodes": [],
            "body": {
              "id": 61117,
              "nodeType": "Block",
              "src": "13638:1338:273",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61019,
                      "mutability": "mutable",
                      "name": "currentClaimPhase",
                      "nameLocation": "13670:17:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61117,
                      "src": "13648:39:273",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                      },
                      "typeName": {
                        "id": 61018,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61017,
                          "name": "ClaimCondition",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 58121,
                          "src": "13648:14:273"
                        },
                        "referencedDeclaration": 58121,
                        "src": "13648:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61024,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 61020,
                        "name": "claimCondition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60360,
                        "src": "13690:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                        }
                      },
                      "id": 61021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58130,
                      "src": "13690:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                        "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                      }
                    },
                    "id": 61023,
                    "indexExpression": {
                      "id": 61022,
                      "name": "_conditionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61004,
                      "src": "13712:12:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13690:35:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13648:77:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 61029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61026,
                            "name": "_currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61010,
                            "src": "13757:9:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 61027,
                              "name": "currentClaimPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61019,
                              "src": "13770:17:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                              }
                            },
                            "id": 61028,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58120,
                            "src": "13770:26:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13757:39:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61030,
                            "name": "_pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61012,
                            "src": "13800:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 61031,
                              "name": "currentClaimPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61019,
                              "src": "13818:17:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                              }
                            },
                            "id": 61032,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pricePerToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58118,
                            "src": "13818:31:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13800:49:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13757:92:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642063757272656e6379206f72207072696365207370656369666965642e",
                        "id": 61035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13863:38:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2de1caab57554e959602bcaeef5c577667916934f9285c1a37364f09e7139647",
                          "typeString": "literal_string \"invalid currency or price specified.\""
                        },
                        "value": "invalid currency or price specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2de1caab57554e959602bcaeef5c577667916934f9285c1a37364f09e7139647",
                          "typeString": "literal_string \"invalid currency or price specified.\""
                        }
                      ],
                      "id": 61025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13736:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13736:175:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61037,
                  "nodeType": "ExpressionStatement",
                  "src": "13736:175:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61039,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61008,
                            "src": "14051:9:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14063:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14051:13:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 61048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "14085:32:273",
                                "subExpression": {
                                  "id": 61042,
                                  "name": "verifyMaxQuantityPerTransaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61014,
                                  "src": "14086:31:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61044,
                                  "name": "_quantity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61008,
                                  "src": "14121:9:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 61045,
                                    "name": "currentClaimPhase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61019,
                                    "src": "14134:17:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                                    }
                                  },
                                  "id": 61046,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "quantityLimitPerTransaction",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58112,
                                  "src": "14134:45:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14121:58:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14085:94:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 61049,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14084:96:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14051:129:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207175616e7469747920636c61696d65642e",
                        "id": 61051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14194:27:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a43e6443f767405edd28461af75f84e8deba963f76f7910a4d3548ab41da537e",
                          "typeString": "literal_string \"invalid quantity claimed.\""
                        },
                        "value": "invalid quantity claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a43e6443f767405edd28461af75f84e8deba963f76f7910a4d3548ab41da537e",
                          "typeString": "literal_string \"invalid quantity claimed.\""
                        }
                      ],
                      "id": 61038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14030:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14030:201:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61053,
                  "nodeType": "ExpressionStatement",
                  "src": "14030:201:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 61055,
                              "name": "currentClaimPhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61019,
                              "src": "14262:17:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                              }
                            },
                            "id": 61056,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supplyClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58110,
                            "src": "14262:31:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 61057,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61008,
                            "src": "14296:9:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14262:43:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 61059,
                            "name": "currentClaimPhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61019,
                            "src": "14309:17:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                              "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                            }
                          },
                          "id": 61060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxClaimableSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58108,
                          "src": "14309:36:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14262:83:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d6178206d696e7420737570706c792e",
                        "id": 61062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14359:25:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_207e6df2d6b90c85918939829178b51c9262c4c769a07561b29a25471036f7db",
                          "typeString": "literal_string \"exceed max mint supply.\""
                        },
                        "value": "exceed max mint supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_207e6df2d6b90c85918939829178b51c9262c4c769a07561b29a25471036f7db",
                          "typeString": "literal_string \"exceed max mint supply.\""
                        }
                      ],
                      "id": 61054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14241:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14241:153:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61064,
                  "nodeType": "ExpressionStatement",
                  "src": "14241:153:273"
                },
                {
                  "assignments": [
                    61066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61066,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "14413:15:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61117,
                      "src": "14405:23:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61065,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14405:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61068,
                  "initialValue": {
                    "id": 61067,
                    "name": "maxTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60356,
                    "src": "14431:14:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14405:40:273"
                },
                {
                  "assignments": [
                    61070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61070,
                      "mutability": "mutable",
                      "name": "_maxWalletClaimCount",
                      "nameLocation": "14463:20:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61117,
                      "src": "14455:28:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14455:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61072,
                  "initialValue": {
                    "id": 61071,
                    "name": "maxWalletClaimCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60353,
                    "src": "14486:19:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14455:50:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61074,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61066,
                            "src": "14523:15:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14542:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14523:20:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 61080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 61077,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153868,
                                "src": "14547:11:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 61078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14547:13:273",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 61079,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61008,
                              "src": "14563:9:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14547:25:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 61081,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61066,
                            "src": "14576:15:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14547:44:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14523:68:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 61084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14593:26:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 61073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14515:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14515:105:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61086,
                  "nodeType": "ExpressionStatement",
                  "src": "14515:105:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61088,
                            "name": "_maxWalletClaimCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61070,
                            "src": "14651:20:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14675:1:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14651:25:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 61095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 61091,
                                "name": "walletClaimCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60365,
                                "src": "14680:16:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 61093,
                              "indexExpression": {
                                "id": 61092,
                                "name": "_claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61006,
                                "src": "14697:8:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14680:26:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 61094,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61008,
                              "src": "14709:9:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14680:38:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 61096,
                            "name": "_maxWalletClaimCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61070,
                            "src": "14722:20:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14680:62:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14651:91:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786365656420636c61696d206c696d697420666f722077616c6c6574",
                        "id": 61099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14756:31:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67aab5f6b3560b6c1cc17272dc6843c4308f6f49cfa9defb1fc3dc99d1ddb85b",
                          "typeString": "literal_string \"exceed claim limit for wallet\""
                        },
                        "value": "exceed claim limit for wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67aab5f6b3560b6c1cc17272dc6843c4308f6f49cfa9defb1fc3dc99d1ddb85b",
                          "typeString": "literal_string \"exceed claim limit for wallet\""
                        }
                      ],
                      "id": 61087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14630:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14630:167:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61101,
                  "nodeType": "ExpressionStatement",
                  "src": "14630:167:273"
                },
                {
                  "assignments": [
                    null,
                    61103
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 61103,
                      "mutability": "mutable",
                      "name": "nextValidClaimTimestamp",
                      "nameLocation": "14819:23:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61117,
                      "src": "14811:31:273",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61102,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14811:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61108,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61105,
                        "name": "_conditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61004,
                        "src": "14864:12:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61106,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61006,
                        "src": "14878:8:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61104,
                      "name": "getClaimTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61302,
                      "src": "14846:17:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 61107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14846:41:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14808:79:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61110,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14905:5:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 61111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14905:15:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 61112,
                          "name": "nextValidClaimTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61103,
                          "src": "14924:23:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14905:42:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f7420636c61696d207965742e",
                        "id": 61114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14949:19:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b93c8388c0612091f7223f62d3400886293525aede70f1215828f290de6bbcc5",
                          "typeString": "literal_string \"cannot claim yet.\""
                        },
                        "value": "cannot claim yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b93c8388c0612091f7223f62d3400886293525aede70f1215828f290de6bbcc5",
                          "typeString": "literal_string \"cannot claim yet.\""
                        }
                      ],
                      "id": 61109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14897:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14897:72:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61116,
                  "nodeType": "ExpressionStatement",
                  "src": "14897:72:273"
                }
              ]
            },
            "documentation": {
              "id": 61002,
              "nodeType": "StructuredDocumentation",
              "src": "13318:88:273",
              "text": "@dev Checks a request to claim tokens against the active claim condition's criteria."
            },
            "functionSelector": "afb82916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "13420:11:273",
            "parameters": {
              "id": 61015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61004,
                  "mutability": "mutable",
                  "name": "_conditionId",
                  "nameLocation": "13449:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13441:20:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13441:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61006,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "13479:8:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13471:16:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13471:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61008,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "13505:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13497:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13497:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61010,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "13532:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13524:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13524:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61012,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "13559:14:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13551:22:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13551:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61014,
                  "mutability": "mutable",
                  "name": "verifyMaxQuantityPerTransaction",
                  "nameLocation": "13588:31:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61118,
                  "src": "13583:36:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61013,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13583:4:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13431:194:273"
            },
            "returnParameters": {
              "id": 61016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13638:0:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61207,
            "nodeType": "FunctionDefinition",
            "src": "15068:1093:273",
            "nodes": [],
            "body": {
              "id": 61206,
              "nodeType": "Block",
              "src": "15344:817:273",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61139,
                      "mutability": "mutable",
                      "name": "currentClaimPhase",
                      "nameLocation": "15376:17:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61206,
                      "src": "15354:39:273",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                      },
                      "typeName": {
                        "id": 61138,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61137,
                          "name": "ClaimCondition",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 58121,
                          "src": "15354:14:273"
                        },
                        "referencedDeclaration": 58121,
                        "src": "15354:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61144,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 61140,
                        "name": "claimCondition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60360,
                        "src": "15396:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                        }
                      },
                      "id": 61141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58130,
                      "src": "15396:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                        "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                      }
                    },
                    "id": 61143,
                    "indexExpression": {
                      "id": 61142,
                      "name": "_conditionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61121,
                      "src": "15418:12:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15396:35:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15354:77:273"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 61151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61145,
                        "name": "currentClaimPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61139,
                        "src": "15446:17:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                          "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                        }
                      },
                      "id": 61146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "merkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58116,
                      "src": "15446:28:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 61149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15486:1:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 61148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15478:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 61147,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15478:7:273",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15478:10:273",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15446:42:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61205,
                  "nodeType": "IfStatement",
                  "src": "15442:713:273",
                  "trueBody": {
                    "id": 61204,
                    "nodeType": "Block",
                    "src": "15490:665:273",
                    "statements": [
                      {
                        "expression": {
                          "id": 61168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 61152,
                                "name": "validMerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61133,
                                "src": "15505:16:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 61153,
                                "name": "merkleProofIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61135,
                                "src": "15523:16:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 61154,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "15504:36:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 61157,
                                "name": "_proofs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61128,
                                "src": "15579:7:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 61158,
                                  "name": "currentClaimPhase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61139,
                                  "src": "15604:17:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                                  }
                                },
                                "id": 61159,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "merkleRoot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58116,
                                "src": "15604:28:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 61163,
                                        "name": "_claimer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61123,
                                        "src": "15677:8:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 61164,
                                        "name": "_proofMaxQuantityPerTransaction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61130,
                                        "src": "15687:31:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 61161,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "15660:3:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 61162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "15660:16:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 61165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15660:59:273",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 61160,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "15650:9:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 61166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15650:70:273",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 61155,
                                "name": "MerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64593,
                                "src": "15543:11:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProof_$64593_$",
                                  "typeString": "type(library MerkleProof)"
                                }
                              },
                              "id": 61156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64592,
                              "src": "15543:18:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_t_uint256_$",
                                "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool,uint256)"
                              }
                            },
                            "id": 61167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15543:191:273",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256)"
                            }
                          },
                          "src": "15504:230:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61169,
                        "nodeType": "ExpressionStatement",
                        "src": "15504:230:273"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 61171,
                              "name": "validMerkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61133,
                              "src": "15756:16:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f7420696e2077686974656c6973742e",
                              "id": 61172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15774:19:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6eba70fd1f53eaea3f286254781d2de210c7e842143118f12c6651d27bba079",
                                "typeString": "literal_string \"not in whitelist.\""
                              },
                              "value": "not in whitelist."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6eba70fd1f53eaea3f286254781d2de210c7e842143118f12c6651d27bba079",
                                "typeString": "literal_string \"not in whitelist.\""
                              }
                            ],
                            "id": 61170,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15748:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 61173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15748:46:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61174,
                        "nodeType": "ExpressionStatement",
                        "src": "15748:46:273"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 61189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "15833:83:273",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 61185,
                                            "name": "_claimer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61123,
                                            "src": "15905:8:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 61184,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "15897:7:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint160_$",
                                            "typeString": "type(uint160)"
                                          },
                                          "typeName": {
                                            "id": 61183,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "15897:7:273",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 61186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15897:17:273",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
                                      "id": 61182,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15889:7:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 61181,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15889:7:273",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15889:26:273",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 61176,
                                        "name": "claimCondition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60360,
                                        "src": "15834:14:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                        }
                                      },
                                      "id": 61177,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "limitMerkleProofClaim",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58141,
                                      "src": "15834:36:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_BitMap_$161294_storage_$",
                                        "typeString": "mapping(uint256 => struct BitMapsUpgradeable.BitMap storage ref)"
                                      }
                                    },
                                    "id": 61179,
                                    "indexExpression": {
                                      "id": 61178,
                                      "name": "_conditionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61121,
                                      "src": "15871:12:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15834:50:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BitMap_$161294_storage",
                                      "typeString": "struct BitMapsUpgradeable.BitMap storage ref"
                                    }
                                  },
                                  "id": 61180,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "get",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 161330,
                                  "src": "15834:54:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_BitMap_$161294_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_BitMap_$161294_storage_ptr_$",
                                    "typeString": "function (struct BitMapsUpgradeable.BitMap storage pointer,uint256) view returns (bool)"
                                  }
                                },
                                "id": 61188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15834:82:273",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "70726f6f6620636c61696d65642e",
                              "id": 61190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15934:16:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5395fb6e87a0e28e8aecc58885b726e1763cec2cd308950b709761e9fe1b811e",
                                "typeString": "literal_string \"proof claimed.\""
                              },
                              "value": "proof claimed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5395fb6e87a0e28e8aecc58885b726e1763cec2cd308950b709761e9fe1b811e",
                                "typeString": "literal_string \"proof claimed.\""
                              }
                            ],
                            "id": 61175,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15808:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 61191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15808:156:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61192,
                        "nodeType": "ExpressionStatement",
                        "src": "15808:156:273"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 61200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61194,
                                  "name": "_proofMaxQuantityPerTransaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61130,
                                  "src": "16003:31:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 61195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16038:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16003:36:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61197,
                                  "name": "_quantity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61125,
                                  "src": "16043:9:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 61198,
                                  "name": "_proofMaxQuantityPerTransaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61130,
                                  "src": "16056:31:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16043:44:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "16003:84:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964207175616e746974792070726f6f662e",
                              "id": 61201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16105:25:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_330c76d384856c1daf363283c3a6e4619470e1cba6d31b646def671aaf35a526",
                                "typeString": "literal_string \"invalid quantity proof.\""
                              },
                              "value": "invalid quantity proof."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_330c76d384856c1daf363283c3a6e4619470e1cba6d31b646def671aaf35a526",
                                "typeString": "literal_string \"invalid quantity proof.\""
                              }
                            ],
                            "id": 61193,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15978:7:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 61202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15978:166:273",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61203,
                        "nodeType": "ExpressionStatement",
                        "src": "15978:166:273"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 61119,
              "nodeType": "StructuredDocumentation",
              "src": "14982:81:273",
              "text": "@dev Checks whether a claimer meets the claim condition's allowlist criteria."
            },
            "functionSelector": "af3be890",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaimMerkleProof",
            "nameLocation": "15077:22:273",
            "parameters": {
              "id": 61131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61121,
                  "mutability": "mutable",
                  "name": "_conditionId",
                  "nameLocation": "15117:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15109:20:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15109:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61123,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "15147:8:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15139:16:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15139:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61125,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "15173:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15165:17:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15165:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61128,
                  "mutability": "mutable",
                  "name": "_proofs",
                  "nameLocation": "15211:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15192:26:273",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61126,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "15192:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 61127,
                    "nodeType": "ArrayTypeName",
                    "src": "15192:9:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61130,
                  "mutability": "mutable",
                  "name": "_proofMaxQuantityPerTransaction",
                  "nameLocation": "15236:31:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15228:39:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15228:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15099:174:273"
            },
            "returnParameters": {
              "id": 61136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61133,
                  "mutability": "mutable",
                  "name": "validMerkleProof",
                  "nameLocation": "15300:16:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15295:21:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15295:4:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61135,
                  "mutability": "mutable",
                  "name": "merkleProofIndex",
                  "nameLocation": "15326:16:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61207,
                  "src": "15318:24:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15318:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15294:49:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61251,
            "nodeType": "FunctionDefinition",
            "src": "16430:377:273",
            "nodes": [],
            "body": {
              "id": 61250,
              "nodeType": "Block",
              "src": "16497:310:273",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 61244,
                    "nodeType": "Block",
                    "src": "16618:137:273",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 61228,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16636:5:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 61229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16636:15:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 61230,
                                  "name": "claimCondition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60360,
                                  "src": "16655:14:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                    "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                  }
                                },
                                "id": 61231,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "phases",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58130,
                                "src": "16655:21:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                  "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                                }
                              },
                              "id": 61235,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61232,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61214,
                                  "src": "16677:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 61233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16681:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16677:5:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16655:28:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                                "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                              }
                            },
                            "id": 61236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58106,
                            "src": "16655:43:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16636:62:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61243,
                        "nodeType": "IfStatement",
                        "src": "16632:113:273",
                        "trueBody": {
                          "id": 61242,
                          "nodeType": "Block",
                          "src": "16700:45:273",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61238,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61214,
                                  "src": "16725:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 61239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16729:1:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16725:5:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 61212,
                              "id": 61241,
                              "nodeType": "Return",
                              "src": "16718:12:273"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61221,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61214,
                      "src": "16578:1:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 61222,
                        "name": "claimCondition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60360,
                        "src": "16582:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                        }
                      },
                      "id": 61223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentStartId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58123,
                      "src": "16582:29:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16578:33:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61245,
                  "initializationExpression": {
                    "assignments": [
                      61214
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 61214,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16520:1:273",
                        "nodeType": "VariableDeclaration",
                        "scope": 61245,
                        "src": "16512:9:273",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 61213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16512:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 61220,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 61215,
                          "name": "claimCondition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60360,
                          "src": "16524:14:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                            "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                          }
                        },
                        "id": 61216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentStartId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58123,
                        "src": "16524:29:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 61217,
                          "name": "claimCondition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60360,
                          "src": "16556:14:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                            "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                          }
                        },
                        "id": 61218,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58125,
                        "src": "16556:20:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16524:52:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16512:64:273"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 61226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "16613:3:273",
                      "subExpression": {
                        "id": 61225,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61214,
                        "src": "16613:1:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61227,
                    "nodeType": "ExpressionStatement",
                    "src": "16613:3:273"
                  },
                  "nodeType": "ForStatement",
                  "src": "16507:248:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f20616374697665206d696e7420636f6e646974696f6e2e",
                        "id": 61247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16772:27:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f6fb06513b0b1b32d68056272c0422eea03597a30d048775aacb1d45147ac13",
                          "typeString": "literal_string \"no active mint condition.\""
                        },
                        "value": "no active mint condition."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f6fb06513b0b1b32d68056272c0422eea03597a30d048775aacb1d45147ac13",
                          "typeString": "literal_string \"no active mint condition.\""
                        }
                      ],
                      "id": 61246,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "16765:6:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 61248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16765:35:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61249,
                  "nodeType": "ExpressionStatement",
                  "src": "16765:35:273"
                }
              ]
            },
            "documentation": {
              "id": 61208,
              "nodeType": "StructuredDocumentation",
              "src": "16348:77:273",
              "text": "@dev At any given moment, returns the uid for the active claim condition."
            },
            "functionSelector": "c68907de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveClaimConditionId",
            "nameLocation": "16439:25:273",
            "parameters": {
              "id": 61209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16464:2:273"
            },
            "returnParameters": {
              "id": 61212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61251,
                  "src": "16488:7:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16488:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16487:9:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61302,
            "nodeType": "FunctionDefinition",
            "src": "16906:688:273",
            "nodes": [],
            "body": {
              "id": 61301,
              "nodeType": "Block",
              "src": "17083:511:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61263,
                      "name": "lastClaimTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61259,
                      "src": "17093:18:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 61264,
                            "name": "claimCondition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60360,
                            "src": "17114:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                              "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                            }
                          },
                          "id": 61265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "limitLastClaimTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58136,
                          "src": "17114:38:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 61267,
                        "indexExpression": {
                          "id": 61266,
                          "name": "_conditionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61254,
                          "src": "17153:12:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17114:52:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 61269,
                      "indexExpression": {
                        "id": 61268,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61256,
                        "src": "17167:8:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17114:62:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17093:83:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61271,
                  "nodeType": "ExpressionStatement",
                  "src": "17093:83:273"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61272,
                      "name": "lastClaimTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61259,
                      "src": "17191:18:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17213:1:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17191:23:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61300,
                  "nodeType": "IfStatement",
                  "src": "17187:401:273",
                  "trueBody": {
                    "id": 61299,
                    "nodeType": "Block",
                    "src": "17216:372:273",
                    "statements": [
                      {
                        "id": 61298,
                        "nodeType": "UncheckedBlock",
                        "src": "17230:348:273",
                        "statements": [
                          {
                            "expression": {
                              "id": 61283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 61275,
                                "name": "nextValidClaimTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61261,
                                "src": "17258:23:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61276,
                                  "name": "lastClaimTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61259,
                                  "src": "17304:18:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 61277,
                                        "name": "claimCondition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60360,
                                        "src": "17345:14:273",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                                          "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                                        }
                                      },
                                      "id": 61278,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58130,
                                      "src": "17345:21:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                                        "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                                      }
                                    },
                                    "id": 61280,
                                    "indexExpression": {
                                      "id": 61279,
                                      "name": "_conditionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61254,
                                      "src": "17367:12:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17345:35:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                                    }
                                  },
                                  "id": 61281,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "waitTimeInSecondsBetweenClaims",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58114,
                                  "src": "17345:66:273",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17304:107:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17258:153:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 61284,
                            "nodeType": "ExpressionStatement",
                            "src": "17258:153:273"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 61287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 61285,
                                "name": "nextValidClaimTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61261,
                                "src": "17434:23:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 61286,
                                "name": "lastClaimTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61259,
                                "src": "17460:18:273",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17434:44:273",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 61297,
                            "nodeType": "IfStatement",
                            "src": "17430:134:273",
                            "trueBody": {
                              "id": 61296,
                              "nodeType": "Block",
                              "src": "17480:84:273",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 61294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 61288,
                                      "name": "nextValidClaimTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61261,
                                      "src": "17502:23:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 61291,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17533:7:273",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 61290,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17533:7:273",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            }
                                          ],
                                          "id": 61289,
                                          "name": "type",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -27,
                                          "src": "17528:4:273",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 61292,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17528:13:273",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                                          "typeString": "type(uint256)"
                                        }
                                      },
                                      "id": 61293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "max",
                                      "nodeType": "MemberAccess",
                                      "src": "17528:17:273",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17502:43:273",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 61295,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17502:43:273"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 61252,
              "nodeType": "StructuredDocumentation",
              "src": "16813:88:273",
              "text": "@dev Returns the timestamp for when a claimer is eligible for claiming tokens again."
            },
            "functionSelector": "86ee745d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimTimestamp",
            "nameLocation": "16915:17:273",
            "parameters": {
              "id": 61257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61254,
                  "mutability": "mutable",
                  "name": "_conditionId",
                  "nameLocation": "16941:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61302,
                  "src": "16933:20:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16933:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61256,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "16963:8:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61302,
                  "src": "16955:16:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16955:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16932:40:273"
            },
            "returnParameters": {
              "id": 61262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61259,
                  "mutability": "mutable",
                  "name": "lastClaimTimestamp",
                  "nameLocation": "17026:18:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61302,
                  "src": "17018:26:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17018:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61261,
                  "mutability": "mutable",
                  "name": "nextValidClaimTimestamp",
                  "nameLocation": "17054:23:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61302,
                  "src": "17046:31:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17046:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17017:61:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61319,
            "nodeType": "FunctionDefinition",
            "src": "17659:173:273",
            "nodes": [],
            "body": {
              "id": 61318,
              "nodeType": "Block",
              "src": "17768:64:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61311,
                      "name": "condition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61309,
                      "src": "17778:9:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 61312,
                          "name": "claimCondition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60360,
                          "src": "17790:14:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimConditionList_$58142_storage",
                            "typeString": "struct IDropClaimCondition_V2.ClaimConditionList storage ref"
                          }
                        },
                        "id": 61313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "phases",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58130,
                        "src": "17790:21:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$58121_storage_$",
                          "typeString": "mapping(uint256 => struct IDropClaimCondition_V2.ClaimCondition storage ref)"
                        }
                      },
                      "id": 61315,
                      "indexExpression": {
                        "id": 61314,
                        "name": "_conditionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61305,
                        "src": "17812:12:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17790:35:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage",
                        "typeString": "struct IDropClaimCondition_V2.ClaimCondition storage ref"
                      }
                    },
                    "src": "17778:47:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition memory"
                    }
                  },
                  "id": 61317,
                  "nodeType": "ExpressionStatement",
                  "src": "17778:47:273"
                }
              ]
            },
            "documentation": {
              "id": 61303,
              "nodeType": "StructuredDocumentation",
              "src": "17600:54:273",
              "text": "@dev Returns the claim condition at the given uid."
            },
            "functionSelector": "6f8934f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimConditionById",
            "nameLocation": "17668:21:273",
            "parameters": {
              "id": 61306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61305,
                  "mutability": "mutable",
                  "name": "_conditionId",
                  "nameLocation": "17698:12:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61319,
                  "src": "17690:20:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17690:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17689:22:273"
            },
            "returnParameters": {
              "id": 61310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61309,
                  "mutability": "mutable",
                  "name": "condition",
                  "nameLocation": "17757:9:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61319,
                  "src": "17735:31:273",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimCondition_$58121_memory_ptr",
                    "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                  },
                  "typeName": {
                    "id": 61308,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61307,
                      "name": "ClaimCondition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58121,
                      "src": "17735:14:273"
                    },
                    "referencedDeclaration": 58121,
                    "src": "17735:14:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimCondition_$58121_storage_ptr",
                      "typeString": "struct IDropClaimCondition_V2.ClaimCondition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17734:33:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61335,
            "nodeType": "FunctionDefinition",
            "src": "17895:140:273",
            "nodes": [],
            "body": {
              "id": 61334,
              "nodeType": "Block",
              "src": "17965:70:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 61327,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60347,
                        "src": "17983:20:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 61330,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60344,
                            "src": "18012:14:273",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 61329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18005:6:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 61328,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "18005:6:273",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18005:22:273",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "id": 61332,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "17982:46:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "functionReturnParameters": 61326,
                  "id": 61333,
                  "nodeType": "Return",
                  "src": "17975:53:273"
                }
              ]
            },
            "baseFunctions": [
              50530
            ],
            "documentation": {
              "id": 61320,
              "nodeType": "StructuredDocumentation",
              "src": "17838:52:273",
              "text": "@dev Returns the platform fee recipient and bps."
            },
            "functionSelector": "d45573f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlatformFeeInfo",
            "nameLocation": "17904:18:273",
            "parameters": {
              "id": 61321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17922:2:273"
            },
            "returnParameters": {
              "id": 61326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61335,
                  "src": "17948:7:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17948:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61335,
                  "src": "17957:6:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 61324,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17957:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17947:17:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61358,
            "nodeType": "FunctionDefinition",
            "src": "18289:209:273",
            "nodes": [],
            "body": {
              "id": 61357,
              "nodeType": "Block",
              "src": "18390:108:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 61346,
                        "name": "walletClaimCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60365,
                        "src": "18400:16:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 61348,
                      "indexExpression": {
                        "id": 61347,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61338,
                        "src": "18417:8:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18400:26:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61349,
                      "name": "_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61340,
                      "src": "18429:6:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18400:35:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61351,
                  "nodeType": "ExpressionStatement",
                  "src": "18400:35:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61353,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61338,
                        "src": "18474:8:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61354,
                        "name": "_count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61340,
                        "src": "18484:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61352,
                      "name": "WalletClaimCountUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58292,
                      "src": "18450:23:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18450:41:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61356,
                  "nodeType": "EmitStatement",
                  "src": "18445:46:273"
                }
              ]
            },
            "documentation": {
              "id": 61336,
              "nodeType": "StructuredDocumentation",
              "src": "18222:62:273",
              "text": "@dev Lets a contract admin set a claim count for a wallet."
            },
            "functionSelector": "3ea33f29",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61343,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "18370:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61342,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "18361:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "18361:28:273"
              }
            ],
            "name": "setWalletClaimCount",
            "nameLocation": "18298:19:273",
            "parameters": {
              "id": 61341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61338,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "18326:8:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61358,
                  "src": "18318:16:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18318:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61340,
                  "mutability": "mutable",
                  "name": "_count",
                  "nameLocation": "18344:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61358,
                  "src": "18336:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18336:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18317:34:273"
            },
            "returnParameters": {
              "id": 61345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18390:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61376,
            "nodeType": "FunctionDefinition",
            "src": "18671:180:273",
            "nodes": [],
            "body": {
              "id": 61375,
              "nodeType": "Block",
              "src": "18757:94:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61367,
                      "name": "maxWalletClaimCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60353,
                      "src": "18767:19:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61368,
                      "name": "_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61361,
                      "src": "18789:6:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18767:28:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61370,
                  "nodeType": "ExpressionStatement",
                  "src": "18767:28:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61372,
                        "name": "_count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61361,
                        "src": "18837:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61371,
                      "name": "MaxWalletClaimCountUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58297,
                      "src": "18810:26:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18810:34:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61374,
                  "nodeType": "EmitStatement",
                  "src": "18805:39:273"
                }
              ]
            },
            "documentation": {
              "id": 61359,
              "nodeType": "StructuredDocumentation",
              "src": "18504:162:273",
              "text": "@dev Set a maximum number of tokens that can be claimed by any wallet. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value."
            },
            "functionSelector": "50867957",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61364,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "18737:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61365,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61363,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "18728:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "18728:28:273"
              }
            ],
            "name": "setMaxWalletClaimCount",
            "nameLocation": "18680:22:273",
            "parameters": {
              "id": 61362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61361,
                  "mutability": "mutable",
                  "name": "_count",
                  "nameLocation": "18711:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61376,
                  "src": "18703:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18703:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18702:16:273"
            },
            "returnParameters": {
              "id": 61366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18757:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61394,
            "nodeType": "FunctionDefinition",
            "src": "18985:192:273",
            "nodes": [],
            "body": {
              "id": 61393,
              "nodeType": "Block",
              "src": "19075:102:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61385,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60356,
                      "src": "19085:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61386,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61379,
                      "src": "19102:15:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19085:32:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61388,
                  "nodeType": "ExpressionStatement",
                  "src": "19085:32:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61390,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61379,
                        "src": "19154:15:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61389,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58285,
                      "src": "19132:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19132:38:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61392,
                  "nodeType": "EmitStatement",
                  "src": "19127:43:273"
                }
              ]
            },
            "documentation": {
              "id": 61377,
              "nodeType": "StructuredDocumentation",
              "src": "18857:123:273",
              "text": "@dev Set global maximum supply. Must be parsed to 18 decimals when setting, by adding 18 zeros after the desired value."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61382,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "19055:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61381,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "19046:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "19046:28:273"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "18994:17:273",
            "parameters": {
              "id": 61380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61379,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "19020:15:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61394,
                  "src": "19012:23:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19012:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19011:25:273"
            },
            "returnParameters": {
              "id": 61384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19075:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61412,
            "nodeType": "FunctionDefinition",
            "src": "19259:207:273",
            "nodes": [],
            "body": {
              "id": 61411,
              "nodeType": "Block",
              "src": "19354:112:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61403,
                      "name": "primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60350,
                      "src": "19364:20:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61404,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61397,
                      "src": "19387:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19364:37:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61406,
                  "nodeType": "ExpressionStatement",
                  "src": "19364:37:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61408,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61397,
                        "src": "19444:14:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61407,
                      "name": "PrimarySaleRecipientUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50579,
                      "src": "19416:27:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19416:43:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61410,
                  "nodeType": "EmitStatement",
                  "src": "19411:48:273"
                }
              ]
            },
            "baseFunctions": [
              50574
            ],
            "documentation": {
              "id": 61395,
              "nodeType": "StructuredDocumentation",
              "src": "19183:71:273",
              "text": "@dev Lets a contract admin set the recipient for all primary sales."
            },
            "functionSelector": "6f4f2837",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61400,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "19334:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61399,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "19325:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "19325:28:273"
              }
            ],
            "name": "setPrimarySaleRecipient",
            "nameLocation": "19268:23:273",
            "parameters": {
              "id": 61398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61397,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "19300:14:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61412,
                  "src": "19292:22:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19292:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19291:24:273"
            },
            "returnParameters": {
              "id": 61402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19354:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61447,
            "nodeType": "FunctionDefinition",
            "src": "19549:394:273",
            "nodes": [],
            "body": {
              "id": 61446,
              "nodeType": "Block",
              "src": "19691:252:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 61424,
                          "name": "_platformFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61417,
                          "src": "19709:15:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 61425,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60341,
                          "src": "19728:7:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "19709:26:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "627073203c3d2031303030302e",
                        "id": 61427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19737:15:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac6c06e70f2d8d5a630d12fe64e50ba1b09f8c13f9f063409f4480cdc2256cad",
                          "typeString": "literal_string \"bps <= 10000.\""
                        },
                        "value": "bps <= 10000."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac6c06e70f2d8d5a630d12fe64e50ba1b09f8c13f9f063409f4480cdc2256cad",
                          "typeString": "literal_string \"bps <= 10000.\""
                        }
                      ],
                      "id": 61423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19701:7:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19701:52:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61429,
                  "nodeType": "ExpressionStatement",
                  "src": "19701:52:273"
                },
                {
                  "expression": {
                    "id": 61435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61430,
                      "name": "platformFeeBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60344,
                      "src": "19764:14:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61433,
                          "name": "_platformFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61417,
                          "src": "19788:15:273",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 61432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19781:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 61431,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "19781:6:273",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19781:23:273",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "19764:40:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 61436,
                  "nodeType": "ExpressionStatement",
                  "src": "19764:40:273"
                },
                {
                  "expression": {
                    "id": 61439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61437,
                      "name": "platformFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60347,
                      "src": "19814:20:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61438,
                      "name": "_platformFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61415,
                      "src": "19837:21:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19814:44:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 61440,
                  "nodeType": "ExpressionStatement",
                  "src": "19814:44:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61442,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61415,
                        "src": "19897:21:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61443,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61417,
                        "src": "19920:15:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61441,
                      "name": "PlatformFeeInfoUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50545,
                      "src": "19874:22:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19874:62:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61445,
                  "nodeType": "EmitStatement",
                  "src": "19869:67:273"
                }
              ]
            },
            "baseFunctions": [
              50538
            ],
            "documentation": {
              "id": 61413,
              "nodeType": "StructuredDocumentation",
              "src": "19472:72:273",
              "text": "@dev Lets a contract admin update the platform fee recipient and bps"
            },
            "functionSelector": "1e7ac488",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61420,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "19667:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61421,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61419,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "19658:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "19658:28:273"
              }
            ],
            "name": "setPlatformFeeInfo",
            "nameLocation": "19558:18:273",
            "parameters": {
              "id": 61418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61415,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "19585:21:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61447,
                  "src": "19577:29:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19577:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61417,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "19616:15:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61447,
                  "src": "19608:23:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19608:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19576:56:273"
            },
            "returnParameters": {
              "id": 61422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19691:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61470,
            "nodeType": "FunctionDefinition",
            "src": "20025:213:273",
            "nodes": [],
            "body": {
              "id": 61469,
              "nodeType": "Block",
              "src": "20109:129:273",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61457,
                      "mutability": "mutable",
                      "name": "prevURI",
                      "nameLocation": "20133:7:273",
                      "nodeType": "VariableDeclaration",
                      "scope": 61469,
                      "src": "20119:21:273",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 61456,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "20119:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61459,
                  "initialValue": {
                    "id": 61458,
                    "name": "contractURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60337,
                    "src": "20143:11:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20119:35:273"
                },
                {
                  "expression": {
                    "id": 61462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61460,
                      "name": "contractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60337,
                      "src": "20164:11:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61461,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61450,
                      "src": "20178:4:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "20164:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 61463,
                  "nodeType": "ExpressionStatement",
                  "src": "20164:18:273"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61465,
                        "name": "prevURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61457,
                        "src": "20217:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 61466,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61450,
                        "src": "20226:4:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 61464,
                      "name": "ContractURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58304,
                      "src": "20198:18:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 61467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20198:33:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61468,
                  "nodeType": "EmitStatement",
                  "src": "20193:38:273"
                }
              ]
            },
            "baseFunctions": [
              55678
            ],
            "documentation": {
              "id": 61448,
              "nodeType": "StructuredDocumentation",
              "src": "19949:71:273",
              "text": "@dev Lets a contract admin set the URI for contract-level metadata."
            },
            "functionSelector": "938e3d7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61453,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148847,
                    "src": "20089:18:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61454,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61452,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 148858,
                  "src": "20080:8:273"
                },
                "nodeType": "ModifierInvocation",
                "src": "20080:28:273"
              }
            ],
            "name": "setContractURI",
            "nameLocation": "20034:14:273",
            "parameters": {
              "id": 61451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61450,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "20065:4:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61470,
                  "src": "20049:20:273",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61449,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20049:6:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20048:22:273"
            },
            "returnParameters": {
              "id": 61455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20109:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61488,
            "nodeType": "FunctionDefinition",
            "src": "20426:160:273",
            "nodes": [],
            "body": {
              "id": 61487,
              "nodeType": "Block",
              "src": "20541:45:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61483,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61472,
                        "src": "20563:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61484,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61474,
                        "src": "20572:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61480,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "20551:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_V2_$61533_$",
                          "typeString": "type(contract super DropERC20_V2)"
                        }
                      },
                      "id": 61482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154882,
                      "src": "20551:11:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20551:28:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61486,
                  "nodeType": "ExpressionStatement",
                  "src": "20551:28:273"
                }
              ]
            },
            "baseFunctions": [
              154186,
              154882
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "20435:5:273",
            "overrides": {
              "id": 61478,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61476,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "20500:16:273"
                },
                {
                  "id": 61477,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "20518:21:273"
                }
              ],
              "src": "20491:49:273"
            },
            "parameters": {
              "id": 61475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61472,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "20449:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61488,
                  "src": "20441:15:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20441:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61474,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20466:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61488,
                  "src": "20458:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20458:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20440:33:273"
            },
            "returnParameters": {
              "id": 61479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20541:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 61506,
            "nodeType": "FunctionDefinition",
            "src": "20592:160:273",
            "nodes": [],
            "body": {
              "id": 61505,
              "nodeType": "Block",
              "src": "20707:45:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61501,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61490,
                        "src": "20729:7:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61502,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61492,
                        "src": "20738:6:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61498,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "20717:5:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_V2_$61533_$",
                          "typeString": "type(contract super DropERC20_V2)"
                        }
                      },
                      "id": 61500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154905,
                      "src": "20717:11:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20717:28:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61504,
                  "nodeType": "ExpressionStatement",
                  "src": "20717:28:273"
                }
              ]
            },
            "baseFunctions": [
              154258,
              154905
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "20601:5:273",
            "overrides": {
              "id": 61496,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61494,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "20666:16:273"
                },
                {
                  "id": 61495,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "20684:21:273"
                }
              ],
              "src": "20657:49:273"
            },
            "parameters": {
              "id": 61493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61490,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "20615:7:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61506,
                  "src": "20607:15:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20607:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61492,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20632:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61506,
                  "src": "20624:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20624:7:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20606:33:273"
            },
            "returnParameters": {
              "id": 61497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20707:0:273"
            },
            "scope": 61533,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 61519,
            "nodeType": "FunctionDefinition",
            "src": "20758:231:273",
            "nodes": [],
            "body": {
              "id": 61518,
              "nodeType": "Block",
              "src": "20927:62:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61514,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "20944:25:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 61515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "20944:36:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 61516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20944:38:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 61513,
                  "id": 61517,
                  "nodeType": "Return",
                  "src": "20937:45:273"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "20767:10:273",
            "overrides": {
              "id": 61510,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61508,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "20843:18:273"
                },
                {
                  "id": 61509,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "20863:25:273"
                }
              ],
              "src": "20834:55:273"
            },
            "parameters": {
              "id": 61507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20777:2:273"
            },
            "returnParameters": {
              "id": 61513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61512,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "20915:6:273",
                  "nodeType": "VariableDeclaration",
                  "scope": 61519,
                  "src": "20907:14:273",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20907:7:273",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20906:16:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 61532,
            "nodeType": "FunctionDefinition",
            "src": "20995:227:273",
            "nodes": [],
            "body": {
              "id": 61531,
              "nodeType": "Block",
              "src": "21162:60:273",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61527,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "21179:25:273",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 61528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "21179:34:273",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 61529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21179:36:273",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 61526,
                  "id": 61530,
                  "nodeType": "Return",
                  "src": "21172:43:273"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "21004:8:273",
            "overrides": {
              "id": 61523,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61521,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "21078:18:273"
                },
                {
                  "id": 61522,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "21098:25:273"
                }
              ],
              "src": "21069:55:273"
            },
            "parameters": {
              "id": 61520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21012:2:273"
            },
            "returnParameters": {
              "id": 61526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61532,
                  "src": "21142:14:273",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61524,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21142:5:273",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21141:16:273"
            },
            "scope": 61533,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60294,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1202:13:273"
            },
            "id": 60295,
            "nodeType": "InheritanceSpecifier",
            "src": "1202:13:273"
          },
          {
            "baseName": {
              "id": 60296,
              "name": "IThirdwebContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55679,
              "src": "1221:17:273"
            },
            "id": 60297,
            "nodeType": "InheritanceSpecifier",
            "src": "1221:17:273"
          },
          {
            "baseName": {
              "id": 60298,
              "name": "IPrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50580,
              "src": "1244:12:273"
            },
            "id": 60299,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:12:273"
          },
          {
            "baseName": {
              "id": 60300,
              "name": "IPlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50559,
              "src": "1262:12:273"
            },
            "id": 60301,
            "nodeType": "InheritanceSpecifier",
            "src": "1262:12:273"
          },
          {
            "baseName": {
              "id": 60302,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152055,
              "src": "1280:26:273"
            },
            "id": 60303,
            "nodeType": "InheritanceSpecifier",
            "src": "1280:26:273"
          },
          {
            "baseName": {
              "id": 60304,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1312:25:273"
            },
            "id": 60305,
            "nodeType": "InheritanceSpecifier",
            "src": "1312:25:273"
          },
          {
            "baseName": {
              "id": 60306,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1343:20:273"
            },
            "id": 60307,
            "nodeType": "InheritanceSpecifier",
            "src": "1343:20:273"
          },
          {
            "baseName": {
              "id": 60308,
              "name": "AccessControlEnumerableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 148804,
              "src": "1369:34:273"
            },
            "id": 60309,
            "nodeType": "InheritanceSpecifier",
            "src": "1369:34:273"
          },
          {
            "baseName": {
              "id": 60310,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154516,
              "src": "1409:24:273"
            },
            "id": 60311,
            "nodeType": "InheritanceSpecifier",
            "src": "1409:24:273"
          },
          {
            "baseName": {
              "id": 60312,
              "name": "ERC20VotesUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 155173,
              "src": "1439:21:273"
            },
            "id": 60313,
            "nodeType": "InheritanceSpecifier",
            "src": "1439:21:273"
          },
          {
            "baseName": {
              "id": 60314,
              "name": "IDropERC20_V2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58332,
              "src": "1466:13:273"
            },
            "id": 60315,
            "nodeType": "InheritanceSpecifier",
            "src": "1466:13:273"
          }
        ],
        "canonicalName": "DropERC20_V2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61533,
          58332,
          58143,
          155173,
          155389,
          158875,
          155425,
          154516,
          154374,
          155198,
          154452,
          148804,
          149144,
          158919,
          158931,
          149169,
          149242,
          157897,
          75765,
          157714,
          151699,
          152055,
          50559,
          50580,
          55679,
          151869
        ],
        "name": "DropERC20_V2",
        "nameLocation": "1182:12:273",
        "scope": 61534,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 273
}