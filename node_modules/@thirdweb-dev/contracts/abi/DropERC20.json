{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620023501760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b615282806200015c6000396000f3fe6080604052600436106102965760003560e01c80637ecebe00116101615780637ecebe001461066157806384bb1e42146106815780638e539e8c146106945780639010d07c146106b457806391d14854146106d4578063938e3d7b146106f457806395d89b41146107145780639ab24eb014610729578063a0a8e46014610749578063a217fddf1461075d578063a32fa5b314610772578063a457c2d714610792578063a9059cbb146107b2578063ac9650d8146107d2578063ad1eefc5146107ff578063b6f10c7914610841578063c3cda52014610861578063c68907de14610881578063ca15c87314610896578063cb2ef6f7146108b6578063d45573f6146108d5578063d505accf1461090c578063d547741f1461092c578063d637ed591461094c578063dd62ed3e1461097c578063e57553da1461099c578063e8a3d485146109ce578063f1127ed8146109e3578063f28083c314610a2d57600080fd5b806306fdde031461029b578063079fe40e146102c6578063095ea7b3146102f357806318160ddd146103235780631e7ac4881461034257806323a2902b1461036457806323b872dd14610384578063248a9ca3146103a45780632ab4d052146103d15780632f2ff15d146103e8578063313ce567146104085780633644e5151461042a57806336568abe1461043f578063395093511461045f5780633a46b1a81461047f5780633f3e4c111461049f57806342966c68146104bf57806349c5c5b6146104df578063572b6c05146104ff578063587cde1e1461051f5780635c19a95c1461053f5780636f4f28371461055f5780636f8934f41461057f5780636fcfff45146105ac57806370a08231146105e157806374bc7db71461060157806379cc6790146106215780637e54523c14610641575b600080fd5b3480156102a757600080fd5b506102b0610a4d565b6040516102bd91906143c8565b60405180910390f35b3480156102d257600080fd5b506102db610adf565b6040516001600160a01b0390911681526020016102bd565b3480156102ff57600080fd5b5061031361030e366004614400565b610af3565b60405190151581526020016102bd565b34801561032f57600080fd5b5060a4545b6040519081526020016102bd565b34801561034e57600080fd5b5061036261035d366004614400565b610b17565b005b34801561037057600080fd5b5061031361037f36600461443e565b610b52565b34801561039057600080fd5b5061031361039f3660046144bb565b610f13565b3480156103b057600080fd5b506103346103bf3660046144fc565b60009081526006602052604090205490565b3480156103dd57600080fd5b506103346101a05481565b3480156103f457600080fd5b50610362610403366004614515565b610f43565b34801561041457600080fd5b5060125b60405160ff90911681526020016102bd565b34801561043657600080fd5b50610334610fd9565b34801561044b57600080fd5b5061036261045a366004614515565b610fe8565b34801561046b57600080fd5b5061031361047a366004614400565b611047565b34801561048b57600080fd5b5061033461049a366004614400565b611073565b3480156104ab57600080fd5b506103626104ba3660046144fc565b6110b7565b3480156104cb57600080fd5b506103626104da3660046144fc565b611101565b3480156104eb57600080fd5b506103626104fa366004614696565b611115565b34801561050b57600080fd5b5061031361051a366004614785565b6112b3565b34801561052b57600080fd5b506102db61053a366004614785565b6112d1565b34801561054b57600080fd5b5061036261055a366004614785565b6112f0565b34801561056b57600080fd5b5061036261057a366004614785565b611301565b34801561058b57600080fd5b5061059f61059a3660046144fc565b61132e565b6040516102bd91906147a2565b3480156105b857600080fd5b506105cc6105c7366004614785565b61148b565b60405163ffffffff90911681526020016102bd565b3480156105ed57600080fd5b506103346105fc366004614785565b6114ae565b34801561060d57600080fd5b5061036261061c366004614868565b6114c9565b34801561062d57600080fd5b5061036261063c366004614400565b61180d565b34801561064d57600080fd5b5061036261065c366004614400565b611829565b34801561066d57600080fd5b5061033461067c366004614785565b611857565b61036261068f3660046148be565b611876565b3480156106a057600080fd5b506103346106af3660046144fc565b61199c565b3480156106c057600080fd5b506102db6106cf36600461495f565b6119c9565b3480156106e057600080fd5b506103136106ef366004614515565b611ab8565b34801561070057600080fd5b5061036261070f366004614981565b611ae3565b34801561072057600080fd5b506102b0611b10565b34801561073557600080fd5b50610334610744366004614785565b611b1f565b34801561075557600080fd5b506004610418565b34801561076957600080fd5b50610334600081565b34801561077e57600080fd5b5061031361078d366004614515565b611ba7565b34801561079e57600080fd5b506103136107ad366004614400565b611bfd565b3480156107be57600080fd5b506103136107cd366004614400565b611c8e565b3480156107de57600080fd5b506107f26107ed3660046149b5565b611ca6565b6040516102bd91906149f6565b34801561080b57600080fd5b5061033461081a366004614515565b6000918252600b602090815260408084206001600160a01b03909316845291905290205490565b34801561084d57600080fd5b5061036261085c366004614a58565b611d9a565b34801561086d57600080fd5b5061036261087c366004614a8a565b611e1b565b34801561088d57600080fd5b50610334611f4d565b3480156108a257600080fd5b506103346108b13660046144fc565b611ff0565b3480156108c257600080fd5b5068044726f7045524332360bc1b610334565b3480156108e157600080fd5b506108ea612079565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b34801561091857600080fd5b50610362610927366004614ae4565b612096565b34801561093857600080fd5b50610362610947366004614515565b6121fa565b34801561095857600080fd5b50600854600954610967919082565b604080519283526020830191909152016102bd565b34801561098857600080fd5b50610334610997366004614b52565b612213565b3480156109a857600080fd5b506109c06002546003546001600160a01b0390911691565b6040516102bd929190614b80565b3480156109da57600080fd5b506102b061223e565b3480156109ef57600080fd5b50610a036109fe366004614b99565b6122cc565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102bd565b348015610a3957600080fd5b5060045460ff166040516102bd9190614be6565b606060a58054610a5c90614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890614c0e565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b60045461010090046001600160a01b031690565b600080610afe61235f565b9050610b0b818585612369565b60019150505b92915050565b610b1f61248d565b610b445760405162461bcd60e51b8152600401610b3b90614c43565b60405180910390fd5b610b4e828261249b565b5050565b6000868152600a60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610bd190614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfd90614c0e565b8015610c4a5780601f10610c1f57610100808354040283529160200191610c4a565b820191906000526020600020905b815481529060010190602001808311610c2d57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610d2a57610d26610c828780614c6b565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cd7908d0160608e01614785565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061254a565b5094505b8415610daf576020860135610d3f5782610d45565b85602001355b925060001986604001351415610d5b5781610d61565b85604001355b9150600019866040013514158015610d9257506000610d866080880160608901614785565b6001600160a01b031614155b610d9c5780610dac565b610dac6080870160608801614785565b90505b60008b8152600b602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610de75750828814155b15610e275760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610b3b565b891580610e3c575083610e3a828c614cca565b115b15610e725760405162461bcd60e51b8152600401610b3b906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e879190614cca565b1115610ec25760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610b3b565b8451421015610f045760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610b3b565b50505050509695505050505050565b600080610f1e61235f565b9050610f2b858285612618565b610f36858585612692565b60019150505b9392505050565b600082815260066020526040902054610f5c903361285f565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1615610fcf5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610b3b565b610b4e82826128df565b6000610fe36128f3565b905090565b336001600160a01b0382161461103d5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610b3b565b610b4e8282612970565b60008061105261235f565b9050610b0b8185856110648589612213565b61106e9190614cca565b612369565b60004382106110945760405162461bcd60e51b8152600401610b3b90614ce2565b6001600160a01b038316600090815261016e60205260409020610f3c90836129c7565b60006110c3813361285f565b6101a08290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b61111261110c61235f565b82612a83565b50565b600054610100900460ff16158080156111355750600054600160ff909116105b80611156575061114430612350565b158015611156575060005460ff166001145b6111b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b3b565b6000805460ff1916600117905580156111dc576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c61120686612a8d565b61120f89612ac5565b6112198989612b0f565b61122287612b62565b61122d60008b6128df565b611237818b6128df565b6112428160006128df565b61125584846001600160801b031661249b565b61125e85612c38565b61019f5580156112a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03166000908152603e602052604090205460ff1690565b6001600160a01b03908116600090815261016d60205260409020541690565b6111126112fb61235f565b82612c8a565b61130961248d565b6113255760405162461bcd60e51b8152600401610b3b90614c43565b61111281612c38565b61138260405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600a6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061140290614c0e565b80601f016020809104026020016040519081016040528092919081815260200182805461142e90614c0e565b801561147b5780601f106114505761010080835404028352916020019161147b565b820191906000526020600020905b81548152906001019060200180831161145e57829003601f168201915b5050505050815250509050919050565b6001600160a01b038116600090815261016e6020526040812054610b1190612d0b565b6001600160a01b0316600090815260a2602052604090205490565b6114d161248d565b6114ed5760405162461bcd60e51b8152600401610b3b90614c43565b600854600954818315611507576115048284614cca565b90505b600985905560088190556000805b868110156116ba5780158061154d575087878281811061153757611537614d19565b90506020028101906115499190614d2f565b3582105b61157e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610b3b565b6000600a8161158d8487614cca565b81526020019081526020016000206002015490508888838181106115b3576115b3614d19565b90506020028101906115c59190614d2f565b6020013581111561160d5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610b3b565b88888381811061161f5761161f614d19565b90506020028101906116319190614d2f565b600a600061163f8588614cca565b815260200190815260200160002081816116599190614e9b565b50819050600a600061166b8588614cca565b815260208101919091526040016000206002015588888381811061169157611691614d19565b90506020028101906116a39190614d2f565b3592508190506116b281614f19565b915050611515565b50841561173a57835b82811015611734576000818152600a6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061171f60078301826142a5565b5050808061172c90614f19565b9150506116c3565b506117c9565b858311156117c957855b838110156117c757600a600061175a8386614cca565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906117b260078301826142a5565b505080806117bf90614f19565b915050611744565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516117fc93929190614fa2565b60405180910390a150505050505050565b61181f8261181961235f565b83612618565b610b4e8282612a83565b61183161248d565b61184d5760405162461bcd60e51b8152600401610b3b90614c43565b610b4e8282612d74565b6001600160a01b038116600090815261013a6020526040812054610b11565b611884868686868686612dc6565b600061188e611f4d565b90506118a58161189c612e31565b88888888610b52565b506000818152600a6020526040812060020180548892906118c7908490614cca565b90915550506000818152600b6020526040812087916118e4612e31565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119139190614cca565b9091555061192690506000878787612e3b565b60006119328888612fd4565b9050876001600160a01b0316611946612e31565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b60405161198a929190918252602082015260400190565b60405180910390a45050505050505050565b60004382106119bd5760405162461bcd60e51b8152600401610b3b90614ce2565b610b1161016f836129c7565b60008281526007602052604081205481805b82811015611aaf5760008681526007602090815260408083208484526001019091529020546001600160a01b031615611a585784821415611a465760008681526007602090815260408083209383526001909301905220546001600160a01b03169250610b11915050565b611a51600183614cca565b9150611a9d565b611a63866000611ab8565b8015611a8a5750600086815260076020908152604080832083805260020190915290205481145b15611a9d57611a9a600183614cca565b91505b611aa8600182614cca565b90506119db565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611aeb61248d565b611b075760405162461bcd60e51b8152600401610b3b90614c43565b61111281612b62565b606060a68054610a5c90614c0e565b6001600160a01b038116600090815261016e60205260408120548015611b94576001600160a01b038316600090815261016e60205260409020611b6360018361508a565b81548110611b7357611b73614d19565b600091825260209091200154600160201b90046001600160e01b0316611b97565b60005b6001600160e01b03169392505050565b600082815260056020908152604080832083805290915281205460ff16611bf4575060008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b11565b50600192915050565b600080611c0861235f565b90506000611c168286612213565b905083811015611c765760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b3b565b611c838286868403612369565b506001949350505050565b600080611c9961235f565b9050610b0b818585612692565b6060816001600160401b03811115611cc057611cc0614545565b604051908082528060200260200182016040528015611cf357816020015b6060815260200190600190039081611cde5790505b50905060005b82811015611d9357611d6330858584818110611d1757611d17614d19565b9050602002810190611d299190614d4f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ff192505050565b828281518110611d7557611d75614d19565b60200260200101819052508080611d8b90614f19565b915050611cf9565b5092915050565b611da261248d565b611dbe5760405162461bcd60e51b8152600401610b3b90614c43565b6004805482919060ff191660018381811115611ddc57611ddc614bd0565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611e109190614be6565b60405180910390a150565b83421115611e6b5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610b3b565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611ee590611edd9060a001604051602081830303815290604052805190602001206130e3565b858585613131565b9050611ef08161315b565b8614611f3a5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610b3b565b611f448188612c8a565b50505050505050565b6009546008546000918291611f629190614cca565b90505b600854811115611fb957600a6000611f7e60018461508a565b8152602001908152602001600020600001544210611fa757611fa160018261508a565b91505090565b80611fb1816150a1565b915050611f65565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610b3b565b600081815260076020526040812054815b818110156120545760008481526007602090815260408083208484526001019091529020546001600160a01b0316156120425761203f600184614cca565b92505b61204d600182614cca565b9050612001565b50612060836000611ab8565b1561207357612070600183614cca565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b834211156120e65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610b3b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886121158c61315b565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000612170826130e3565b9050600061218082878787613131565b9050896001600160a01b0316816001600160a01b0316146121e35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610b3b565b6121ee8a8a8a612369565b50505050505050505050565b60008281526006602052604090205461103d903361285f565b6001600160a01b03918216600090815260a36020908152604080832093909416825291909152205490565b6001805461224b90614c0e565b80601f016020809104026020016040519081016040528092919081815260200182805461227790614c0e565b80156122c45780601f10612299576101008083540402835291602001916122c4565b820191906000526020600020905b8154815290600101906020018083116122a757829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261016e60205260409020805463ffffffff841690811061231157612311614d19565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b6000610fe3613182565b6001600160a01b0383166123cb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b3b565b6001600160a01b03821661242c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b3b565b6001600160a01b03838116600081815260a3602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610fe3816106ef61235f565b6127108111156124df5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610b3b565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049060200160405180910390a25050565b6000808281805b875181101561260c576125656002836150b8565b9150600088828151811061257b5761257b614d19565b602002602001015190508084116125bd5760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506125f9565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836125f69190614cca565b92505b508061260481614f19565b915050612551565b50941495939450505050565b60006126248484612213565b9050600019811461268c578181101561267f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b3b565b61268c8484848403612369565b50505050565b6001600160a01b0383166126f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b3b565b6001600160a01b0382166127585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b3b565b6127638383836131a4565b6001600160a01b038316600090815260a26020526040902054818110156127db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b3b565b6001600160a01b03808516600090815260a26020526040808220858503905591851681529081208054849290612812908490614cca565b92505081905550826001600160a01b0316846001600160a01b031660008051602061522d8339815191528460405161284c91815260200190565b60405180910390a361268c848484613244565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b4e5761289d816001600160a01b0316601461324f565b6128a883602061324f565b6040516020016128b99291906150d7565b60408051601f198184030181529082905262461bcd60e51b8252610b3b916004016143c8565b6128e982826133ea565b610b4e8282613445565b6000610fe37f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6129236101065490565b610107546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61297a82826134b2565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b8154600090815b81811015612a2b5760006129e28284613514565b9050848682815481106129f7576129f7614d19565b60009182526020909120015463ffffffff161115612a1757809250612a25565b612a22816001614cca565b91505b506129ce565b8115612a6e5784612a3d60018461508a565b81548110612a4d57612a4d614d19565b600091825260209091200154600160201b90046001600160e01b0316612a71565b60005b6001600160e01b031695945050505050565b610b4e828261352f565b600054610100900460ff16612ab45760405162461bcd60e51b8152600401610b3b90615144565b612abc613548565b61111281613571565b600054610100900460ff16612aec5760405162461bcd60e51b8152600401610b3b90615144565b61111281604051806040016040528060018152602001603160f81b815250613600565b600054610100900460ff16612b365760405162461bcd60e51b8152600401610b3b90615144565b8151612b499060a59060208501906142df565b508051612b5d9060a69060208401906142df565b505050565b600060018054612b7190614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9d90614c0e565b8015612bea5780601f10612bbf57610100808354040283529160200191612bea565b820191906000526020600020905b815481529060010190602001808311612bcd57829003601f168201915b50508551939450612c06936001935060208701925090506142df565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f592919061518f565b60048054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000612c95836112d1565b90506000612ca2846114ae565b6001600160a01b03858116600081815261016d602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461268c828483613643565b600063ffffffff821115612d705760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610b3b565b5090565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906110f59084908490614b80565b6101a054801580612dea57508086612ddd60a45490565b612de79190614cca565b11155b611f445760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610b3b565b6000610fe361235f565b80612e7c573415612e775760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610b3b565b61268c565b600080612e87612079565b909250905060006001600160a01b03871615612ea35786612eab565b612eab610adf565b90506000670de0b6b3a7640000612ec286896150b8565b612ecc91906151b4565b905060008111612f115760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610b3b565b6000612710612f2461ffff8616846150b8565b612f2e91906151b4565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f605750348214612f64565b5034155b80612fa55760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610b3b565b612fb888612fb161235f565b8885613782565b6121ee88612fc461235f565b86612fcf868861508a565b613782565b6000612fe083836137c7565b50600092915050565b505050505050565b6060612ffc83612350565b6130575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b3b565b600080846001600160a01b03168460405161307291906151d6565b600060405180830381855af49150503d80600081146130ad576040519150601f19603f3d011682016040523d82523d6000602084013e6130b2565b606091505b50915091506130da8282604051806060016040528060278152602001615206602791396137d1565b95945050505050565b6000610b116130f06128f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006131428787878761380a565b9150915061314f816138ed565b5090505b949350505050565b6001600160a01b038116600090815261013a60205260409020805460018101825590612073565b600061318d336112b3565b1561319f575060131936013560601c90565b503390565b6131b261019f546000611ab8565b1580156131c757506001600160a01b03831615155b80156131db57506001600160a01b03821615155b15612b5d576131ed61019f5484611ab8565b80613200575061320061019f5483611ab8565b612b5d5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610b3b565b612b5d838383613aa3565b6060600061325e8360026150b8565b613269906002614cca565b6001600160401b0381111561328057613280614545565b6040519080825280601f01601f1916602001820160405280156132aa576020820181803683370190505b509050600360fc1b816000815181106132c5576132c5614d19565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106132f4576132f4614d19565b60200101906001600160f81b031916908160001a90535060006133188460026150b8565b613323906001614cca565b90505b600181111561339b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061335757613357614d19565b1a60f81b82828151811061336d5761336d614d19565b60200101906001600160f81b031916908160001a90535060049490941c93613394816150a1565b9050613326565b508315610f3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b3b565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600760205260408120805491600191906134648385614cca565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6134bc828261285f565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061352360028484186151b4565b610f3c90848416614cca565b6135398282613abe565b61268c61016f613c0d83613c19565b600054610100900460ff1661356f5760405162461bcd60e51b8152600401610b3b90615144565b565b600054610100900460ff166135985760405162461bcd60e51b8152600401610b3b90615144565b60005b8151811015610b4e576001603e60008484815181106135bc576135bc614d19565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806135f881614f19565b91505061359b565b600054610100900460ff166136275760405162461bcd60e51b8152600401610b3b90615144565b8151602092830120815191909201206101069190915561010755565b816001600160a01b0316836001600160a01b0316141580156136655750600081115b15612b5d576001600160a01b038316156136f4576001600160a01b038316600090815261016e6020526040812081906136a190613c0d85613c19565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516136e9929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615612b5d576001600160a01b038216600090815261016e60205260408120819061372b90613d9085613c19565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051613773929190918252602082015260400190565b60405180910390a25050505050565b8061378c5761268c565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156137bb57612e778282613d9c565b61268c84848484613e3e565b610b4e8282613e97565b606083156137e0575081610f3c565b8251156137f05782518084602001fd5b8160405162461bcd60e51b8152600401610b3b91906143c8565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561383757506000905060036138e4565b8460ff16601b1415801561384f57508460ff16601c14155b1561386057506000905060046138e4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156138b4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166138dd576000600192509250506138e4565b9150600090505b94509492505050565b600081600481111561390157613901614bd0565b141561390a5750565b600181600481111561391e5761391e614bd0565b14156139675760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610b3b565b600281600481111561397b5761397b614bd0565b14156139c95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b3b565b60038160048111156139dd576139dd614bd0565b1415613a365760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b3b565b6004816004811115613a4a57613a4a614bd0565b14156111125760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b3b565b612b5d613aaf846112d1565b613ab8846112d1565b83613643565b6001600160a01b038216613b1e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b3b565b613b2a826000836131a4565b6001600160a01b038216600090815260a2602052604090205481811015613b9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b3b565b6001600160a01b038316600090815260a260205260408120838303905560a48054849290613bcd90849061508a565b90915550506040518281526000906001600160a01b0385169060008051602061522d8339815191529060200160405180910390a3612b5d83600084613244565b6000610f3c828461508a565b825460009081908015613c635785613c3260018361508a565b81548110613c4257613c42614d19565b600091825260209091200154600160201b90046001600160e01b0316613c66565b60005b6001600160e01b03169250613c7f83858763ffffffff16565b9150600081118015613cbd57504386613c9960018461508a565b81548110613ca957613ca9614d19565b60009182526020909120015463ffffffff16145b15613d1d57613ccb82613f22565b86613cd760018461508a565b81548110613ce757613ce7614d19565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613d87565b856040518060400160405280613d3243612d0b565b63ffffffff168152602001613d4685613f22565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610f3c8284614cca565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613de9576040519150601f19603f3d011682016040523d82523d6000602084013e613dee565b606091505b5050905080612b5d5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610b3b565b816001600160a01b0316836001600160a01b03161415613e5d5761268c565b6001600160a01b038316301415613e8257612e776001600160a01b0385168383613f8b565b61268c6001600160a01b038516848484613fe1565b613ea18282614019565b60a4546001600160e01b031015613f135760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610b3b565b61268c61016f613d9083613c19565b60006001600160e01b03821115612d705760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610b3b565b612b5d8363a9059cbb60e01b8484604051602401613faa929190614b80565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526140fa565b6040516001600160a01b038085166024830152831660448201526064810182905261268c9085906323b872dd60e01b90608401613faa565b6001600160a01b03821661406f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b3b565b61407b600083836131a4565b8060a4600082825461408d9190614cca565b90915550506001600160a01b038216600090815260a26020526040812080548392906140ba908490614cca565b90915550506040518181526001600160a01b0383169060009060008051602061522d8339815191529060200160405180910390a3610b4e60008383613244565b600061414f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166141cc9092919063ffffffff16565b805190915015612b5d578080602001905181019061416d91906151e8565b612b5d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b3b565b60606131538484600085856141e085612350565b61422c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b3b565b600080866001600160a01b0316858760405161424891906151d6565b60006040518083038185875af1925050503d8060008114614285576040519150601f19603f3d011682016040523d82523d6000602084013e61428a565b606091505b509150915061429a8282866137d1565b979650505050505050565b5080546142b190614c0e565b6000825580601f106142c1575050565b601f016020900490600052602060002090810190611112919061435b565b8280546142eb90614c0e565b90600052602060002090601f01602090048101928261430d5760008555614353565b82601f1061432657805160ff1916838001178555614353565b82800160010185558215614353579182015b82811115614353578251825591602001919060010190614338565b50612d709291505b5b80821115612d70576000815560010161435c565b60005b8381101561438b578181015183820152602001614373565b8381111561268c5750506000910152565b600081518084526143b4816020860160208601614370565b601f01601f19169290920160200192915050565b602081526000610f3c602083018461439c565b6001600160a01b038116811461111257600080fd5b80356143fb816143db565b919050565b6000806040838503121561441357600080fd5b823561441e816143db565b946020939093013593505050565b60006080828403121561207357600080fd5b60008060008060008060c0878903121561445757600080fd5b863595506020870135614469816143db565b9450604087013593506060870135614480816143db565b92506080870135915060a08701356001600160401b038111156144a257600080fd5b6144ae89828a0161442c565b9150509295509295509295565b6000806000606084860312156144d057600080fd5b83356144db816143db565b925060208401356144eb816143db565b929592945050506040919091013590565b60006020828403121561450e57600080fd5b5035919050565b6000806040838503121561452857600080fd5b82359150602083013561453a816143db565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561458357614583614545565b604052919050565b60006001600160401b038311156145a4576145a4614545565b6145b7601f8401601f191660200161455b565b90508281528383830111156145cb57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126145f357600080fd5b610f3c8383356020850161458b565b600082601f83011261461357600080fd5b813560206001600160401b0382111561462e5761462e614545565b8160051b61463d82820161455b565b928352848101820192828101908785111561465757600080fd5b83870192505b8483101561429a578235614670816143db565b8252918301919083019061465d565b80356001600160801b03811681146143fb57600080fd5b600080600080600080600080610100898b0312156146b357600080fd5b6146bc896143f0565b975060208901356001600160401b03808211156146d857600080fd5b6146e48c838d016145e2565b985060408b01359150808211156146fa57600080fd5b6147068c838d016145e2565b975060608b013591508082111561471c57600080fd5b6147288c838d016145e2565b965060808b013591508082111561473e57600080fd5b5061474b8b828c01614602565b94505061475a60a08a016143f0565b925061476860c08a016143f0565b915061477660e08a0161467f565b90509295985092959890939650565b60006020828403121561479757600080fd5b8135610f3c816143db565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061315361012084018261439c565b60008083601f84011261482157600080fd5b5081356001600160401b0381111561483857600080fd5b6020830191508360208260051b850101111561485357600080fd5b9250929050565b801515811461111257600080fd5b60008060006040848603121561487d57600080fd5b83356001600160401b0381111561489357600080fd5b61489f8682870161480f565b90945092505060208401356148b38161485a565b809150509250925092565b60008060008060008060c087890312156148d757600080fd5b86356148e2816143db565b95506020870135945060408701356148f9816143db565b93506060870135925060808701356001600160401b038082111561491c57600080fd5b6149288a838b0161442c565b935060a089013591508082111561493e57600080fd5b508701601f8101891361495057600080fd5b6144ae8982356020840161458b565b6000806040838503121561497257600080fd5b50508035926020909101359150565b60006020828403121561499357600080fd5b81356001600160401b038111156149a957600080fd5b613153848285016145e2565b600080602083850312156149c857600080fd5b82356001600160401b038111156149de57600080fd5b6149ea8582860161480f565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614a4b57603f19888603018452614a3985835161439c565b94509285019290850190600101614a1d565b5092979650505050505050565b600060208284031215614a6a57600080fd5b813560028110610f3c57600080fd5b803560ff811681146143fb57600080fd5b60008060008060008060c08789031215614aa357600080fd5b8635614aae816143db565b95506020870135945060408701359350614aca60608801614a79565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614aff57600080fd5b8735614b0a816143db565b96506020880135614b1a816143db565b95506040880135945060608801359350614b3660808901614a79565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614b6557600080fd5b8235614b70816143db565b9150602083013561453a816143db565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614bac57600080fd5b8235614bb7816143db565b9150602083013563ffffffff8116811461453a57600080fd5b634e487b7160e01b600052602160045260246000fd5b6020810160028310614c0857634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c90821680614c2257607f821691505b6020821081141561207357634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614c8257600080fd5b8301803591506001600160401b03821115614c9c57600080fd5b6020019150600581901b360382131561485357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614cdd57614cdd614cb4565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614d4557600080fd5b9190910192915050565b6000808335601e19843603018112614d6657600080fd5b8301803591506001600160401b03821115614d8057600080fd5b60200191503681900382131561485357600080fd5b601f821115612b5d57600081815260208120601f850160051c81016020861015614dbc5750805b601f850160051c820191505b81811015612fe957828155600101614dc8565b6001600160401b03831115614df257614df2614545565b614e0683614e008354614c0e565b83614d95565b6000601f841160018114614e3a5760008515614e225750838201355b600019600387901b1c1916600186901b178355614e94565b600083815260209020601f19861690835b82811015614e6b5786850135825560209485019460019092019101614e4b565b5086821015614e885760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614ee3816143db565b81546001600160a01b0319166001600160a01b0391909116179055614f0b60e0830183614d4f565b61268c818360078601614ddb565b6000600019821415614f2d57614f2d614cb4565b5060010190565b6000808335601e19843603018112614f4b57600080fd5b83016020810192503590506001600160401b03811115614f6a57600080fd5b80360383131561485357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561507457888403605f190185528235368d900360fe19018112614fe7578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561502e816143db565b6001600160a01b03169088015260e061504984820185614f34565b945083828a015261505d848a018683614f79565b998301999850505094909401935050600101614fc2565b5050508615156020870152935061315392505050565b60008282101561509c5761509c614cb4565b500390565b6000816150b0576150b0614cb4565b506000190190565b60008160001904831182151516156150d2576150d2614cb4565b500290565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615107816015850160208801614370565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615138816026840160208801614370565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006151a2604083018561439c565b82810360208401526130da818561439c565b6000826151d157634e487b7160e01b600052601260045260246000fd5b500490565b60008251614d45818460208701614370565b6000602082840312156151fa57600080fd5b8151610f3c8161485a56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bfdba6138f72524f254953e3ce1b674aff8249772c02a6afef4e0840fc73a59564736f6c634300080c0033",
    "sourceMap": "1526:7953:38:-:0;;;2641:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1526:7953:38;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1526:7953:38;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102965760003560e01c80637ecebe00116101615780637ecebe001461066157806384bb1e42146106815780638e539e8c146106945780639010d07c146106b457806391d14854146106d4578063938e3d7b146106f457806395d89b41146107145780639ab24eb014610729578063a0a8e46014610749578063a217fddf1461075d578063a32fa5b314610772578063a457c2d714610792578063a9059cbb146107b2578063ac9650d8146107d2578063ad1eefc5146107ff578063b6f10c7914610841578063c3cda52014610861578063c68907de14610881578063ca15c87314610896578063cb2ef6f7146108b6578063d45573f6146108d5578063d505accf1461090c578063d547741f1461092c578063d637ed591461094c578063dd62ed3e1461097c578063e57553da1461099c578063e8a3d485146109ce578063f1127ed8146109e3578063f28083c314610a2d57600080fd5b806306fdde031461029b578063079fe40e146102c6578063095ea7b3146102f357806318160ddd146103235780631e7ac4881461034257806323a2902b1461036457806323b872dd14610384578063248a9ca3146103a45780632ab4d052146103d15780632f2ff15d146103e8578063313ce567146104085780633644e5151461042a57806336568abe1461043f578063395093511461045f5780633a46b1a81461047f5780633f3e4c111461049f57806342966c68146104bf57806349c5c5b6146104df578063572b6c05146104ff578063587cde1e1461051f5780635c19a95c1461053f5780636f4f28371461055f5780636f8934f41461057f5780636fcfff45146105ac57806370a08231146105e157806374bc7db71461060157806379cc6790146106215780637e54523c14610641575b600080fd5b3480156102a757600080fd5b506102b0610a4d565b6040516102bd91906143c8565b60405180910390f35b3480156102d257600080fd5b506102db610adf565b6040516001600160a01b0390911681526020016102bd565b3480156102ff57600080fd5b5061031361030e366004614400565b610af3565b60405190151581526020016102bd565b34801561032f57600080fd5b5060a4545b6040519081526020016102bd565b34801561034e57600080fd5b5061036261035d366004614400565b610b17565b005b34801561037057600080fd5b5061031361037f36600461443e565b610b52565b34801561039057600080fd5b5061031361039f3660046144bb565b610f13565b3480156103b057600080fd5b506103346103bf3660046144fc565b60009081526006602052604090205490565b3480156103dd57600080fd5b506103346101a05481565b3480156103f457600080fd5b50610362610403366004614515565b610f43565b34801561041457600080fd5b5060125b60405160ff90911681526020016102bd565b34801561043657600080fd5b50610334610fd9565b34801561044b57600080fd5b5061036261045a366004614515565b610fe8565b34801561046b57600080fd5b5061031361047a366004614400565b611047565b34801561048b57600080fd5b5061033461049a366004614400565b611073565b3480156104ab57600080fd5b506103626104ba3660046144fc565b6110b7565b3480156104cb57600080fd5b506103626104da3660046144fc565b611101565b3480156104eb57600080fd5b506103626104fa366004614696565b611115565b34801561050b57600080fd5b5061031361051a366004614785565b6112b3565b34801561052b57600080fd5b506102db61053a366004614785565b6112d1565b34801561054b57600080fd5b5061036261055a366004614785565b6112f0565b34801561056b57600080fd5b5061036261057a366004614785565b611301565b34801561058b57600080fd5b5061059f61059a3660046144fc565b61132e565b6040516102bd91906147a2565b3480156105b857600080fd5b506105cc6105c7366004614785565b61148b565b60405163ffffffff90911681526020016102bd565b3480156105ed57600080fd5b506103346105fc366004614785565b6114ae565b34801561060d57600080fd5b5061036261061c366004614868565b6114c9565b34801561062d57600080fd5b5061036261063c366004614400565b61180d565b34801561064d57600080fd5b5061036261065c366004614400565b611829565b34801561066d57600080fd5b5061033461067c366004614785565b611857565b61036261068f3660046148be565b611876565b3480156106a057600080fd5b506103346106af3660046144fc565b61199c565b3480156106c057600080fd5b506102db6106cf36600461495f565b6119c9565b3480156106e057600080fd5b506103136106ef366004614515565b611ab8565b34801561070057600080fd5b5061036261070f366004614981565b611ae3565b34801561072057600080fd5b506102b0611b10565b34801561073557600080fd5b50610334610744366004614785565b611b1f565b34801561075557600080fd5b506004610418565b34801561076957600080fd5b50610334600081565b34801561077e57600080fd5b5061031361078d366004614515565b611ba7565b34801561079e57600080fd5b506103136107ad366004614400565b611bfd565b3480156107be57600080fd5b506103136107cd366004614400565b611c8e565b3480156107de57600080fd5b506107f26107ed3660046149b5565b611ca6565b6040516102bd91906149f6565b34801561080b57600080fd5b5061033461081a366004614515565b6000918252600b602090815260408084206001600160a01b03909316845291905290205490565b34801561084d57600080fd5b5061036261085c366004614a58565b611d9a565b34801561086d57600080fd5b5061036261087c366004614a8a565b611e1b565b34801561088d57600080fd5b50610334611f4d565b3480156108a257600080fd5b506103346108b13660046144fc565b611ff0565b3480156108c257600080fd5b5068044726f7045524332360bc1b610334565b3480156108e157600080fd5b506108ea612079565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b34801561091857600080fd5b50610362610927366004614ae4565b612096565b34801561093857600080fd5b50610362610947366004614515565b6121fa565b34801561095857600080fd5b50600854600954610967919082565b604080519283526020830191909152016102bd565b34801561098857600080fd5b50610334610997366004614b52565b612213565b3480156109a857600080fd5b506109c06002546003546001600160a01b0390911691565b6040516102bd929190614b80565b3480156109da57600080fd5b506102b061223e565b3480156109ef57600080fd5b50610a036109fe366004614b99565b6122cc565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016102bd565b348015610a3957600080fd5b5060045460ff166040516102bd9190614be6565b606060a58054610a5c90614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890614c0e565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b60045461010090046001600160a01b031690565b600080610afe61235f565b9050610b0b818585612369565b60019150505b92915050565b610b1f61248d565b610b445760405162461bcd60e51b8152600401610b3b90614c43565b60405180910390fd5b610b4e828261249b565b5050565b6000868152600a60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e0840191610bd190614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfd90614c0e565b8015610c4a5780601f10610c1f57610100808354040283529160200191610c4a565b820191906000526020600020905b815481529060010190602001808311610c2d57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610d2a57610d26610c828780614c6b565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508d9060208b01359060408c013590610cd7908d0160608e01614785565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b1660748201526088016040516020818303038152906040528051906020012061254a565b5094505b8415610daf576020860135610d3f5782610d45565b85602001355b925060001986604001351415610d5b5781610d61565b85604001355b9150600019866040013514158015610d9257506000610d866080880160608901614785565b6001600160a01b031614155b610d9c5780610dac565b610dac6080870160608801614785565b90505b60008b8152600b602090815260408083206001600160a01b03808f16855292529091205490898116908316141580610de75750828814155b15610e275760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610b3b565b891580610e3c575083610e3a828c614cca565b115b15610e725760405162461bcd60e51b8152600401610b3b906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610e879190614cca565b1115610ec25760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610b3b565b8451421015610f045760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610b3b565b50505050509695505050505050565b600080610f1e61235f565b9050610f2b858285612618565b610f36858585612692565b60019150505b9392505050565b600082815260066020526040902054610f5c903361285f565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff1615610fcf5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610b3b565b610b4e82826128df565b6000610fe36128f3565b905090565b336001600160a01b0382161461103d5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610b3b565b610b4e8282612970565b60008061105261235f565b9050610b0b8185856110648589612213565b61106e9190614cca565b612369565b60004382106110945760405162461bcd60e51b8152600401610b3b90614ce2565b6001600160a01b038316600090815261016e60205260409020610f3c90836129c7565b60006110c3813361285f565b6101a08290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b61111261110c61235f565b82612a83565b50565b600054610100900460ff16158080156111355750600054600160ff909116105b80611156575061114430612350565b158015611156575060005460ff166001145b6111b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b3b565b6000805460ff1916600117905580156111dc576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c61120686612a8d565b61120f89612ac5565b6112198989612b0f565b61122287612b62565b61122d60008b6128df565b611237818b6128df565b6112428160006128df565b61125584846001600160801b031661249b565b61125e85612c38565b61019f5580156112a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6001600160a01b03166000908152603e602052604090205460ff1690565b6001600160a01b03908116600090815261016d60205260409020541690565b6111126112fb61235f565b82612c8a565b61130961248d565b6113255760405162461bcd60e51b8152600401610b3b90614c43565b61111281612c38565b61138260405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000828152600a6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061140290614c0e565b80601f016020809104026020016040519081016040528092919081815260200182805461142e90614c0e565b801561147b5780601f106114505761010080835404028352916020019161147b565b820191906000526020600020905b81548152906001019060200180831161145e57829003601f168201915b5050505050815250509050919050565b6001600160a01b038116600090815261016e6020526040812054610b1190612d0b565b6001600160a01b0316600090815260a2602052604090205490565b6114d161248d565b6114ed5760405162461bcd60e51b8152600401610b3b90614c43565b600854600954818315611507576115048284614cca565b90505b600985905560088190556000805b868110156116ba5780158061154d575087878281811061153757611537614d19565b90506020028101906115499190614d2f565b3582105b61157e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610b3b565b6000600a8161158d8487614cca565b81526020019081526020016000206002015490508888838181106115b3576115b3614d19565b90506020028101906115c59190614d2f565b6020013581111561160d5760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610b3b565b88888381811061161f5761161f614d19565b90506020028101906116319190614d2f565b600a600061163f8588614cca565b815260200190815260200160002081816116599190614e9b565b50819050600a600061166b8588614cca565b815260208101919091526040016000206002015588888381811061169157611691614d19565b90506020028101906116a39190614d2f565b3592508190506116b281614f19565b915050611515565b50841561173a57835b82811015611734576000818152600a6020526040812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061171f60078301826142a5565b5050808061172c90614f19565b9150506116c3565b506117c9565b858311156117c957855b838110156117c757600a600061175a8386614cca565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906117b260078301826142a5565b505080806117bf90614f19565b915050611744565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516117fc93929190614fa2565b60405180910390a150505050505050565b61181f8261181961235f565b83612618565b610b4e8282612a83565b61183161248d565b61184d5760405162461bcd60e51b8152600401610b3b90614c43565b610b4e8282612d74565b6001600160a01b038116600090815261013a6020526040812054610b11565b611884868686868686612dc6565b600061188e611f4d565b90506118a58161189c612e31565b88888888610b52565b506000818152600a6020526040812060020180548892906118c7908490614cca565b90915550506000818152600b6020526040812087916118e4612e31565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119139190614cca565b9091555061192690506000878787612e3b565b60006119328888612fd4565b9050876001600160a01b0316611946612e31565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b60405161198a929190918252602082015260400190565b60405180910390a45050505050505050565b60004382106119bd5760405162461bcd60e51b8152600401610b3b90614ce2565b610b1161016f836129c7565b60008281526007602052604081205481805b82811015611aaf5760008681526007602090815260408083208484526001019091529020546001600160a01b031615611a585784821415611a465760008681526007602090815260408083209383526001909301905220546001600160a01b03169250610b11915050565b611a51600183614cca565b9150611a9d565b611a63866000611ab8565b8015611a8a5750600086815260076020908152604080832083805260020190915290205481145b15611a9d57611a9a600183614cca565b91505b611aa8600182614cca565b90506119db565b50505092915050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611aeb61248d565b611b075760405162461bcd60e51b8152600401610b3b90614c43565b61111281612b62565b606060a68054610a5c90614c0e565b6001600160a01b038116600090815261016e60205260408120548015611b94576001600160a01b038316600090815261016e60205260409020611b6360018361508a565b81548110611b7357611b73614d19565b600091825260209091200154600160201b90046001600160e01b0316611b97565b60005b6001600160e01b03169392505050565b600082815260056020908152604080832083805290915281205460ff16611bf4575060008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b11565b50600192915050565b600080611c0861235f565b90506000611c168286612213565b905083811015611c765760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b3b565b611c838286868403612369565b506001949350505050565b600080611c9961235f565b9050610b0b818585612692565b6060816001600160401b03811115611cc057611cc0614545565b604051908082528060200260200182016040528015611cf357816020015b6060815260200190600190039081611cde5790505b50905060005b82811015611d9357611d6330858584818110611d1757611d17614d19565b9050602002810190611d299190614d4f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ff192505050565b828281518110611d7557611d75614d19565b60200260200101819052508080611d8b90614f19565b915050611cf9565b5092915050565b611da261248d565b611dbe5760405162461bcd60e51b8152600401610b3b90614c43565b6004805482919060ff191660018381811115611ddc57611ddc614bd0565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611e109190614be6565b60405180910390a150565b83421115611e6b5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610b3b565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611ee590611edd9060a001604051602081830303815290604052805190602001206130e3565b858585613131565b9050611ef08161315b565b8614611f3a5760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610b3b565b611f448188612c8a565b50505050505050565b6009546008546000918291611f629190614cca565b90505b600854811115611fb957600a6000611f7e60018461508a565b8152602001908152602001600020600001544210611fa757611fa160018261508a565b91505090565b80611fb1816150a1565b915050611f65565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610b3b565b600081815260076020526040812054815b818110156120545760008481526007602090815260408083208484526001019091529020546001600160a01b0316156120425761203f600184614cca565b92505b61204d600182614cca565b9050612001565b50612060836000611ab8565b1561207357612070600183614cca565b91505b50919050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b834211156120e65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610b3b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886121158c61315b565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000612170826130e3565b9050600061218082878787613131565b9050896001600160a01b0316816001600160a01b0316146121e35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610b3b565b6121ee8a8a8a612369565b50505050505050505050565b60008281526006602052604090205461103d903361285f565b6001600160a01b03918216600090815260a36020908152604080832093909416825291909152205490565b6001805461224b90614c0e565b80601f016020809104026020016040519081016040528092919081815260200182805461227790614c0e565b80156122c45780601f10612299576101008083540402835291602001916122c4565b820191906000526020600020905b8154815290600101906020018083116122a757829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261016e60205260409020805463ffffffff841690811061231157612311614d19565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b6000610fe3613182565b6001600160a01b0383166123cb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b3b565b6001600160a01b03821661242c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b3b565b6001600160a01b03838116600081815260a3602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610fe3816106ef61235f565b6127108111156124df5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610b3b565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049060200160405180910390a25050565b6000808281805b875181101561260c576125656002836150b8565b9150600088828151811061257b5761257b614d19565b602002602001015190508084116125bd5760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506125f9565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836125f69190614cca565b92505b508061260481614f19565b915050612551565b50941495939450505050565b60006126248484612213565b9050600019811461268c578181101561267f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b3b565b61268c8484848403612369565b50505050565b6001600160a01b0383166126f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b3b565b6001600160a01b0382166127585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b3b565b6127638383836131a4565b6001600160a01b038316600090815260a26020526040902054818110156127db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b3b565b6001600160a01b03808516600090815260a26020526040808220858503905591851681529081208054849290612812908490614cca565b92505081905550826001600160a01b0316846001600160a01b031660008051602061522d8339815191528460405161284c91815260200190565b60405180910390a361268c848484613244565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610b4e5761289d816001600160a01b0316601461324f565b6128a883602061324f565b6040516020016128b99291906150d7565b60408051601f198184030181529082905262461bcd60e51b8252610b3b916004016143c8565b6128e982826133ea565b610b4e8282613445565b6000610fe37f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6129236101065490565b610107546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61297a82826134b2565b60008281526007602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b8154600090815b81811015612a2b5760006129e28284613514565b9050848682815481106129f7576129f7614d19565b60009182526020909120015463ffffffff161115612a1757809250612a25565b612a22816001614cca565b91505b506129ce565b8115612a6e5784612a3d60018461508a565b81548110612a4d57612a4d614d19565b600091825260209091200154600160201b90046001600160e01b0316612a71565b60005b6001600160e01b031695945050505050565b610b4e828261352f565b600054610100900460ff16612ab45760405162461bcd60e51b8152600401610b3b90615144565b612abc613548565b61111281613571565b600054610100900460ff16612aec5760405162461bcd60e51b8152600401610b3b90615144565b61111281604051806040016040528060018152602001603160f81b815250613600565b600054610100900460ff16612b365760405162461bcd60e51b8152600401610b3b90615144565b8151612b499060a59060208501906142df565b508051612b5d9060a69060208401906142df565b505050565b600060018054612b7190614c0e565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9d90614c0e565b8015612bea5780601f10612bbf57610100808354040283529160200191612bea565b820191906000526020600020905b815481529060010190602001808311612bcd57829003601f168201915b50508551939450612c06936001935060208701925090506142df565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516110f592919061518f565b60048054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000612c95836112d1565b90506000612ca2846114ae565b6001600160a01b03858116600081815261016d602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461268c828483613643565b600063ffffffff821115612d705760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610b3b565b5090565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906110f59084908490614b80565b6101a054801580612dea57508086612ddd60a45490565b612de79190614cca565b11155b611f445760405162461bcd60e51b815260206004820152601860248201527732bc31b2b2b21036b0bc103a37ba30b61039bab838363c9760411b6044820152606401610b3b565b6000610fe361235f565b80612e7c573415612e775760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610b3b565b61268c565b600080612e87612079565b909250905060006001600160a01b03871615612ea35786612eab565b612eab610adf565b90506000670de0b6b3a7640000612ec286896150b8565b612ecc91906151b4565b905060008111612f115760405162461bcd60e51b815260206004820152601060248201526f7175616e7469747920746f6f206c6f7760801b6044820152606401610b3b565b6000612710612f2461ffff8616846150b8565b612f2e91906151b4565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f605750348214612f64565b5034155b80612fa55760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672076616c756560781b6044820152606401610b3b565b612fb888612fb161235f565b8885613782565b6121ee88612fc461235f565b86612fcf868861508a565b613782565b6000612fe083836137c7565b50600092915050565b505050505050565b6060612ffc83612350565b6130575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b3b565b600080846001600160a01b03168460405161307291906151d6565b600060405180830381855af49150503d80600081146130ad576040519150601f19603f3d011682016040523d82523d6000602084013e6130b2565b606091505b50915091506130da8282604051806060016040528060278152602001615206602791396137d1565b95945050505050565b6000610b116130f06128f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006131428787878761380a565b9150915061314f816138ed565b5090505b949350505050565b6001600160a01b038116600090815261013a60205260409020805460018101825590612073565b600061318d336112b3565b1561319f575060131936013560601c90565b503390565b6131b261019f546000611ab8565b1580156131c757506001600160a01b03831615155b80156131db57506001600160a01b03821615155b15612b5d576131ed61019f5484611ab8565b80613200575061320061019f5483611ab8565b612b5d5760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b939903932b9ba3934b1ba32b21760591b6044820152606401610b3b565b612b5d838383613aa3565b6060600061325e8360026150b8565b613269906002614cca565b6001600160401b0381111561328057613280614545565b6040519080825280601f01601f1916602001820160405280156132aa576020820181803683370190505b509050600360fc1b816000815181106132c5576132c5614d19565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106132f4576132f4614d19565b60200101906001600160f81b031916908160001a90535060006133188460026150b8565b613323906001614cca565b90505b600181111561339b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061335757613357614d19565b1a60f81b82828151811061336d5761336d614d19565b60200101906001600160f81b031916908160001a90535060049490941c93613394816150a1565b9050613326565b508315610f3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b3b565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600760205260408120805491600191906134648385614cca565b9091555050600092835260076020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6134bc828261285f565b60008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061352360028484186151b4565b610f3c90848416614cca565b6135398282613abe565b61268c61016f613c0d83613c19565b600054610100900460ff1661356f5760405162461bcd60e51b8152600401610b3b90615144565b565b600054610100900460ff166135985760405162461bcd60e51b8152600401610b3b90615144565b60005b8151811015610b4e576001603e60008484815181106135bc576135bc614d19565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806135f881614f19565b91505061359b565b600054610100900460ff166136275760405162461bcd60e51b8152600401610b3b90615144565b8151602092830120815191909201206101069190915561010755565b816001600160a01b0316836001600160a01b0316141580156136655750600081115b15612b5d576001600160a01b038316156136f4576001600160a01b038316600090815261016e6020526040812081906136a190613c0d85613c19565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516136e9929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615612b5d576001600160a01b038216600090815261016e60205260408120819061372b90613d9085613c19565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051613773929190918252602082015260400190565b60405180910390a25050505050565b8061378c5761268c565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156137bb57612e778282613d9c565b61268c84848484613e3e565b610b4e8282613e97565b606083156137e0575081610f3c565b8251156137f05782518084602001fd5b8160405162461bcd60e51b8152600401610b3b91906143c8565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561383757506000905060036138e4565b8460ff16601b1415801561384f57508460ff16601c14155b1561386057506000905060046138e4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156138b4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166138dd576000600192509250506138e4565b9150600090505b94509492505050565b600081600481111561390157613901614bd0565b141561390a5750565b600181600481111561391e5761391e614bd0565b14156139675760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610b3b565b600281600481111561397b5761397b614bd0565b14156139c95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b3b565b60038160048111156139dd576139dd614bd0565b1415613a365760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b3b565b6004816004811115613a4a57613a4a614bd0565b14156111125760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b3b565b612b5d613aaf846112d1565b613ab8846112d1565b83613643565b6001600160a01b038216613b1e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b3b565b613b2a826000836131a4565b6001600160a01b038216600090815260a2602052604090205481811015613b9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b3b565b6001600160a01b038316600090815260a260205260408120838303905560a48054849290613bcd90849061508a565b90915550506040518281526000906001600160a01b0385169060008051602061522d8339815191529060200160405180910390a3612b5d83600084613244565b6000610f3c828461508a565b825460009081908015613c635785613c3260018361508a565b81548110613c4257613c42614d19565b600091825260209091200154600160201b90046001600160e01b0316613c66565b60005b6001600160e01b03169250613c7f83858763ffffffff16565b9150600081118015613cbd57504386613c9960018461508a565b81548110613ca957613ca9614d19565b60009182526020909120015463ffffffff16145b15613d1d57613ccb82613f22565b86613cd760018461508a565b81548110613ce757613ce7614d19565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550613d87565b856040518060400160405280613d3243612d0b565b63ffffffff168152602001613d4685613f22565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6000610f3c8284614cca565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613de9576040519150601f19603f3d011682016040523d82523d6000602084013e613dee565b606091505b5050905080612b5d5760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610b3b565b816001600160a01b0316836001600160a01b03161415613e5d5761268c565b6001600160a01b038316301415613e8257612e776001600160a01b0385168383613f8b565b61268c6001600160a01b038516848484613fe1565b613ea18282614019565b60a4546001600160e01b031015613f135760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610b3b565b61268c61016f613d9083613c19565b60006001600160e01b03821115612d705760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610b3b565b612b5d8363a9059cbb60e01b8484604051602401613faa929190614b80565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526140fa565b6040516001600160a01b038085166024830152831660448201526064810182905261268c9085906323b872dd60e01b90608401613faa565b6001600160a01b03821661406f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b3b565b61407b600083836131a4565b8060a4600082825461408d9190614cca565b90915550506001600160a01b038216600090815260a26020526040812080548392906140ba908490614cca565b90915550506040518181526001600160a01b0383169060009060008051602061522d8339815191529060200160405180910390a3610b4e60008383613244565b600061414f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166141cc9092919063ffffffff16565b805190915015612b5d578080602001905181019061416d91906151e8565b612b5d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b3b565b60606131538484600085856141e085612350565b61422c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b3b565b600080866001600160a01b0316858760405161424891906151d6565b60006040518083038185875af1925050503d8060008114614285576040519150601f19603f3d011682016040523d82523d6000602084013e61428a565b606091505b509150915061429a8282866137d1565b979650505050505050565b5080546142b190614c0e565b6000825580601f106142c1575050565b601f016020900490600052602060002090810190611112919061435b565b8280546142eb90614c0e565b90600052602060002090601f01602090048101928261430d5760008555614353565b82601f1061432657805160ff1916838001178555614353565b82800160010185558215614353579182015b82811115614353578251825591602001919060010190614338565b50612d709291505b5b80821115612d70576000815560010161435c565b60005b8381101561438b578181015183820152602001614373565b8381111561268c5750506000910152565b600081518084526143b4816020860160208601614370565b601f01601f19169290920160200192915050565b602081526000610f3c602083018461439c565b6001600160a01b038116811461111257600080fd5b80356143fb816143db565b919050565b6000806040838503121561441357600080fd5b823561441e816143db565b946020939093013593505050565b60006080828403121561207357600080fd5b60008060008060008060c0878903121561445757600080fd5b863595506020870135614469816143db565b9450604087013593506060870135614480816143db565b92506080870135915060a08701356001600160401b038111156144a257600080fd5b6144ae89828a0161442c565b9150509295509295509295565b6000806000606084860312156144d057600080fd5b83356144db816143db565b925060208401356144eb816143db565b929592945050506040919091013590565b60006020828403121561450e57600080fd5b5035919050565b6000806040838503121561452857600080fd5b82359150602083013561453a816143db565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561458357614583614545565b604052919050565b60006001600160401b038311156145a4576145a4614545565b6145b7601f8401601f191660200161455b565b90508281528383830111156145cb57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126145f357600080fd5b610f3c8383356020850161458b565b600082601f83011261461357600080fd5b813560206001600160401b0382111561462e5761462e614545565b8160051b61463d82820161455b565b928352848101820192828101908785111561465757600080fd5b83870192505b8483101561429a578235614670816143db565b8252918301919083019061465d565b80356001600160801b03811681146143fb57600080fd5b600080600080600080600080610100898b0312156146b357600080fd5b6146bc896143f0565b975060208901356001600160401b03808211156146d857600080fd5b6146e48c838d016145e2565b985060408b01359150808211156146fa57600080fd5b6147068c838d016145e2565b975060608b013591508082111561471c57600080fd5b6147288c838d016145e2565b965060808b013591508082111561473e57600080fd5b5061474b8b828c01614602565b94505061475a60a08a016143f0565b925061476860c08a016143f0565b915061477660e08a0161467f565b90509295985092959890939650565b60006020828403121561479757600080fd5b8135610f3c816143db565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e083015161010080818501525061315361012084018261439c565b60008083601f84011261482157600080fd5b5081356001600160401b0381111561483857600080fd5b6020830191508360208260051b850101111561485357600080fd5b9250929050565b801515811461111257600080fd5b60008060006040848603121561487d57600080fd5b83356001600160401b0381111561489357600080fd5b61489f8682870161480f565b90945092505060208401356148b38161485a565b809150509250925092565b60008060008060008060c087890312156148d757600080fd5b86356148e2816143db565b95506020870135945060408701356148f9816143db565b93506060870135925060808701356001600160401b038082111561491c57600080fd5b6149288a838b0161442c565b935060a089013591508082111561493e57600080fd5b508701601f8101891361495057600080fd5b6144ae8982356020840161458b565b6000806040838503121561497257600080fd5b50508035926020909101359150565b60006020828403121561499357600080fd5b81356001600160401b038111156149a957600080fd5b613153848285016145e2565b600080602083850312156149c857600080fd5b82356001600160401b038111156149de57600080fd5b6149ea8582860161480f565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614a4b57603f19888603018452614a3985835161439c565b94509285019290850190600101614a1d565b5092979650505050505050565b600060208284031215614a6a57600080fd5b813560028110610f3c57600080fd5b803560ff811681146143fb57600080fd5b60008060008060008060c08789031215614aa357600080fd5b8635614aae816143db565b95506020870135945060408701359350614aca60608801614a79565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614aff57600080fd5b8735614b0a816143db565b96506020880135614b1a816143db565b95506040880135945060608801359350614b3660808901614a79565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215614b6557600080fd5b8235614b70816143db565b9150602083013561453a816143db565b6001600160a01b03929092168252602082015260400190565b60008060408385031215614bac57600080fd5b8235614bb7816143db565b9150602083013563ffffffff8116811461453a57600080fd5b634e487b7160e01b600052602160045260246000fd5b6020810160028310614c0857634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c90821680614c2257607f821691505b6020821081141561207357634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6000808335601e19843603018112614c8257600080fd5b8301803591506001600160401b03821115614c9c57600080fd5b6020019150600581901b360382131561485357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614cdd57614cdd614cb4565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112614d4557600080fd5b9190910192915050565b6000808335601e19843603018112614d6657600080fd5b8301803591506001600160401b03821115614d8057600080fd5b60200191503681900382131561485357600080fd5b601f821115612b5d57600081815260208120601f850160051c81016020861015614dbc5750805b601f850160051c820191505b81811015612fe957828155600101614dc8565b6001600160401b03831115614df257614df2614545565b614e0683614e008354614c0e565b83614d95565b6000601f841160018114614e3a5760008515614e225750838201355b600019600387901b1c1916600186901b178355614e94565b600083815260209020601f19861690835b82811015614e6b5786850135825560209485019460019092019101614e4b565b5086821015614e885760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c0830135614ee3816143db565b81546001600160a01b0319166001600160a01b0391909116179055614f0b60e0830183614d4f565b61268c818360078601614ddb565b6000600019821415614f2d57614f2d614cb4565b5060010190565b6000808335601e19843603018112614f4b57600080fd5b83016020810192503590506001600160401b03811115614f6a57600080fd5b80360383131561485357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a81101561507457888403605f190185528235368d900360fe19018112614fe7578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c08084013561502e816143db565b6001600160a01b03169088015260e061504984820185614f34565b945083828a015261505d848a018683614f79565b998301999850505094909401935050600101614fc2565b5050508615156020870152935061315392505050565b60008282101561509c5761509c614cb4565b500390565b6000816150b0576150b0614cb4565b506000190190565b60008160001904831182151516156150d2576150d2614cb4565b500290565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615107816015850160208801614370565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615138816026840160208801614370565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6040815260006151a2604083018561439c565b82810360208401526130da818561439c565b6000826151d157634e487b7160e01b600052601260045260246000fd5b500490565b60008251614d45818460208701614370565b6000602082840312156151fa57600080fd5b8151610f3c8161485a56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bfdba6138f72524f254953e3ce1b674aff8249772c02a6afef4e0840fc73a59564736f6c634300080c0033",
    "sourceMap": "1526:7953:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:447;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:136;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:641;;;911:51;;899:2;884:18;676:104:136;765:203:641;4770:197:447;;;;;;;;;;-1:-1:-1;4770:197:447;;;;;:::i;:::-;;:::i;:::-;;;1829:14:641;;1822:22;1804:41;;1792:2;1777:18;4770:197:447;1664:187:641;3581:106:447;;;;;;;;;;-1:-1:-1;3668:12:447;;3581:106;;;2002:25:641;;;1990:2;1975:18;3581:106:447;1856:177:641;2043:269:135;;;;;;;;;;-1:-1:-1;2043:269:135;;;;;:::i;:::-;;:::i;:::-;;4806:2222:120;;;;;;;;;;-1:-1:-1;4806:2222:120;;;;;:::i;:::-;;:::i;5529:286:447:-;;;;;;;;;;-1:-1:-1;5529:286:447;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;2285:29:38;;;;;;;;;;;;;;;;3255:271:133;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;3430:91:447:-;;;;;;;;;;-1:-1:-1;3512:2:447;3430:91;;;4385:4:641;4373:17;;;4355:36;;4343:2;4328:18;3430:91:447;4213:184:641;3282:113:452;;;;;;;;;;;;;:::i;4466:217:133:-;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;6210:234:447:-;;;;;;;;;;-1:-1:-1;6210:234:447;;;;;:::i;:::-;;:::i;3133:265:450:-;;;;;;;;;;-1:-1:-1;3133:265:450;;;;;:::i;:::-;;:::i;4353:192:38:-;;;;;;;;;;-1:-1:-1;4353:192:38;;;;;:::i;:::-;;:::i;848:89:449:-;;;;;;;;;;-1:-1:-1;848:89:449;;;;;:::i;:::-;;:::i;2734:958:38:-;;;;;;;;;;-1:-1:-1;2734:958:38;;;;;:::i;:::-;;:::i;918:134:304:-;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;2526:126:450:-;;;;;;;;;;-1:-1:-1;2526:126:450;;;;;:::i;:::-;;:::i;5567:112::-;;;;;;;;;;-1:-1:-1;5567:112:450;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;7548:177:120:-;;;;;;;;;;-1:-1:-1;7548:177:120;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2278:160:450:-;;;;;;;;;;-1:-1:-1;2278:160:450;;;;;:::i;:::-;;:::i;:::-;;;9140:10:641;9128:23;;;9110:42;;9098:2;9083:18;2278:160:450;8966:192:641;3745:125:447;;;;;;;;;;-1:-1:-1;3745:125:447;;;;;:::i;:::-;;:::i;1949:2760:120:-;;;;;;;;;;-1:-1:-1;1949:2760:120;;;;;:::i;:::-;;:::i;1243:161:449:-;;;;;;;;;;-1:-1:-1;1243:161:449;;;;;:::i;:::-;;:::i;2821:255:135:-;;;;;;;;;;-1:-1:-1;2821:255:135;;;;;:::i;:::-;;:::i;3032:126:452:-;;;;;;;;;;-1:-1:-1;3032:126:452;;;;;:::i;:::-;;:::i;699:1187:120:-;;;;;;:::i;:::-;;:::i;3677:256:450:-;;;;;;;;;;-1:-1:-1;3677:256:450;;;;;:::i;:::-;;:::i;1643:633:134:-;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2704:102:447:-;;;;;;;;;;;;;:::i;2731:209:450:-;;;;;;;;;;-1:-1:-1;2731:209:450;;;;;:::i;:::-;;:::i;3989:89:38:-;;;;;;;;;;-1:-1:-1;4069:1:38;3989:89;;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;6931:427:447:-;;;;;;;;;;-1:-1:-1;6931:427:447;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:447;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7807:255:120:-;;;;;;;;;;-1:-1:-1;7807:255:120;;;;;:::i;:::-;7926:29;7995:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;7995:60:120;;;;;;;;;;;;7807:255;3455:243:135;;;;;;;;;;-1:-1:-1;3455:243:135;;;;;:::i;:::-;;:::i;5756:585:450:-;;;;;;;;;;-1:-1:-1;5756:585:450;;;;;:::i;:::-;;:::i;7116:367:120:-;;;;;;;;;;;;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;3883:100:38:-;;;;;;;;;;-1:-1:-1;;;;3883:100:38;;1058:147:135;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;14862:32:641;;;14844:51;;14943:6;14931:19;;;14926:2;14911:18;;14904:47;14817:18;1058:147:135;14672:285:641;2334:637:452;;;;;;;;;;-1:-1:-1;2334:637:452;;;;;:::i;:::-;;:::i;3897:171:133:-;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;430:40:120:-;;;;;;;;;;-1:-1:-1;430:40:120;;;;;;;;;;;;;15875:25:641;;;15931:2;15916:18;;15909:34;;;;15848:18;430:40:120;15701:248:641;4313:149:447;;;;;;;;;;-1:-1:-1;4313:149:447;;;;;:::i;:::-;;:::i;1268:136:135:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:135;;;;1268:136;;;;;;;;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;2055:148:450:-;;;;;;;;;;-1:-1:-1;2055:148:450;;;;;:::i;:::-;;:::i;:::-;;;;17278:13:641;;17293:10;17274:30;17256:49;;17365:4;17353:17;;;17347:24;-1:-1:-1;;;;;17343:50:641;17321:20;;;17314:80;;;;17229:18;2055:148:450;17050:350:641;1467:107:135;;;;;;;;;;-1:-1:-1;1552:15:135;;;;1467:107;;;;;;:::i;2493:98:447:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;676:104:136:-;764:9;;;;;-1:-1:-1;;;;;764:9:136;;676:104::o;4770:197:447:-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;2043:269:135:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:135;;;;;;;:::i;:::-;;;;;;;;2155:80;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;4806:2222:120:-;5045:15;5114:39;;;:25;:39;;;;;;;;5072:81;;;;;;;;;;;;;;;;;;;;;;5114:25;5072:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5072:81:120;;;;;;;;;;5045:15;;5072:81;5114:39;5072:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5072:81:120;;;;-1:-1:-1;;;5184:40:120;;;;5255:31;;;;5320:26;;;;5361:28;;;;5072:81;;-1:-1:-1;5184:40:120;;5255:31;;5320:26;5361:42;5357:515;;5436:425;5472:21;:15;;:21;:::i;:::-;5436:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5511:28:120;;;;;;-1:-1:-1;5630:8:120;;5664:38;;;;;5728:29;;;;;5783:24;;;;;;;;:::i;:::-;5588:241;;-1:-1:-1;;;;;;19404:2:641;19440:15;;;19436:24;;5588:241:120;;;19424:37:641;19477:12;;;19470:28;;;;19514:12;;;19507:28;;;;19569:15;;;19565:24;19551:12;;;19544:46;19606:13;;5588:241:120;;;;;;;;;;;;5557:290;;;;;;5436:18;:425::i;:::-;-1:-1:-1;5419:442:120;-1:-1:-1;5357:515:120;5886:10;5882:534;;;5925:38;;;;:129;;6044:10;5925:129;;;5987:15;:38;;;5925:129;5912:142;;-1:-1:-1;;6081:15:120;:29;;;:50;;:127;;6198:10;6081:127;;;6150:15;:29;;;6081:127;6068:140;;-1:-1:-1;;6238:15:120;:29;;;:50;;:92;;;;-1:-1:-1;6328:1:120;6292:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6292:38:120;;;6238:92;:167;;6392:13;6238:167;;;6349:24;;;;;;;;:::i;:::-;6222:183;;5882:534;6426:29;6458:50;;;:36;:50;;;;;;;;-1:-1:-1;;;;;6458:60:120;;;;;;;;;;;;6533:26;;;;;;;;;:58;;;6581:10;6563:14;:28;;6533:58;6529:115;;;6607:26;;-1:-1:-1;;;6607:26:120;;19832:2:641;6607:26:120;;;19814:21:641;19871:2;19851:18;;;19844:30;-1:-1:-1;;;19890:18:641;;;19883:46;19946:18;;6607:26:120;19630:340:641;6529:115:120;6658:14;;;:66;;-1:-1:-1;6713:10:120;6677:33;6689:21;6677:9;:33;:::i;:::-;:46;6658:66;6654:111;;;6740:14;;-1:-1:-1;;;6740:14:120;;;;;;20442:2:641;20424:21;;;20481:1;20461:18;;;20454:29;-1:-1:-1;;;20514:2:641;20499:18;;20492:34;20558:2;20543:18;;20240:327;6654:111:120;6824:17;:36;;;6812:9;6778:17;:31;;;:43;;;;:::i;:::-;:82;6774:133;;;6876:20;;-1:-1:-1;;;6876:20:120;;20774:2:641;6876:20:120;;;20756:21:641;20813:2;20793:18;;;20786:30;-1:-1:-1;;;20832:18:641;;;20825:40;20882:18;;6876:20:120;20572:334:641;6774:133:120;6921:32;;6956:15;-1:-1:-1;6917:105:120;;;6987:24;;-1:-1:-1;;;6987:24:120;;21113:2:641;6987:24:120;;;21095:21:641;21152:2;21132:18;;;21125:30;-1:-1:-1;;;21171:18:641;;;21164:44;21225:18;;6987:24:120;20911:338:641;6917:105:120;5062:1966;;;;;4806:2222;;;;;;;;:::o;5529:286:447:-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;21456:2:641;3435:39:133;;;21438:21:641;21495:2;21475:18;;;21468:30;21534:31;21514:18;;;21507:59;21583:18;;3435:39:133;21254:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;3282:113:452:-;3342:7;3368:20;:18;:20::i;:::-;3361:27;;3282:113;:::o;4466:217:133:-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;21814:2:641;4594:36:133;;;21796:21:641;21853:2;21833:18;;;21826:30;-1:-1:-1;;;21872:18:641;;;21865:56;21938:18;;4594:36:133;21612:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;6210:234:447:-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;3133:265:450:-;3231:7;3272:12;3258:11;:26;3250:70;;;;-1:-1:-1;;;3250:70:450;;;;;;;:::i;:::-;-1:-1:-1;;;;;3356:21:450;;;;;;:12;:21;;;;;3337:54;;3379:11;3337:18;:54::i;4353:192:38:-;787:4:133;931:28;787:4;948:10;931;:28::i;:::-;4453:14:38::1;:32:::0;;;4500:38:::1;::::0;2002:25:641;;;4500:38:38::1;::::0;1990:2:641;1975:18;4500:38:38::1;;;;;;;;4353:192:::0;;:::o;848:89:449:-;903:27;909:12;:10;:12::i;:::-;923:6;903:5;:27::i;:::-;848:89;:::o;2734:958:38:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;22529:2:641;3157:201:436;;;22511:21:641;22568:2;22548:18;;;22541:30;22607:34;22587:18;;;22580:62;-1:-1:-1;;;22658:18:641;;;22651:44;22712:19;;3157:201:436;22327:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3091:26:38::1;3203:41;3225:18:::0;3203:21:::1;:41::i;:::-;3254:25;3273:5;3254:18;:25::i;:::-;3289:38;3312:5;3319:7;3289:22;:38::i;:::-;3338:31;3356:12;3338:17;:31::i;:::-;3380:45;787:4:133;3411:13:38::0;3380:10:::1;:45::i;:::-;3435:40;3446:13;3461;3435:10;:40::i;:::-;3485:37;3496:13;3519:1;3485:10;:37::i;:::-;3533:61;3555:21;3578:15;-1:-1:-1::0;;;;;3533:61:38::1;:21;:61::i;:::-;3604:42;3631:14;3604:26;:42::i;:::-;3657:12;:28:::0;3479:99:436;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;4355:36:641;;3553:14:436;;4343:2:641;4328:18;3553:14:436;;;;;;;3479:99;3101:483;2734:958:38;;;;;;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;2526:126:450:-;-1:-1:-1;;;;;2626:19:450;;;2600:7;2626:19;;;:10;:19;;;;;;;;2526:126::o;5567:112::-;5638:34;5648:12;:10;:12::i;:::-;5662:9;5638;:34::i;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;7548:177:120:-;7624:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:31:120;7679:39;;;;:25;:39;;;;;;;;;7667:51;;;;;;;;;;;;;;;;;;;;;;7679:25;7667:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7667:51:120;;;;;;;;;;;;7679:39;7667:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7548:177;;;:::o;2278:160:450:-;-1:-1:-1;;;;;2402:21:450;;2348:6;2402:21;;;:12;:21;;;;;:28;2373:58;;:28;:58::i;3745:125:447:-;-1:-1:-1;;;;;3845:18:447;3819:7;3845:18;;;:9;:18;;;;;;;3745:125::o;1949:2760:120:-;2114:24;:22;:24::i;:::-;2109:80;;2154:24;;-1:-1:-1;;;2154:24:120;;;;;;;:::i;2109:80::-;2228:14;:29;2296:20;;2228:29;2733:108;;;;2791:39;2812:18;2791;:39;:::i;:::-;2775:55;;2733:108;2851:20;:41;;;:14;2902:45;;;:29;;3003:643;3023:22;;;3003:643;;;3074:6;;;:69;;;3114:11;;3126:1;3114:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3084:59;;3074:69;3066:84;;;;-1:-1:-1;;;3066:84:120;;23613:2:641;3066:84:120;;;23595:21:641;23652:1;23632:18;;;23625:29;-1:-1:-1;;;23670:18:641;;;23663:32;23712:18;;3066:84:120;23411:325:641;3066:84:120;3165:28;3196:25;3165:28;3222:17;3238:1;3222:13;:17;:::i;:::-;3196:44;;;;;;;;;;;:58;;;3165:89;;3295:11;;3307:1;3295:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3272:20;:56;3268:123;;;3348:28;;-1:-1:-1;;;3348:28:120;;23943:2:641;3348:28:120;;;23925:21:641;23982:2;23962:18;;;23955:30;-1:-1:-1;;;24001:18:641;;;23994:48;24059:18;;3348:28:120;23741:342:641;3268:123:120;3452:11;;3464:1;3452:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3405:25;:44;3431:17;3447:1;3431:13;:17;:::i;:::-;3405:44;;;;;;;;;;;:61;;;;;;:::i;:::-;-1:-1:-1;3541:20:120;;-1:-1:-1;3480:25:120;:44;3506:17;3522:1;3506:13;:17;:::i;:::-;3480:44;;;;;;;;;;;-1:-1:-1;3480:44:120;:58;;:81;3606:11;;3618:1;3606:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3047:3:120;;-1:-1:-1;3047:3:120;;;:::i;:::-;;;;3003:643;;;;4186:22;4182:446;;;4241:18;4224:129;4265:13;4261:1;:17;4224:129;;;4310:28;;;;:25;:28;;;;;4303:35;;;;;;;;;4310:25;4303:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4303:35:120;;;4310:28;4303:35;;;;4310:28;4303:35;:::i;:::-;;;4280:3;;;;;:::i;:::-;;;;4224:129;;;;4182:446;;;4387:39;;;4383:235;;;4463:11;4446:158;4487:18;4483:1;:22;4446:158;;;4541:25;:44;4567:17;4583:1;4567:13;:17;:::i;:::-;4541:44;;;;;;;;;;;-1:-1:-1;4541:44:120;;;4534:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4534:51:120;;;4541:44;4534:51;;;;-1:-1:-1;4534:51:120;:::i;:::-;;;4507:3;;;;;:::i;:::-;;;;4446:158;;;;4383:235;4643:59;4666:11;;4679:22;4643:59;;;;;;;;:::i;:::-;;;;;;;;2099:2610;;;;1949:2760;;;:::o;1243:161:449:-;1319:46;1335:7;1344:12;:10;:12::i;:::-;1358:6;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2821:255:135:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:135;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;3032:126:452:-;-1:-1:-1;;;;;3127:14:452;;3101:7;3127:14;;;:7;:14;;;;;929::465;3127:24:452;838:112:465;699:1187:120;952:85;965:9;976;987;998:14;1014:15;1031:5;952:12;:85::i;:::-;1048:25;1076:27;:25;:27::i;:::-;1048:55;;1114:103;1126:17;1145:16;:14;:16::i;:::-;1163:9;1174;1185:14;1201:15;1114:11;:103::i;:::-;-1:-1:-1;1262:44:120;;;;:25;:44;;;;;:25;:58;:71;;1324:9;;1262:44;:71;;1324:9;;1262:71;:::i;:::-;;;;-1:-1:-1;;1343:55:120;;;;:36;:55;;;;;1420:9;;1399:16;:14;:16::i;:::-;-1:-1:-1;;;;;1343:73:120;-1:-1:-1;;;;;1343:73:120;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;1486:70:120;;-1:-1:-1;1515:1:120;1519:9;1530;1541:14;1486:20;:70::i;:::-;1615:20;1638:44;1661:9;1672;1638:22;:44::i;:::-;1615:67;;1749:9;-1:-1:-1;;;;;1698:86:120;1731:16;:14;:16::i;:::-;-1:-1:-1;;;;;1698:86:120;1712:17;1698:86;1760:12;1774:9;1698:86;;;;;;15875:25:641;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;1698:86:120;;;;;;;;942:944;;699:1187;;;;;;:::o;3677:256:450:-;3764:7;3805:12;3791:11;:26;3783:70;;;;-1:-1:-1;;;3783:70:450;;;;;;;:::i;:::-;3870:56;3889:23;3914:11;3870:18;:56::i;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2704:102:447:-;2760:13;2792:7;2785:14;;;;;:::i;2731:209:450:-;-1:-1:-1;;;;;2837:21:450;;2804:7;2837:21;;;:12;:21;;;;;:28;2882:8;;:51;;-1:-1:-1;;;;;2897:21:450;;;;;;:12;:21;;;;;2919:7;2925:1;2919:3;:7;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2897:36:450;;-1:-1:-1;;;;;2897:36:450;2882:51;;;2893:1;2882:51;-1:-1:-1;;;;;2875:58:450;;2731:209;-1:-1:-1;;;2731:209:450:o;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;6931:427:447:-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:447;;30915:2:641;7140:85:447;;;30897:21:641;30954:2;30934:18;;;30927:30;30993:34;30973:18;;;30966:62;-1:-1:-1;;;31044:18:641;;;31037:35;31089:19;;7140:85:447;30713:401:641;7140:85:447;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:447;;6931:427;-1:-1:-1;;;;6931:427:447:o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:243:135:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:135;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:135;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;5756:585:450:-;5975:6;5956:15;:25;;5948:67;;;;-1:-1:-1;;;5948:67:450;;31847:2:641;5948:67:450;;;31829:21:641;31886:2;31866:18;;;31859:30;31925:31;31905:18;;;31898:59;31974:18;;5948:67:450;31645:353:641;5948:67:450;6107:58;;;1744:71;6107:58;;;32234:25:641;-1:-1:-1;;;;;32295:32:641;;32275:18;;;32268:60;;;;32344:18;;;32337:34;;;32387:18;;;32380:34;;;6025:14:450;;6042:180;;6080:87;;32206:19:641;;6107:58:450;;;;;;;;;;;;6097:69;;;;;;6080:16;:87::i;:::-;6181:1;6196;6211;6042:24;:180::i;:::-;6025:197;;6249:17;6259:6;6249:9;:17::i;:::-;6240:5;:26;6232:64;;;;-1:-1:-1;;;6232:64:450;;32627:2:641;6232:64:450;;;32609:21:641;32666:2;32646:18;;;32639:30;-1:-1:-1;;;32685:18:641;;;32678:55;32750:18;;6232:64:450;32425:349:641;6232:64:450;6306:28;6316:6;6324:9;6306;:28::i;:::-;5938:403;5756:585;;;;;;:::o;7116:367:120:-;7242:20;;:14;7210:29;7174:7;;;;7210:52;;7242:20;7210:52;:::i;:::-;7198:64;;7193:252;7268:14;:29;7264:33;;7193:252;;;7341:25;:32;7367:5;7371:1;7367;:5;:::i;:::-;7341:32;;;;;;;;;;;:47;;;7322:15;:66;7318:117;;7415:5;7419:1;7415;:5;:::i;:::-;7408:12;;;7116:367;:::o;7318:117::-;7299:3;;;;:::i;:::-;;;;7193:252;;;-1:-1:-1;7455:21:120;;-1:-1:-1;;;7455:21:120;;33122:2:641;7455:21:120;;;33104::641;33161:2;33141:18;;;33134:30;-1:-1:-1;;;33180:18:641;;;33173:41;33231:18;;7455:21:120;32920:335:641;2683:398:134;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1058:147:135:-;1153:20;;-1:-1:-1;;;;;1153:20:135;;;-1:-1:-1;;;1182:14:135;;;;;;1058:147::o;2334:637:452:-;2569:8;2550:15;:27;;2542:69;;;;-1:-1:-1;;;2542:69:452;;33462:2:641;2542:69:452;;;33444:21:641;33501:2;33481:18;;;33474:30;33540:31;33520:18;;;33513:59;33589:18;;2542:69:452;33260:353:641;2542:69:452;2622:18;1369:95;2682:5;2689:7;2698:5;2705:16;2715:5;2705:9;:16::i;:::-;2653:79;;;;;;33905:25:641;;;;-1:-1:-1;;;;;34004:15:641;;;33984:18;;;33977:43;34056:15;;;;34036:18;;;34029:43;34088:18;;;34081:34;34131:19;;;34124:35;34175:19;;;34168:35;;;33877:19;;2653:79:452;;;;;;;;;;;;2643:90;;;;;;2622:111;;2744:12;2759:28;2776:10;2759:16;:28::i;:::-;2744:43;;2798:14;2815:39;2840:4;2846:1;2849;2852;2815:24;:39::i;:::-;2798:56;;2882:5;-1:-1:-1;;;;;2872:15:452;:6;-1:-1:-1;;;;;2872:15:452;;2864:58;;;;-1:-1:-1;;;2864:58:452;;34416:2:641;2864:58:452;;;34398:21:641;34455:2;34435:18;;;34428:30;34494:32;34474:18;;;34467:60;34544:18;;2864:58:452;34214:354:641;2864:58:452;2933:31;2942:5;2949:7;2958:5;2933:8;:31::i;:::-;2532:439;;;2334:637;;;;;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;4313:149:447:-;-1:-1:-1;;;;;4428:18:447;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2055:148:450:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2170:21:450;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2163:33;;;;;;;;;2170:26;;2163:33;;;;;;-1:-1:-1;;;2163:33:450;;-1:-1:-1;;;;;2163:33:450;;;;;;;;;2055:148;-1:-1:-1;;;2055:148:450:o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;9013:231:38:-;9162:14;9199:38;:36;:38::i;10447:370:447:-;-1:-1:-1;;;;;10578:19:447;;10570:68;;;;-1:-1:-1;;;10570:68:447;;34775:2:641;10570:68:447;;;34757:21:641;34814:2;34794:18;;;34787:30;34853:34;34833:18;;;34826:62;-1:-1:-1;;;34904:18:641;;;34897:34;34948:19;;10570:68:447;34573:400:641;10570:68:447;-1:-1:-1;;;;;10656:21:447;;10648:68;;;;-1:-1:-1;;;10648:68:447;;35180:2:641;10648:68:447;;;35162:21:641;35219:2;35199:18;;;35192:30;35258:34;35238:18;;;35231:62;-1:-1:-1;;;35309:18:641;;;35302:32;35351:19;;10648:68:447;34978:398:641;10648:68:447;-1:-1:-1;;;;;10727:18:447;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;2002:25:641;;;10778:32:447;;1975:18:641;10778:32:447;;;;;;;10447:370;;;:::o;6858:137:38:-;6924:4;6947:41;6924:4;6975:12;:10;:12::i;2371:375:135:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:135;;35583:2:641;2521:25:135;;;35565:21:641;35622:2;35602:18;;;35595:30;-1:-1:-1;;;35641:18:641;;;35634:45;35696:18;;2521:25:135;35381:339:641;2477:80:135;2567:14;:40;;-1:-1:-1;;;;;;2617:44:135;-1:-1:-1;;;2567:40:135;;;;-1:-1:-1;;;;;;2617:44:135;;-1:-1:-1;;;;;2617:44:135;;;;;;;;2677:62;;2002:25:641;;;2677:62:135;;1990:2:641;1975:18;2677:62:135;;;;;;;2371:375;;:::o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;36055:19:641;;;36090:12;;;36083:28;;;36127:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;36055:19:641;;;36090:12;;;36083:28;;;36127:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;11098:441:447:-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:447;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:447;;36352:2:641;11347:68:447;;;36334:21:641;36391:2;36371:18;;;36364:30;36430:31;36410:18;;;36403:59;36479:18;;11347:68:447;36150:353:641;11347:68:447;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:447;;7930:68;;;;-1:-1:-1;;;7930:68:447;;36710:2:641;7930:68:447;;;36692:21:641;36749:2;36729:18;;;36722:30;36788:34;36768:18;;;36761:62;-1:-1:-1;;;36839:18:641;;;36832:35;36884:19;;7930:68:447;36508:401:641;7930:68:447;-1:-1:-1;;;;;8016:16:447;;8008:64;;;;-1:-1:-1;;;8008:64:447;;37116:2:641;8008:64:447;;;37098:21:641;37155:2;37135:18;;;37128:30;37194:34;37174:18;;;37167:62;-1:-1:-1;;;37245:18:641;;;37238:33;37288:19;;8008:64:447;36914:399:641;8008:64:447;8083:38;8104:4;8110:2;8114:6;8083:20;:38::i;:::-;-1:-1:-1;;;;;8154:15:447;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:447;;37520:2:641;8179:72:447;;;37502:21:641;37559:2;37539:18;;;37532:30;37598:34;37578:18;;;37571:62;-1:-1:-1;;;37649:18:641;;;37642:36;37695:19;;8179:72:447;37318:402:641;8179:72:447;-1:-1:-1;;;;;8285:15:447;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:447;8391:4;-1:-1:-1;;;;;8382:26:447;-1:-1:-1;;;;;;;;;;;8401:6:447;8382:26;;;;2002:25:641;;1990:2;1975:18;;1856:177;8382:26:447;;;;;;;;8419:37;8439:4;8445:2;8449:6;8419:19;:37::i;5557:495:133:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;2842:160:470:-;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;42977:25:641;;;43018:18;;;43011:34;;;43061:18;;;43054:34;;;3228:13:470;43104:18:641;;;43097:34;3251:4:470;43147:19:641;;;43140:61;3148:7:470;;42949:19:641;;3184:73:470;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;3205:157:134;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;2043:269:135;;:::o;4017:1469:450:-;5138:12;;4116:7;;;5185:240;5198:4;5192:3;:10;5185:240;;;5218:11;5232:34;5256:3;5261:4;5232:23;:34::i;:::-;5218:48;;5307:11;5284:5;5290:3;5284:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;5280:135;;;5345:3;5338:10;;5280:135;;;5393:7;:3;5399:1;5393:7;:::i;:::-;5387:13;;5280:135;5204:221;5185:240;;;5442:9;;:37;;5458:5;5464:8;5471:1;5464:4;:8;:::i;:::-;5458:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;5458:21:450;;-1:-1:-1;;;;;5458:21:450;5442:37;;;5454:1;5442:37;-1:-1:-1;;;;;5435:44:450;;4017:1469;-1:-1:-1;;;;;4017:1469:450:o;8047:160:38:-;8172:28;8184:7;8193:6;8172:11;:28::i;470:194:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;2061:125:452:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2145:34:452::1;2169:4;2145:34;;;;;;;;;;;;;-1:-1:-1::0;;;2145:34:452::1;;::::0;:23:::1;:34::i;2269:159:447:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2381:13:447;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:447;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2269:159:::0;;:::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;;-1:-1:-1;;;;;1578:26:136;;;;;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;7743:380:450:-;7827:23;7853:20;7863:9;7853;:20::i;:::-;7827:46;;7883:24;7910:20;7920:9;7910;:20::i;:::-;-1:-1:-1;;;;;7940:21:450;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7940:33:450;;;;;;;;;;7989:54;;7883:47;;-1:-1:-1;7940:33:450;7989:54;;;;;;7940:21;7989:54;8054:62;8071:15;8088:9;8099:16;8054;:62::i;15190:187:474:-;15246:6;15281:16;15272:25;;;15264:76;;;;-1:-1:-1;;;15264:76:474;;39516:2:641;15264:76:474;;;39498:21:641;39555:2;39535:18;;;39528:30;39594:34;39574:18;;;39567:62;-1:-1:-1;;;39645:18:641;;;39638:36;39691:19;;15264:76:474;39314:402:641;15264:76:474;-1:-1:-1;15364:5:474;15190:187::o;3129:261:135:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:135;-1:-1:-1;;;;;3268:44:135;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;4788:356:38:-;5008:14;;5040:20;;;:68;;;5093:15;5080:9;5064:13;3668:12:447;;;3581:106;5064:13:38;:25;;;;:::i;:::-;:44;;5040:68;5032:105;;;;-1:-1:-1;;;5032:105:38;;39923:2:641;5032:105:38;;;39905:21:641;39962:2;39942:18;;;39935:30;-1:-1:-1;;;39981:18:641;;;39974:54;40045:18;;5032:105:38;39721:348:641;8896:111:38;8962:7;8988:12;:10;:12::i;5236:1292::-;5436:19;5432:103;;5479:9;:14;5471:33;;;;-1:-1:-1;;;5471:33:38;;40276:2:641;5471:33:38;;;40258:21:641;40315:1;40295:18;;;40288:29;-1:-1:-1;;;40333:18:641;;;40326:36;40379:18;;5471:33:38;40074:329:641;5471:33:38;5518:7;;5432:103;5546:28;5576:21;5601:20;:18;:20::i;:::-;5545:76;;-1:-1:-1;5545:76:38;-1:-1:-1;5632:21:38;-1:-1:-1;;;;;5656:35:38;;;:84;;5719:21;5656:84;;;5694:22;:20;:22::i;:::-;5632:108;-1:-1:-1;5841:18:38;5900:7;5863:33;5882:14;5863:16;:33;:::i;:::-;5862:45;;;;:::i;:::-;5841:66;;5938:1;5925:10;:14;5917:43;;;;-1:-1:-1;;;5917:43:38;;40832:2:641;5917:43:38;;;40814:21:641;40871:2;40851:18;;;40844:30;-1:-1:-1;;;40890:18:641;;;40883:46;40946:18;;5917:43:38;40630:340:641;5917:43:38;5971:20;2224:6;5995:27;;;;:10;:27;:::i;:::-;5994:39;;;;:::i;:::-;5971:62;-1:-1:-1;6044:18:38;-1:-1:-1;;;;;6076:45:38;;397:42:277;6076:45:38;6072:176;;;-1:-1:-1;6153:9:38;:23;;6072:176;;;-1:-1:-1;6223:9:38;:14;6072:176;6265:13;6257:43;;;;-1:-1:-1;;;6257:43:38;;41177:2:641;6257:43:38;;;41159:21:641;41216:2;41196:18;;;41189:30;-1:-1:-1;;;41235:18:641;;;41228:47;41292:18;;6257:43:38;40975:341:641;6257:43:38;6311:97;6348:9;6359:12;:10;:12::i;:::-;6373:20;6395:12;6311:36;:97::i;:::-;6418:103;6455:9;6466:12;:10;:12::i;:::-;6480:13;6495:25;6508:12;6495:10;:25;:::i;:::-;6418:36;:103::i;6583:180::-;6686:7;6705:33;6711:3;6716:21;6705:5;:33::i;:::-;-1:-1:-1;6755:1:38;6583:180;;;;:::o;8801:236:120:-;;;;;;;:::o;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;41523:2:641;1226:88:466;;;41505:21:641;41562:2;41542:18;;;41535:30;41601:34;41581:18;;;41574:62;-1:-1:-1;;;41652:18:641;;;41645:36;41698:19;;1226:88:466;41321:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;3890:176:470:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:469;;-1:-1:-1;;;8710:57:469;;;43470:27:641;43513:11;;;43506:27;;;43549:12;;;43542:28;;;8674:7:469;;43586:12:641;;8710:57:469;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:469;-1:-1:-1;6925:270:469;;;;;;;:::o;3526:214:452:-;-1:-1:-1;;;;;3657:14:452;;3586:15;3657:14;;;:7;:14;;;;;929::465;;1061:1;1043:19;;;;929:14;3716:17:452;956:123:465;1058:401:304;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;3282:113:452:o;8484:406:38:-;8692:33;8700:12;;8722:1;8692:7;:33::i;:::-;8691:34;:56;;;;-1:-1:-1;;;;;;8729:18:38;;;;8691:56;:76;;;;-1:-1:-1;;;;;;8751:16:38;;;;8691:76;8687:197;;;8791:27;8799:12;;8813:4;8791:7;:27::i;:::-;:56;;;;8822:25;8830:12;;8844:2;8822:7;:25::i;:::-;8783:90;;;;-1:-1:-1;;;8783:90:38;;42209:2:641;8783:90:38;;;42191:21:641;42248:2;42228:18;;;42221:30;-1:-1:-1;;;42267:18:641;;;42260:51;42328:18;;8783:90:38;42007:345:641;8213:228:38;8391:43;8417:4;8423:2;8427:6;8391:25;:43::i;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;42559:2:641;1913:55:285;;;42541:21:641;;;42578:18;;;42571:30;42637:34;42617:18;;;42610:62;42689:18;;1913:55:285;42357:356:641;5036:168:133;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;817:153:473:-;879:7;952:11;962:1;953:5;;;952:11;:::i;:::-;942:21;;943:5;;;942:21;:::i;7009:190:450:-;7093:28;7105:7;7114:6;7093:11;:28::i;:::-;7132:60;7149:23;7174:9;7185:6;7132:16;:60::i;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;776::464:o;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;2459:297:470::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;2592:22:470;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;8129:627:450:-;8256:3;-1:-1:-1;;;;;8249:10:450;:3;-1:-1:-1;;;;;8249:10:450;;;:24;;;;;8272:1;8263:6;:10;8249:24;8245:505;;;-1:-1:-1;;;;;8293:17:450;;;8289:221;;-1:-1:-1;;;;;8388:17:450;;8331;8388;;;:12;:17;;;;;8331;;8371:54;;8407:9;8418:6;8371:16;:54::i;:::-;8330:95;;;;8469:3;-1:-1:-1;;;;;8448:47:450;;8474:9;8485;8448:47;;;;;;15875:25:641;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;8448:47:450;;;;;;;;8312:198;;8289:221;-1:-1:-1;;;;;8528:17:450;;;8524:216;;-1:-1:-1;;;;;8623:17:450;;8566;8623;;;:12;:17;;;;;8566;;8606:49;;8642:4;8648:6;8606:16;:49::i;:::-;8565:90;;;;8699:3;-1:-1:-1;;;;;8678:47:450;;8704:9;8715;8678:47;;;;;;15875:25:641;;;15931:2;15916:18;;15909:34;15863:2;15848:18;;15701:248;8678:47:450;;;;;;;;8547:193;;8129:627;;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;7881:160:38:-;8006:28;8018:7;8027:6;8006:11;:28::i;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;5189:1603:469:-;5315:7;;-1:-1:-1;;;;;6226:79:469;;6222:161;;;-1:-1:-1;6337:1:469;;-1:-1:-1;6341:30:469;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:469;;-1:-1:-1;6450:30:469;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;43836:25:641;;;43909:4;43897:17;;43877:18;;;43870:45;;;;43931:18;;;43924:34;;;43974:18;;;43967:34;;;6603:24:469;;43808:19:641;;6603:24:469;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:469;;-1:-1:-1;;6603:24:469;;;-1:-1:-1;;;;;;;6641:20:469;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:469;;-1:-1:-1;5189:1603:469;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;;788:34;;-1:-1:-1;;;788:34:469;;44214:2:641;788:34:469;;;44196:21:641;44253:2;44233:18;;;44226:30;-1:-1:-1;;;44272:18:641;;;44265:54;44336:18;;788:34:469;44012:348:641;730:465:469;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;;903:41;;-1:-1:-1;;;903:41:469;;44567:2:641;903:41:469;;;44549:21:641;44606:2;44586:18;;;44579:30;44645:33;44625:18;;;44618:61;44696:18;;903:41:469;44365:355:641;839:356:469;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;;1020:44;;-1:-1:-1;;;1020:44:469;;44927:2:641;1020:44:469;;;44909:21:641;44966:2;44946:18;;;44939:30;45005:34;44985:18;;;44978:62;-1:-1:-1;;;45056:18:641;;;45049:32;45098:19;;1020:44:469;44725:398:641;961:234:469;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;;1140:44;;-1:-1:-1;;;1140:44:469;;45330:2:641;1140:44:469;;;45312:21:641;45369:2;45349:18;;;45342:30;45408:34;45388:18;;;45381:62;-1:-1:-1;;;45459:18:641;;;45452:32;45501:19;;1140:44:469;45128:398:641;7332:254:450;7523:56;7540:15;7550:4;7540:9;:15::i;:::-;7557:13;7567:2;7557:9;:13::i;:::-;7572:6;7523:16;:56::i;9448:576:447:-;-1:-1:-1;;;;;9531:21:447;;9523:67;;;;-1:-1:-1;;;9523:67:447;;45733:2:641;9523:67:447;;;45715:21:641;45772:2;45752:18;;;45745:30;45811:34;45791:18;;;45784:62;-1:-1:-1;;;45862:18:641;;;45855:31;45903:19;;9523:67:447;45531:397:641;9523:67:447;9601:49;9622:7;9639:1;9643:6;9601:20;:49::i;:::-;-1:-1:-1;;;;;9686:18:447;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:447;;46135:2:641;9714:71:447;;;46117:21:641;46174:2;46154:18;;;46147:30;46213:34;46193:18;;;46186:62;-1:-1:-1;;;46264:18:641;;;46257:32;46306:19;;9714:71:447;45933:398:641;9714:71:447;-1:-1:-1;;;;;9819:18:447;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:447;;2002:25:641;;;9947:1:447;;-1:-1:-1;;;;;9921:37:447;;;-1:-1:-1;;;;;;;;;;;9921:37:447;1990:2:641;1975:18;9921:37:447;;;;;;;9969:48;9989:7;10006:1;10010:6;9969:19;:48::i;9534:101:450:-;9597:7;9623:5;9627:1;9623;:5;:::i;8762:664::-;8994:12;;8932:17;;;;9028:8;;:35;;9043:5;9049:7;9055:1;9049:3;:7;:::i;:::-;9043:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;9043:20:450;;-1:-1:-1;;;;;9043:20:450;9028:35;;;9039:1;9028:35;-1:-1:-1;;;;;9016:47:450;;;9085:20;9088:9;9099:5;9085:2;:20;;:::i;:::-;9073:32;;9126:1;9120:3;:7;:51;;;;-1:-1:-1;9159:12:450;9131:5;9137:7;9143:1;9137:3;:7;:::i;:::-;9131:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;9120:51;9116:304;;;9210:40;9240:9;9210:29;:40::i;:::-;9187:5;9193:7;9199:1;9193:3;:7;:::i;:::-;9187:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:63;;;;;-1:-1:-1;;;;;9187:63:450;;;;;-1:-1:-1;;;;;9187:63:450;;;;;;9116:304;;;9281:5;9292:116;;;;;;;;9315:42;9344:12;9315:28;:42::i;:::-;9292:116;;;;;;9366:40;9396:9;9366:29;:40::i;:::-;-1:-1:-1;;;;;9292:116:450;;;;;;9281:128;;;;;;;-1:-1:-1;9281:128:450;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9281:128:450;;;;;;;;;;;;9116:304;8970:456;8762:664;;;;;;:::o;9432:96::-;9490:7;9516:5;9520:1;9516;:5;:::i;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;46748:2:641;2758:48:277;;;46730:21:641;46787:2;46767:18;;;46760:30;-1:-1:-1;;;46806:18:641;;;46799:58;46874:18;;2758:48:277;46546:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;6635:285:450:-;6719:28;6731:7;6740:6;6719:11;:28::i;:::-;3668:12:447;;-1:-1:-1;;;;;;6765:29:450;6757:90;;;;-1:-1:-1;;;6757:90:450;;47105:2:641;6757:90:450;;;47087:21:641;47144:2;47124:18;;;47117:30;47183:34;47163:18;;;47156:62;-1:-1:-1;;;47234:18:641;;;47227:46;47290:19;;6757:90:450;46903:412:641;6757:90:450;6858:55;6875:23;6900:4;6906:6;6858:16;:55::i;2762:192:474:-;2819:7;-1:-1:-1;;;;;2846:26:474;;;2838:78;;;;-1:-1:-1;;;2838:78:474;;47522:2:641;2838:78:474;;;47504:21:641;47561:2;47541:18;;;47534:30;47600:34;47580:18;;;47573:62;-1:-1:-1;;;47651:18:641;;;47644:37;47698:19;;2838:78:474;47320:403:641;729:205:321;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;47986:15:641;;;1105:68:321;;;47968:34:641;48038:15;;48018:18;;;48011:43;48070:18;;;48063:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;47903:18:641;;1105:68:321;47728:375:641;8739:389:447;-1:-1:-1;;;;;8822:21:447;;8814:65;;;;-1:-1:-1;;;8814:65:447;;48310:2:641;8814:65:447;;;48292:21:641;48349:2;48329:18;;;48322:30;48388:33;48368:18;;;48361:61;48439:18;;8814:65:447;48108:355:641;8814:65:447;8890:49;8919:1;8923:7;8932:6;8890:20;:49::i;:::-;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:447;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:447;;2002:25:641;;;-1:-1:-1;;;;;9025:37:447;;;9042:1;;-1:-1:-1;;;;;;;;;;;9025:37:447;1990:2:641;1975:18;9025:37:447;;;;;;;9073:48;9101:1;9105:7;9114:6;9073:19;:48::i;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;48920:2:641;3839:85:321;;;48902:21:641;48959:2;48939:18;;;48932:30;48998:34;48978:18;;;48971:62;-1:-1:-1;;;49049:18:641;;;49042:40;49099:19;;3839:85:321;48718:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;49738:2:641;5194:60:281;;;49720:21:641;49777:2;49757:18;;;49750:30;49816:31;49796:18;;;49789:59;49865:18;;5194:60:281;49536:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:258:641;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:641;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:641;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:641:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:131::-;-1:-1:-1;;;;;1048:31:641;;1038:42;;1028:70;;1094:1;1091;1084:12;1109:134;1177:20;;1206:31;1177:20;1206:31;:::i;:::-;1109:134;;;:::o;1248:315::-;1316:6;1324;1377:2;1365:9;1356:7;1352:23;1348:32;1345:52;;;1393:1;1390;1383:12;1345:52;1432:9;1419:23;1451:31;1476:5;1451:31;:::i;:::-;1501:5;1553:2;1538:18;;;;1525:32;;-1:-1:-1;;;1248:315:641:o;2038:163::-;2105:5;2150:3;2141:6;2136:3;2132:16;2128:26;2125:46;;;2167:1;2164;2157:12;2206:854;2345:6;2353;2361;2369;2377;2385;2438:3;2426:9;2417:7;2413:23;2409:33;2406:53;;;2455:1;2452;2445:12;2406:53;2491:9;2478:23;2468:33;;2551:2;2540:9;2536:18;2523:32;2564:31;2589:5;2564:31;:::i;:::-;2614:5;-1:-1:-1;2666:2:641;2651:18;;2638:32;;-1:-1:-1;2722:2:641;2707:18;;2694:32;2735:33;2694:32;2735:33;:::i;:::-;2787:7;-1:-1:-1;2841:3:641;2826:19;;2813:33;;-1:-1:-1;2897:3:641;2882:19;;2869:33;-1:-1:-1;;;;;2914:30:641;;2911:50;;;2957:1;2954;2947:12;2911:50;2980:74;3046:7;3037:6;3026:9;3022:22;2980:74;:::i;:::-;2970:84;;;2206:854;;;;;;;;:::o;3065:456::-;3142:6;3150;3158;3211:2;3199:9;3190:7;3186:23;3182:32;3179:52;;;3227:1;3224;3217:12;3179:52;3266:9;3253:23;3285:31;3310:5;3285:31;:::i;:::-;3335:5;-1:-1:-1;3392:2:641;3377:18;;3364:32;3405:33;3364:32;3405:33;:::i;:::-;3065:456;;3457:7;;-1:-1:-1;;;3511:2:641;3496:18;;;;3483:32;;3065:456::o;3526:180::-;3585:6;3638:2;3626:9;3617:7;3613:23;3609:32;3606:52;;;3654:1;3651;3644:12;3606:52;-1:-1:-1;3677:23:641;;3526:180;-1:-1:-1;3526:180:641:o;3893:315::-;3961:6;3969;4022:2;4010:9;4001:7;3997:23;3993:32;3990:52;;;4038:1;4035;4028:12;3990:52;4074:9;4061:23;4051:33;;4134:2;4123:9;4119:18;4106:32;4147:31;4172:5;4147:31;:::i;:::-;4197:5;4187:15;;;3893:315;;;;;:::o;4587:127::-;4648:10;4643:3;4639:20;4636:1;4629:31;4679:4;4676:1;4669:15;4703:4;4700:1;4693:15;4719:275;4790:2;4784:9;4855:2;4836:13;;-1:-1:-1;;4832:27:641;4820:40;;-1:-1:-1;;;;;4875:34:641;;4911:22;;;4872:62;4869:88;;;4937:18;;:::i;:::-;4973:2;4966:22;4719:275;;-1:-1:-1;4719:275:641:o;4999:407::-;5064:5;-1:-1:-1;;;;;5090:6:641;5087:30;5084:56;;;5120:18;;:::i;:::-;5158:57;5203:2;5182:15;;-1:-1:-1;;5178:29:641;5209:4;5174:40;5158:57;:::i;:::-;5149:66;;5238:6;5231:5;5224:21;5278:3;5269:6;5264:3;5260:16;5257:25;5254:45;;;5295:1;5292;5285:12;5254:45;5344:6;5339:3;5332:4;5325:5;5321:16;5308:43;5398:1;5391:4;5382:6;5375:5;5371:18;5367:29;5360:40;4999:407;;;;;:::o;5411:222::-;5454:5;5507:3;5500:4;5492:6;5488:17;5484:27;5474:55;;5525:1;5522;5515:12;5474:55;5547:80;5623:3;5614:6;5601:20;5594:4;5586:6;5582:17;5547:80;:::i;5638:787::-;5692:5;5745:3;5738:4;5730:6;5726:17;5722:27;5712:55;;5763:1;5760;5753:12;5712:55;5799:6;5786:20;5825:4;-1:-1:-1;;;;;5844:2:641;5841:26;5838:52;;;5870:18;;:::i;:::-;5916:2;5913:1;5909:10;5939:28;5963:2;5959;5955:11;5939:28;:::i;:::-;6001:15;;;6071;;;6067:24;;;6032:12;;;;6103:15;;;6100:35;;;6131:1;6128;6121:12;6100:35;6167:2;6159:6;6155:15;6144:26;;6179:217;6195:6;6190:3;6187:15;6179:217;;;6275:3;6262:17;6292:31;6317:5;6292:31;:::i;:::-;6336:18;;6212:12;;;;6374;;;;6179:217;;6430:173;6498:20;;-1:-1:-1;;;;;6547:31:641;;6537:42;;6527:70;;6593:1;6590;6583:12;6608:1270;6785:6;6793;6801;6809;6817;6825;6833;6841;6894:3;6882:9;6873:7;6869:23;6865:33;6862:53;;;6911:1;6908;6901:12;6862:53;6934:29;6953:9;6934:29;:::i;:::-;6924:39;;7014:2;7003:9;6999:18;6986:32;-1:-1:-1;;;;;7078:2:641;7070:6;7067:14;7064:34;;;7094:1;7091;7084:12;7064:34;7117:50;7159:7;7150:6;7139:9;7135:22;7117:50;:::i;:::-;7107:60;;7220:2;7209:9;7205:18;7192:32;7176:48;;7249:2;7239:8;7236:16;7233:36;;;7265:1;7262;7255:12;7233:36;7288:52;7332:7;7321:8;7310:9;7306:24;7288:52;:::i;:::-;7278:62;;7393:2;7382:9;7378:18;7365:32;7349:48;;7422:2;7412:8;7409:16;7406:36;;;7438:1;7435;7428:12;7406:36;7461:52;7505:7;7494:8;7483:9;7479:24;7461:52;:::i;:::-;7451:62;;7566:3;7555:9;7551:19;7538:33;7522:49;;7596:2;7586:8;7583:16;7580:36;;;7612:1;7609;7602:12;7580:36;;7635:63;7690:7;7679:8;7668:9;7664:24;7635:63;:::i;:::-;7625:73;;;7717:39;7751:3;7740:9;7736:19;7717:39;:::i;:::-;7707:49;;7775:39;7809:3;7798:9;7794:19;7775:39;:::i;:::-;7765:49;;7833:39;7867:3;7856:9;7852:19;7833:39;:::i;:::-;7823:49;;6608:1270;;;;;;;;;;;:::o;7883:247::-;7942:6;7995:2;7983:9;7974:7;7970:23;7966:32;7963:52;;;8011:1;8008;8001:12;7963:52;8050:9;8037:23;8069:31;8094:5;8069:31;:::i;8135:826::-;8330:2;8319:9;8312:21;8375:6;8369:13;8364:2;8353:9;8349:18;8342:41;8437:2;8429:6;8425:15;8419:22;8414:2;8403:9;8399:18;8392:50;8496:2;8488:6;8484:15;8478:22;8473:2;8462:9;8458:18;8451:50;8556:2;8548:6;8544:15;8538:22;8532:3;8521:9;8517:19;8510:51;8616:3;8608:6;8604:16;8598:23;8592:3;8581:9;8577:19;8570:52;8677:3;8669:6;8665:16;8659:23;8653:3;8642:9;8638:19;8631:52;8766:1;8762;8757:3;8753:11;8749:19;8742:3;8734:6;8730:16;8724:23;8720:49;8714:3;8703:9;8699:19;8692:78;8293:4;8817:3;8809:6;8805:16;8799:23;8841:6;8883:2;8878;8867:9;8863:18;8856:30;;8903:52;8950:3;8939:9;8935:19;8921:12;8903:52;:::i;9163:390::-;9249:8;9259:6;9313:3;9306:4;9298:6;9294:17;9290:27;9280:55;;9331:1;9328;9321:12;9280:55;-1:-1:-1;9354:20:641;;-1:-1:-1;;;;;9386:30:641;;9383:50;;;9429:1;9426;9419:12;9383:50;9466:4;9458:6;9454:17;9442:29;;9526:3;9519:4;9509:6;9506:1;9502:14;9494:6;9490:27;9486:38;9483:47;9480:67;;;9543:1;9540;9533:12;9480:67;9163:390;;;;;:::o;9558:118::-;9644:5;9637:13;9630:21;9623:5;9620:32;9610:60;;9666:1;9663;9656:12;9681:624;9808:6;9816;9824;9877:2;9865:9;9856:7;9852:23;9848:32;9845:52;;;9893:1;9890;9883:12;9845:52;9933:9;9920:23;-1:-1:-1;;;;;9958:6:641;9955:30;9952:50;;;9998:1;9995;9988:12;9952:50;10037:93;10122:7;10113:6;10102:9;10098:22;10037:93;:::i;:::-;10149:8;;-1:-1:-1;10011:119:641;-1:-1:-1;;10234:2:641;10219:18;;10206:32;10247:28;10206:32;10247:28;:::i;:::-;10294:5;10284:15;;;9681:624;;;;;:::o;10310:1135::-;10458:6;10466;10474;10482;10490;10498;10551:3;10539:9;10530:7;10526:23;10522:33;10519:53;;;10568:1;10565;10558:12;10519:53;10607:9;10594:23;10626:31;10651:5;10626:31;:::i;:::-;10676:5;-1:-1:-1;10728:2:641;10713:18;;10700:32;;-1:-1:-1;10784:2:641;10769:18;;10756:32;10797:33;10756:32;10797:33;:::i;:::-;10849:7;-1:-1:-1;10903:2:641;10888:18;;10875:32;;-1:-1:-1;10958:3:641;10943:19;;10930:33;-1:-1:-1;;;;;11012:14:641;;;11009:34;;;11039:1;11036;11029:12;11009:34;11062:74;11128:7;11119:6;11108:9;11104:22;11062:74;:::i;:::-;11052:84;;11189:3;11178:9;11174:19;11161:33;11145:49;;11219:2;11209:8;11206:16;11203:36;;;11235:1;11232;11225:12;11203:36;-1:-1:-1;11258:24:641;;11313:4;11305:13;;11301:27;-1:-1:-1;11291:55:641;;11342:1;11339;11332:12;11291:55;11365:74;11431:7;11426:2;11413:16;11408:2;11404;11400:11;11365:74;:::i;11450:248::-;11518:6;11526;11579:2;11567:9;11558:7;11554:23;11550:32;11547:52;;;11595:1;11592;11585:12;11547:52;-1:-1:-1;;11618:23:641;;;11688:2;11673:18;;;11660:32;;-1:-1:-1;11450:248:641:o;11703:322::-;11772:6;11825:2;11813:9;11804:7;11800:23;11796:32;11793:52;;;11841:1;11838;11831:12;11793:52;11881:9;11868:23;-1:-1:-1;;;;;11906:6:641;11903:30;11900:50;;;11946:1;11943;11936:12;11900:50;11969;12011:7;12002:6;11991:9;11987:22;11969:50;:::i;12030:471::-;12127:6;12135;12188:2;12176:9;12167:7;12163:23;12159:32;12156:52;;;12204:1;12201;12194:12;12156:52;12244:9;12231:23;-1:-1:-1;;;;;12269:6:641;12266:30;12263:50;;;12309:1;12306;12299:12;12263:50;12348:93;12433:7;12424:6;12413:9;12409:22;12348:93;:::i;:::-;12460:8;;12322:119;;-1:-1:-1;12030:471:641;-1:-1:-1;;;;12030:471:641:o;12506:801::-;12666:4;12695:2;12735;12724:9;12720:18;12765:2;12754:9;12747:21;12788:6;12823;12817:13;12854:6;12846;12839:22;12892:2;12881:9;12877:18;12870:25;;12954:2;12944:6;12941:1;12937:14;12926:9;12922:30;12918:39;12904:53;;12992:2;12984:6;12980:15;13013:1;13023:255;13037:6;13034:1;13031:13;13023:255;;;13130:2;13126:7;13114:9;13106:6;13102:22;13098:36;13093:3;13086:49;13158:40;13191:6;13182;13176:13;13158:40;:::i;:::-;13148:50;-1:-1:-1;13256:12:641;;;;13221:15;;;;13059:1;13052:9;13023:255;;;-1:-1:-1;13295:6:641;;12506:801;-1:-1:-1;;;;;;;12506:801:641:o;13632:277::-;13712:6;13765:2;13753:9;13744:7;13740:23;13736:32;13733:52;;;13781:1;13778;13771:12;13733:52;13820:9;13807:23;13859:1;13852:5;13849:12;13839:40;;13875:1;13872;13865:12;13914:156;13980:20;;14040:4;14029:16;;14019:27;;14009:55;;14060:1;14057;14050:12;14075:592;14177:6;14185;14193;14201;14209;14217;14270:3;14258:9;14249:7;14245:23;14241:33;14238:53;;;14287:1;14284;14277:12;14238:53;14326:9;14313:23;14345:31;14370:5;14345:31;:::i;:::-;14395:5;-1:-1:-1;14447:2:641;14432:18;;14419:32;;-1:-1:-1;14498:2:641;14483:18;;14470:32;;-1:-1:-1;14521:36:641;14553:2;14538:18;;14521:36;:::i;:::-;14511:46;;14604:3;14593:9;14589:19;14576:33;14566:43;;14656:3;14645:9;14641:19;14628:33;14618:43;;14075:592;;;;;;;;:::o;14962:734::-;15073:6;15081;15089;15097;15105;15113;15121;15174:3;15162:9;15153:7;15149:23;15145:33;15142:53;;;15191:1;15188;15181:12;15142:53;15230:9;15217:23;15249:31;15274:5;15249:31;:::i;:::-;15299:5;-1:-1:-1;15356:2:641;15341:18;;15328:32;15369:33;15328:32;15369:33;:::i;:::-;15421:7;-1:-1:-1;15475:2:641;15460:18;;15447:32;;-1:-1:-1;15526:2:641;15511:18;;15498:32;;-1:-1:-1;15549:37:641;15581:3;15566:19;;15549:37;:::i;:::-;15539:47;;15633:3;15622:9;15618:19;15605:33;15595:43;;15685:3;15674:9;15670:19;15657:33;15647:43;;14962:734;;;;;;;;;;:::o;15954:388::-;16022:6;16030;16083:2;16071:9;16062:7;16058:23;16054:32;16051:52;;;16099:1;16096;16089:12;16051:52;16138:9;16125:23;16157:31;16182:5;16157:31;:::i;:::-;16207:5;-1:-1:-1;16264:2:641;16249:18;;16236:32;16277:33;16236:32;16277:33;:::i;16347:274::-;-1:-1:-1;;;;;16539:32:641;;;;16521:51;;16603:2;16588:18;;16581:34;16509:2;16494:18;;16347:274::o;16626:419::-;16693:6;16701;16754:2;16742:9;16733:7;16729:23;16725:32;16722:52;;;16770:1;16767;16760:12;16722:52;16809:9;16796:23;16828:31;16853:5;16828:31;:::i;:::-;16878:5;-1:-1:-1;16935:2:641;16920:18;;16907:32;16983:10;16970:24;;16958:37;;16948:65;;17009:1;17006;16999:12;17405:127;17466:10;17461:3;17457:20;17454:1;17447:31;17497:4;17494:1;17487:15;17521:4;17518:1;17511:15;17537:349;17690:2;17675:18;;17723:1;17712:13;;17702:144;;17768:10;17763:3;17759:20;17756:1;17749:31;17803:4;17800:1;17793:15;17831:4;17828:1;17821:15;17702:144;17855:25;;;17537:349;:::o;17891:380::-;17970:1;17966:12;;;;18013;;;18034:61;;18088:4;18080:6;18076:17;18066:27;;18034:61;18141:2;18133:6;18130:14;18110:18;18107:38;18104:161;;;18187:10;18182:3;18178:20;18175:1;18168:31;18222:4;18219:1;18212:15;18250:4;18247:1;18240:15;18276:338;18478:2;18460:21;;;18517:2;18497:18;;;18490:30;-1:-1:-1;;;18551:2:641;18536:18;;18529:44;18605:2;18590:18;;18276:338::o;18619:545::-;18712:4;18718:6;18778:11;18765:25;18872:2;18868:7;18857:8;18841:14;18837:29;18833:43;18813:18;18809:68;18799:96;;18891:1;18888;18881:12;18799:96;18918:33;;18970:20;;;-1:-1:-1;;;;;;19002:30:641;;18999:50;;;19045:1;19042;19035:12;18999:50;19078:4;19066:17;;-1:-1:-1;19129:1:641;19125:14;;;19109;19105:35;19095:46;;19092:66;;;19154:1;19151;19144:12;19975:127;20036:10;20031:3;20027:20;20024:1;20017:31;20067:4;20064:1;20057:15;20091:4;20088:1;20081:15;20107:128;20147:3;20178:1;20174:6;20171:1;20168:13;20165:39;;;20184:18;;:::i;:::-;-1:-1:-1;20220:9:641;;20107:128::o;21967:355::-;22169:2;22151:21;;;22208:2;22188:18;;;22181:30;22247:33;22242:2;22227:18;;22220:61;22313:2;22298:18;;21967:355::o;22941:127::-;23002:10;22997:3;22993:20;22990:1;22983:31;23033:4;23030:1;23023:15;23057:4;23054:1;23047:15;23073:333;23174:4;23232:11;23219:25;23326:3;23322:8;23311;23295:14;23291:29;23287:44;23267:18;23263:69;23253:97;;23346:1;23343;23336:12;23253:97;23367:33;;;;;23073:333;-1:-1:-1;;23073:333:641:o;24088:516::-;24160:4;24166:6;24226:11;24213:25;24320:2;24316:7;24305:8;24289:14;24285:29;24281:43;24261:18;24257:68;24247:96;;24339:1;24336;24329:12;24247:96;24366:33;;24418:20;;;-1:-1:-1;;;;;;24450:30:641;;24447:50;;;24493:1;24490;24483:12;24447:50;24526:4;24514:17;;-1:-1:-1;24557:14:641;24553:27;;;24543:38;;24540:58;;;24594:1;24591;24584:12;24735:545;24837:2;24832:3;24829:11;24826:448;;;24873:1;24898:5;24894:2;24887:17;24943:4;24939:2;24929:19;25013:2;25001:10;24997:19;24994:1;24990:27;24984:4;24980:38;25049:4;25037:10;25034:20;25031:47;;;-1:-1:-1;25072:4:641;25031:47;25127:2;25122:3;25118:12;25115:1;25111:20;25105:4;25101:31;25091:41;;25182:82;25200:2;25193:5;25190:13;25182:82;;;25245:17;;;25226:1;25215:13;25182:82;;25456:1190;-1:-1:-1;;;;;25559:3:641;25556:27;25553:53;;;25586:18;;:::i;:::-;25615:94;25705:3;25665:38;25697:4;25691:11;25665:38;:::i;:::-;25659:4;25615:94;:::i;:::-;25735:1;25760:2;25755:3;25752:11;25777:1;25772:616;;;;26432:1;26449:3;26446:93;;;-1:-1:-1;26505:19:641;;;26492:33;26446:93;-1:-1:-1;;25413:1:641;25409:11;;;25405:24;25401:29;25391:40;25437:1;25433:11;;;25388:57;26552:78;;25745:895;;25772:616;24682:1;24675:14;;;24719:4;24706:18;;-1:-1:-1;;25808:17:641;;;25909:9;25931:229;25945:7;25942:1;25939:14;25931:229;;;26034:19;;;26021:33;26006:49;;26141:4;26126:20;;;;26094:1;26082:14;;;;25961:12;25931:229;;;25935:3;26188;26179:7;26176:16;26173:159;;;26312:1;26308:6;26302:3;26296;26293:1;26289:11;26285:21;26281:34;26277:39;26264:9;26259:3;26255:19;26242:33;26238:79;26230:6;26223:95;26173:159;;;26375:1;26369:3;26366:1;26362:11;26358:19;26352:4;26345:33;25745:895;;;25456:1190;;;:::o;26651:950::-;26830:5;26817:19;26811:4;26804:33;26891:2;26884:5;26880:14;26867:28;26863:1;26857:4;26853:12;26846:50;26950:2;26943:5;26939:14;26926:28;26922:1;26916:4;26912:12;26905:50;27009:2;27002:5;26998:14;26985:28;26981:1;26975:4;26971:12;26964:50;27068:3;27061:5;27057:15;27044:29;27040:1;27034:4;27030:12;27023:51;27128:3;27121:5;27117:15;27104:29;27100:1;27094:4;27090:12;27083:51;27171:1;27165:4;27161:12;27221:3;27214:5;27210:15;27197:29;27235:33;27260:7;27235:33;:::i;:::-;27303:17;;-1:-1:-1;;;;;;27299:48:641;-1:-1:-1;;;;;27349:33:641;;;;27296:87;27277:107;;27427:60;27482:3;27471:15;;27475:5;27427:60;:::i;:::-;27496:99;27581:13;27568:11;27564:1;27558:4;27554:12;27496:99;:::i;27606:135::-;27645:3;-1:-1:-1;;27666:17:641;;27663:43;;;27686:18;;:::i;:::-;-1:-1:-1;27733:1:641;27722:13;;27606:135::o;27746:504::-;27805:5;27812:6;27872:3;27859:17;27958:2;27954:7;27943:8;27927:14;27923:29;27919:43;27899:18;27895:68;27885:96;;27977:1;27974;27967:12;27885:96;28005:33;;28109:4;28096:18;;;-1:-1:-1;28057:21:641;;-1:-1:-1;;;;;;28126:30:641;;28123:50;;;28169:1;28166;28159:12;28123:50;28219:6;28203:14;28199:27;28189:8;28185:42;28182:62;;;28240:1;28237;28230:12;28255:267;28344:6;28339:3;28332:19;28396:6;28389:5;28382:4;28377:3;28373:14;28360:43;-1:-1:-1;28448:1:641;28423:16;;;28441:4;28419:27;;;28412:38;;;;28504:2;28483:15;;;-1:-1:-1;;28479:29:641;28470:39;;;28466:50;;28255:267::o;28527:2051::-;28798:2;28850:21;;;28823:18;;;28906:22;;;28769:4;;28947:2;28965:18;;;29029:1;29025:14;;;29010:30;;29006:39;;29068:6;28769:4;;29123:1372;29139:6;29134:3;29131:15;29123:1372;;;29208:22;;;-1:-1:-1;;29204:36:641;29192:49;;29280:20;;29355:14;29351:27;;;-1:-1:-1;;29347:42:641;29323:67;;29313:95;;29404:1;29401;29394:12;29313:95;29434:31;;29522:19;;29507:35;;29565:4;29619:14;;;29606:28;29589:15;;;29582:53;29685:14;;;29672:28;29655:15;;;29648:53;29751:14;;;29738:28;29721:15;;;29714:53;29790:4;29844:14;;;29831:28;29814:15;;;29807:53;29883:4;29937:14;;;29924:28;29907:15;;;29900:53;29488:6;;29976:4;30021:14;;;30008:28;30049:33;30008:28;30049:33;:::i;:::-;-1:-1:-1;;;;;30119:33:641;30102:15;;;30095:58;30176:4;30227:54;30266:14;;;30270:5;30227:54;:::i;:::-;30193:88;;30318:2;30313;30305:6;30301:15;30294:27;30344:71;30411:2;30403:6;30399:15;30385:12;30371;30344:71;:::i;:::-;30473:12;;;;30334:81;-1:-1:-1;;;30438:15:641;;;;;-1:-1:-1;;29165:1:641;29156:11;29123:1372;;;-1:-1:-1;;;1638:13:641;;1631:21;30566:4;30551:20;;1619:34;30512:6;-1:-1:-1;30527:45:641;;-1:-1:-1;;;1568:91:641;30583:125;30623:4;30651:1;30648;30645:8;30642:34;;;30656:18;;:::i;:::-;-1:-1:-1;30693:9:641;;30583:125::o;32779:136::-;32818:3;32846:5;32836:39;;32855:18;;:::i;:::-;-1:-1:-1;;;32891:18:641;;32779:136::o;35725:168::-;35765:7;35831:1;35827;35823:6;35819:14;35816:1;35813:21;35808:1;35801:9;35794:17;35790:45;35787:71;;;35838:18;;:::i;:::-;-1:-1:-1;35878:9:641;;35725:168::o;37725:784::-;-1:-1:-1;;;38131:3:641;38124:36;38106:3;38189:6;38183:13;38205:62;38260:6;38255:2;38250:3;38246:12;38239:4;38231:6;38227:17;38205:62;:::i;:::-;-1:-1:-1;;;38326:2:641;38286:16;;;38318:11;;;38311:40;38376:13;;38398:63;38376:13;38447:2;38439:11;;38432:4;38420:17;;38398:63;:::i;:::-;38481:17;38500:2;38477:26;;37725:784;-1:-1:-1;;;;37725:784:641:o;38514:407::-;38716:2;38698:21;;;38755:2;38735:18;;;38728:30;38794:34;38789:2;38774:18;;38767:62;-1:-1:-1;;;38860:2:641;38845:18;;38838:41;38911:3;38896:19;;38514:407::o;38926:383::-;39123:2;39112:9;39105:21;39086:4;39149:45;39190:2;39179:9;39175:18;39167:6;39149:45;:::i;:::-;39242:9;39234:6;39230:22;39225:2;39214:9;39210:18;39203:50;39270:33;39296:6;39288;39270:33;:::i;40408:217::-;40448:1;40474;40464:132;;40518:10;40513:3;40509:20;40506:1;40499:31;40553:4;40550:1;40543:15;40581:4;40578:1;40571:15;40464:132;-1:-1:-1;40610:9:641;;40408:217::o;41728:274::-;41857:3;41895:6;41889:13;41911:53;41957:6;41952:3;41945:4;41937:6;41933:17;41911:53;:::i;48468:245::-;48535:6;48588:2;48576:9;48567:7;48563:23;48559:32;48556:52;;;48604:1;48601;48594:12;48556:52;48636:9;48630:16;48655:28;48677:5;48655:28;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getActiveClaimConditionId()": "c68907de",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "getVotes(address)": "9ab24eb0",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,string,address[],address,address,uint128)": "49c5c5b6",
    "isTrustedForwarder(address)": "572b6c05",
    "maxTotalSupply()": "2ab4d052",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string,string,address[],address,address,uint128)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Global max total supply of tokens.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/drop/DropERC20.sol\":\"DropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/drop/DropERC20.sol\":{\"keccak256\":\"0x3339bda2ca3aadc71caf6c279b15112e027bdb976f8523d22b695cb9ee4da985\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://205df206d0803b5ffd76d04b75af996cb7ed1ed10efa7081c50c86265b4b2656\",\"dweb:/ipfs/QmQ3gjCvXepFUEEcwfFoo8qzstQbwZACMXXB9pDGcaFL1H\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c\",\"dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0\",\"dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9\",\"dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20VotesUpgradeable.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(address,string,string,string,address[],address,address,uint128)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/drop/DropERC20.sol": "DropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/drop/DropERC20.sol": {
        "keccak256": "0x3339bda2ca3aadc71caf6c279b15112e027bdb976f8523d22b695cb9ee4da985",
        "urls": [
          "bzz-raw://205df206d0803b5ffd76d04b75af996cb7ed1ed10efa7081c50c86265b4b2656",
          "dweb:/ipfs/QmQ3gjCvXepFUEEcwfFoo8qzstQbwZACMXXB9pDGcaFL1H"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Drop.sol": {
        "keccak256": "0x11e1f936e81e51b69d5130acc57a1b95c6428f55265492a7f8bbc1e76a7f9acc",
        "urls": [
          "bzz-raw://9d1ac7b9be364630343fc9d0509c67e8ba9de07a28a9520461a4c81fe122701c",
          "dweb:/ipfs/Qme1eucpamqAkL2xFfcYHWPmo4aNk8SNuWSfk2R2uW7pYZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6",
        "urls": [
          "bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268",
          "dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol": {
        "keccak256": "0x440d61e36baa04fb3b2843f010fae4116f8e3b276f1f6629bd8327368e3743a3",
        "urls": [
          "bzz-raw://9d90aa748f17c4bed78e83fbc3a3afe64541c0e052240c8cb9da081ac360d8b0",
          "dweb:/ipfs/QmaLWeLwt7mfUwd7TCZfLgFBxpDZFNnZ4249MB7yVPJg9r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0x564385ebed633694decce3e13d687f3ac7e8eaef64f7a504bfb3f03ad210601f",
        "urls": [
          "bzz-raw://41ed792f4ae2df9d1a32e57d6cde6d4e00232681ef573fde920bd7fa5f990aa9",
          "dweb:/ipfs/QmeQHwX8SxuqfMFAsLECuR9QkJMpceGTeymKdwQnVq9QdR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
        "urls": [
          "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
          "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834",
        "urls": [
          "bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b",
          "dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/drop/DropERC20.sol",
    "id": 15573,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CountersUpgradeable": [
        157788
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "Drop": [
        35609
      ],
      "DropERC20": [
        15572
      ],
      "ECDSAUpgradeable": [
        158725
      ],
      "EIP712Upgradeable": [
        158875
      ],
      "ERC20BurnableUpgradeable": [
        154516
      ],
      "ERC20PermitUpgradeable": [
        155389
      ],
      "ERC20Upgradeable": [
        154374
      ],
      "ERC20VotesUpgradeable": [
        155173
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "IClaimCondition": [
        49527
      ],
      "IClaimConditionMultiPhase": [
        49550
      ],
      "IContractMetadata": [
        49679
      ],
      "IDrop": [
        49815
      ],
      "IERC20": [
        31216
      ],
      "IERC20MetadataUpgradeable": [
        155198
      ],
      "IERC20PermitUpgradeable": [
        155425
      ],
      "IERC20Upgradeable": [
        154452
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPlatformFee": [
        50559
      ],
      "IPrimarySale": [
        50580
      ],
      "IVotesUpgradeable": [
        151699
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "MathUpgradeable": [
        159435
      ],
      "MerkleProof": [
        64593
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PlatformFee": [
        39256
      ],
      "PrimarySale": [
        39318
      ],
      "SafeCastUpgradeable": [
        161286
      ],
      "SafeERC20": [
        78527
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9441:38",
    "nodes": [
      {
        "id": 15011,
        "nodeType": "PragmaDirective",
        "src": "39:24:38",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 15012,
        "nodeType": "ImportDirective",
        "src": "774:97:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 154517,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15013,
        "nodeType": "ImportDirective",
        "src": "872:94:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 155174,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15014,
        "nodeType": "ImportDirective",
        "src": "968:76:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15015,
        "nodeType": "ImportDirective",
        "src": "1045:74:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 158124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15016,
        "nodeType": "ImportDirective",
        "src": "1169:70:38",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15017,
        "nodeType": "ImportDirective",
        "src": "1240:40:38",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15018,
        "nodeType": "ImportDirective",
        "src": "1322:43:38",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15019,
        "nodeType": "ImportDirective",
        "src": "1366:38:38",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 39257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15020,
        "nodeType": "ImportDirective",
        "src": "1405:38:38",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15021,
        "nodeType": "ImportDirective",
        "src": "1444:48:38",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15022,
        "nodeType": "ImportDirective",
        "src": "1493:31:38",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop.sol",
        "file": "../extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15573,
        "sourceUnit": 35610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15572,
        "nodeType": "ContractDefinition",
        "src": "1526:7953:38",
        "nodes": [
          {
            "id": 15045,
            "nodeType": "UsingForDirective",
            "src": "1779:37:38",
            "nodes": [],
            "libraryName": {
              "id": 15043,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158123,
              "src": "1785:18:38"
            },
            "typeName": {
              "id": 15044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1808:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15048,
            "nodeType": "VariableDeclaration",
            "src": "2109:28:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15046,
              "nodeType": "StructuredDocumentation",
              "src": "2006:98:38",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2125:12:38",
            "scope": 15572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15047,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2109:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 15052,
            "nodeType": "VariableDeclaration",
            "src": "2189:41:38",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 15049,
              "nodeType": "StructuredDocumentation",
              "src": "2144:40:38",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2214:7:38",
            "scope": 15572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15050,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2189:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 15051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2224:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 15055,
            "nodeType": "VariableDeclaration",
            "src": "2285:29:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15053,
              "nodeType": "StructuredDocumentation",
              "src": "2237:43:38",
              "text": "@dev Global max total supply of tokens."
            },
            "functionSelector": "2ab4d052",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "2300:14:38",
            "scope": 15572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15054,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2285:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15060,
            "nodeType": "EventDefinition",
            "src": "2391:52:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 15056,
              "nodeType": "StructuredDocumentation",
              "src": "2321:65:38",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "2397:21:38",
            "parameters": {
              "id": 15059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "2427:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15060,
                  "src": "2419:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:24:38"
            }
          },
          {
            "id": 15066,
            "nodeType": "FunctionDefinition",
            "src": "2641:28:38",
            "nodes": [],
            "body": {
              "id": 15065,
              "nodeType": "Block",
              "src": "2667:2:38",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 15063,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15062,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "2655:11:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2655:11:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:2:38"
            },
            "returnParameters": {
              "id": 15064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2667:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15144,
            "nodeType": "FunctionDefinition",
            "src": "2734:958:38",
            "nodes": [],
            "body": {
              "id": 15143,
              "nodeType": "Block",
              "src": "3057:635:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    15090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15090,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "3075:13:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15143,
                      "src": "3067:21:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15089,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3067:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15094,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 15092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3101:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 15091,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3091:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3091:26:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3067:50:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15096,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15078,
                        "src": "3225:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 15095,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "3203:21:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 15097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15098,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:41:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15100,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15071,
                        "src": "3273:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15099,
                      "name": "__ERC20Permit_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155246,
                      "src": "3254:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 15101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:25:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15102,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:25:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15104,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15071,
                        "src": "3312:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 15105,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15073,
                        "src": "3319:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15103,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153828,
                      "src": "3289:22:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 15106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3289:38:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15107,
                  "nodeType": "ExpressionStatement",
                  "src": "3289:38:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15109,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15075,
                        "src": "3356:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15108,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "3338:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 15110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:31:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15111,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:31:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15113,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3391:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15114,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15069,
                        "src": "3411:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15112,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3380:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:45:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15116,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:45:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15118,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15090,
                        "src": "3446:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15119,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15069,
                        "src": "3461:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15117,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3435:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:40:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15121,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:40:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15123,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15090,
                        "src": "3496:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 15126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3519:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3511:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3511:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3511:10:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15122,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3485:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 15128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3485:37:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15129,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:37:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15131,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15082,
                        "src": "3555:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15132,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15084,
                        "src": "3578:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 15130,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39163,
                      "src": "3533:21:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:61:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15134,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:61:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15136,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15080,
                        "src": "3631:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15135,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "3604:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:42:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15138,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:42:38"
                },
                {
                  "expression": {
                    "id": 15141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15139,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15048,
                      "src": "3657:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15140,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15090,
                      "src": "3672:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3657:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 15142,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:28:38"
                }
              ]
            },
            "documentation": {
              "id": 15067,
              "nodeType": "StructuredDocumentation",
              "src": "2675:54:38",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "49c5c5b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15086,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3045:11:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3045:11:38"
              }
            ],
            "name": "initialize",
            "nameLocation": "2743:10:38",
            "parameters": {
              "id": 15085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15069,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2771:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2763:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15071,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2808:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2794:19:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15070,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2794:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15073,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2837:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2823:21:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15072,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15075,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2868:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2854:26:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2854:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15078,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2907:18:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2890:35:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15076,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2890:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15077,
                    "nodeType": "ArrayTypeName",
                    "src": "2890:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15080,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "2943:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2935:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15082,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "2975:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "2967:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15084,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "3014:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "3006:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 15083,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3006:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2753:282:38"
            },
            "returnParameters": {
              "id": 15088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15155,
            "nodeType": "FunctionDefinition",
            "src": "3883:100:38",
            "nodes": [],
            "body": {
              "id": 15154,
              "nodeType": "Block",
              "src": "3939:44:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f704552433230",
                        "id": 15151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3964:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        },
                        "value": "DropERC20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfbb3c555ae493474b67a295ee4f5abc15e7f7131b2a17d805d5b3c9795be7dd",
                          "typeString": "literal_string \"DropERC20\""
                        }
                      ],
                      "id": 15150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3956:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 15149,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3956:7:38",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 15152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:20:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15148,
                  "id": 15153,
                  "nodeType": "Return",
                  "src": "3949:27:38"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "3892:12:38",
            "parameters": {
              "id": 15145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3904:2:38"
            },
            "returnParameters": {
              "id": 15148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15155,
                  "src": "3930:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3929:9:38"
            },
            "scope": 15572,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15166,
            "nodeType": "FunctionDefinition",
            "src": "3989:89:38",
            "nodes": [],
            "body": {
              "id": 15165,
              "nodeType": "Block",
              "src": "4046:32:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 15162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4069:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 15161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4063:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 15160,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4063:5:38",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 15163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4063:8:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 15159,
                  "id": 15164,
                  "nodeType": "Return",
                  "src": "4056:15:38"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "3998:15:38",
            "parameters": {
              "id": 15156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4013:2:38"
            },
            "returnParameters": {
              "id": 15159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15166,
                  "src": "4039:5:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4038:7:38"
            },
            "scope": 15572,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15184,
            "nodeType": "FunctionDefinition",
            "src": "4353:192:38",
            "nodes": [],
            "body": {
              "id": 15183,
              "nodeType": "Block",
              "src": "4443:102:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 15177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15175,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15055,
                      "src": "4453:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15176,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15169,
                      "src": "4470:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4453:32:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15178,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:32:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 15180,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15169,
                        "src": "4522:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15179,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15060,
                      "src": "4500:21:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4500:38:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15182,
                  "nodeType": "EmitStatement",
                  "src": "4495:43:38"
                }
              ]
            },
            "documentation": {
              "id": 15167,
              "nodeType": "StructuredDocumentation",
              "src": "4265:83:38",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15172,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38423,
                    "src": "4423:18:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 15173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15171,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38436,
                  "src": "4414:8:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4414:28:38"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "4362:17:38",
            "parameters": {
              "id": 15170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15169,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "4388:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15184,
                  "src": "4380:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4380:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4379:25:38"
            },
            "returnParameters": {
              "id": 15174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4443:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15221,
            "nodeType": "FunctionDefinition",
            "src": "4788:356:38",
            "nodes": [],
            "body": {
              "id": 15220,
              "nodeType": "Block",
              "src": "4972:172:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    15203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15203,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "4990:15:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15220,
                      "src": "4982:23:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4982:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15205,
                  "initialValue": {
                    "id": 15204,
                    "name": "maxTotalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15055,
                    "src": "5008:14:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4982:40:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 15216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15207,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15203,
                            "src": "5040:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 15208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5059:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5040:20:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 15210,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153868,
                                "src": "5064:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 15211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5064:13:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 15212,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15189,
                              "src": "5080:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5064:25:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 15214,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15203,
                            "src": "5093:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5064:44:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5040:68:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 15217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5110:26:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 15206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5032:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:105:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15219,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:105:38"
                }
              ]
            },
            "baseFunctions": [
              35562
            ],
            "documentation": {
              "id": 15185,
              "nodeType": "StructuredDocumentation",
              "src": "4734:49:38",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "4797:12:38",
            "overrides": {
              "id": 15200,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4963:8:38"
            },
            "parameters": {
              "id": 15199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4819:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15189,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4844:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4836:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4836:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4863:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4880:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4880:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4897:23:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$49765_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 15195,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15194,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49765,
                      "src": "4897:14:38"
                    },
                    "referencedDeclaration": 49765,
                    "src": "4897:14:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$49765_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15221,
                  "src": "4930:12:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15197,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4930:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4809:139:38"
            },
            "returnParameters": {
              "id": 15201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4972:0:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15345,
            "nodeType": "FunctionDefinition",
            "src": "5236:1292:38",
            "nodes": [],
            "body": {
              "id": 15344,
              "nodeType": "Block",
              "src": "5422:1106:38",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15234,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15230,
                      "src": "5436:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5454:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5436:19:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15247,
                  "nodeType": "IfStatement",
                  "src": "5432:103:38",
                  "trueBody": {
                    "id": 15246,
                    "nodeType": "Block",
                    "src": "5457:78:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 15238,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5479:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 15239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5479:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 15240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5492:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5479:14:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 15242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5495:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 15237,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5471:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5471:33:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15244,
                        "nodeType": "ExpressionStatement",
                        "src": "5471:33:38"
                      },
                      {
                        "functionReturnParameters": 15233,
                        "id": 15245,
                        "nodeType": "Return",
                        "src": "5518:7:38"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15249,
                    15251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15249,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "5554:20:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "5546:28:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15248,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5546:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15251,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "5583:14:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "5576:21:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 15250,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5576:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15254,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15252,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39082,
                      "src": "5601:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 15253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5601:20:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5545:76:38"
                },
                {
                  "assignments": [
                    15256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15256,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "5640:13:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "5632:21:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15255,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5632:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15267,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 15262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15257,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15224,
                        "src": "5656:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 15260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5689:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5681:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5681:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5681:10:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5656:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 15265,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15224,
                      "src": "5719:21:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5656:84:38",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15263,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "5694:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 15264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5694:22:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5632:108:38"
                },
                {
                  "assignments": [
                    15269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15269,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "5849:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "5841:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5841:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15276,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15270,
                            "name": "_quantityToClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15226,
                            "src": "5863:16:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 15271,
                            "name": "_pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15230,
                            "src": "5882:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5863:33:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15273,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5862:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 15274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5900:7:38",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "5862:45:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5841:66:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15278,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15269,
                          "src": "5925:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5938:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5925:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7175616e7469747920746f6f206c6f77",
                        "id": 15281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5941:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        },
                        "value": "quantity too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95a3372d1911e2925e89e306668e1a589c72f142035fcdac95957bce7fe59721",
                          "typeString": "literal_string \"quantity too low\""
                        }
                      ],
                      "id": 15277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5917:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5917:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15283,
                  "nodeType": "ExpressionStatement",
                  "src": "5917:43:38"
                },
                {
                  "assignments": [
                    15285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15285,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "5979:12:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "5971:20:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15284,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5971:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15292,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15286,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15269,
                            "src": "5995:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 15287,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15251,
                            "src": "6008:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5995:27:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15289,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5994:29:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 15290,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15052,
                      "src": "6026:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5994:39:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5971:62:38"
                },
                {
                  "assignments": [
                    15294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15294,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "6049:13:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 15344,
                      "src": "6044:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15293,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6044:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15295,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6044:18:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 15299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15296,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15228,
                      "src": "6076:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15297,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "6089:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 15298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "6089:32:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6076:45:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 15315,
                    "nodeType": "Block",
                    "src": "6193:55:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 15313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15308,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15294,
                            "src": "6207:13:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 15309,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6223:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6223:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 15311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6236:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6223:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6207:30:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15314,
                        "nodeType": "ExpressionStatement",
                        "src": "6207:30:38"
                      }
                    ]
                  },
                  "id": 15316,
                  "nodeType": "IfStatement",
                  "src": "6072:176:38",
                  "trueBody": {
                    "id": 15307,
                    "nodeType": "Block",
                    "src": "6123:64:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 15305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15300,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15294,
                            "src": "6137:13:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 15301,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6153:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6153:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 15303,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15269,
                              "src": "6166:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6153:23:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6137:39:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15306,
                        "nodeType": "ExpressionStatement",
                        "src": "6137:39:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15318,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15294,
                        "src": "6265:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 15319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6280:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 15317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6257:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6257:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15321,
                  "nodeType": "ExpressionStatement",
                  "src": "6257:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15325,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15228,
                        "src": "6348:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15326,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "6359:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6359:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15328,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "6373:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15329,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15285,
                        "src": "6395:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15322,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "6311:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 15324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "6311:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 15330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6311:97:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15331,
                  "nodeType": "ExpressionStatement",
                  "src": "6311:97:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15335,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15228,
                        "src": "6455:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15336,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "6466:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6466:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15338,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15256,
                        "src": "6480:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15339,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15269,
                          "src": "6495:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 15340,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15285,
                          "src": "6508:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6495:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15332,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "6418:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 15334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "6418:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 15342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:103:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15343,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:103:38"
                }
              ]
            },
            "baseFunctions": [
              35592
            ],
            "documentation": {
              "id": 15222,
              "nodeType": "StructuredDocumentation",
              "src": "5150:81:38",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "5245:20:38",
            "overrides": {
              "id": 15232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5413:8:38"
            },
            "parameters": {
              "id": 15231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15224,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "5283:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15345,
                  "src": "5275:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15226,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "5322:16:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15345,
                  "src": "5314:24:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15228,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5356:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15345,
                  "src": "5348:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5348:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15230,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "5383:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15345,
                  "src": "5375:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5265:138:38"
            },
            "returnParameters": {
              "id": 15233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5422:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15364,
            "nodeType": "FunctionDefinition",
            "src": "6583:180:38",
            "nodes": [],
            "body": {
              "id": 15363,
              "nodeType": "Block",
              "src": "6695:68:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15357,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15348,
                        "src": "6711:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15358,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15350,
                        "src": "6716:21:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15356,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15438
                      ],
                      "referencedDeclaration": 15438,
                      "src": "6705:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6705:33:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15360,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:33:38"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 15361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6755:1:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 15355,
                  "id": 15362,
                  "nodeType": "Return",
                  "src": "6748:8:38"
                }
              ]
            },
            "baseFunctions": [
              35602
            ],
            "documentation": {
              "id": 15346,
              "nodeType": "StructuredDocumentation",
              "src": "6534:44:38",
              "text": "@dev Transfers the tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "6592:22:38",
            "overrides": {
              "id": 15352,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6668:8:38"
            },
            "parameters": {
              "id": 15351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15348,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6623:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15364,
                  "src": "6615:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6615:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15350,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "6636:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15364,
                  "src": "6628:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6628:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6614:44:38"
            },
            "returnParameters": {
              "id": 15355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15364,
                  "src": "6686:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6685:9:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15378,
            "nodeType": "FunctionDefinition",
            "src": "6858:137:38",
            "nodes": [],
            "body": {
              "id": 15377,
              "nodeType": "Block",
              "src": "6930:65:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15372,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "6955:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15373,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "6975:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6975:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15371,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "6947:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 15375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6947:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15370,
                  "id": 15376,
                  "nodeType": "Return",
                  "src": "6940:48:38"
                }
              ]
            },
            "baseFunctions": [
              39255
            ],
            "documentation": {
              "id": 15365,
              "nodeType": "StructuredDocumentation",
              "src": "6769:84:38",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "6867:22:38",
            "overrides": {
              "id": 15367,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6906:8:38"
            },
            "parameters": {
              "id": 15366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6889:2:38"
            },
            "returnParameters": {
              "id": 15370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15378,
                  "src": "6924:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6924:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6923:6:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15392,
            "nodeType": "FunctionDefinition",
            "src": "7095:142:38",
            "nodes": [],
            "body": {
              "id": 15391,
              "nodeType": "Block",
              "src": "7172:65:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15386,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7197:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15387,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "7217:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7217:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15385,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7189:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 15389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7189:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15384,
                  "id": 15390,
                  "nodeType": "Return",
                  "src": "7182:48:38"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 15379,
              "nodeType": "StructuredDocumentation",
              "src": "7001:89:38",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "7104:27:38",
            "overrides": {
              "id": 15381,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7148:8:38"
            },
            "parameters": {
              "id": 15380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7131:2:38"
            },
            "returnParameters": {
              "id": 15384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15392,
                  "src": "7166:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15382,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7166:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7165:6:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15406,
            "nodeType": "FunctionDefinition",
            "src": "7332:133:38",
            "nodes": [],
            "body": {
              "id": 15405,
              "nodeType": "Block",
              "src": "7400:65:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15400,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7425:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15401,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "7445:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7445:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15399,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7417:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 15403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15398,
                  "id": 15404,
                  "nodeType": "Return",
                  "src": "7410:48:38"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 15393,
              "nodeType": "StructuredDocumentation",
              "src": "7243:84:38",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "7341:18:38",
            "overrides": {
              "id": 15395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7376:8:38"
            },
            "parameters": {
              "id": 15394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7359:2:38"
            },
            "returnParameters": {
              "id": 15398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15406,
                  "src": "7394:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15396,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7394:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7393:6:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15420,
            "nodeType": "FunctionDefinition",
            "src": "7560:137:38",
            "nodes": [],
            "body": {
              "id": 15419,
              "nodeType": "Block",
              "src": "7632:65:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15414,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "7657:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15415,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            15558
                          ],
                          "referencedDeclaration": 15558,
                          "src": "7677:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 15416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7677:12:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15413,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "7649:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 15417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7649:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15412,
                  "id": 15418,
                  "nodeType": "Return",
                  "src": "7642:48:38"
                }
              ]
            },
            "baseFunctions": [
              35608
            ],
            "documentation": {
              "id": 15407,
              "nodeType": "StructuredDocumentation",
              "src": "7471:84:38",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "7569:22:38",
            "overrides": {
              "id": 15409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7608:8:38"
            },
            "parameters": {
              "id": 15408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7591:2:38"
            },
            "returnParameters": {
              "id": 15412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15420,
                  "src": "7626:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15410,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7626:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7625:6:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15438,
            "nodeType": "FunctionDefinition",
            "src": "7881:160:38",
            "nodes": [],
            "body": {
              "id": 15437,
              "nodeType": "Block",
              "src": "7996:45:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15433,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15422,
                        "src": "8018:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15434,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15424,
                        "src": "8027:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15430,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8006:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$15572_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 15432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154882,
                      "src": "8006:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8006:28:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15436,
                  "nodeType": "ExpressionStatement",
                  "src": "8006:28:38"
                }
              ]
            },
            "baseFunctions": [
              154186,
              154882
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7890:5:38",
            "overrides": {
              "id": 15428,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15426,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "7955:16:38"
                },
                {
                  "id": 15427,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "7973:21:38"
                }
              ],
              "src": "7946:49:38"
            },
            "parameters": {
              "id": 15425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15422,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7904:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15438,
                  "src": "7896:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7896:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15424,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7921:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15438,
                  "src": "7913:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7913:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7895:33:38"
            },
            "returnParameters": {
              "id": 15429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7996:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15456,
            "nodeType": "FunctionDefinition",
            "src": "8047:160:38",
            "nodes": [],
            "body": {
              "id": 15455,
              "nodeType": "Block",
              "src": "8162:45:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15451,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15440,
                        "src": "8184:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15452,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15442,
                        "src": "8193:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15448,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8172:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$15572_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 15450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154905,
                      "src": "8172:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8172:28:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15454,
                  "nodeType": "ExpressionStatement",
                  "src": "8172:28:38"
                }
              ]
            },
            "baseFunctions": [
              154258,
              154905
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8056:5:38",
            "overrides": {
              "id": 15446,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15444,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "8121:16:38"
                },
                {
                  "id": 15445,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "8139:21:38"
                }
              ],
              "src": "8112:49:38"
            },
            "parameters": {
              "id": 15443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15440,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8070:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15456,
                  "src": "8062:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8062:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15442,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8087:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15456,
                  "src": "8079:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8079:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8061:33:38"
            },
            "returnParameters": {
              "id": 15447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8162:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15477,
            "nodeType": "FunctionDefinition",
            "src": "8213:228:38",
            "nodes": [],
            "body": {
              "id": 15476,
              "nodeType": "Block",
              "src": "8381:60:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15471,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15458,
                        "src": "8417:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15472,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15460,
                        "src": "8423:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15473,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15462,
                        "src": "8427:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15468,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8391:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$15572_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 15470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154935,
                      "src": "8391:25:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8391:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15475,
                  "nodeType": "ExpressionStatement",
                  "src": "8391:43:38"
                }
              ]
            },
            "baseFunctions": [
              154368,
              154935
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "8222:19:38",
            "overrides": {
              "id": 15466,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15464,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "8340:16:38"
                },
                {
                  "id": 15465,
                  "name": "ERC20VotesUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155173,
                  "src": "8358:21:38"
                }
              ],
              "src": "8331:49:38"
            },
            "parameters": {
              "id": 15463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15458,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8259:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15477,
                  "src": "8251:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8251:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15460,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8281:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15477,
                  "src": "8273:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8273:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15462,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8301:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15477,
                  "src": "8293:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8293:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8241:72:38"
            },
            "returnParameters": {
              "id": 15467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8381:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15535,
            "nodeType": "FunctionDefinition",
            "src": "8484:406:38",
            "nodes": [],
            "body": {
              "id": 15534,
              "nodeType": "Block",
              "src": "8622:268:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15492,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15480,
                        "src": "8659:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15493,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15482,
                        "src": "8665:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15494,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15484,
                        "src": "8669:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15489,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8632:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC20_$15572_$",
                          "typeString": "type(contract super DropERC20)"
                        }
                      },
                      "id": 15491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154357,
                      "src": "8632:26:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 15495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8632:44:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15496,
                  "nodeType": "ExpressionStatement",
                  "src": "8632:44:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 15511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8691:34:38",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 15498,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15048,
                              "src": "8700:12:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 15501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8722:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 15500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8714:7:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 15499,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8714:7:38",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 15502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8714:10:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15497,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "8692:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 15503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8692:33:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15505,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15480,
                          "src": "8729:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 15508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8745:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 15507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8737:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15506,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8737:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 15509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8737:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8729:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8691:56:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 15517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15512,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15482,
                        "src": "8751:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 15515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8765:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8757:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8757:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8757:10:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8751:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8691:76:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15533,
                  "nodeType": "IfStatement",
                  "src": "8687:197:38",
                  "trueBody": {
                    "id": 15532,
                    "nodeType": "Block",
                    "src": "8769:115:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 15528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 15521,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15048,
                                    "src": "8799:12:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 15522,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15480,
                                    "src": "8813:4:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 15520,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "8791:7:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 15523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8791:27:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 15525,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15048,
                                    "src": "8830:12:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 15526,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15482,
                                    "src": "8844:2:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 15524,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "8822:7:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 15527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8822:25:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8791:56:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e736665727320726573747269637465642e",
                              "id": 15529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8849:23:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              },
                              "value": "transfers restricted."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e11b0ed7b28c874f482b967f28c4c024d99b0b661cdb5de6e5ca1f32712e14",
                                "typeString": "literal_string \"transfers restricted.\""
                              }
                            ],
                            "id": 15519,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8783:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8783:90:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15531,
                        "nodeType": "ExpressionStatement",
                        "src": "8783:90:38"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              154357
            ],
            "documentation": {
              "id": 15478,
              "nodeType": "StructuredDocumentation",
              "src": "8447:32:38",
              "text": "@dev Runs on every transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8493:20:38",
            "overrides": {
              "id": 15487,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15486,
                  "name": "ERC20Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 154374,
                  "src": "8604:16:38"
                }
              ],
              "src": "8595:26:38"
            },
            "parameters": {
              "id": 15485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15480,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8531:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15535,
                  "src": "8523:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8523:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15482,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8553:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15535,
                  "src": "8545:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8545:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15484,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8573:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15535,
                  "src": "8565:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8565:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8513:72:38"
            },
            "returnParameters": {
              "id": 15488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8622:0:38"
            },
            "scope": 15572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15545,
            "nodeType": "FunctionDefinition",
            "src": "8896:111:38",
            "nodes": [],
            "body": {
              "id": 15544,
              "nodeType": "Block",
              "src": "8971:36:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15541,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15558
                      ],
                      "referencedDeclaration": 15558,
                      "src": "8988:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 15542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:12:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15540,
                  "id": 15543,
                  "nodeType": "Return",
                  "src": "8981:19:38"
                }
              ]
            },
            "baseFunctions": [
              35544
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "8905:14:38",
            "overrides": {
              "id": 15537,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8944:8:38"
            },
            "parameters": {
              "id": 15536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8919:2:38"
            },
            "returnParameters": {
              "id": 15540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15545,
                  "src": "8962:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8962:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8961:9:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15558,
            "nodeType": "FunctionDefinition",
            "src": "9013:231:38",
            "nodes": [],
            "body": {
              "id": 15557,
              "nodeType": "Block",
              "src": "9182:62:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 15553,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "9199:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 15554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "9199:36:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 15555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9199:38:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15552,
                  "id": 15556,
                  "nodeType": "Return",
                  "src": "9192:45:38"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9022:10:38",
            "overrides": {
              "id": 15549,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15547,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "9098:18:38"
                },
                {
                  "id": 15548,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "9118:25:38"
                }
              ],
              "src": "9089:55:38"
            },
            "parameters": {
              "id": 15546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9032:2:38"
            },
            "returnParameters": {
              "id": 15552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15551,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9170:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 15558,
                  "src": "9162:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9162:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9161:16:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15571,
            "nodeType": "FunctionDefinition",
            "src": "9250:227:38",
            "nodes": [],
            "body": {
              "id": 15570,
              "nodeType": "Block",
              "src": "9417:60:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 15566,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "9434:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 15567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "9434:34:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 15568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9434:36:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 15565,
                  "id": 15569,
                  "nodeType": "Return",
                  "src": "9427:43:38"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "9259:8:38",
            "overrides": {
              "id": 15562,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 15560,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "9333:18:38"
                },
                {
                  "id": 15561,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "9353:25:38"
                }
              ],
              "src": "9324:55:38"
            },
            "parameters": {
              "id": 15559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9267:2:38"
            },
            "returnParameters": {
              "id": 15565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "9397:14:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9397:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9396:16:38"
            },
            "scope": 15572,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15023,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1552:13:38"
            },
            "id": 15024,
            "nodeType": "InheritanceSpecifier",
            "src": "1552:13:38"
          },
          {
            "baseName": {
              "id": 15025,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1571:16:38"
            },
            "id": 15026,
            "nodeType": "InheritanceSpecifier",
            "src": "1571:16:38"
          },
          {
            "baseName": {
              "id": 15027,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39256,
              "src": "1593:11:38"
            },
            "id": 15028,
            "nodeType": "InheritanceSpecifier",
            "src": "1593:11:38"
          },
          {
            "baseName": {
              "id": 15029,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "1610:11:38"
            },
            "id": 15030,
            "nodeType": "InheritanceSpecifier",
            "src": "1610:11:38"
          },
          {
            "baseName": {
              "id": 15031,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1627:21:38"
            },
            "id": 15032,
            "nodeType": "InheritanceSpecifier",
            "src": "1627:21:38"
          },
          {
            "baseName": {
              "id": 15033,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35609,
              "src": "1654:4:38"
            },
            "id": 15034,
            "nodeType": "InheritanceSpecifier",
            "src": "1654:4:38"
          },
          {
            "baseName": {
              "id": 15035,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1664:25:38"
            },
            "id": 15036,
            "nodeType": "InheritanceSpecifier",
            "src": "1664:25:38"
          },
          {
            "baseName": {
              "id": 15037,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1695:20:38"
            },
            "id": 15038,
            "nodeType": "InheritanceSpecifier",
            "src": "1695:20:38"
          },
          {
            "baseName": {
              "id": 15039,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 154516,
              "src": "1721:24:38"
            },
            "id": 15040,
            "nodeType": "InheritanceSpecifier",
            "src": "1721:24:38"
          },
          {
            "baseName": {
              "id": 15041,
              "name": "ERC20VotesUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 155173,
              "src": "1751:21:38"
            },
            "id": 15042,
            "nodeType": "InheritanceSpecifier",
            "src": "1751:21:38"
          }
        ],
        "canonicalName": "DropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          15572,
          155173,
          155389,
          158875,
          155425,
          154516,
          154374,
          155198,
          154452,
          157897,
          75765,
          157714,
          151699,
          35609,
          49815,
          49550,
          49527,
          39046,
          38747,
          50516,
          50491,
          39318,
          50580,
          39256,
          50559,
          34723,
          151869,
          49679
        ],
        "name": "DropERC20",
        "nameLocation": "1535:9:38",
        "scope": 15573,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 38
}