{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedContents",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        }
      ],
      "name": "TokensWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "TransfersRestricted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getTokenCountOfBundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTokenOfBundle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getUriOfBundle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_toRestrict",
          "type": "bool"
        }
      ],
      "name": "restrictTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "_tokensToWrap",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "_uriForWrappedToken",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162005321380380620053218339810160408190526200003491620009f8565b6001600160a01b0381166080528451733cc6cdda760b79bafa08df41ecfa224f810dceb69060019087908790620000739060069060208501906200085b565b508051620000899060079060208401906200085b565b50506000600455506200009d828262000192565b50620000ab905086620002c0565b620000c0836001600160801b03841662000312565b620000cc6001620003be565b620000d960008762000405565b620001057f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68762000405565b62000120600080516020620053018339815191528762000405565b6200014d7f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6600062000405565b6200017a7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543600062000405565b62000186600062000428565b50505050505062000c28565b6daaeb6d7670e522a718067333cd4e3b15620002bc576001600160a01b0382163b15620002755780156200023457604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200021757600080fd5b505af11580156200022c573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401620001fc565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200021757600080fd5b5050565b600d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200035c5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064015b60405180910390fd5b600e80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6010805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6200041c82826200046a60201b620017001760201c565b620002bc8282620004c7565b80156200044e576200044b60008051602062005301833981519152600062000536565b50565b6200044b60008051602062005301833981519152600062000405565b60008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260036020526040812080549160019190620004e8838562000ad0565b9091555050600092835260036020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6200054d82826200059a60201b6200175d1760201c565b60008281526003602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b620005a68282620005fe565b60008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620002bc576200064a816001600160a01b031660146200069b60201b620017bf1760201c565b62000660836020620017bf6200069b821b17811c565b6040516020016200067392919062000aeb565b60408051601f198184030181529082905262461bcd60e51b8252620003539160040162000b64565b60606000620006ac83600262000b99565b620006b990600262000ad0565b6001600160401b03811115620006d357620006d36200091e565b6040519080825280601f01601f191660200182016040528015620006fe576020820181803683370190505b509050600360fc1b816000815181106200071c576200071c62000bbb565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200074e576200074e62000bbb565b60200101906001600160f81b031916908160001a90535060006200077484600262000b99565b6200078190600162000ad0565b90505b600181111562000803576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620007b957620007b962000bbb565b1a60f81b828281518110620007d257620007d262000bbb565b60200101906001600160f81b031916908160001a90535060049490941c93620007fb8162000bd1565b905062000784565b508315620008545760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000353565b9392505050565b828054620008699062000beb565b90600052602060002090601f0160209004810192826200088d5760008555620008d8565b82601f10620008a857805160ff1916838001178555620008d8565b82800160010185558215620008d8579182015b82811115620008d8578251825591602001919060010190620008bb565b50620008e6929150620008ea565b5090565b5b80821115620008e65760008155600101620008eb565b80516001600160a01b03811681146200091957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200095157818101518382015260200162000937565b8381111562000961576000848401525b50505050565b600082601f8301126200097957600080fd5b81516001600160401b03808211156200099657620009966200091e565b604051601f8301601f19908116603f01168101908282118183101715620009c157620009c16200091e565b81604052838152866020858801011115620009db57600080fd5b620009ee84602083016020890162000934565b9695505050505050565b60008060008060008060c0878903121562000a1257600080fd5b62000a1d8762000901565b60208801519096506001600160401b038082111562000a3b57600080fd5b62000a498a838b0162000967565b9650604089015191508082111562000a6057600080fd5b5062000a6f89828a0162000967565b94505062000a806060880162000901565b60808801519093506001600160801b038116811462000a9e57600080fd5b915062000aae60a0880162000901565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000ae65762000ae662000aba565b500190565b7f5065726d697373696f6e733a206163636f756e7420000000000000000000000081526000835162000b2581601585016020880162000934565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835162000b5881602684016020880162000934565b01602601949350505050565b602081526000825180602084015262000b8581604085016020870162000934565b601f01601f19169190910160400192915050565b600081600019048311821515161562000bb65762000bb662000aba565b500290565b634e487b7160e01b600052603260045260246000fd5b60008162000be35762000be362000aba565b506000190190565b600181811c9082168062000c0057607f821691505b6020821081141562000c2257634e487b7160e01b600052602260045260246000fd5b50919050565b6080516146bd62000c44600039600061315401526146bd6000f3fe60806040526004361061023e5760003560e01c806361195e941161013557806361195e94146105b55780636352211e146105d557806370a08231146105f557806373fa563f146106155780637647691d146106355780638da5cb5b146106555780639010d07c1461066a57806391d148541461068a578063938e3d7b146106aa57806395d89b41146106ca5780639bcf7a15146106df578063a217fddf146106ff578063a22cb46514610714578063a32fa5b314610734578063ac9650d814610754578063b24f2d3914610781578063b88d4fde146107ac578063bc197c81146107cc578063c87b56dd146107f8578063ca15c87314610818578063d0d2fe2514610838578063d547741f14610865578063e8a3d48514610885578063e985e9c51461089a578063f23a6e61146108ba57600080fd5b806301ffc9a71461024357806306fdde0314610278578063081812fc1461029a578063095ea7b3146102c757806313af4035146102e9578063150b7a021461030957806318160ddd146103425780631da799c914610365578063206b60f91461039257806323b872dd146103b4578063248a9ca3146103d457806329e471dd146104015780632a55205a146104145780632f2ff15d1461044257806332f0cd641461046257806336568abe146104825780633b1475a7146104a257806341f43434146104b757806342842e0e146104d9578063430c2081146104f95780634cc157df14610519578063504c6e011461055b57806357fd845514610575578063600dd5ea14610595575b600080fd5b34801561024f57600080fd5b5061026361025e366004613907565b6108e6565b60405190151581526020015b60405180910390f35b34801561028457600080fd5b5061028d61097e565b60405161026f919061397c565b3480156102a657600080fd5b506102ba6102b536600461398f565b610a10565b60405161026f91906139a8565b3480156102d357600080fd5b506102e76102e23660046139e1565b610a54565b005b3480156102f557600080fd5b506102e7610304366004613a0d565b610a6d565b34801561031557600080fd5b50610329610324366004613ae9565b610aa6565b6040516001600160e01b0319909116815260200161026f565b34801561034e57600080fd5b50600554600454035b60405190815260200161026f565b34801561037157600080fd5b50610385610380366004613b54565b610ab7565b60405161026f9190613bae565b34801561039e57600080fd5b5061035760008051602061462183398151915281565b3480156103c057600080fd5b506102e76103cf366004613bed565b610b44565b3480156103e057600080fd5b506103576103ef36600461398f565b60009081526002602052604090205490565b61035761040f366004613c76565b610b6f565b34801561042057600080fd5b5061043461042f366004613b54565b610ce7565b60405161026f929190613d24565b34801561044e57600080fd5b506102e761045d366004613d3d565b610d24565b34801561046e57600080fd5b506102e761047d366004613d7b565b610dbe565b34801561048e57600080fd5b506102e761049d366004613d3d565b610e2f565b3480156104ae57600080fd5b50600454610357565b3480156104c357600080fd5b506102ba6daaeb6d7670e522a718067333cd4e81565b3480156104e557600080fd5b506102e76104f4366004613bed565b610e8e565b34801561050557600080fd5b506102636105143660046139e1565b610eb3565b34801561052557600080fd5b5061053961053436600461398f565b610f11565b604080516001600160a01b03909316835261ffff90911660208301520161026f565b34801561056757600080fd5b506010546102639060ff1681565b34801561058157600080fd5b506102e7610590366004613a0d565b610f7c565b3480156105a157600080fd5b506102e76105b03660046139e1565b610fec565b3480156105c157600080fd5b5061028d6105d036600461398f565b61101a565b3480156105e157600080fd5b506102ba6105f036600461398f565b6110bf565b34801561060157600080fd5b50610357610610366004613a0d565b6110d1565b34801561062157600080fd5b506102e7610630366004613d7b565b61111f565b34801561064157600080fd5b506102e7610650366004613d3d565b611157565b34801561066157600080fd5b506102ba611278565b34801561067657600080fd5b506102ba610685366004613b54565b611287565b34801561069657600080fd5b506102636106a5366004613d3d565b611376565b3480156106b657600080fd5b506102e76106c5366004613d98565b6113a1565b3480156106d657600080fd5b5061028d6113ce565b3480156106eb57600080fd5b506102e76106fa366004613de0565b6113dd565b34801561070b57600080fd5b50610357600081565b34801561072057600080fd5b506102e761072f366004613e07565b61140c565b34801561074057600080fd5b5061026361074f366004613d3d565b611420565b34801561076057600080fd5b5061077461076f366004613e35565b611476565b60405161026f9190613ea9565b34801561078d57600080fd5b50600e546001600160a01b03811690600160a01b900461ffff16610539565b3480156107b857600080fd5b506102e76107c7366004613ae9565b61156a565b3480156107d857600080fd5b506103296107e7366004613f8b565b63bc197c8160e01b95945050505050565b34801561080457600080fd5b5061028d61081336600461398f565b611597565b34801561082457600080fd5b5061035761083336600461398f565b6115a2565b34801561084457600080fd5b5061035761085336600461398f565b60009081526020819052604090205490565b34801561087157600080fd5b506102e7610880366004613d3d565b61162b565b34801561089157600080fd5b5061028d611644565b3480156108a657600080fd5b506102636108b5366004614038565b6116d2565b3480156108c657600080fd5b506103296108d5366004614066565b63f23a6e6160e01b95945050505050565b60006108f182611961565b8061090c57506301ffc9a760e01b6001600160e01b03198316145b8061092757506380ac58cd60e01b6001600160e01b03198316145b806109425750635b5e139f60e01b6001600160e01b03198316145b8061095d57506001600160e01b0319821663152a902d60e11b145b8061097857506001600160e01b03198216630271189760e51b145b92915050565b60606006805461098d906140ce565b80601f01602080910402602001604051908101604052809291908181526020018280546109b9906140ce565b8015610a065780601f106109db57610100808354040283529160200191610a06565b820191906000526020600020905b8154815290600101906020018083116109e957829003601f168201915b5050505050905090565b6000610a1b826119a1565b610a38576040516333d1c03960e21b815260040160405180910390fd5b506000908152600a60205260409020546001600160a01b031690565b81610a5e816119cd565b610a688383611a80565b505050565b610a75611b02565b610a9a5760405162461bcd60e51b8152600401610a9190614103565b60405180910390fd5b610aa381611b25565b50565b630a85bd0160e11b5b949350505050565b610abf61382f565b600083815260208181526040808320858452600290810183529281902081516080810190925280546001600160a01b038116835291939092840191600160a01b900460ff1690811115610b1457610b14613b76565b6002811115610b2557610b25613b76565b8152600182015460208201526002909101546040909101529392505050565b826001600160a01b0381163314610b5e57610b5e336119cd565b610b69848484611b77565b50505050565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b9c8133611b82565b610bc77f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae66000611376565b610c3b5760005b86811015610c3957610c277f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6898984818110610c0c57610c0c61412b565b610c229260206080909202019081019150613a0d565b611be6565b610c32600182614157565b9050610bce565b505b6004549150610c8433888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611c24915050565b610c8f836001611c96565b81836001600160a01b0316336001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610cd592919061417c565b60405180910390a45095945050505050565b600080600080610cf686610f11565b90945084925061ffff169050612710610d0f82876141fb565b610d19919061421a565b925050509250929050565b600082815260026020526040902054610d3d9033611be6565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff1615610db05760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610a91565b610dba8282611cb0565b5050565b610dc6611b02565b610e265760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610a91565b610aa381611cc4565b336001600160a01b03821614610e845760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610a91565b610dba8282611d0b565b826001600160a01b0381163314610ea857610ea8336119cd565b610b69848484611d62565b600080610ebf836110bf565b9050806001600160a01b0316846001600160a01b03161480610ee65750610ee681856116d2565b80610aaf5750836001600160a01b0316610eff84610a10565b6001600160a01b031614949350505050565b6000818152600f60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610f585780516020820151610f72565b600e546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610f84611b02565b610fe15760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610a91565b610aa3816001611d7d565b610ff4611b02565b6110105760405162461bcd60e51b8152600401610a9190614103565b610dba8282611e75565b600081815260208190526040902060010180546060919061103a906140ce565b80601f0160208091040260200160405190810160405280929190818152602001828054611066906140ce565b80156110b35780601f10611088576101008083540402835291602001916110b3565b820191906000526020600020905b81548152906001019060200180831161109657829003601f168201915b50505050509050919050565b60006110ca82611ef9565b5192915050565b60006001600160a01b0382166110fa576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600960205260409020546001600160401b031690565b801561113e57610aa36000805160206146218339815191526000611d0b565b610aa36000805160206146218339815191526000611cb0565b7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436111828133611b82565b60045483106111c65760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b6044820152606401610a91565b6111d03384610eb3565b6112285760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b6064820152608401610a91565b61123183612013565b61123b828461201e565b60405183906001600160a01b0384169033907fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7390600090a4505050565b600d546001600160a01b031690565b60008281526003602052604081205481805b8281101561136d5760008681526003602090815260408083208484526001019091529020546001600160a01b03161561131657848214156113045760008681526003602090815260408083209383526001909301905220546001600160a01b03169250610978915050565b61130f600183614157565b915061135b565b611321866000611376565b80156113485750600086815260036020908152604080832083805260020190915290205481145b1561135b57611358600183614157565b91505b611366600182614157565b9050611299565b50505092915050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6113a9611b02565b6113c55760405162461bcd60e51b8152600401610a9190614103565b610aa3816120db565b60606007805461098d906140ce565b6113e5611b02565b6114015760405162461bcd60e51b8152600401610a9190614103565b610a688383836121bd565b81611416816119cd565b610a688383612264565b600082815260016020908152604080832083805290915281205460ff1661146d575060008281526001602090815260408083206001600160a01b038516845290915290205460ff16610978565b50600192915050565b6060816001600160401b0381111561149057611490613a2a565b6040519080825280602002602001820160405280156114c357816020015b60608152602001906001900390816114ae5790505b50905060005b8281101561156357611533308585848181106114e7576114e761412b565b90506020028101906114f9919061423c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122fa92505050565b8282815181106115455761154561412b565b6020026020010181905250808061155b90614282565b9150506114c9565b5092915050565b836001600160a01b038116331461158457611584336119cd565b6115908585858561231f565b5050505050565b60606109788261101a565b600081815260036020526040812054815b818110156116065760008481526003602090815260408083208484526001019091529020546001600160a01b0316156115f4576115f1600184614157565b92505b6115ff600182614157565b90506115b3565b50611612836000611376565b1561162557611622600183614157565b91505b50919050565b600082815260026020526040902054610e849033611be6565b600c8054611651906140ce565b80601f016020809104026020016040519081016040528092919081815260200182805461167d906140ce565b80156116ca5780601f1061169f576101008083540402835291602001916116ca565b820191906000526020600020905b8154815290600101906020018083116116ad57829003601f168201915b505050505081565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205460ff1690565b60008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6117678282611be6565b60008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006117ce8360026141fb565b6117d9906002614157565b6001600160401b038111156117f0576117f0613a2a565b6040519080825280601f01601f19166020018201604052801561181a576020820181803683370190505b509050600360fc1b816000815181106118355761183561412b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118645761186461412b565b60200101906001600160f81b031916908160001a90535060006118888460026141fb565b611893906001614157565b90505b600181111561190b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106118c7576118c761412b565b1a60f81b8282815181106118dd576118dd61412b565b60200101906001600160f81b031916908160001a90535060049490941c936119048161429d565b9050611896565b50831561195a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a91565b9392505050565b60006001600160e01b031982166380ac58cd60e01b148061199257506001600160e01b03198216635b5e139f60e01b145b8061097857506109788261236a565b600060045482108015610978575050600090815260086020526040902054600160e01b900460ff161590565b60105460ff1615610aa3576daaeb6d7670e522a718067333cd4e3b15610aa357604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611a2090309085906004016142b4565b602060405180830381865afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6191906142ce565b610aa35780604051633b79c77360e21b8152600401610a9191906139a8565b6000611a8b826110bf565b9050806001600160a01b0316836001600160a01b03161415611ac05760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614611af757611ada81336116d2565b611af7576040516367d9dca160e11b815260040160405180910390fd5b610a6883838361239f565b6000611b0c611278565b6001600160a01b0316336001600160a01b031614905090565b600d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610a688383836123fb565b611b8c8282611420565b610dba57611ba4816001600160a01b031660146117bf565b611baf8360206117bf565b604051602001611bc09291906142eb565b60408051601f198184030181529082905262461bcd60e51b8252610a919160040161397c565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610dba57611ba4816001600160a01b031660146117bf565b611c2f8484836125e0565b611c398282612707565b61159085308686808060200260200160405190810160405280939291908181526020016000905b82821015611c8c57611c7d60808302860136819003810190614358565b81526020019060010190611c60565b505050505061272a565b610dba828260405180602001604052806000815250612846565b611cba8282611700565b610dba82826129eb565b6010805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b611d15828261175d565b60008281526003602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b610a688383836040518060200160405280600081525061156a565b6daaeb6d7670e522a718067333cd4e3b15610dba576001600160a01b0382163b15611e44578015611e1157604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90611ddb90309086906004016142b4565b600060405180830381600087803b158015611df557600080fd5b505af1158015611e09573d6000803e3d6000fd5b505050505050565b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390611ddb90309086906004016142b4565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690611ddb9030906004016139a8565b612710811115611e975760405162461bcd60e51b8152600401610a91906143cc565b600e80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b604080516060810182526000808252602082018190529181019190915281600454811015611ffa57600081815260086020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611ff85780516001600160a01b031615611f8f579392505050565b5060001901600081815260086020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611ff3579392505050565b611f8f565b505b604051636f96cda160e11b815260040160405180910390fd5b610aa3816000612a58565b60008181526020819052604081205490816001600160401b0381111561204657612046613a2a565b60405190808252806020026020018201604052801561207f57816020015b61206c61382f565b8152602001906001900390816120645790505b50905060005b828110156120c6576120978482610ab7565b8282815181106120a9576120a961412b565b60209081029190910101526120bf600182614157565b9050612085565b506120d083612c16565b610b6930858361272a565b6000600c80546120ea906140ce565b80601f0160208091040260200160405190810160405280929190818152602001828054612116906140ce565b80156121635780601f1061213857610100808354040283529160200191612163565b820191906000526020600020905b81548152906001019060200180831161214657829003601f168201915b5050855193945061217f93600c93506020870192509050613858565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516121b19291906143f5565b60405180910390a15050565b6127108111156121df5760405162461bcd60e51b8152600401610a91906143cc565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600f8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6001600160a01b03821633141561228e5760405163b06307db60e01b815260040160405180910390fd5b336000818152600b602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b606061195a838360405180606001604052806027815260200161464160279139612c8a565b61232a8484846123fb565b61233c836001600160a01b0316612d65565b15610b695761234d84848484612d74565b610b69576040516368d2bf6b60e11b815260040160405180910390fd5b60006001600160e01b03198216630271189760e51b148061097857506301ffc9a760e01b6001600160e01b0319831614610978565b6000828152600a602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061240682611ef9565b9050836001600160a01b031681600001516001600160a01b03161461243d5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061245b575061245b85336116d2565b8061247657503361246b84610a10565b6001600160a01b0316145b90508061249657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166124bd57604051633a954ecd60e21b815260040160405180910390fd5b6124ca8585856001612e59565b6124d66000848761239f565b6001600160a01b03858116600090815260096020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600890945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166125a95760045482146125a957805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061466883398151915260405160405180910390a4611590565b81806126185760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610a91565b600082815260208190526040902054156126605760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b6044820152606401610a91565b60005b818110156126f25761269b8585838181106126805761268061412b565b9050608002018036038101906126969190614358565b612e65565b8484828181106126ad576126ad61412b565b60008681526020818152604080832087845260020190915290206080909102929092019190506126dd8282614423565b506126eb9050600182614157565b9050612663565b50600091825260208290526040909120555050565b6000818152602081815260409091208351610a6892600190920191850190613858565b6000805b82518110156127fc5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b03168382815181106127675761276761412b565b6020026020010151600001516001600160a01b031614801561279157506001600160a01b03841630145b156127c6578281815181106127a8576127a861412b565b602002602001015160600151826127bf9190614157565b91506127ea565b6127ea85858584815181106127dd576127dd61412b565b6020026020010151613125565b6127f5600182614157565b905061272e565b508015610b69576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81526000602082018190529181019190915260608101829052611590858583613125565b6004546001600160a01b03841661286f57604051622e076360e81b815260040160405180910390fd5b8261288d5760405163b562e8dd60e01b815260040160405180910390fd5b61289a6000858386612e59565b6001600160a01b038416600081815260096020908152604080832080546001600160801b031981166001600160401b038083168b018116918217600160401b6001600160401b031990941690921783900481168b01811690920217909155858452600890925290912080546001600160e01b0319168317600160a01b429093169290920291909117905581908185019061293390612d65565b156129a9575b60405182906001600160a01b03881690600090600080516020614668833981519152908290a46129726000878480600101955087612d74565b61298f576040516368d2bf6b60e11b815260040160405180910390fd5b8082106129395782600454146129a457600080fd5b6129dc565b5b6040516001830192906001600160a01b03881690600090600080516020614668833981519152908290a48082106129aa575b50600455610b69600085838684565b600082815260036020526040812080549160019190612a0a8385614157565b9091555050600092835260036020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6000612a6383611ef9565b80519091508215612ac9576000336001600160a01b0383161480612a8c5750612a8c82336116d2565b80612aa7575033612a9c86610a10565b6001600160a01b0316145b905080612ac757604051632ce44b5f60e11b815260040160405180910390fd5b505b612ad7816000866001612e59565b612ae36000858361239f565b6001600160a01b0380821660008181526009602090815260408083208054600160801b6000196001600160401b038084169190910181166001600160401b03198416811783900482166001908101831690930267ffffffffffffffff67ffffffffffffffff60801b0119909416179290921783558b86526008909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116612bdd576004548214612bdd57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020614668833981519152908390a450506005805460010190555050565b60005b600082815260208190526040902054811015612c78576000828152602081815260408083208484526002908101909252822080546001600160a81b03191681556001808201849055910191909155612c719082614157565b9050612c19565b50600090815260208190526040812055565b6060612c9584612d65565b612cf05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610a91565b600080856001600160a01b031685604051612d0b91906144af565b600060405180830381855af49150503d8060008114612d46576040519150601f19603f3d011682016040523d82523d6000602084013e612d4b565b606091505b5091509150612d5b828286613282565b9695505050505050565b6001600160a01b03163b151590565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612da99033908990889088906004016144cb565b6020604051808303816000875af1925050508015612de4575060408051601f3d908101601f19168201909252612de1918101906144fe565b60015b612e3f573d808015612e12576040519150601f19603f3d011682016040523d82523d6000602084013e612e17565b606091505b508051612e37576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610aaf565b610b69848484846132bb565b600181602001516002811115612e7d57612e7d613b76565b1415612f285780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612eb6906380ac58cd9060040161451b565b602060405180830381865afa925050508015612eef575060408051601f3d908101601f19168201909252612eec918101906142ce565b60015b612f0b5760405162461bcd60e51b8152600401610a9190614533565b80610dba5760405162461bcd60e51b8152600401610a9190614533565b600281602001516002811115612f4057612f40613b76565b1415612f795780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612eb69063d9b67a269060040161451b565b600081602001516002811115612f9157612f91613b76565b1415610aa35780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610aa35780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790612fef906380ac58cd9060040161451b565b602060405180830381865afa925050508015613028575060408051601f3d908101601f19168201909252613025918101906142ce565b60015b61305257613034614557565b806308c379a01415610dba5750613049614573565b80610dba575050565b80156130705760405162461bcd60e51b8152600401610a9190614533565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906130a39063d9b67a269060040161451b565b602060405180830381865afa9250505080156130dc575060408051601f3d908101601f191682019092526130d9918101906142ce565b60015b613107576130e8614557565b806308c379a01415610a6857506130fd614573565b80610a6857505050565b8015610a685760405162461bcd60e51b8152600401610a9190614533565b60008160200151600281111561313d5761313d613b76565b141561317857610a688160000151848484606001517f000000000000000000000000000000000000000000000000000000000000000061337a565b60018160200151600281111561319057613190613b76565b14156132035780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e916131cc91879187916004016145fc565b600060405180830381600087803b1580156131e657600080fd5b505af11580156131fa573d6000803e3d6000fd5b50505050505050565b60028160200151600281111561321b5761321b613b76565b1415610a6857805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c4016131cc565b6060831561329157508161195a565b8251156132a15782518084602001fd5b8160405162461bcd60e51b8152600401610a91919061397c565b6132d46000805160206146218339815191526000611376565b1580156132e957506001600160a01b03841615155b80156132fd57506001600160a01b03831615155b15610b695761331a60008051602061462183398151915285611376565b15801561333c575061333a60008051602061462183398151915284611376565b155b15610b695760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b6044820152606401610a91565b8161338457611590565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156134de576001600160a01b03841630141561342457604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b1580156133fc57600080fd5b505af1158015613410573d6000803e3d6000fd5b5050505061341f8383836134ea565b611590565b6001600160a01b0383163014156134d35734821461347a5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610a91565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156134b557600080fd5b505af11580156134c9573d6000803e3d6000fd5b5050505050611590565b61341f8383836134ea565b611590858585856135af565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114613537576040519150601f19603f3d011682016040523d82523d6000602084013e61353c565b606091505b5050905080610b6957816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561358057600080fd5b505af1158015613594573d6000803e3d6000fd5b50610b69935050506001600160a01b0384169050858561360d565b816001600160a01b0316836001600160a01b031614156135ce57610b69565b6001600160a01b0383163014156135f8576135f36001600160a01b038516838361360d565b610b69565b610b696001600160a01b038516848484613663565b610a688363a9059cbb60e01b848460405160240161362c929190613d24565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613684565b610b69846323b872dd60e01b85858560405160240161362c939291906145fc565b60006136d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166137569092919063ffffffff16565b805190915015610a6857808060200190518101906136f791906142ce565b610a685760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a91565b6060610aaf84846000858561376a85612d65565b6137b65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a91565b600080866001600160a01b031685876040516137d291906144af565b60006040518083038185875af1925050503d806000811461380f576040519150601f19603f3d011682016040523d82523d6000602084013e613814565b606091505b5091509150613824828286613282565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b828054613864906140ce565b90600052602060002090601f01602090048101928261388657600085556138cc565b82601f1061389f57805160ff19168380011785556138cc565b828001600101855582156138cc579182015b828111156138cc5782518255916020019190600101906138b1565b506138d89291506138dc565b5090565b5b808211156138d857600081556001016138dd565b6001600160e01b031981168114610aa357600080fd5b60006020828403121561391957600080fd5b813561195a816138f1565b60005b8381101561393f578181015183820152602001613927565b83811115610b695750506000910152565b60008151808452613968816020860160208601613924565b601f01601f19169290920160200192915050565b60208152600061195a6020830184613950565b6000602082840312156139a157600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610aa357600080fd5b80356139dc816139bc565b919050565b600080604083850312156139f457600080fd5b82356139ff816139bc565b946020939093013593505050565b600060208284031215613a1f57600080fd5b813561195a816139bc565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613a6557613a65613a2a565b6040525050565b60006001600160401b03831115613a8557613a85613a2a565b604051613a9c601f8501601f191660200182613a40565b809150838152848484011115613ab157600080fd5b83836020830137600060208583010152509392505050565b600082601f830112613ada57600080fd5b61195a83833560208501613a6c565b60008060008060808587031215613aff57600080fd5b8435613b0a816139bc565b93506020850135613b1a816139bc565b92506040850135915060608501356001600160401b03811115613b3c57600080fd5b613b4887828801613ac9565b91505092959194509250565b60008060408385031215613b6757600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60038110613baa57634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526020808301516080830191613bd290840182613b8c565b50604083015160408301526060830151606083015292915050565b600080600060608486031215613c0257600080fd5b8335613c0d816139bc565b92506020840135613c1d816139bc565b929592945050506040919091013590565b60008083601f840112613c4057600080fd5b5081356001600160401b03811115613c5757600080fd5b602083019150836020828501011115613c6f57600080fd5b9250929050565b600080600080600060608688031215613c8e57600080fd5b85356001600160401b0380821115613ca557600080fd5b818801915088601f830112613cb957600080fd5b813581811115613cc857600080fd5b8960208260071b8501011115613cdd57600080fd5b602092830197509550908701359080821115613cf857600080fd5b50613d0588828901613c2e565b9094509250613d189050604087016139d1565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b60008060408385031215613d5057600080fd5b823591506020830135613d62816139bc565b809150509250929050565b8015158114610aa357600080fd5b600060208284031215613d8d57600080fd5b813561195a81613d6d565b600060208284031215613daa57600080fd5b81356001600160401b03811115613dc057600080fd5b8201601f81018413613dd157600080fd5b610aaf84823560208401613a6c565b600080600060608486031215613df557600080fd5b833592506020840135613c1d816139bc565b60008060408385031215613e1a57600080fd5b8235613e25816139bc565b91506020830135613d6281613d6d565b60008060208385031215613e4857600080fd5b82356001600160401b0380821115613e5f57600080fd5b818501915085601f830112613e7357600080fd5b813581811115613e8257600080fd5b8660208260051b8501011115613e9757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613efe57603f19888603018452613eec858351613950565b94509285019290850190600101613ed0565b5092979650505050505050565b600082601f830112613f1c57600080fd5b813560206001600160401b03821115613f3757613f37613a2a565b8160051b604051613f4a83830182613a40565b92835284810182019282810187851115613f6357600080fd5b83870192505b84831015613f805782358152918301918301613f69565b509695505050505050565b600080600080600060a08688031215613fa357600080fd5b8535613fae816139bc565b94506020860135613fbe816139bc565b935060408601356001600160401b0380821115613fda57600080fd5b613fe689838a01613f0b565b94506060880135915080821115613ffc57600080fd5b61400889838a01613f0b565b9350608088013591508082111561401e57600080fd5b5061402b88828901613ac9565b9150509295509295909350565b6000806040838503121561404b57600080fd5b8235614056816139bc565b91506020830135613d62816139bc565b600080600080600060a0868803121561407e57600080fd5b8535614089816139bc565b94506020860135614099816139bc565b9350604086013592506060860135915060808601356001600160401b038111156140c257600080fd5b61402b88828901613ac9565b600181811c908216806140e257607f821691505b6020821081141561162557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561416a5761416a614141565b500190565b60038110610aa357600080fd5b6020808252818101839052600090604080840186845b878110156141ee5781356141a5816139bc565b6001600160a01b03168352818501356141bd8161416f565b6141c986850182613b8c565b5081840135838501526060808301359084015260809283019290910190600101614192565b5090979650505050505050565b600081600019048311821515161561421557614215614141565b500290565b60008261423757634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e1984360301811261425357600080fd5b8301803591506001600160401b0382111561426d57600080fd5b602001915036819003821315613c6f57600080fd5b600060001982141561429657614296614141565b5060010190565b6000816142ac576142ac614141565b506000190190565b6001600160a01b0392831681529116602082015260400190565b6000602082840312156142e057600080fd5b815161195a81613d6d565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161431b816015850160208801613924565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161434c816026840160208801613924565b01602601949350505050565b60006080828403121561436a57600080fd5b604051608081018181106001600160401b038211171561438c5761438c613a2a565b604052823561439a816139bc565b815260208301356143aa8161416f565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6040815260006144086040830185613950565b828103602084015261441a8185613950565b95945050505050565b813561442e816139bc565b81546001600160a01b031981166001600160a01b03929092169182178355602084013561445a8161416f565b6003811061447857634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b600082516144c1818460208701613924565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d5b90830184613950565b60006020828403121561451057600080fd5b815161195a816138f1565b60e09190911b6001600160e01b031916815260200190565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d11156145705760046000803e5060005160e01c5b90565b600060443d10156145815790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156145b057505050505090565b82850191508151818111156145c85750505050505090565b843d87010160208285010111156145e25750505050505090565b6145f160208286010187613a40565b509095945050505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d9b3172369fef9e8acda74ea1f821994b16bf97840514022a37d58ce86c8568b64736f6c634300080c00338502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
    "sourceMap": "901:9906:32:-:0;;;2953:693;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1026:40:157;;;;1885:13:87;;413:42:117;;516:4;;3171:5:32;;3178:7;;1885:13:87;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1908:17:87;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2121:7:87;1935:13;:31;-1:-1:-1;1313:52:130;1323:30;1355:9;1313;:52::i;:::-;-1:-1:-1;3229:26:32::2;::::0;-1:-1:-1;3241:13:32;3229:11:::2;:26::i;:::-;3265:56;3290:17:::0;-1:-1:-1;;;;;3265:56:32;::::2;:24;:56::i;:::-;3331:29;3355:4;3331:23;:29::i;:::-;3371:45;787:4:133;3402:13:32::0;3371:10:::2;:45::i;:::-;3426:38;1384:24;3450:13:::0;3426:10:::2;:38::i;:::-;3474:40;-1:-1:-1::0;;;;;;;;;;;3500:13:32;3474:10:::2;:40::i;:::-;3525:34;1716:23;3556:1;3525:10;:34::i;:::-;3569:35;1541:24;3601:1;3569:10;:35::i;:::-;3615:24;3633:5;3615:17;:24::i;:::-;2953:693:::0;;;;;;901:9906;;2349:783:130;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;2817:4;2763:92;;;2486:34:641;-1:-1:-1;;;;;2556:15:641;;2536:18;;;2529:43;905:42:130;;2763:45;;2421:18:641;;2763:92:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:783;;:::o;2726:289::-;2902:94;;-1:-1:-1;;;2902:94:130;;2958:4;2902:94;;;2486:34:641;-1:-1:-1;;;;;2556:15:641;;2536:18;;;2529:43;905:42:130;;2902:47;;2421:18:641;;2902:94:130;2274:304:641;2603:513:130;3053:48;;-1:-1:-1;;;3053:48:130;;3095:4;3053:48;;;2729:51:641;905:42:130;;3053:33;;2702:18:641;;3053:48:130;;;;;;;;;;;;;;;;;;;2603:513;2349:783;;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;2993:2:641;3571:25:139;;;2975:21:641;3032:2;3012:18;;;3005:30;-1:-1:-1;;;3051:18:641;;;3044:45;3106:18;;3571:25:139;;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;3281:25:641;;;3711:46:139;;3269:2:641;3254:18;3711:46:139;;;;;;;3430:334;;:::o;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;3457:41:641;;;577:33:129;;3445:2:641;3430:18;577:33:129;;;;;;;457:160;:::o;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;;;;;:31;;:::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;1299:224:149:-;1373:11;1369:148;;;1400:38;-1:-1:-1;;;;;;;;;;;1435:1:149;1400:11;:38::i;:::-;1299:224;:::o;1369:148::-;1469:37;-1:-1:-1;;;;;;;;;;;1503:1:149;1469:10;:37::i;5036:168:133:-;5114:14;;;;5140:4;5114:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;;;;;;;5159:38;;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;3205:157::-;3285:32;3303:4;3309:7;3285:17;;;;;:32;;:::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;2349:783:130;;:::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;5557:495::-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;;;;;:43;;:::i;:::-;5941:40;5971:4;5978:2;5941:21;;;;;:40;;:::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;5599:2:641;1913:55:285;;;5581:21:641;;;5618:18;;;5611:30;5677:34;5657:18;;;5650:62;5729:18;;1913:55:285;5397:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;901:9906:32:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;901:9906:32;;;-1:-1:-1;901:9906:32;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:258;400:1;410:113;424:6;421:1;418:13;410:113;;;500:11;;;494:18;481:11;;;474:39;446:2;439:10;410:113;;;541:6;538:1;535:13;532:48;;;576:1;567:6;562:3;558:16;551:27;532:48;;328:258;;;:::o;591:686::-;645:5;698:3;691:4;683:6;679:17;675:27;665:55;;716:1;713;706:12;665:55;739:13;;-1:-1:-1;;;;;801:10:641;;;798:36;;;814:18;;:::i;:::-;889:2;883:9;857:2;943:13;;-1:-1:-1;;939:22:641;;;963:2;935:31;931:40;919:53;;;987:18;;;1007:22;;;984:46;981:72;;;1033:18;;:::i;:::-;1073:10;1069:2;1062:22;1108:2;1100:6;1093:18;1154:3;1147:4;1142:2;1134:6;1130:15;1126:26;1123:35;1120:55;;;1171:1;1168;1161:12;1120:55;1184:63;1244:2;1237:4;1229:6;1225:17;1218:4;1210:6;1206:17;1184:63;:::i;:::-;1265:6;591:686;-1:-1:-1;;;;;;591:686:641:o;1282:987::-;1417:6;1425;1433;1441;1449;1457;1510:3;1498:9;1489:7;1485:23;1481:33;1478:53;;;1527:1;1524;1517:12;1478:53;1550:40;1580:9;1550:40;:::i;:::-;1634:2;1619:18;;1613:25;1540:50;;-1:-1:-1;;;;;;1687:14:641;;;1684:34;;;1714:1;1711;1704:12;1684:34;1737:61;1790:7;1781:6;1770:9;1766:22;1737:61;:::i;:::-;1727:71;;1844:2;1833:9;1829:18;1823:25;1807:41;;1873:2;1863:8;1860:16;1857:36;;;1889:1;1886;1879:12;1857:36;;1912:63;1967:7;1956:8;1945:9;1941:24;1912:63;:::i;:::-;1902:73;;;1994:49;2039:2;2028:9;2024:18;1994:49;:::i;:::-;2086:3;2071:19;;2065:26;1984:59;;-1:-1:-1;;;;;;2120:31:641;;2110:42;;2100:70;;2166:1;2163;2156:12;2100:70;2189:5;-1:-1:-1;2213:50:641;2258:3;2243:19;;2213:50;:::i;:::-;2203:60;;1282:987;;;;;;;;:::o;3509:127::-;3570:10;3565:3;3561:20;3558:1;3551:31;3601:4;3598:1;3591:15;3625:4;3622:1;3615:15;3641:128;3681:3;3712:1;3708:6;3705:1;3702:13;3699:39;;;3718:18;;:::i;:::-;-1:-1:-1;3754:9:641;;3641:128::o;3774:784::-;4185:23;4180:3;4173:36;4155:3;4238:6;4232:13;4254:62;4309:6;4304:2;4299:3;4295:12;4288:4;4280:6;4276:17;4254:62;:::i;:::-;-1:-1:-1;;;4375:2:641;4335:16;;;4367:11;;;4360:40;4425:13;;4447:63;4425:13;4496:2;4488:11;;4481:4;4469:17;;4447:63;:::i;:::-;4530:17;4549:2;4526:26;;3774:784;-1:-1:-1;;;;3774:784:641:o;4563:383::-;4712:2;4701:9;4694:21;4675:4;4744:6;4738:13;4787:6;4782:2;4771:9;4767:18;4760:34;4803:66;4862:6;4857:2;4846:9;4842:18;4837:2;4829:6;4825:15;4803:66;:::i;:::-;4930:2;4909:15;-1:-1:-1;;4905:29:641;4890:45;;;;4937:2;4886:54;;4563:383;-1:-1:-1;;4563:383:641:o;4951:168::-;4991:7;5057:1;5053;5049:6;5045:14;5042:1;5039:21;5034:1;5027:9;5020:17;5016:45;5013:71;;;5064:18;;:::i;:::-;-1:-1:-1;5104:9:641;;4951:168::o;5124:127::-;5185:10;5180:3;5176:20;5173:1;5166:31;5216:4;5213:1;5206:15;5240:4;5237:1;5230:15;5256:136;5295:3;5323:5;5313:39;;5332:18;;:::i;:::-;-1:-1:-1;;;5368:18:641;;5256:136::o;5758:380::-;5837:1;5833:12;;;;5880;;;5901:61;;5955:4;5947:6;5943:17;5933:27;;5901:61;6008:2;6000:6;5997:14;5977:18;5974:38;5971:161;;;6054:10;6049:3;6045:20;6042:1;6035:31;6089:4;6086:1;6079:15;6117:4;6114:1;6107:15;5971:161;;5758:380;;;:::o;:::-;901:9906:32;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "901:9906:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:622;;;;;;;;;;-1:-1:-1;3864:622:32;;;;;:::i;:::-;;:::i;:::-;;;565:14:641;;558:22;540:41;;528:2;513:18;3864:622:32;;;;;;;;6131:98:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7617:200::-;;;;;;;;;;-1:-1:-1;7617:200:87;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8122:208:32:-;;;;;;;;;;-1:-1:-1;8122:208:32;;;;;:::i;:::-;;:::i;:::-;;1133:173:132;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;608:200:330:-;;;;;;;;;;-1:-1:-1;608:200:330;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4499:33:641;;;4481:52;;4469:2;4454:18;608:200:330;4337:202:641;2284:306:87;;;;;;;;;;-1:-1:-1;2543:12:87;;2527:13;;:28;2284:306;;;4690:25:641;;;4678:2;4663:18;2284:306:87;4544:177:641;1007:150:156;;;;;;;;;;-1:-1:-1;1007:150:156;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;831:66:149:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;831:66:149;;8377:208:32;;;;;;;;;;-1:-1:-1;8377:208:32;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;5433:665:32;;;;;;:::i;:::-;;:::i;1421:347:139:-;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:133:-;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;4466:217:133:-;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;7061:104:32:-;;;;;;;;;;-1:-1:-1;7145:13:32;;7061:104;;806:142:130;;;;;;;;;;;;905:42;806:142;;8636:216:32;;;;;;;;;;-1:-1:-1;8636:216:32;;;;;:::i;:::-;;:::i;7265:357::-;;;;;;;;;;-1:-1:-1;7265:357:32;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9461:32:641;;;9443:51;;9542:6;9530:19;;;9525:2;9510:18;;9503:47;9416:18;2008:381:139;9271:285:641;205:31:129;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;530:199:117;;;;;;;;;;-1:-1:-1;530:199:117;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;1216:124:156:-;;;;;;;;;;-1:-1:-1;1216:124:156;;;;;:::i;:::-;;:::i;5946:123:87:-;;;;;;;;;;-1:-1:-1;5946:123:87;;;;;:::i;:::-;;:::i;3372:203::-;;;;;;;;;;-1:-1:-1;3372:203:87;;;;;:::i;:::-;;:::i;1299:224:149:-;;;;;;;;;;-1:-1:-1;1299:224:149;;;;;:::i;:::-;;:::i;6395:411:32:-;;;;;;;;;;-1:-1:-1;6395:411:32;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;;;;:::i;1643:633:134:-;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;6293:102:87:-;;;;;;;;;;;;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;742:49:133:-;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;7854:227:32;;;;;;;;;;-1:-1:-1;7854:227:32;;;;;:::i;:::-;;:::i;2206:211:133:-;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;;;;;;;;;;-1:-1:-1;2599:16:139;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;8903:249:32;;;;;;;;;;-1:-1:-1;8903:249:32;;;;;:::i;:::-;;:::i;724:247:328:-;;;;;;;;;;-1:-1:-1;724:247:328;;;;;:::i;:::-;-1:-1:-1;;;724:247:328;;;;;;;;4728:137:32;;;;;;;;;;-1:-1:-1;4728:137:32;;;;;:::i;:::-;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;787:127:156:-;;;;;;;;;;-1:-1:-1;787:127:156;;;;;:::i;:::-;858:7;884:17;;;;;;;;;;:23;;787:127;3897:171:133;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;8232:162:87:-;;;;;;;;;;-1:-1:-1;8232:162:87;;;;;:::i;:::-;;:::i;499:219:328:-;;;;;;;;;;-1:-1:-1;499:219:328;;;;;:::i;:::-;-1:-1:-1;;;499:219:328;;;;;;;;3864:622:32;4024:4;4063:36;4087:11;4063:23;:36::i;:::-;:77;;;-1:-1:-1;;;;;;;;;;4115:25:32;;;4063:77;:152;;;-1:-1:-1;;;;;;;;;;4190:25:32;;;4063:152;:227;;;-1:-1:-1;;;;;;;;;;4265:25:32;;;4063:227;:326;;;-1:-1:-1;;;;;;;4348:41:32;;-1:-1:-1;;;4348:41:32;4063:326;:416;;;-1:-1:-1;;;;;;;4430:49:32;;-1:-1:-1;;;4430:49:32;4063:416;4044:435;3864:622;-1:-1:-1;;3864:622:32:o;6131:98:87:-;6185:13;6217:5;6210:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6131:98;:::o;7617:200::-;7685:7;7709:16;7717:7;7709;:16::i;:::-;7704:64;;7734:34;;-1:-1:-1;;;7734:34:87;;;;;;;;;;;7704:64;-1:-1:-1;7786:24:87;;;;:15;:24;;;;;;-1:-1:-1;;;;;7786:24:87;;7617:200::o;8122:208:32:-;8267:8;1812:30:130;1833:8;1812:20;:30::i;:::-;8291:32:32::1;8305:8;8315:7;8291:13;:32::i;:::-;8122:208:::0;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;608:200:330:-;-1:-1:-1;;;608:200:330;;;;;;;:::o;1007:150:156:-;1088:12;;:::i;:::-;1119:6;:17;;;;;;;;;;;:31;;;:24;;;;:31;;;;;;1112:38;;;;;;;;;;-1:-1:-1;;;;;1112:38:156;;;;;;1119:31;;1112:38;;;-1:-1:-1;;;1112:38:156;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1007:150;-1:-1:-1;;;1007:150:156:o;8377:208:32:-;8525:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;8541:37:32::1;8560:4;8566:2;8570:7;8541:18;:37::i;:::-;8377:208:::0;;;;:::o;5433:665::-;5630:15;1384:24;2712:38;2733:4;2739:10;2712:20;:38::i;:::-;5662:31:::1;1716:23;5690:1;5662:7;:31::i;:::-;5657:203;;5714:9;5709:141;5729:24:::0;;::::1;5709:141;;;5781:54;1716:23;5804:13;;5818:1;5804:16;;;;;;;:::i;:::-;:30;::::0;::::1;:16;::::0;;::::1;;:30:::0;;::::1;::::0;-1:-1:-1;5804:30:32::1;:::i;:::-;5781:10;:54::i;:::-;5755:6;5760:1;5755:6:::0;::::1;:::i;:::-;;;5709:141;;;;5657:203;7145:13:::0;;5870:29:::1;;5910:69;5923:10;5935:13;;5950:19;;5910:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;5971:7:32;;-1:-1:-1;5910:12:32::1;::::0;-1:-1:-1;;5910:69:32:i:1;:::-;5990:24;6000:10;6012:1;5990:9;:24::i;:::-;6068:7;6056:10;-1:-1:-1::0;;;;;6030:61:32::1;6044:10;-1:-1:-1::0;;;;;6030:61:32::1;;6077:13;;6030:61;;;;;;;:::i;:::-;;;;;;;;5433:665:::0;;;;;;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;18736:2:641;3435:39:133;;;18718:21:641;18775:2;18755:18;;;18748:30;18814:31;18794:18;;;18787:59;18863:18;;3435:39:133;18534:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;19094:2:641;313:84:129;;;19076:21:641;19133:2;19113:18;;;19106:30;19172:34;19152:18;;;19145:62;-1:-1:-1;;;19223:18:641;;;19216:41;19274:19;;313:84:129;18892:407:641;313:84:129;407:37;431:12;407:23;:37::i;4466:217:133:-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;19506:2:641;4594:36:133;;;19488:21:641;19545:2;19525:18;;;19518:30;-1:-1:-1;;;19564:18:641;;;19557:56;19630:18;;4594:36:133;19304:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;8636:216:32:-;8788:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;8804:41:32::1;8827:4;8833:2;8837:7;8804:22;:41::i;7265:357::-:0;7390:24;7430:13;7446:17;7454:8;7446:7;:17::i;:::-;7430:33;;7509:5;-1:-1:-1;;;;;7496:18:32;:9;-1:-1:-1;;;;;7496:18:32;;:68;;;;7530:34;7547:5;7554:9;7530:16;:34::i;:::-;7496:118;;;;7605:9;-1:-1:-1;;;;;7580:34:32;:21;7592:8;7580:11;:21::i;:::-;-1:-1:-1;;;;;7580:34:32;;7473:142;7265:357;-1:-1:-1;;;;7265:357:32:o;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;530:199:117:-;609:28;:26;:28::i;:::-;601:81;;;;-1:-1:-1;;;601:81:117;;19861:2:641;601:81:117;;;19843:21:641;19900:2;19880:18;;;19873:30;19939:34;19919:18;;;19912:62;-1:-1:-1;;;19990:18:641;;;19983:38;20038:19;;601:81:117;19659:404:641;601:81:117;692:30;702:13;717:4;692:9;:30::i;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;1216:124:156:-;1312:6;:17;;;;;;;;;;:21;;1305:28;;1280:13;;1312:21;1305:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:124;;;:::o;5946:123:87:-;6010:7;6036:21;6049:7;6036:12;:21::i;:::-;:26;;5946:123;-1:-1:-1;;5946:123:87:o;3372:203::-;3436:7;-1:-1:-1;;;;;3459:19:87;;3455:60;;3487:28;;-1:-1:-1;;;3487:28:87;;;;;;;;;;;3455:60;-1:-1:-1;;;;;;3540:19:87;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;3540:27:87;;3372:203::o;1299:224:149:-;1373:11;1369:148;;;1400:38;-1:-1:-1;;;;;;;;;;;1435:1:149;1400:11;:38::i;1369:148::-;1469:37;-1:-1:-1;;;;;;;;;;;1503:1:149;1469:10;:37::i;6395:411:32:-;1541:24;2712:38;2733:4;2739:10;2712:20;:38::i;:::-;7145:13;;6514:8:::1;:30;6506:59;;;::::0;-1:-1:-1;;;6506:59:32;;20270:2:641;6506:59:32::1;::::0;::::1;20252:21:641::0;20309:2;20289:18;;;20282:30;-1:-1:-1;;;20328:18:641;;;20321:46;20384:18;;6506:59:32::1;20068:340:641::0;6506:59:32::1;6583:39;6601:10;6613:8;6583:17;:39::i;:::-;6575:87;;;::::0;-1:-1:-1;;;6575:87:32;;20615:2:641;6575:87:32::1;::::0;::::1;20597:21:641::0;20654:2;20634:18;;;20627:30;20693:34;20673:18;;;20666:62;-1:-1:-1;;;20744:18:641;;;20737:33;20787:19;;6575:87:32::1;20413:399:641::0;6575:87:32::1;6673:15;6679:8;6673:5;:15::i;:::-;6698:36;6713:10;6725:8;6698:14;:36::i;:::-;6750:49;::::0;6790:8;;-1:-1:-1;;;;;6750:49:32;::::1;::::0;6766:10:::1;::::0;6750:49:::1;::::0;;;::::1;6395:411:::0;;;:::o;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;6293:102:87:-;6349:13;6381:7;6374:14;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;7854:227:32:-;8007:8;1812:30:130;1833:8;1812:20;:30::i;:::-;8031:43:32::1;8055:8;8065;8031:23;:43::i;2206:211:133:-:0;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;698:319:127:-;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;8903:249:32:-;9082:4;-1:-1:-1;;;;;1639:18:130;;1647:10;1639:18;1635:81;;1673:32;1694:10;1673:20;:32::i;:::-;9098:47:32::1;9121:4;9127:2;9131:7;9140:4;9098:22;:47::i;:::-;8903:249:::0;;;;;:::o;4728:137::-;4802:13;4834:24;4849:8;4834:14;:24::i;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8232:162:87:-;-1:-1:-1;;;;;8352:25:87;;;8329:4;8352:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8232:162::o;5036:168:133:-;5114:14;;;;5140:4;5114:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;;;;;;;5159:38;;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;5253:204::-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;21826:2:641;1913:55:285;;;21808:21:641;;;21845:18;;;21838:30;21904:34;21884:18;;;21877:62;21956:18;;1913:55:285;21624:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;3022:291:87:-;3115:4;-1:-1:-1;;;;;;3150:40:87;;-1:-1:-1;;;3150:40:87;;:104;;-1:-1:-1;;;;;;;3206:48:87;;-1:-1:-1;;;3206:48:87;3150:104;:156;;;;3270:36;3294:11;3270:23;:36::i;9558:172::-;9615:4;9678:13;;9668:7;:23;9638:85;;;;-1:-1:-1;;9696:20:87;;;;:11;:20;;;;;:27;-1:-1:-1;;;9696:27:87;;;;9695:28;;9558:172::o;1866:477:130:-;2055:19;;;;2051:286;;;905:42;2094:45;:49;2090:237;;2168:67;;-1:-1:-1;;;2168:67:130;;905:42;;2168;;:67;;2219:4;;2226:8;;2168:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:150;;2285:8;2266:28;;-1:-1:-1;;;2266:28:130;;;;;;;;:::i;7164:392:87:-;7244:13;7260:24;7276:7;7260:15;:24::i;:::-;7244:40;;7304:5;-1:-1:-1;;;;;7298:11:87;:2;-1:-1:-1;;;;;7298:11:87;;7294:48;;;7318:24;;-1:-1:-1;;;7318:24:87;;;;;;;;;;;7294:48;719:10:325;-1:-1:-1;;;;;7357:21:87;;;7353:158;;7397:37;7414:5;719:10:325;8232:162:87;:::i;7397:37::-;7392:119;;7461:35;;-1:-1:-1;;;7461:35:87;;;;;;;;;;;7392:119;7521:28;7530:2;7534:7;7543:5;7521:8;:28::i;10255:115:32:-;10319:4;10356:7;:5;:7::i;:::-;-1:-1:-1;;;;;10342:21:32;:10;-1:-1:-1;;;;;10342:21:32;;10335:28;;10255:115;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;8456:164:87:-;8585:28;8595:4;8601:2;8605:7;8585:9;:28::i;6152:514:133:-;6250:32;6268:4;6274:7;6250:17;:32::i;:::-;6245:415;;6441:43;6471:7;-1:-1:-1;;;;;6441:43:133;6481:2;6441:21;:43::i;:::-;6555:40;6585:4;6592:2;6555:21;:40::i;:::-;6350:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6350:267:133;;;;;;;;;;-1:-1:-1;;;6298:351:133;;;;;;;:::i;5557:495::-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;1147:340:157:-;1324:36;1338:7;;1347:12;1324:13;:36::i;:::-;1370:44;1386:13;1401:12;1370:15;:44::i;:::-;1424:56;1444:11;1465:4;1472:7;;1424:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:19;:56::i;9809:102:87:-;9877:27;9887:2;9891:8;9877:27;;;;;;;;;;;;:9;:27::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;540:41:641;;;577:33:129;;528:2:641;513:18;577:33:129;;;;;;;457:160;:::o;3205:157:134:-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;3255:271:133;;:::o;8686:179:87:-;8819:39;8836:4;8842:2;8846:7;8819:39;;;;;;;;;;;;:16;:39::i;2349:783:130:-;905:42;2484:45;:49;2480:646;;-1:-1:-1;;;;;2607:51:130;;;:55;2603:513;;2730:9;2726:289;;;2763:92;;-1:-1:-1;;;2763:92:130;;905:42;;2763:45;;:92;;2817:4;;2824:30;;2763:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3255:271:133;;:::o;2726:289:130:-;2902:94;;-1:-1:-1;;;2902:94:130;;905:42;;2902:47;;:94;;2958:4;;2965:30;;2902:94;;;:::i;2603:513::-;3053:48;;-1:-1:-1;;;3053:48:130;;905:42;;3053:33;;:48;;3095:4;;3053:48;;;:::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;4690:25:641;;;3711:46:139;;4678:2:641;4663:18;3711:46:139;;;;;;;3430:334;;:::o;4715:1174:87:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;4825:7:87;4923:13;;4916:4;:20;4912:913;;;4960:31;4994:17;;;:11;:17;;;;;;;;;4960:51;;;;;;;;;-1:-1:-1;;;;;4960:51:87;;;;-1:-1:-1;;;4960:51:87;;-1:-1:-1;;;;;4960:51:87;;;;;;;;-1:-1:-1;;;4960:51:87;;;;;;;;;;;;;;5033:774;;5086:14;;-1:-1:-1;;;;;5086:28:87;;5082:107;;5153:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5082:107::-;-1:-1:-1;;;5549:6:87;5597:17;;;;:11;:17;;;;;;;;;5585:29;;;;;;;;;-1:-1:-1;;;;;5585:29:87;;;;;-1:-1:-1;;;5585:29:87;;-1:-1:-1;;;;;5585:29:87;;;;;;;;-1:-1:-1;;;5585:29:87;;;;;;;;;;;;;5648:28;5644:115;;5719:9;4715:1174;-1:-1:-1;;;4715:1174:87:o;5644:115::-;5506:279;;;4938:887;4912:913;5851:31;;-1:-1:-1;;;5851:31:87;;;;;;;;;;;15769:87;15828:21;15834:7;15843:5;15828;:21::i;1563:448:157:-;1649:13;884:17:156;;;;;;;;;;:23;;;-1:-1:-1;;;;;1744:18:157;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1711:51;;1778:9;1773:119;1797:5;1793:1;:9;1773:119;;;1847:34;1864:13;1879:1;1847:16;:34::i;:::-;1826:15;1842:1;1826:18;;;;;;;;:::i;:::-;;;;;;;;;;:55;1804:6;1809:1;1804:6;;:::i;:::-;;;1773:119;;;;1902:28;1916:13;1902;:28::i;:::-;1941:63;1969:4;1976:10;1988:15;1941:19;:63::i;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;4690:25:641;;;4918:49:139;;4886:29;;4983:43;;4663:18:641;4983:43:139;;;;;;;4671:362;;;:::o;7884:282:87:-;-1:-1:-1;;;;;7982:24:87;;719:10:325;7982:24:87;7978:54;;;8015:17;;-1:-1:-1;;;8015:17:87;;;;;;;;;;;7978:54;719:10:325;8043:32:87;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;8043:42:87;;;;;;;;;;;;:53;;-1:-1:-1;;8043:53:87;;;;;;;;;;8111:48;;540:41:641;;;8043:42:87;;719:10:325;8111:48:87;;513:18:641;8111:48:87;;;;;;;7884:282;;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;8931:381:87:-;9092:28;9102:4;9108:2;9112:7;9092:9;:28::i;:::-;9134:15;:2;-1:-1:-1;;;;;9134:13:87;;:15::i;:::-;9130:176;;;9168:56;9199:4;9205:2;9209:7;9218:5;9168:30;:56::i;:::-;9163:143;;9251:40;;-1:-1:-1;;;9251:40:87;;;;;;;;;;;398:221:329;500:4;-1:-1:-1;;;;;;523:49:329;;-1:-1:-1;;;523:49:329;;:89;;-1:-1:-1;;;;;;;;;;947:40:85;;;576:36:329;839:155:85;18539:189:87;18649:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;18649:29:87;-1:-1:-1;;;;;18649:29:87;;;;;;;;;18693:28;;18649:24;;18693:28;;;;;;;18539:189;;;:::o;13614:2082::-;13724:35;13762:21;13775:7;13762:12;:21::i;:::-;13724:59;;13820:4;-1:-1:-1;;;;;13798:26:87;:13;:18;;;-1:-1:-1;;;;;13798:26:87;;13794:67;;13833:28;;-1:-1:-1;;;13833:28:87;;;;;;;;;;;13794:67;13872:22;719:10:325;-1:-1:-1;;;;;13898:20:87;;;;:72;;-1:-1:-1;13934:36:87;13951:4;719:10:325;8232:162:87;:::i;13934:36::-;13898:124;;;-1:-1:-1;719:10:325;13986:20:87;13998:7;13986:11;:20::i;:::-;-1:-1:-1;;;;;13986:36:87;;13898:124;13872:151;;14039:17;14034:66;;14065:35;;-1:-1:-1;;;14065:35:87;;;;;;;;;;;14034:66;-1:-1:-1;;;;;14114:16:87;;14110:52;;14139:23;;-1:-1:-1;;;14139:23:87;;;;;;;;;;;14110:52;14173:43;14195:4;14201:2;14205:7;14214:1;14173:21;:43::i;:::-;14278:35;14295:1;14299:7;14308:4;14278:8;:35::i;:::-;-1:-1:-1;;;;;14603:18:87;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;;;;;14603:31:87;;;-1:-1:-1;;;;;14603:31:87;;;-1:-1:-1;;14603:31:87;;;;;;;14648:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;14648:29:87;;;;;;;;;;;14726:20;;;:11;:20;;;;;;14760:18;;-1:-1:-1;;;;;;14792:49:87;;;;-1:-1:-1;;;14825:15:87;14792:49;;;;;;;;;;15111:11;;15170:24;;;;;15212:13;;14726:20;;15170:24;;15212:13;15208:377;;15419:13;;15404:11;:28;15400:171;;15456:20;;15524:28;;;;-1:-1:-1;;;;;15498:54:87;-1:-1:-1;;;15498:54:87;-1:-1:-1;;;;;;15498:54:87;;;-1:-1:-1;;;;;15456:20:87;;15498:54;;;;15400:171;14579:1016;;;15629:7;15625:2;-1:-1:-1;;;;;15610:27:87;15619:4;-1:-1:-1;;;;;15610:27:87;-1:-1:-1;;;;;;;;;;;15610:27:87;;;;;;;;;15647:42;8377:208:32;1450:469:156;1565:13;1604:15;1596:35;;;;-1:-1:-1;;;1596:35:156;;25056:2:641;1596:35:156;;;25038:21:641;25095:1;25075:18;;;25068:29;-1:-1:-1;;;25113:18:641;;;25106:37;25160:18;;1596:35:156;24854:330:641;1596:35:156;1649:6;:17;;;;;;;;;;:23;:28;1641:50;;;;-1:-1:-1;;;1641:50:156;;25391:2:641;1641:50:156;;;25373:21:641;25430:1;25410:18;;;25403:29;-1:-1:-1;;;25448:18:641;;;25441:39;25497:18;;1641:50:156;25189:332:641;1641:50:156;1707:9;1702:163;1726:11;1722:1;:15;1702:163;;;1761:33;1777:13;;1791:1;1777:16;;;;;;;:::i;:::-;;;;;;1761:33;;;;;;;;;;:::i;:::-;:15;:33::i;:::-;1838:13;;1852:1;1838:16;;;;;;;:::i;:::-;1808:6;:17;;;;;;;;;;;:27;;;:24;;:27;;;;;1838:16;;;;;;;;;1808:27;-1:-1:-1;1808:46:156;1838:16;1808:27;:46;:::i;:::-;-1:-1:-1;1739:6:156;;-1:-1:-1;1744:1:156;1739:6;;:::i;:::-;;;1702:163;;;-1:-1:-1;1875:6:156;:17;;;;;;;;;;;:37;-1:-1:-1;;1450:469:156:o;4981:118::-;5064:6;:17;;;;;;;;;;;:28;;;;:21;;;;;:28;;;;:::i;2895:845:157:-;3025:24;;3059:314;3083:7;:14;3079:1;:18;3059:314;;;397:42:277;-1:-1:-1;;;;;3125:60:157;:7;3133:1;3125:10;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;3125:60:157;;:84;;;;-1:-1:-1;;;;;;3189:20:157;;3204:4;3189:20;3125:84;3121:242;;;3249:7;3257:1;3249:10;;;;;;;;:::i;:::-;;;;;;;:22;;;3229:42;;;;;:::i;:::-;;;3121:242;;;3310:38;3325:5;3332:3;3337:7;3345:1;3337:10;;;;;;;;:::i;:::-;;;;;;;3310:14;:38::i;:::-;3099:6;3104:1;3099:6;;:::i;:::-;;;3059:314;;;-1:-1:-1;3386:21:157;;3382:352;;3451:218;;;;;;;;397:42:277;3451:218:157;;-1:-1:-1;3451:218:157;;;;;;;;;;;;;;;;;;;3683:40;3698:5;3705:3;3451:218;3683:14;:40::i;10271:1708:87:-;10412:13;;-1:-1:-1;;;;;10439:16:87;;10435:48;;10464:19;;-1:-1:-1;;;10464:19:87;;;;;;;;;;;10435:48;10497:13;10493:44;;10519:18;;-1:-1:-1;;;10519:18:87;;;;;;;;;;;10493:44;10548:61;10578:1;10582:2;10586:12;10600:8;10548:21;:61::i;:::-;-1:-1:-1;;;;;10880:16:87;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;;;;;10938:49:87;;-1:-1:-1;;;;;10880:44:87;;;;;;;10938:49;;;-1:-1:-1;;;;;;;;;10880:44:87;;;;;;10938:49;;;;;;;;;;;;;;;;11002:25;;;10938:29;11002:25;;;;;;:35;;-1:-1:-1;;;;;;11051:66:87;;;-1:-1:-1;;;11101:15:87;11051:66;;;;;;;;;;;;;11002:25;;11195:23;;;;11237:15;;:13;:15::i;:::-;11233:618;;;11272:308;11302:38;;11327:12;;-1:-1:-1;;;;;11302:38:87;;;11319:1;;-1:-1:-1;;;;;;;;;;;11302:38:87;11319:1;;11302:38;11367:69;11406:1;11410:2;11414:14;;;;;;11430:5;11367:30;:69::i;:::-;11362:172;;11471:40;;-1:-1:-1;;;11471:40:87;;;;;;;;;;;11362:172;11575:3;11560:12;:18;11272:308;;11659:12;11642:13;;:29;11638:43;;11673:8;;;11638:43;11233:618;;;11720:117;11750:40;;11775:14;;;;;-1:-1:-1;;;;;11750:40:87;;;11767:1;;-1:-1:-1;;;;;;;;;;;11750:40:87;11767:1;;11750:40;11832:3;11817:12;:18;11720:117;;11233:618;-1:-1:-1;11864:13:87;:28;11912:60;11941:1;11945:2;11949:12;11963:8;11912:60;:::i;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;16073:2355:87:-;16152:35;16190:21;16203:7;16190:12;:21::i;:::-;16237:18;;16152:59;;-1:-1:-1;16266:284:87;;;;16299:22;719:10:325;-1:-1:-1;;;;;16325:20:87;;;;:76;;-1:-1:-1;16365:36:87;16382:4;719:10:325;8232:162:87;:::i;16365:36::-;16325:132;;;-1:-1:-1;719:10:325;16421:20:87;16433:7;16421:11;:20::i;:::-;-1:-1:-1;;;;;16421:36:87;;16325:132;16299:159;;16478:17;16473:66;;16504:35;;-1:-1:-1;;;16504:35:87;;;;;;;;;;;16473:66;16285:265;16266:284;16560:51;16582:4;16596:1;16600:7;16609:1;16560:21;:51::i;:::-;16673:35;16690:1;16694:7;16703:4;16673:8;:35::i;:::-;-1:-1:-1;;;;;17032:18:87;;;16998:31;17032:18;;;:12;:18;;;;;;;;17064:24;;-1:-1:-1;;;;;;;;;;17064:24:87;;;;;;;;;-1:-1:-1;;;;;;17064:24:87;;;;17102:29;;;;;17087:1;17102:29;;;;;;;;-1:-1:-1;;;;;;17102:29:87;;;;;;;;;;17261:20;;;:11;:20;;;;;;17295;;-1:-1:-1;;;;17362:15:87;17329:49;;;-1:-1:-1;;;17329:49:87;-1:-1:-1;;;;;;17329:49:87;;;;;;;;;;17392:22;-1:-1:-1;;;17392:22:87;;;17680:11;;;17739:24;;;;;17781:13;;17032:18;;17739:24;;17781:13;17777:377;;17988:13;;17973:11;:28;17969:171;;18025:20;;18093:28;;;;-1:-1:-1;;;;;18067:54:87;-1:-1:-1;;;18067:54:87;-1:-1:-1;;;;;;18067:54:87;;;-1:-1:-1;;;;;18025:20:87;;18067:54;;;;17969:171;-1:-1:-1;;18179:35:87;;18206:7;;-1:-1:-1;18202:1:87;;-1:-1:-1;;;;;;18179:35:87;;;-1:-1:-1;;;;;;;;;;;18179:35:87;18202:1;;18179:35;-1:-1:-1;;18397:12:87;:14;;;;;;-1:-1:-1;;16073:2355:87:o;5172:220:156:-;5238:9;5233:116;5257:6;:17;;;;;;;;;;:23;5253:27;;5233:116;;;5311:6;:17;;;;;;;;;;;:27;;;:24;;;;:27;;;;;5304:34;;-1:-1:-1;;;;;;5304:34:156;;;;;;;;;;;;;;;;5282:6;;5336:1;5282:6;:::i;:::-;;;5233:116;;;-1:-1:-1;5384:1:156;5358:17;;;;;;;;;;:27;5172:220::o;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;26576:2:641;7087:69:281;;;26558:21:641;26615:2;26595:18;;;26588:30;26654:34;26634:18;;;26627:62;-1:-1:-1;;;26705:18:641;;;26698:36;26751:19;;7087:69:281;26374:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;1137:320::-;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;19209:650:87:-;19387:72;;-1:-1:-1;;;19387:72:87;;19367:4;;-1:-1:-1;;;;;19387:36:87;;;;;:72;;719:10:325;;19438:4:87;;19444:7;;19453:5;;19387:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19387:72:87;;;;;;;;-1:-1:-1;;19387:72:87;;;;;;;;;;;;:::i;:::-;;;19383:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19618:13:87;;19614:229;;19663:40;;-1:-1:-1;;;19663:40:87;;;;;;;;;;;19614:229;19803:6;19797:13;19788:6;19784:2;19780:15;19773:38;19383:470;-1:-1:-1;;;;;;19505:55:87;-1:-1:-1;;;19505:55:87;;-1:-1:-1;19498:62:87;;9389:348:32;9658:72;9697:4;9703:2;9707:12;9721:8;9658:38;:72::i;3593:1300:156:-;3687:16;3667:6;:16;;;:36;;;;;;;;:::i;:::-;;3663:1224;;;3731:20;;3723:59;;-1:-1:-1;;;3723:59:156;;-1:-1:-1;;;;;3723:47:156;;;;;;:59;;3771:10;;3723:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3723:59:156;;;;;;;;-1:-1:-1;;3723:59:156;;;;;;;;;;;;:::i;:::-;;;3719:220;;3904:20;;-1:-1:-1;;;3904:20:156;;;;;;;:::i;3719:220::-;3837:12;3829:35;;;;-1:-1:-1;;;3829:35:156;;;;;;;:::i;3663:1224::-;3979:17;3959:6;:16;;;:37;;;;;;;;:::i;:::-;;3955:932;;;4024:20;;4016:59;;-1:-1:-1;;;4016:59:156;;-1:-1:-1;;;;;4016:47:156;;;;;;:59;;4064:10;;4016:59;;;:::i;3955:932::-;4274:15;4254:6;:16;;;:35;;;;;;;;:::i;:::-;;4250:637;;;4309:20;;-1:-1:-1;;;;;4309:56:156;397:42:277;4309:56:156;4305:572;;4427:20;;4419:59;;-1:-1:-1;;;4419:59:156;;-1:-1:-1;;;;;4419:47:156;;;;;;:59;;4467:10;;4419:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4419:59:156;;;;;;;;-1:-1:-1;;4419:59:156;;;;;;;;;;;;:::i;:::-;;;4415:448;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;1133:173:132;:::o;4415:448:156:-;4538:12;4537:13;4529:36;;;;-1:-1:-1;;;4529:36:156;;;;;;;:::i;:::-;4600:20;;4592:59;;-1:-1:-1;;;4592:59:156;;-1:-1:-1;;;;;4592:47:156;;;;;;:59;;4640:10;;4592:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4592:59:156;;;;;;;;-1:-1:-1;;4592:59:156;;;;;;;;;;;;:::i;:::-;;;4588:218;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;3255:271:133;;:::o;4588:218:156:-;4716:13;4715:14;4707:37;;;;-1:-1:-1;;;4707:37:156;;;;;;;:::i;2085:729:157:-;2231:15;2211:6;:16;;;:35;;;;;;;;:::i;:::-;;2207:601;;;2262:215;2327:6;:20;;;2365:5;2388:3;2409:6;:18;;;2445;2262:47;:215::i;2207:601::-;2518:16;2498:6;:16;;;:36;;;;;;;;:::i;:::-;;2494:314;;;2558:20;;2609:14;;;;;2550:74;;-1:-1:-1;;;2550:74:157;;-1:-1:-1;;;;;2550:46:157;;;;;;:74;;2597:5;;2604:3;;2550:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:208:32;;;:::o;2494:314:157:-;2665:17;2645:6;:16;;;:37;;;;;;;;:::i;:::-;;2641:167;;;2707:20;;2758:14;;;;;2774:18;;;;2698:99;;-1:-1:-1;;;2698:99:157;;-1:-1:-1;;;;;30208:15:641;;;2698:99:157;;;30190:34:641;30260:15;;;30240:18;;;30233:43;30292:18;;;30285:34;;;;30335:18;;;30328:34;;;;30170:3;30378:19;;;30371:32;-1:-1:-1;30419:19:641;;;30412:30;2698:47:157;;;;;;30459:19:641;;2698:99:157;29857:627:641;7529:692:281;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;1742:476:149:-;1987:34;-1:-1:-1;;;;;;;;;;;2018:1:149;1987:7;:34::i;:::-;1986:35;:57;;;;-1:-1:-1;;;;;;2025:18:149;;;;1986:57;:77;;;;-1:-1:-1;;;;;;2047:16:149;;;;1986:77;1982:230;;;2084:28;-1:-1:-1;;;;;;;;;;;2107:4:149;2084:7;:28::i;:::-;2083:29;:60;;;;;2117:26;-1:-1:-1;;;;;;;;;;;2140:2:149;2117:7;:26::i;:::-;2116:27;2083:60;2079:123;;;2163:24;;-1:-1:-1;;;2163:24:149;;30691:2:641;2163:24:149;;;30673:21:641;30730:2;30710:18;;;30703:30;-1:-1:-1;;;30749:18:641;;;30742:44;30803:18;;2163:24:149;30489:338:641;968:1021:277;1167:12;1163:49;;1195:7;;1163:49;-1:-1:-1;;;;;1226:25:277;;397:42;1226:25;1222:761;;;-1:-1:-1;;;;;1271:22:277;;1288:4;1271:22;1267:626;;;1401:44;;-1:-1:-1;;;1401:44:277;;;;;4690:25:641;;;-1:-1:-1;;;;;1401:35:277;;;;;4663:18:641;;1401:44:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:69;1498:3;1503:7;1512:19;1463:34;:69::i;:::-;1222:761;;1267:626;-1:-1:-1;;;;;1557:20:277;;1572:4;1557:20;1553:340;;;1665:9;1654:7;:20;1646:52;;;;-1:-1:-1;;;1646:52:277;;31034:2:641;1646:52:277;;;31016:21:641;31073:2;31053:18;;;31046:30;-1:-1:-1;;;31092:18:641;;;31085:49;31151:18;;1646:52:277;30832:343:641;1646:52:277;1722:19;-1:-1:-1;;;;;1716:34:277;;1759:7;1716:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:761;;1553:340;1809:69;1844:3;1849:7;1858:19;1809:34;:69::i;1222:761::-;1923:49;1941:9;1952:5;1959:3;1964:7;1923:17;:49::i;2905:469::-;3157:12;3175:2;-1:-1:-1;;;;;3175:7:277;3191:5;3175:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:46;;;3217:7;3212:156;;3246:19;-1:-1:-1;;;;;3240:34:277;;3283:5;3240:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3306:51:277;;-1:-1:-1;;;;;;;;3306:40:277;;;-1:-1:-1;3347:2:277;3351:5;3306:40;:51::i;2062:396::-;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;:::-;2269:183;;;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1078:96;1098:5;1128:27;;;1157:4;1163:2;1167:5;1105:68;;;;;;;;;;:::i;3235:706::-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;31592:2:641;3839:85:321;;;31574:21:641;31631:2;31611:18;;;31604:30;31670:34;31650:18;;;31643:62;-1:-1:-1;;;31721:18:641;;;31714:40;31771:19;;3839:85:321;31390:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;32410:2:641;5194:60:281;;;32392:21:641;32449:2;32429:18;;;32422:30;32488:31;32468:18;;;32461:59;32537:18;;5194:60:281;32208:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;;88:32:641;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:641;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:641;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:641:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:641;;1343:180;-1:-1:-1;1343:180:641:o;1528:203::-;-1:-1:-1;;;;;1692:32:641;;;;1674:51;;1662:2;1647:18;;1528:203::o;1736:131::-;-1:-1:-1;;;;;1811:31:641;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:134;1940:20;;1969:31;1940:20;1969:31;:::i;:::-;1872:134;;;:::o;2011:315::-;2079:6;2087;2140:2;2128:9;2119:7;2115:23;2111:32;2108:52;;;2156:1;2153;2146:12;2108:52;2195:9;2182:23;2214:31;2239:5;2214:31;:::i;:::-;2264:5;2316:2;2301:18;;;;2288:32;;-1:-1:-1;;;2011:315:641:o;2331:247::-;2390:6;2443:2;2431:9;2422:7;2418:23;2414:32;2411:52;;;2459:1;2456;2449:12;2411:52;2498:9;2485:23;2517:31;2542:5;2517:31;:::i;2583:127::-;2644:10;2639:3;2635:20;2632:1;2625:31;2675:4;2672:1;2665:15;2699:4;2696:1;2689:15;2715:249;2825:2;2806:13;;-1:-1:-1;;2802:27:641;2790:40;;-1:-1:-1;;;;;2845:34:641;;2881:22;;;2842:62;2839:88;;;2907:18;;:::i;:::-;2943:2;2936:22;-1:-1:-1;;2715:249:641:o;2969:468::-;3033:5;-1:-1:-1;;;;;3059:6:641;3056:30;3053:56;;;3089:18;;:::i;:::-;3138:2;3132:9;3150:69;3207:2;3186:15;;-1:-1:-1;;3182:29:641;3213:4;3178:40;3132:9;3150:69;:::i;:::-;3237:6;3228:15;;3267:6;3259;3252:22;3307:3;3298:6;3293:3;3289:16;3286:25;3283:45;;;3324:1;3321;3314:12;3283:45;3374:6;3369:3;3362:4;3354:6;3350:17;3337:44;3429:1;3422:4;3413:6;3405;3401:19;3397:30;3390:41;;2969:468;;;;;:::o;3442:220::-;3484:5;3537:3;3530:4;3522:6;3518:17;3514:27;3504:55;;3555:1;3552;3545:12;3504:55;3577:79;3652:3;3643:6;3630:20;3623:4;3615:6;3611:17;3577:79;:::i;3667:665::-;3762:6;3770;3778;3786;3839:3;3827:9;3818:7;3814:23;3810:33;3807:53;;;3856:1;3853;3846:12;3807:53;3895:9;3882:23;3914:31;3939:5;3914:31;:::i;:::-;3964:5;-1:-1:-1;4021:2:641;4006:18;;3993:32;4034:33;3993:32;4034:33;:::i;:::-;4086:7;-1:-1:-1;4140:2:641;4125:18;;4112:32;;-1:-1:-1;4195:2:641;4180:18;;4167:32;-1:-1:-1;;;;;4211:30:641;;4208:50;;;4254:1;4251;4244:12;4208:50;4277:49;4318:7;4309:6;4298:9;4294:22;4277:49;:::i;:::-;4267:59;;;3667:665;;;;;;;:::o;4726:248::-;4794:6;4802;4855:2;4843:9;4834:7;4830:23;4826:32;4823:52;;;4871:1;4868;4861:12;4823:52;-1:-1:-1;;4894:23:641;;;4964:2;4949:18;;;4936:32;;-1:-1:-1;4726:248:641:o;4979:127::-;5040:10;5035:3;5031:20;5028:1;5021:31;5071:4;5068:1;5061:15;5095:4;5092:1;5085:15;5111:237;5192:1;5185:5;5182:12;5172:143;;5237:10;5232:3;5228:20;5225:1;5218:31;5272:4;5269:1;5262:15;5300:4;5297:1;5290:15;5172:143;5324:18;;5111:237::o;5353:508::-;5570:13;;-1:-1:-1;;;;;5566:39:641;5548:58;;5653:4;5641:17;;;5635:24;5535:3;5520:19;;;5668:61;;5708:20;;5635:24;5668:61;:::i;:::-;;5785:4;5777:6;5773:17;5767:24;5760:4;5749:9;5745:20;5738:54;5848:4;5840:6;5836:17;5830:24;5823:4;5812:9;5808:20;5801:54;5353:508;;;;:::o;6048:456::-;6125:6;6133;6141;6194:2;6182:9;6173:7;6169:23;6165:32;6162:52;;;6210:1;6207;6200:12;6162:52;6249:9;6236:23;6268:31;6293:5;6268:31;:::i;:::-;6318:5;-1:-1:-1;6375:2:641;6360:18;;6347:32;6388:33;6347:32;6388:33;:::i;:::-;6048:456;;6440:7;;-1:-1:-1;;;6494:2:641;6479:18;;;;6466:32;;6048:456::o;6694:348::-;6746:8;6756:6;6810:3;6803:4;6795:6;6791:17;6787:27;6777:55;;6828:1;6825;6818:12;6777:55;-1:-1:-1;6851:20:641;;-1:-1:-1;;;;;6883:30:641;;6880:50;;;6926:1;6923;6916:12;6880:50;6963:4;6955:6;6951:17;6939:29;;7015:3;7008:4;6999:6;6991;6987:19;6983:30;6980:39;6977:59;;;7032:1;7029;7022:12;6977:59;6694:348;;;;;:::o;7047:1010::-;7189:6;7197;7205;7213;7221;7274:2;7262:9;7253:7;7249:23;7245:32;7242:52;;;7290:1;7287;7280:12;7242:52;7330:9;7317:23;-1:-1:-1;;;;;7400:2:641;7392:6;7389:14;7386:34;;;7416:1;7413;7406:12;7386:34;7454:6;7443:9;7439:22;7429:32;;7499:7;7492:4;7488:2;7484:13;7480:27;7470:55;;7521:1;7518;7511:12;7470:55;7561:2;7548:16;7587:2;7579:6;7576:14;7573:34;;;7603:1;7600;7593:12;7573:34;7658:7;7651:4;7641:6;7638:1;7634:14;7630:2;7626:23;7622:34;7619:47;7616:67;;;7679:1;7676;7669:12;7616:67;7710:4;7702:13;;;;-1:-1:-1;7734:6:641;-1:-1:-1;7778:20:641;;;7765:34;;7811:16;;;7808:36;;;7840:1;7837;7830:12;7808:36;;7879:61;7932:7;7921:8;7910:9;7906:24;7879:61;:::i;:::-;7959:8;;-1:-1:-1;7853:87:641;-1:-1:-1;8013:38:641;;-1:-1:-1;8047:2:641;8032:18;;8013:38;:::i;:::-;8003:48;;7047:1010;;;;;;;;:::o;8062:274::-;-1:-1:-1;;;;;8254:32:641;;;;8236:51;;8318:2;8303:18;;8296:34;8224:2;8209:18;;8062:274::o;8341:315::-;8409:6;8417;8470:2;8458:9;8449:7;8445:23;8441:32;8438:52;;;8486:1;8483;8476:12;8438:52;8522:9;8509:23;8499:33;;8582:2;8571:9;8567:18;8554:32;8595:31;8620:5;8595:31;:::i;:::-;8645:5;8635:15;;;8341:315;;;;;:::o;8661:118::-;8747:5;8740:13;8733:21;8726:5;8723:32;8713:60;;8769:1;8766;8759:12;8784:241;8840:6;8893:2;8881:9;8872:7;8868:23;8864:32;8861:52;;;8909:1;8906;8899:12;8861:52;8948:9;8935:23;8967:28;8989:5;8967:28;:::i;10134:450::-;10203:6;10256:2;10244:9;10235:7;10231:23;10227:32;10224:52;;;10272:1;10269;10262:12;10224:52;10312:9;10299:23;-1:-1:-1;;;;;10337:6:641;10334:30;10331:50;;;10377:1;10374;10367:12;10331:50;10400:22;;10453:4;10445:13;;10441:27;-1:-1:-1;10431:55:641;;10482:1;10479;10472:12;10431:55;10505:73;10570:7;10565:2;10552:16;10547:2;10543;10539:11;10505:73;:::i;10589:383::-;10666:6;10674;10682;10735:2;10723:9;10714:7;10710:23;10706:32;10703:52;;;10751:1;10748;10741:12;10703:52;10787:9;10774:23;10764:33;;10847:2;10836:9;10832:18;10819:32;10860:31;10885:5;10860:31;:::i;10977:382::-;11042:6;11050;11103:2;11091:9;11082:7;11078:23;11074:32;11071:52;;;11119:1;11116;11109:12;11071:52;11158:9;11145:23;11177:31;11202:5;11177:31;:::i;:::-;11227:5;-1:-1:-1;11284:2:641;11269:18;;11256:32;11297:30;11256:32;11297:30;:::i;11364:626::-;11461:6;11469;11522:2;11510:9;11501:7;11497:23;11493:32;11490:52;;;11538:1;11535;11528:12;11490:52;11578:9;11565:23;-1:-1:-1;;;;;11648:2:641;11640:6;11637:14;11634:34;;;11664:1;11661;11654:12;11634:34;11702:6;11691:9;11687:22;11677:32;;11747:7;11740:4;11736:2;11732:13;11728:27;11718:55;;11769:1;11766;11759:12;11718:55;11809:2;11796:16;11835:2;11827:6;11824:14;11821:34;;;11851:1;11848;11841:12;11821:34;11904:7;11899:2;11889:6;11886:1;11882:14;11878:2;11874:23;11870:32;11867:45;11864:65;;;11925:1;11922;11915:12;11864:65;11956:2;11948:11;;;;;11978:6;;-1:-1:-1;11364:626:641;;-1:-1:-1;;;;11364:626:641:o;11995:801::-;12155:4;12184:2;12224;12213:9;12209:18;12254:2;12243:9;12236:21;12277:6;12312;12306:13;12343:6;12335;12328:22;12381:2;12370:9;12366:18;12359:25;;12443:2;12433:6;12430:1;12426:14;12415:9;12411:30;12407:39;12393:53;;12481:2;12473:6;12469:15;12502:1;12512:255;12526:6;12523:1;12520:13;12512:255;;;12619:2;12615:7;12603:9;12595:6;12591:22;12587:36;12582:3;12575:49;12647:40;12680:6;12671;12665:13;12647:40;:::i;:::-;12637:50;-1:-1:-1;12745:12:641;;;;12710:15;;;;12548:1;12541:9;12512:255;;;-1:-1:-1;12784:6:641;;11995:801;-1:-1:-1;;;;;;;11995:801:641:o;12801:753::-;12855:5;12908:3;12901:4;12893:6;12889:17;12885:27;12875:55;;12926:1;12923;12916:12;12875:55;12962:6;12949:20;12988:4;-1:-1:-1;;;;;13007:2:641;13004:26;13001:52;;;13033:18;;:::i;:::-;13079:2;13076:1;13072:10;13111:2;13105:9;13123:40;13159:2;13155;13151:11;13143:6;13123:40;:::i;:::-;13198:18;;;13274:15;;;13270:24;;;13232:15;;;13306;;;13303:35;;;13334:1;13331;13324:12;13303:35;13370:2;13362:6;13358:15;13347:26;;13382:142;13398:6;13393:3;13390:15;13382:142;;;13464:17;;13452:30;;13415:12;;;;13502;;13382:142;;;-1:-1:-1;13542:6:641;12801:753;-1:-1:-1;;;;;;12801:753:641:o;13559:1071::-;13713:6;13721;13729;13737;13745;13798:3;13786:9;13777:7;13773:23;13769:33;13766:53;;;13815:1;13812;13805:12;13766:53;13854:9;13841:23;13873:31;13898:5;13873:31;:::i;:::-;13923:5;-1:-1:-1;13980:2:641;13965:18;;13952:32;13993:33;13952:32;13993:33;:::i;:::-;14045:7;-1:-1:-1;14103:2:641;14088:18;;14075:32;-1:-1:-1;;;;;14156:14:641;;;14153:34;;;14183:1;14180;14173:12;14153:34;14206:61;14259:7;14250:6;14239:9;14235:22;14206:61;:::i;:::-;14196:71;;14320:2;14309:9;14305:18;14292:32;14276:48;;14349:2;14339:8;14336:16;14333:36;;;14365:1;14362;14355:12;14333:36;14388:63;14443:7;14432:8;14421:9;14417:24;14388:63;:::i;:::-;14378:73;;14504:3;14493:9;14489:19;14476:33;14460:49;;14534:2;14524:8;14521:16;14518:36;;;14550:1;14547;14540:12;14518:36;;14573:51;14616:7;14605:8;14594:9;14590:24;14573:51;:::i;:::-;14563:61;;;13559:1071;;;;;;;;:::o;14635:388::-;14703:6;14711;14764:2;14752:9;14743:7;14739:23;14735:32;14732:52;;;14780:1;14777;14770:12;14732:52;14819:9;14806:23;14838:31;14863:5;14838:31;:::i;:::-;14888:5;-1:-1:-1;14945:2:641;14930:18;;14917:32;14958:33;14917:32;14958:33;:::i;15028:734::-;15132:6;15140;15148;15156;15164;15217:3;15205:9;15196:7;15192:23;15188:33;15185:53;;;15234:1;15231;15224:12;15185:53;15273:9;15260:23;15292:31;15317:5;15292:31;:::i;:::-;15342:5;-1:-1:-1;15399:2:641;15384:18;;15371:32;15412:33;15371:32;15412:33;:::i;:::-;15464:7;-1:-1:-1;15518:2:641;15503:18;;15490:32;;-1:-1:-1;15569:2:641;15554:18;;15541:32;;-1:-1:-1;15624:3:641;15609:19;;15596:33;-1:-1:-1;;;;;15641:30:641;;15638:50;;;15684:1;15681;15674:12;15638:50;15707:49;15748:7;15739:6;15728:9;15724:22;15707:49;:::i;15767:380::-;15846:1;15842:12;;;;15889;;;15910:61;;15964:4;15956:6;15952:17;15942:27;;15910:61;16017:2;16009:6;16006:14;15986:18;15983:38;15980:161;;;16063:10;16058:3;16054:20;16051:1;16044:31;16098:4;16095:1;16088:15;16126:4;16123:1;16116:15;16152:338;16354:2;16336:21;;;16393:2;16373:18;;;16366:30;-1:-1:-1;;;16427:2:641;16412:18;;16405:44;16481:2;16466:18;;16152:338::o;16495:127::-;16556:10;16551:3;16547:20;16544:1;16537:31;16587:4;16584:1;16577:15;16611:4;16608:1;16601:15;16627:127;16688:10;16683:3;16679:20;16676:1;16669:31;16719:4;16716:1;16709:15;16743:4;16740:1;16733:15;16759:128;16799:3;16830:1;16826:6;16823:1;16820:13;16817:39;;;16836:18;;:::i;:::-;-1:-1:-1;16872:9:641;;16759:128::o;16892:108::-;16974:1;16967:5;16964:12;16954:40;;16990:1;16987;16980:12;17005:1129;17236:2;17288:21;;;17261:18;;;17344:22;;;17207:4;;17385:2;17403:18;;;17444:6;17207:4;17478:630;17492:6;17489:1;17486:13;17478:630;;;17567:6;17554:20;17587:31;17612:5;17587:31;:::i;:::-;-1:-1:-1;;;;;17643:31:641;17631:44;;17716:15;;;17703:29;17745:40;17703:29;17745:40;:::i;:::-;17798:48;17842:2;17837:3;17833:12;17824:7;17798:48;:::i;:::-;-1:-1:-1;17893:15:641;;;17880:29;17866:12;;;17859:51;17933:4;17984:15;;;17971:29;17957:12;;;17950:51;18024:4;18048:12;;;;18083:15;;;;17514:1;17507:9;17478:630;;;-1:-1:-1;18125:3:641;;17005:1129;-1:-1:-1;;;;;;;17005:1129:641:o;18139:168::-;18179:7;18245:1;18241;18237:6;18233:14;18230:1;18227:21;18222:1;18215:9;18208:17;18204:45;18201:71;;;18252:18;;:::i;:::-;-1:-1:-1;18292:9:641;;18139:168::o;18312:217::-;18352:1;18378;18368:132;;18422:10;18417:3;18413:20;18410:1;18403:31;18457:4;18454:1;18447:15;18485:4;18482:1;18475:15;18368:132;-1:-1:-1;18514:9:641;;18312:217::o;20817:521::-;20894:4;20900:6;20960:11;20947:25;21054:2;21050:7;21039:8;21023:14;21019:29;21015:43;20995:18;20991:68;20981:96;;21073:1;21070;21063:12;20981:96;21100:33;;21152:20;;;-1:-1:-1;;;;;;21184:30:641;;21181:50;;;21227:1;21224;21217:12;21181:50;21260:4;21248:17;;-1:-1:-1;21291:14:641;21287:27;;;21277:38;;21274:58;;;21328:1;21325;21318:12;21343:135;21382:3;-1:-1:-1;;21403:17:641;;21400:43;;;21423:18;;:::i;:::-;-1:-1:-1;21470:1:641;21459:13;;21343:135::o;21483:136::-;21522:3;21550:5;21540:39;;21559:18;;:::i;:::-;-1:-1:-1;;;21595:18:641;;21483:136::o;21985:304::-;-1:-1:-1;;;;;22215:15:641;;;22197:34;;22267:15;;22262:2;22247:18;;22240:43;22147:2;22132:18;;21985:304::o;22294:245::-;22361:6;22414:2;22402:9;22393:7;22389:23;22385:32;22382:52;;;22430:1;22427;22420:12;22382:52;22462:9;22456:16;22481:28;22503:5;22481:28;:::i;22544:784::-;-1:-1:-1;;;22950:3:641;22943:36;22925:3;23008:6;23002:13;23024:62;23079:6;23074:2;23069:3;23065:12;23058:4;23050:6;23046:17;23024:62;:::i;:::-;-1:-1:-1;;;23145:2:641;23105:16;;;23137:11;;;23130:40;23195:13;;23217:63;23195:13;23266:2;23258:11;;23251:4;23239:17;;23217:63;:::i;:::-;23300:17;23319:2;23296:26;;22544:784;-1:-1:-1;;;;22544:784:641:o;23333:::-;23416:6;23469:3;23457:9;23448:7;23444:23;23440:33;23437:53;;;23486:1;23483;23476:12;23437:53;23519:2;23513:9;23561:3;23553:6;23549:16;23631:6;23619:10;23616:22;-1:-1:-1;;;;;23583:10:641;23580:34;23577:62;23574:88;;;23642:18;;:::i;:::-;23678:2;23671:22;23715:23;;23747:31;23715:23;23747:31;:::i;:::-;23787:21;;23860:2;23845:18;;23832:32;23873:40;23832:32;23873:40;:::i;:::-;23941:2;23929:15;;23922:32;24015:2;24000:18;;;23987:32;23970:15;;;23963:57;24081:2;24066:18;;;24053:32;24036:15;;;24029:57;;;;-1:-1:-1;23933:6:641;23333:784;-1:-1:-1;23333:784:641:o;24122:339::-;24324:2;24306:21;;;24363:2;24343:18;;;24336:30;-1:-1:-1;;;24397:2:641;24382:18;;24375:45;24452:2;24437:18;;24122:339::o;24466:383::-;24663:2;24652:9;24645:21;24626:4;24689:45;24730:2;24719:9;24715:18;24707:6;24689:45;:::i;:::-;24782:9;24774:6;24770:22;24765:2;24754:9;24750:18;24743:50;24810:33;24836:6;24828;24810:33;:::i;:::-;24802:41;24466:383;-1:-1:-1;;;;;24466:383:641:o;25526:843::-;25689:5;25676:19;25704:33;25729:7;25704:33;:::i;:::-;25808:11;;-1:-1:-1;;;;;;25844:33:641;;-1:-1:-1;;;;;25756:33:641;;;;25841:41;;;25828:55;;25931:2;25920:14;;25907:28;25944:40;25907:28;25944:40;:::i;:::-;26015:1;26006:7;26003:14;25993:145;;26060:10;26055:3;26051:20;26048:1;26041:31;26095:4;26092:1;26085:15;26123:4;26120:1;26113:15;25993:145;-1:-1:-1;;;;;;26166:33:641;;;;26163:41;;;26233:3;26210:17;;;;-1:-1:-1;;;26206:37:641;26160:84;26147:98;;26299:2;26288:14;;26275:28;26195:1;26261:12;;26254:50;26358:2;26347:14;;;26334:28;26330:1;26320:12;;;26313:50;25526:843::o;26781:274::-;26910:3;26948:6;26942:13;26964:53;27010:6;27005:3;26998:4;26990:6;26986:17;26964:53;:::i;:::-;27033:16;;;;;26781:274;-1:-1:-1;;26781:274:641:o;27060:489::-;-1:-1:-1;;;;;27329:15:641;;;27311:34;;27381:15;;27376:2;27361:18;;27354:43;27428:2;27413:18;;27406:34;;;27476:3;27471:2;27456:18;;27449:31;;;27254:4;;27497:46;;27523:19;;27515:6;27497:46;:::i;27554:249::-;27623:6;27676:2;27664:9;27655:7;27651:23;27647:32;27644:52;;;27692:1;27689;27682:12;27644:52;27724:9;27718:16;27743:30;27767:5;27743:30;:::i;27808:230::-;28014:3;27992:16;;;;-1:-1:-1;;;;;;27988:43:641;27970:62;;27958:2;27943:18;;27808:230::o;28043:334::-;28245:2;28227:21;;;28284:2;28264:18;;;28257:30;-1:-1:-1;;;28318:2:641;28303:18;;28296:40;28368:2;28353:18;;28043:334::o;28617:179::-;28652:3;28694:1;28676:16;28673:23;28670:120;;;28740:1;28737;28734;28719:23;-1:-1:-1;28777:1:641;28771:8;28766:3;28762:18;28670:120;28617:179;:::o;28801:671::-;28840:3;28882:4;28864:16;28861:26;28858:39;;;28801:671;:::o;28858:39::-;28924:2;28918:9;-1:-1:-1;;28989:16:641;28985:25;;28982:1;28918:9;28961:50;29040:4;29034:11;29064:16;-1:-1:-1;;;;;29170:2:641;29163:4;29155:6;29151:17;29148:25;29143:2;29135:6;29132:14;29129:45;29126:58;;;29177:5;;;;;28801:671;:::o;29126:58::-;29214:6;29208:4;29204:17;29193:28;;29250:3;29244:10;29277:2;29269:6;29266:14;29263:27;;;29283:5;;;;;;28801:671;:::o;29263:27::-;29367:2;29348:16;29342:4;29338:27;29334:36;29327:4;29318:6;29313:3;29309:16;29305:27;29302:69;29299:82;;;29374:5;;;;;;28801:671;:::o;29299:82::-;29390:57;29441:4;29432:6;29424;29420:19;29416:30;29410:4;29390:57;:::i;:::-;-1:-1:-1;29463:3:641;;28801:671;-1:-1:-1;;;;;28801:671:641:o;29477:375::-;-1:-1:-1;;;;;29735:15:641;;;29717:34;;29787:15;;;;29782:2;29767:18;;29760:43;29834:2;29819:18;;29812:34;;;;29667:2;29652:18;;29477:375::o",
    "linkReferences": {},
    "immutableReferences": {
      "48878": [
        {
          "start": 12628,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "TRANSFER_ROLE()": "206b60f9",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "contractURI()": "e8a3d485",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getTokenCountOfBundle(uint256)": "d0d2fe25",
    "getTokenOfBundle(uint256,uint256)": "1da799c9",
    "getUriOfBundle(uint256)": "61195e94",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceRole(bytes32,address)": "36568abe",
    "restrictTransfers(bool)": "73fa563f",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unwrap(uint256,address)": "7647691d",
    "wrap((address,uint8,uint256,uint256)[],string,address)": "29e471dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedContents\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"}],\"name\":\"TokensWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"TransfersRestricted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getTokenCountOfBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenOfBundle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getUriOfBundle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_toRestrict\",\"type\":\"bool\"}],\"name\":\"restrictTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"_tokensToWrap\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"_uriForWrappedToken\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensUnwrapped(address,address,uint256)\":{\"details\":\"Emitted when tokens are unwrapped.\"},\"TokensWrapped(address,address,uint256,(address,uint8,uint256,uint256)[])\":{\"details\":\"Emitted when tokens are wrapped.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getTokenCountOfBundle(uint256)\":{\"details\":\"Returns the total number of assets in a particular bundle.\"},\"getTokenOfBundle(uint256,uint256)\":{\"details\":\"Returns an asset contained in a particular bundle, at a particular index.\"},\"getUriOfBundle(uint256)\":{\"details\":\"Returns the uri of a particular bundle.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"restrictTransfers(bool)\":{\"details\":\"Restricting transfers means revoking the TRANSFER_ROLE from address(0). Making                    transfers unrestricted means granting the TRANSFER_ROLE to address(0).\",\"params\":{\"_toRestrict\":\"Whether to restrict transfers or not.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC-165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"unwrap(uint256,address)\":{\"params\":{\"_recipient\":\"The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.\",\"_tokenId\":\"The token Id of the wrapped NFT to unwrap.\"}},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"params\":{\"_recipient\":\"The recipient of the wrapped NFT.\",\"_tokensToWrap\":\"The tokens to wrap.\",\"_uriForWrappedToken\":\"The metadata URI for the wrapped NFT.\"},\"returns\":{\"tokenId\":\"The tokenId of the wrapped NFT minted.\"}}},\"stateVariables\":{\"ASSET_ROLE\":{\"details\":\"Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted.\"},\"UNWRAP_ROLE\":{\"details\":\"Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"restrictTransfers(bool)\":{\"notice\":\"Restrict transfers of NFTs.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"unwrap(uint256,address)\":{\"notice\":\"Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\"},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"notice\":\"Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\"}},\"notice\":\"BASE:      ERC721Base      EXTENSION: TokenStore, SoulboundERC721A  The `ERC721Multiwrap` contract uses the `ERC721Base` contract, along with the `TokenStore` and   `SoulboundERC721A` extension.  The `ERC721Multiwrap` contract lets you wrap arbitrary ERC20, ERC721 and ERC1155 tokens you own  into a single wrapped token / NFT.  The `SoulboundERC721A` extension lets you make your NFTs 'soulbound' i.e. non-transferrable.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC721Multiwrap.sol\":\"ERC721Multiwrap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC721Multiwrap.sol\":{\"keccak256\":\"0xf9b3e60e39b80a4e6ee9a2be4278a268aa407ec9b248a3168383c91e69742de9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06ba41874ea0304a1d4527852218b1cf89e6ae3140089f27966b7ee40dc95bb3\",\"dweb:/ipfs/QmWE1cHSC6RrqfuB8Wba6u4BKgZRZUU995B6Xahmo1Vx3h\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/ERC721AVirtualApprove.sol\":{\"keccak256\":\"0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea\",\"dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd\",\"dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e\",\"dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/SoulboundERC721A.sol\":{\"keccak256\":\"0xe23685c794dd932c8c7a86f08a4079adac7fd337c9cd25cb2eac0f0958fa9f6e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c616e44ce604b2aea5125980d770121d2f7571f8e129576df2912dbb8b3a1b0f\",\"dweb:/ipfs/QmPdvAvFUyRmoFrRjpRdeWMtfx2EMnjt3sxArc3RdiT5Pa\"]},\"contracts/extension/TokenBundle.sol\":{\"keccak256\":\"0xf457f02c30d796787344439c52f7c8918336982c0cc28884a99b7f743c6d57d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f6d244618017f0a3e73a3f483437a888cca920091154974cede93e4ac249e533\",\"dweb:/ipfs/QmaNFGgEh8BfYKi2Bu9bV4x8X4wuZkwx4AgD8Zbz9bR4za\"]},\"contracts/extension/TokenStore.sol\":{\"keccak256\":\"0x9d15b9fd8535c1eed0ea085e2f790a2c42b4e19abcf74fb69bd5826afde00d42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dfcb1fb90100bb608d06dd6cc7beb38d89e5ad00bb4689b84cdf6c3549e27fb0\",\"dweb:/ipfs/QmS26ZgnMYiJiRyBAKFwzwr1Z2mE9mpRYxk9kvkomuqNAg\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ITokenBundle.sol\":{\"keccak256\":\"0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0\",\"dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/openzeppelin-presets/utils/ERC1155/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/openzeppelin-presets/utils/ERC1155/ERC1155Receiver.sol\":{\"keccak256\":\"0xdabf75d9dec73b2c1da466ad42695d00a3c534682fd69fc75571ea9bfb5b3835\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://44b524279bd30ff91797fe6b531b90b04b51c9ff14790fc25bd5c7ed4fc23ee4\",\"dweb:/ipfs/QmV7Gkf7j83uT16zc1AWHoPuQQwZPJ8vU9ifyZNS988sgV\"]},\"contracts/openzeppelin-presets/utils/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0x26b186d445e059d16641f8afb9d768e4c5adcd8bd64e85f729e9cde4d87a0a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d716cc89cf6de60dc50c90c28232956c3e386a2d4addf2c7ed7b6f001a837c26\",\"dweb:/ipfs/QmcHcFprGXSegA7y3T2t7qMZqX73EbntX2FaWB2rcJwqbC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedContents",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensUnwrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "wrappedContents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransfersRestricted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCountOfBundle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenOfBundle",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUriOfBundle",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_toRestrict",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restrictTransfers"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "_tokensToWrap",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "_uriForWrappedToken",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getTokenCountOfBundle(uint256)": {
            "details": "Returns the total number of assets in a particular bundle."
          },
          "getTokenOfBundle(uint256,uint256)": {
            "details": "Returns an asset contained in a particular bundle, at a particular index."
          },
          "getUriOfBundle(uint256)": {
            "details": "Returns the uri of a particular bundle."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "restrictTransfers(bool)": {
            "details": "Restricting transfers means revoking the TRANSFER_ROLE from address(0). Making                    transfers unrestricted means granting the TRANSFER_ROLE to address(0).",
            "params": {
              "_toRestrict": "Whether to restrict transfers or not."
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC-165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "unwrap(uint256,address)": {
            "params": {
              "_recipient": "The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.",
              "_tokenId": "The token Id of the wrapped NFT to unwrap."
            }
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "params": {
              "_recipient": "The recipient of the wrapped NFT.",
              "_tokensToWrap": "The tokens to wrap.",
              "_uriForWrappedToken": "The metadata URI for the wrapped NFT."
            },
            "returns": {
              "tokenId": "The tokenId of the wrapped NFT minted."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "restrictTransfers(bool)": {
            "notice": "Restrict transfers of NFTs."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "unwrap(uint256,address)": {
            "notice": "Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "notice": "Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC721Multiwrap.sol": "ERC721Multiwrap"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC721Multiwrap.sol": {
        "keccak256": "0xf9b3e60e39b80a4e6ee9a2be4278a268aa407ec9b248a3168383c91e69742de9",
        "urls": [
          "bzz-raw://06ba41874ea0304a1d4527852218b1cf89e6ae3140089f27966b7ee40dc95bb3",
          "dweb:/ipfs/QmWE1cHSC6RrqfuB8Wba6u4BKgZRZUU995B6Xahmo1Vx3h"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/ERC721AVirtualApprove.sol": {
        "keccak256": "0xe0e8f69caff529e6a79200c5aa62b407402e4198a325b1966078803ed1f83e10",
        "urls": [
          "bzz-raw://de48cf6e1690a78c72a234c944e8cbb062a1f1e22a9b9706f4c44ca8164f42ea",
          "dweb:/ipfs/QmY57TNb9QjxpLcM9fuU89o3C76jLw7BmkoZ2CqGgzxFAj"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0xbd2d5c15430a1428c354148f46472ada3b5fc741c5dfc095b29b21c31bc6733a",
        "urls": [
          "bzz-raw://5ed920e97d76272b856f6a61af2bd57037baa546cf8e37b52dd924103f0cf0bd",
          "dweb:/ipfs/QmWfgfUzpmF2Mcfwr7GFrDJPzYTUmUmg8DusFt9VLdrbVt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x07cd43aa984894eb75eeb89625b1473f32da42294cd9f122ca0730a5dfa661d5",
        "urls": [
          "bzz-raw://3e25985648a00dd2df05c827a819f21b30ad496ed0053a7c31aeab01666ec69e",
          "dweb:/ipfs/QmZt9RPr7hxV3txHhFp7Gt7eJsTda3yFfTTe23i3csRudf"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SoulboundERC721A.sol": {
        "keccak256": "0xe23685c794dd932c8c7a86f08a4079adac7fd337c9cd25cb2eac0f0958fa9f6e",
        "urls": [
          "bzz-raw://c616e44ce604b2aea5125980d770121d2f7571f8e129576df2912dbb8b3a1b0f",
          "dweb:/ipfs/QmPdvAvFUyRmoFrRjpRdeWMtfx2EMnjt3sxArc3RdiT5Pa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenBundle.sol": {
        "keccak256": "0xf457f02c30d796787344439c52f7c8918336982c0cc28884a99b7f743c6d57d9",
        "urls": [
          "bzz-raw://f6d244618017f0a3e73a3f483437a888cca920091154974cede93e4ac249e533",
          "dweb:/ipfs/QmaNFGgEh8BfYKi2Bu9bV4x8X4wuZkwx4AgD8Zbz9bR4za"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenStore.sol": {
        "keccak256": "0x9d15b9fd8535c1eed0ea085e2f790a2c42b4e19abcf74fb69bd5826afde00d42",
        "urls": [
          "bzz-raw://dfcb1fb90100bb608d06dd6cc7beb38d89e5ad00bb4689b84cdf6c3549e27fb0",
          "dweb:/ipfs/QmS26ZgnMYiJiRyBAKFwzwr1Z2mE9mpRYxk9kvkomuqNAg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ITokenBundle.sol": {
        "keccak256": "0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949",
        "urls": [
          "bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0",
          "dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/ERC1155/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/ERC1155/ERC1155Receiver.sol": {
        "keccak256": "0xdabf75d9dec73b2c1da466ad42695d00a3c534682fd69fc75571ea9bfb5b3835",
        "urls": [
          "bzz-raw://44b524279bd30ff91797fe6b531b90b04b51c9ff14790fc25bd5c7ed4fc23ee4",
          "dweb:/ipfs/QmV7Gkf7j83uT16zc1AWHoPuQQwZPJ8vU9ifyZNS988sgV"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/utils/ERC721/ERC721Holder.sol": {
        "keccak256": "0x26b186d445e059d16641f8afb9d768e4c5adcd8bd64e85f729e9cde4d87a0a99",
        "urls": [
          "bzz-raw://d716cc89cf6de60dc50c90c28232956c3e386a2d4addf2c7ed7b6f001a837c26",
          "dweb:/ipfs/QmcHcFprGXSegA7y3T2t7qMZqX73EbntX2FaWB2rcJwqbC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC721Multiwrap.sol",
    "id": 12776,
    "exportedSymbols": {
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFilterer": [
        34762
      ],
      "ERC1155Holder": [
        78877
      ],
      "ERC1155Receiver": [
        78911
      ],
      "ERC165": [
        26795
      ],
      "ERC721A": [
        29541
      ],
      "ERC721Holder": [
        78938
      ],
      "ERC721Multiwrap": [
        12775
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC1155": [
        31059
      ],
      "IERC1155Receiver": [
        31122
      ],
      "IERC165": [
        31146
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IERC721": [
        31422
      ],
      "IERC721Receiver": [
        31557
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IRoyalty": [
        50644
      ],
      "ITokenBundle": [
        51477
      ],
      "IWETH": [
        55699
      ],
      "Multicall": [
        37872
      ],
      "OperatorFilterer": [
        38148
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "SoulboundERC721A": [
        41498
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ],
      "TokenBundle": [
        48858
      ],
      "TokenStore": [
        49141
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10769:32",
    "nodes": [
      {
        "id": 12180,
        "nodeType": "PragmaDirective",
        "src": "39:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 12182,
        "nodeType": "ImportDirective",
        "src": "86:59:32",
        "nodes": [],
        "absolutePath": "contracts/eip/ERC721AVirtualApprove.sol",
        "file": "../eip/ERC721AVirtualApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 29542,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12181,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29541,
              "src": "95:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721A_$29541_$",
                "typeString": "type(contract ERC721A)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12183,
        "nodeType": "ImportDirective",
        "src": "147:43:32",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12184,
        "nodeType": "ImportDirective",
        "src": "191:34:32",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12185,
        "nodeType": "ImportDirective",
        "src": "226:34:32",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12186,
        "nodeType": "ImportDirective",
        "src": "261:43:32",
        "nodes": [],
        "absolutePath": "contracts/extension/SoulboundERC721A.sol",
        "file": "../extension/SoulboundERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 41499,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12187,
        "nodeType": "ImportDirective",
        "src": "305:37:32",
        "nodes": [],
        "absolutePath": "contracts/extension/TokenStore.sol",
        "file": "../extension/TokenStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 49142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12188,
        "nodeType": "ImportDirective",
        "src": "343:36:32",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12189,
        "nodeType": "ImportDirective",
        "src": "380:50:32",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFilterer.sol",
        "file": "../extension/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12776,
        "sourceUnit": 34763,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12775,
        "nodeType": "ContractDefinition",
        "src": "901:9906:32",
        "nodes": [
          {
            "id": 12212,
            "nodeType": "VariableDeclaration",
            "src": "1345:63:32",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 12207,
              "nodeType": "StructuredDocumentation",
              "src": "1261:79:32",
              "text": "@dev Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1370:11:32",
            "scope": 12775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12208,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1345:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 12210,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1394:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 12209,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1384:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12211,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1384:24:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12218,
            "nodeType": "VariableDeclaration",
            "src": "1502:63:32",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 12213,
              "nodeType": "StructuredDocumentation",
              "src": "1414:83:32",
              "text": "@dev Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted."
            },
            "mutability": "constant",
            "name": "UNWRAP_ROLE",
            "nameLocation": "1527:11:32",
            "scope": 12775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12214,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1502:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "554e575241505f524f4c45",
                  "id": 12216,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1551:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  },
                  "value": "UNWRAP_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  }
                ],
                "id": 12215,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1541:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12217,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1541:24:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12224,
            "nodeType": "VariableDeclaration",
            "src": "1678:61:32",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 12219,
              "nodeType": "StructuredDocumentation",
              "src": "1571:102:32",
              "text": "@dev Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets."
            },
            "mutability": "constant",
            "name": "ASSET_ROLE",
            "nameLocation": "1703:10:32",
            "scope": 12775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12220,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1678:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41535345545f524f4c45",
                  "id": 12222,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1726:12:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  },
                  "value": "ASSET_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  }
                ],
                "id": 12221,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1716:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12223,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1716:23:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12237,
            "nodeType": "EventDefinition",
            "src": "1970:188:32",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12225,
              "nodeType": "StructuredDocumentation",
              "src": "1924:41:32",
              "text": "@dev Emitted when tokens are wrapped."
            },
            "name": "TokensWrapped",
            "nameLocation": "1976:13:32",
            "parameters": {
              "id": 12236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12227,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wrapper",
                  "nameLocation": "2015:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "1999:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12229,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedToken",
                  "nameLocation": "2048:23:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2032:39:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12231,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "2097:21:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2081:37:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wrappedContents",
                  "nameLocation": "2136:15:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2128:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12233,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12232,
                        "name": "Token",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51466,
                        "src": "2128:5:32"
                      },
                      "referencedDeclaration": 51466,
                      "src": "2128:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$51466_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 12234,
                    "nodeType": "ArrayTypeName",
                    "src": "2128:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$51466_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:168:32"
            }
          },
          {
            "id": 12246,
            "nodeType": "EventDefinition",
            "src": "2212:162:32",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 12238,
              "nodeType": "StructuredDocumentation",
              "src": "2164:43:32",
              "text": "@dev Emitted when tokens are unwrapped."
            },
            "name": "TokensUnwrapped",
            "nameLocation": "2218:15:32",
            "parameters": {
              "id": 12245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12240,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "unwrapper",
                  "nameLocation": "2259:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12246,
                  "src": "2243:25:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2243:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12242,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedContents",
                  "nameLocation": "2294:26:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12246,
                  "src": "2278:42:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12244,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "2346:21:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12246,
                  "src": "2330:37:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2233:140:32"
            }
          },
          {
            "id": 12259,
            "nodeType": "ModifierDefinition",
            "src": "2660:108:32",
            "nodes": [],
            "body": {
              "id": 12258,
              "nodeType": "Block",
              "src": "2702:66:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12252,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12249,
                        "src": "2733:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 12253,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2739:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2739:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12251,
                      "name": "_checkRoleWithSwitch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38746,
                      "src": "2712:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) view"
                      }
                    },
                    "id": 12255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:38:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12256,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:38:32"
                },
                {
                  "id": 12257,
                  "nodeType": "PlaceholderStatement",
                  "src": "2760:1:32"
                }
              ]
            },
            "documentation": {
              "id": 12247,
              "nodeType": "StructuredDocumentation",
              "src": "2558:97:32",
              "text": "@notice Checks whether the caller holds `role`, when restrictions for `role` are switched on."
            },
            "name": "onlyRoleWithSwitch",
            "nameLocation": "2669:18:32",
            "parameters": {
              "id": 12250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12249,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2696:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12259,
                  "src": "2688:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:14:32"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12330,
            "nodeType": "FunctionDefinition",
            "src": "2953:693:32",
            "nodes": [],
            "body": {
              "id": 12329,
              "nodeType": "Block",
              "src": "3219:427:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12282,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12261,
                        "src": "3241:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12281,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "3229:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3229:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12284,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:26:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12286,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12267,
                        "src": "3290:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12287,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12269,
                        "src": "3309:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 12285,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "3265:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3265:56:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12289,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 12291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12290,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37988,
                      "src": "3331:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 12292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:29:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12293,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:29:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12295,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3382:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 12296,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12261,
                        "src": "3402:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12294,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3371:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:45:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12298,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:45:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12300,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12212,
                        "src": "3437:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 12301,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12261,
                        "src": "3450:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12299,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3426:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:38:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12303,
                  "nodeType": "ExpressionStatement",
                  "src": "3426:38:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12305,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41406,
                        "src": "3485:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 12306,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12261,
                        "src": "3500:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12304,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3474:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:40:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12308,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:40:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12310,
                        "name": "ASSET_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12224,
                        "src": "3536:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3556:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3548:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3548:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3548:10:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12309,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3525:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12316,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12318,
                        "name": "UNWRAP_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12218,
                        "src": "3580:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3601:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 12320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3593:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3593:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3593:10:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12317,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3569:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:35:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12324,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:35:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 12326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3633:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12325,
                      "name": "restrictTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41437,
                      "src": "3615:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 12327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3615:24:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12328,
                  "nodeType": "ExpressionStatement",
                  "src": "3615:24:32"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12274,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12263,
                    "src": "3171:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 12275,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12265,
                    "src": "3178:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 12276,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12273,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "3163:7:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "3163:23:32"
              },
              {
                "arguments": [
                  {
                    "id": 12278,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12271,
                    "src": "3198:19:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12279,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12277,
                  "name": "TokenStore",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49141,
                  "src": "3187:10:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:31:32"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12261,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2982:13:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "2974:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12263,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3019:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "3005:19:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12262,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12265,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3048:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "3034:21:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3034:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12267,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3073:17:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "3065:25:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12269,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3108:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "3100:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 12268,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12271,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "3137:19:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12330,
                  "src": "3129:27:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:198:32"
            },
            "returnParameters": {
              "id": 12280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12374,
            "nodeType": "FunctionDefinition",
            "src": "3864:622:32",
            "nodes": [],
            "body": {
              "id": 12373,
              "nodeType": "Block",
              "src": "4034:452:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 12364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 12353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 12349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 12344,
                                  "name": "interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12333,
                                  "src": "4087:11:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 12342,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -25,
                                  "src": "4063:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                                    "typeString": "type(contract super ERC721Multiwrap)"
                                  }
                                },
                                "id": 12343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "supportsInterface",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28306,
                                "src": "4063:23:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 12345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4063:36:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 12348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 12346,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12333,
                                "src": "4115:11:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30783031666663396137",
                                "id": 12347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4130:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_33540519_by_1",
                                  "typeString": "int_const 33540519"
                                },
                                "value": "0x01ffc9a7"
                              },
                              "src": "4115:25:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4063:77:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 12352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12350,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12333,
                              "src": "4190:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783830616335386364",
                              "id": 12351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4205:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2158778573_by_1",
                                "typeString": "int_const 2158778573"
                              },
                              "value": "0x80ac58cd"
                            },
                            "src": "4190:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4063:152:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 12356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12354,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12333,
                            "src": "4265:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783562356531333966",
                            "id": 12355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4280:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1532892063_by_1",
                              "typeString": "int_const 1532892063"
                            },
                            "value": "0x5b5e139f"
                          },
                          "src": "4265:25:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4063:227:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 12363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12358,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12333,
                          "src": "4348:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 12360,
                                "name": "IERC2981",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31290,
                                "src": "4368:8:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                  "typeString": "type(contract IERC2981)"
                                }
                              ],
                              "id": 12359,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4363:4:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 12361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4363:14:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$31290",
                              "typeString": "type(contract IERC2981)"
                            }
                          },
                          "id": 12362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4363:26:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4348:41:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4063:326:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 12370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12365,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12333,
                        "src": "4430:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12367,
                              "name": "IERC1155Receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31122,
                              "src": "4450:16:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$31122_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$31122_$",
                                "typeString": "type(contract IERC1155Receiver)"
                              }
                            ],
                            "id": 12366,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4445:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4445:22:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$31122",
                            "typeString": "type(contract IERC1155Receiver)"
                          }
                        },
                        "id": 12369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4445:34:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4430:49:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4063:416:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12341,
                  "id": 12372,
                  "nodeType": "Return",
                  "src": "4044:435:32"
                }
              ]
            },
            "baseFunctions": [
              28306,
              31145,
              78910
            ],
            "documentation": {
              "id": 12331,
              "nodeType": "StructuredDocumentation",
              "src": "3839:20:32",
              "text": "@dev See ERC-165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3873:17:32",
            "overrides": {
              "id": 12338,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12335,
                  "name": "ERC1155Receiver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78911,
                  "src": "3972:15:32"
                },
                {
                  "id": 12336,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "3989:7:32"
                },
                {
                  "id": 12337,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "3998:7:32"
                }
              ],
              "src": "3963:43:32"
            },
            "parameters": {
              "id": 12334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12333,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3898:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12374,
                  "src": "3891:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12332,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:20:32"
            },
            "returnParameters": {
              "id": 12341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12374,
                  "src": "4024:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:6:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12388,
            "nodeType": "FunctionDefinition",
            "src": "4728:137:32",
            "nodes": [],
            "body": {
              "id": 12387,
              "nodeType": "Block",
              "src": "4817:48:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12384,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12377,
                        "src": "4849:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12383,
                      "name": "getUriOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48430,
                      "src": "4834:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 12385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:24:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 12382,
                  "id": 12386,
                  "nodeType": "Return",
                  "src": "4827:31:32"
                }
              ]
            },
            "baseFunctions": [
              28550
            ],
            "documentation": {
              "id": 12375,
              "nodeType": "StructuredDocumentation",
              "src": "4678:45:32",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4737:8:32",
            "overrides": {
              "id": 12379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4784:8:32"
            },
            "parameters": {
              "id": 12378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12377,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4754:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12388,
                  "src": "4746:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4745:18:32"
            },
            "returnParameters": {
              "id": 12382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12388,
                  "src": "4802:13:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12380,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4802:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4801:15:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12464,
            "nodeType": "FunctionDefinition",
            "src": "5433:665:32",
            "nodes": [],
            "body": {
              "id": 12463,
              "nodeType": "Block",
              "src": "5647:451:32",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 12412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5661:32:32",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 12406,
                          "name": "ASSET_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12224,
                          "src": "5670:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5690:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5682:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5682:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5682:10:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12405,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38454,
                        "src": "5662:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 12411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5662:31:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12436,
                  "nodeType": "IfStatement",
                  "src": "5657:203:32",
                  "trueBody": {
                    "id": 12435,
                    "nodeType": "Block",
                    "src": "5695:165:32",
                    "statements": [
                      {
                        "body": {
                          "id": 12433,
                          "nodeType": "Block",
                          "src": "5763:87:32",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12426,
                                    "name": "ASSET_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12224,
                                    "src": "5792:10:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 12427,
                                        "name": "_tokensToWrap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12393,
                                        "src": "5804:13:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                                        }
                                      },
                                      "id": 12429,
                                      "indexExpression": {
                                        "id": 12428,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12414,
                                        "src": "5818:1:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5804:16:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$51466_calldata_ptr",
                                        "typeString": "struct ITokenBundle.Token calldata"
                                      }
                                    },
                                    "id": 12430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51458,
                                    "src": "5804:30:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 12425,
                                  "name": "_checkRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38703,
                                  "src": "5781:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address) view"
                                  }
                                },
                                "id": 12431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5781:54:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12432,
                              "nodeType": "ExpressionStatement",
                              "src": "5781:54:32"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12417,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12414,
                            "src": "5729:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 12418,
                              "name": "_tokensToWrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12393,
                              "src": "5733:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ITokenBundle.Token calldata[] calldata"
                              }
                            },
                            "id": 12419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5733:20:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5729:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12434,
                        "initializationExpression": {
                          "assignments": [
                            12414
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 12414,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5722:1:32",
                              "nodeType": "VariableDeclaration",
                              "scope": 12434,
                              "src": "5714:9:32",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 12413,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5714:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 12416,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 12415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5726:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5714:13:32"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 12423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 12421,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12414,
                              "src": "5755:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 12422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5760:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5755:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12424,
                          "nodeType": "ExpressionStatement",
                          "src": "5755:6:32"
                        },
                        "nodeType": "ForStatement",
                        "src": "5709:141:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12437,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12403,
                      "src": "5870:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12438,
                        "name": "nextTokenIdToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12518,
                        "src": "5880:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 12439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5880:19:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5870:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12441,
                  "nodeType": "ExpressionStatement",
                  "src": "5870:29:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12443,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5923:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5923:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12445,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12393,
                        "src": "5935:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      },
                      {
                        "id": 12446,
                        "name": "_uriForWrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12395,
                        "src": "5950:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 12447,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12403,
                        "src": "5971:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12442,
                      "name": "_storeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48922,
                      "src": "5910:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ITokenBundle.Token calldata[] calldata,string memory,uint256)"
                      }
                    },
                    "id": 12448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5910:69:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12449,
                  "nodeType": "ExpressionStatement",
                  "src": "5910:69:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12451,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12397,
                        "src": "6000:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 12452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6012:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 12450,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28791,
                        28954
                      ],
                      "referencedDeclaration": 28791,
                      "src": "5990:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5990:24:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12454,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:24:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6044:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6044:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12458,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12397,
                        "src": "6056:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12459,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12403,
                        "src": "6068:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12460,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12393,
                        "src": "6077:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      ],
                      "id": 12455,
                      "name": "TokensWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12237,
                      "src": "6030:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ITokenBundle.Token memory[] memory)"
                      }
                    },
                    "id": 12461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6030:61:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12462,
                  "nodeType": "EmitStatement",
                  "src": "6025:66:32"
                }
              ]
            },
            "documentation": {
              "id": 12389,
              "nodeType": "StructuredDocumentation",
              "src": "5059:369:32",
              "text": "  @notice Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\n  @param _tokensToWrap    The tokens to wrap.\n  @param _uriForWrappedToken The metadata URI for the wrapped NFT.\n  @param _recipient          The recipient of the wrapped NFT.\n  @return tokenId The tokenId of the wrapped NFT minted."
            },
            "functionSelector": "29e471dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12400,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12212,
                    "src": "5608:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 12401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12399,
                  "name": "onlyRoleWithSwitch",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12259,
                  "src": "5589:18:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "5589:31:32"
              }
            ],
            "name": "wrap",
            "nameLocation": "5442:4:32",
            "parameters": {
              "id": 12398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12393,
                  "mutability": "mutable",
                  "name": "_tokensToWrap",
                  "nameLocation": "5473:13:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12464,
                  "src": "5456:30:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12391,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12390,
                        "name": "Token",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51466,
                        "src": "5456:5:32"
                      },
                      "referencedDeclaration": 51466,
                      "src": "5456:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$51466_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 12392,
                    "nodeType": "ArrayTypeName",
                    "src": "5456:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$51466_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12395,
                  "mutability": "mutable",
                  "name": "_uriForWrappedToken",
                  "nameLocation": "5512:19:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12464,
                  "src": "5496:35:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12397,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "5549:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12464,
                  "src": "5541:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5541:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5446:119:32"
            },
            "returnParameters": {
              "id": 12404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12403,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5638:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12464,
                  "src": "5630:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:17:32"
            },
            "scope": 12775,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12509,
            "nodeType": "FunctionDefinition",
            "src": "6395:411:32",
            "nodes": [],
            "body": {
              "id": 12508,
              "nodeType": "Block",
              "src": "6496:310:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12476,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12467,
                          "src": "6514:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12477,
                            "name": "nextTokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12518,
                            "src": "6525:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 12478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6525:19:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6514:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726170706564204e465420444e452e",
                        "id": 12480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6546:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        },
                        "value": "wrapped NFT DNE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        }
                      ],
                      "id": 12475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6506:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6506:59:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12482,
                  "nodeType": "ExpressionStatement",
                  "src": "6506:59:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 12485,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6601:3:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6601:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12487,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12467,
                            "src": "6613:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 12484,
                          "name": "isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12553,
                          "src": "6583:17:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 12488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6583:39:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f7420617070726f76656420666f7220756e7772617070696e672e",
                        "id": 12489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6624:37:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        },
                        "value": "caller not approved for unwrapping."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        }
                      ],
                      "id": 12483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6575:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:87:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12491,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:87:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12493,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12467,
                        "src": "6679:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12492,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29254,
                        29436
                      ],
                      "referencedDeclaration": 29254,
                      "src": "6673:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 12494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6673:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12495,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12497,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12469,
                        "src": "6713:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12498,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12467,
                        "src": "6725:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12496,
                      "name": "_releaseTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48984,
                      "src": "6698:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6698:36:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12500,
                  "nodeType": "ExpressionStatement",
                  "src": "6698:36:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12502,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6766:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6766:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12504,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12469,
                        "src": "6778:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12505,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12467,
                        "src": "6790:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12501,
                      "name": "TokensUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12246,
                      "src": "6750:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6750:49:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12507,
                  "nodeType": "EmitStatement",
                  "src": "6745:54:32"
                }
              ]
            },
            "documentation": {
              "id": 12465,
              "nodeType": "StructuredDocumentation",
              "src": "6104:286:32",
              "text": "  @notice Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\n  @param _tokenId   The token Id of the wrapped NFT to unwrap.\n  @param _recipient The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT."
            },
            "functionSelector": "7647691d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12472,
                    "name": "UNWRAP_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12218,
                    "src": "6483:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 12473,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12471,
                  "name": "onlyRoleWithSwitch",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12259,
                  "src": "6464:18:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "6464:31:32"
              }
            ],
            "name": "unwrap",
            "nameLocation": "6404:6:32",
            "parameters": {
              "id": 12470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12467,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6419:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12509,
                  "src": "6411:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6411:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12469,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "6437:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12509,
                  "src": "6429:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6429:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6410:38:32"
            },
            "returnParameters": {
              "id": 12474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6496:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12518,
            "nodeType": "FunctionDefinition",
            "src": "7061:104:32",
            "nodes": [],
            "body": {
              "id": 12517,
              "nodeType": "Block",
              "src": "7128:37:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12515,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28191,
                    "src": "7145:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12514,
                  "id": 12516,
                  "nodeType": "Return",
                  "src": "7138:20:32"
                }
              ]
            },
            "documentation": {
              "id": 12510,
              "nodeType": "StructuredDocumentation",
              "src": "6990:66:32",
              "text": "@notice The tokenId assigned to the next new NFT to be minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "7070:17:32",
            "parameters": {
              "id": 12511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7087:2:32"
            },
            "returnParameters": {
              "id": 12514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12518,
                  "src": "7119:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7119:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7118:9:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12553,
            "nodeType": "FunctionDefinition",
            "src": "7265:357:32",
            "nodes": [],
            "body": {
              "id": 12552,
              "nodeType": "Block",
              "src": "7420:202:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12529,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7438:5:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 12552,
                      "src": "7430:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12528,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7430:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12533,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12531,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12523,
                        "src": "7454:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12530,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28487,
                      "src": "7446:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 12532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7446:17:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7430:33:32"
                },
                {
                  "expression": {
                    "id": 12550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12534,
                      "name": "isApprovedOrOwnerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12526,
                      "src": "7473:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 12548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 12542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 12537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 12535,
                                "name": "_operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12521,
                                "src": "7496:9:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 12536,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12529,
                                "src": "7509:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7496:18:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 12539,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12529,
                                  "src": "7547:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 12540,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12521,
                                  "src": "7554:9:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12538,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28679,
                                "src": "7530:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 12541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7530:34:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7496:68:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 12547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 12544,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12523,
                                  "src": "7592:8:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 12543,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28627,
                                "src": "7580:11:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 12545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7580:21:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 12546,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12521,
                              "src": "7605:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7580:34:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7496:118:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 12549,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7495:120:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7473:142:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12551,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:142:32"
                }
              ]
            },
            "documentation": {
              "id": 12519,
              "nodeType": "StructuredDocumentation",
              "src": "7171:89:32",
              "text": "@notice Returns whether a given address is the owner, or approved to transfer an NFT."
            },
            "functionSelector": "430c2081",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "7274:17:32",
            "parameters": {
              "id": 12524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12521,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "7300:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12553,
                  "src": "7292:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12523,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7319:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12553,
                  "src": "7311:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:37:32"
            },
            "returnParameters": {
              "id": 12527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12526,
                  "mutability": "mutable",
                  "name": "isApprovedOrOwnerOf",
                  "nameLocation": "7395:19:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12553,
                  "src": "7390:24:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12525,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7389:26:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12574,
            "nodeType": "FunctionDefinition",
            "src": "7854:227:32",
            "nodes": [],
            "body": {
              "id": 12573,
              "nodeType": "Block",
              "src": "8021:60:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12569,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12556,
                        "src": "8055:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12570,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12558,
                        "src": "8065:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 12566,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8031:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28661,
                      "src": "8031:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 12571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8031:43:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12572,
                  "nodeType": "ExpressionStatement",
                  "src": "8031:43:32"
                }
              ]
            },
            "baseFunctions": [
              28661
            ],
            "documentation": {
              "id": 12554,
              "nodeType": "StructuredDocumentation",
              "src": "7809:40:32",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12563,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12556,
                    "src": "8007:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12562,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38051,
                  "src": "7979:27:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "7979:37:32"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "7863:17:32",
            "overrides": {
              "id": 12561,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12560,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "7962:7:32"
                }
              ],
              "src": "7953:17:32"
            },
            "parameters": {
              "id": 12559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12556,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7889:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12574,
                  "src": "7881:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7881:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12558,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7904:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12574,
                  "src": "7899:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7899:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7880:33:32"
            },
            "returnParameters": {
              "id": 12565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8021:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12595,
            "nodeType": "FunctionDefinition",
            "src": "8122:208:32",
            "nodes": [],
            "body": {
              "id": 12594,
              "nodeType": "Block",
              "src": "8281:49:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12590,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12577,
                        "src": "8305:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12591,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12579,
                        "src": "8315:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12587,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8291:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28605,
                      "src": "8291:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8291:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12593,
                  "nodeType": "ExpressionStatement",
                  "src": "8291:32:32"
                }
              ]
            },
            "baseFunctions": [
              28605
            ],
            "documentation": {
              "id": 12575,
              "nodeType": "StructuredDocumentation",
              "src": "8087:30:32",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12584,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12577,
                    "src": "8267:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12583,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38051,
                  "src": "8239:27:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "8239:37:32"
              }
            ],
            "name": "approve",
            "nameLocation": "8131:7:32",
            "overrides": {
              "id": 12582,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12581,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "8222:7:32"
                }
              ],
              "src": "8213:17:32"
            },
            "parameters": {
              "id": 12580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12577,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8147:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12595,
                  "src": "8139:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8139:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12579,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8165:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12595,
                  "src": "8157:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8157:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8138:35:32"
            },
            "returnParameters": {
              "id": 12586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8281:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12619,
            "nodeType": "FunctionDefinition",
            "src": "8377:208:32",
            "nodes": [],
            "body": {
              "id": 12618,
              "nodeType": "Block",
              "src": "8531:54:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12613,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12598,
                        "src": "8560:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12614,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12600,
                        "src": "8566:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12615,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12602,
                        "src": "8570:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12610,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8541:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "8541:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8541:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12617,
                  "nodeType": "ExpressionStatement",
                  "src": "8541:37:32"
                }
              ]
            },
            "baseFunctions": [
              28697
            ],
            "documentation": {
              "id": 12596,
              "nodeType": "StructuredDocumentation",
              "src": "8336:36:32",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12607,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12598,
                    "src": "8525:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12606,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "8505:19:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "8505:25:32"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "8386:12:32",
            "overrides": {
              "id": 12605,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12604,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "8496:7:32"
                }
              ],
              "src": "8487:17:32"
            },
            "parameters": {
              "id": 12603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12598,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8416:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12619,
                  "src": "8408:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8408:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12600,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8438:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12619,
                  "src": "8430:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8430:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12602,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8458:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12619,
                  "src": "8450:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8450:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8398:73:32"
            },
            "returnParameters": {
              "id": 12609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8531:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12643,
            "nodeType": "FunctionDefinition",
            "src": "8636:216:32",
            "nodes": [],
            "body": {
              "id": 12642,
              "nodeType": "Block",
              "src": "8794:58:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12637,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12622,
                        "src": "8827:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12638,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12624,
                        "src": "8833:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12639,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12626,
                        "src": "8837:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12634,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8804:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28716,
                      "src": "8804:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8804:41:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12641,
                  "nodeType": "ExpressionStatement",
                  "src": "8804:41:32"
                }
              ]
            },
            "baseFunctions": [
              28716
            ],
            "documentation": {
              "id": 12620,
              "nodeType": "StructuredDocumentation",
              "src": "8591:40:32",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12631,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12622,
                    "src": "8788:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12632,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12630,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "8768:19:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "8768:25:32"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8645:16:32",
            "overrides": {
              "id": 12629,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12628,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "8759:7:32"
                }
              ],
              "src": "8750:17:32"
            },
            "parameters": {
              "id": 12627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12622,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8679:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12643,
                  "src": "8671:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8671:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12624,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8701:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12643,
                  "src": "8693:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8693:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12626,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8721:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12643,
                  "src": "8713:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8713:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8661:73:32"
            },
            "returnParameters": {
              "id": 12633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8794:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12670,
            "nodeType": "FunctionDefinition",
            "src": "8903:249:32",
            "nodes": [],
            "body": {
              "id": 12669,
              "nodeType": "Block",
              "src": "9088:64:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12663,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "9121:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12664,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12648,
                        "src": "9127:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12665,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12650,
                        "src": "9131:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12666,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12652,
                        "src": "9140:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 12660,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9098:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28752,
                      "src": "9098:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 12667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9098:47:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12668,
                  "nodeType": "ExpressionStatement",
                  "src": "9098:47:32"
                }
              ]
            },
            "baseFunctions": [
              28752
            ],
            "documentation": {
              "id": 12644,
              "nodeType": "StructuredDocumentation",
              "src": "8858:40:32",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12657,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12646,
                    "src": "9082:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12656,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38041,
                  "src": "9062:19:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "9062:25:32"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8912:16:32",
            "overrides": {
              "id": 12655,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12654,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "9053:7:32"
                }
              ],
              "src": "9044:17:32"
            },
            "parameters": {
              "id": 12653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12646,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8946:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12670,
                  "src": "8938:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8938:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12648,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8968:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12670,
                  "src": "8960:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12650,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8988:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12670,
                  "src": "8980:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8980:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12652,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9018:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12670,
                  "src": "9005:17:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12651,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9005:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8928:100:32"
            },
            "returnParameters": {
              "id": 12659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9088:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12704,
            "nodeType": "FunctionDefinition",
            "src": "9389:348:32",
            "nodes": [],
            "body": {
              "id": 12703,
              "nodeType": "Block",
              "src": "9577:160:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12688,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12673,
                        "src": "9615:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12689,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12675,
                        "src": "9621:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12690,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12677,
                        "src": "9625:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12691,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12679,
                        "src": "9639:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12685,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9587:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Multiwrap_$12775_$",
                          "typeString": "type(contract super ERC721Multiwrap)"
                        }
                      },
                      "id": 12687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29527,
                      "src": "9587:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 12692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:61:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12693,
                  "nodeType": "ExpressionStatement",
                  "src": "9587:61:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12697,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12673,
                        "src": "9697:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12698,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12675,
                        "src": "9703:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12699,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12677,
                        "src": "9707:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12700,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12679,
                        "src": "9721:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12694,
                        "name": "SoulboundERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41498,
                        "src": "9658:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SoulboundERC721A_$41498_$",
                          "typeString": "type(contract SoulboundERC721A)"
                        }
                      },
                      "id": 12696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41497,
                      "src": "9658:38:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 12701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9658:72:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12702,
                  "nodeType": "ExpressionStatement",
                  "src": "9658:72:32"
                }
              ]
            },
            "baseFunctions": [
              29527,
              41497
            ],
            "documentation": {
              "id": 12671,
              "nodeType": "StructuredDocumentation",
              "src": "9341:43:32",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "9398:21:32",
            "overrides": {
              "id": 12683,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12681,
                  "name": "ERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29541,
                  "src": "9550:7:32"
                },
                {
                  "id": 12682,
                  "name": "SoulboundERC721A",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41498,
                  "src": "9559:16:32"
                }
              ],
              "src": "9541:35:32"
            },
            "parameters": {
              "id": 12680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12673,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9437:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12704,
                  "src": "9429:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9429:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12675,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9459:2:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12704,
                  "src": "9451:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12677,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "9479:12:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12704,
                  "src": "9471:20:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9471:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12679,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9509:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 12704,
                  "src": "9501:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9501:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9419:104:32"
            },
            "returnParameters": {
              "id": 12684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9577:0:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12718,
            "nodeType": "FunctionDefinition",
            "src": "9830:124:32",
            "nodes": [],
            "body": {
              "id": 12717,
              "nodeType": "Block",
              "src": "9909:45:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12711,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9926:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9926:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12713,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "9940:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9940:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9926:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12710,
                  "id": 12716,
                  "nodeType": "Return",
                  "src": "9919:28:32"
                }
              ]
            },
            "baseFunctions": [
              41443
            ],
            "documentation": {
              "id": 12705,
              "nodeType": "StructuredDocumentation",
              "src": "9743:82:32",
              "text": "@dev Returns whether transfers can be restricted in a given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canRestrictTransfers",
            "nameLocation": "9839:21:32",
            "overrides": {
              "id": 12707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9885:8:32"
            },
            "parameters": {
              "id": 12706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9860:2:32"
            },
            "returnParameters": {
              "id": 12710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12718,
                  "src": "9903:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9903:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9902:6:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12732,
            "nodeType": "FunctionDefinition",
            "src": "10050:121:32",
            "nodes": [],
            "body": {
              "id": 12731,
              "nodeType": "Block",
              "src": "10126:45:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12725,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10143:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10143:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12727,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "10157:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10157:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10143:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12724,
                  "id": 12730,
                  "nodeType": "Return",
                  "src": "10136:28:32"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 12719,
              "nodeType": "StructuredDocumentation",
              "src": "9960:85:32",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10059:18:32",
            "overrides": {
              "id": 12721,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10102:8:32"
            },
            "parameters": {
              "id": 12720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10077:2:32"
            },
            "returnParameters": {
              "id": 12724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12732,
                  "src": "10120:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12722,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10120:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10119:6:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12746,
            "nodeType": "FunctionDefinition",
            "src": "10255:115:32",
            "nodes": [],
            "body": {
              "id": 12745,
              "nodeType": "Block",
              "src": "10325:45:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12739,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10342:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10342:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12741,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "10356:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10356:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10342:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12738,
                  "id": 12744,
                  "nodeType": "Return",
                  "src": "10335:28:32"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 12733,
              "nodeType": "StructuredDocumentation",
              "src": "10177:73:32",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10264:12:32",
            "overrides": {
              "id": 12735,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10301:8:32"
            },
            "parameters": {
              "id": 12734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10276:2:32"
            },
            "returnParameters": {
              "id": 12738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12746,
                  "src": "10319:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12736,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10319:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10318:6:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12760,
            "nodeType": "FunctionDefinition",
            "src": "10461:121:32",
            "nodes": [],
            "body": {
              "id": 12759,
              "nodeType": "Block",
              "src": "10537:45:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12753,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10554:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10554:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12755,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "10568:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10568:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10554:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12752,
                  "id": 12758,
                  "nodeType": "Return",
                  "src": "10547:28:32"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 12747,
              "nodeType": "StructuredDocumentation",
              "src": "10376:80:32",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10470:18:32",
            "overrides": {
              "id": 12749,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10513:8:32"
            },
            "parameters": {
              "id": 12748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10488:2:32"
            },
            "returnParameters": {
              "id": 12752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12760,
                  "src": "10531:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12750,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10531:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10530:6:32"
            },
            "scope": 12775,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 12774,
            "nodeType": "FunctionDefinition",
            "src": "10681:124:32",
            "nodes": [],
            "body": {
              "id": 12773,
              "nodeType": "Block",
              "src": "10760:45:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12767,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10777:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10777:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12769,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "10791:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10791:7:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10777:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12766,
                  "id": 12772,
                  "nodeType": "Return",
                  "src": "10770:28:32"
                }
              ]
            },
            "baseFunctions": [
              37993
            ],
            "documentation": {
              "id": 12761,
              "nodeType": "StructuredDocumentation",
              "src": "10588:88:32",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "10690:26:32",
            "overrides": {
              "id": 12763,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10736:8:32"
            },
            "parameters": {
              "id": 12762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10716:2:32"
            },
            "returnParameters": {
              "id": 12766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12774,
                  "src": "10754:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10754:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10753:6:32"
            },
            "scope": 12775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12191,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "933:9:32"
            },
            "id": 12192,
            "nodeType": "InheritanceSpecifier",
            "src": "933:9:32"
          },
          {
            "baseName": {
              "id": 12193,
              "name": "TokenStore",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49141,
              "src": "948:10:32"
            },
            "id": 12194,
            "nodeType": "InheritanceSpecifier",
            "src": "948:10:32"
          },
          {
            "baseName": {
              "id": 12195,
              "name": "SoulboundERC721A",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41498,
              "src": "964:16:32"
            },
            "id": 12196,
            "nodeType": "InheritanceSpecifier",
            "src": "964:16:32"
          },
          {
            "baseName": {
              "id": 12197,
              "name": "ERC721A",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29541,
              "src": "986:7:32"
            },
            "id": 12198,
            "nodeType": "InheritanceSpecifier",
            "src": "986:7:32"
          },
          {
            "baseName": {
              "id": 12199,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "999:16:32"
            },
            "id": 12200,
            "nodeType": "InheritanceSpecifier",
            "src": "999:16:32"
          },
          {
            "baseName": {
              "id": 12201,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1021:7:32"
            },
            "id": 12202,
            "nodeType": "InheritanceSpecifier",
            "src": "1021:7:32"
          },
          {
            "baseName": {
              "id": 12203,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1034:7:32"
            },
            "id": 12204,
            "nodeType": "InheritanceSpecifier",
            "src": "1034:7:32"
          },
          {
            "baseName": {
              "id": 12205,
              "name": "DefaultOperatorFilterer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34762,
              "src": "1047:23:32"
            },
            "id": 12206,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:23:32"
          }
        ],
        "canonicalName": "ERC721Multiwrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12190,
          "nodeType": "StructuredDocumentation",
          "src": "432:467:32",
          "text": "      BASE:      ERC721Base\n      EXTENSION: TokenStore, SoulboundERC721A\n  The `ERC721Multiwrap` contract uses the `ERC721Base` contract, along with the `TokenStore` and\n   `SoulboundERC721A` extension.\n  The `ERC721Multiwrap` contract lets you wrap arbitrary ERC20, ERC721 and ERC1155 tokens you own\n  into a single wrapped token / NFT.\n  The `SoulboundERC721A` extension lets you make your NFTs 'soulbound' i.e. non-transferrable."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12775,
          34762,
          38148,
          37994,
          50395,
          39646,
          50644,
          31290,
          38400,
          50418,
          34723,
          49679,
          29541,
          31493,
          31539,
          31422,
          41498,
          39046,
          38747,
          50516,
          50491,
          49141,
          78877,
          78911,
          31122,
          26795,
          31146,
          78641,
          78938,
          31557,
          48858,
          51477,
          37872,
          50168
        ],
        "name": "ERC721Multiwrap",
        "nameLocation": "910:15:32",
        "scope": 12776,
        "usedErrors": [
          31434,
          31437,
          31440,
          31443,
          31446,
          31449,
          31452,
          31455,
          31458,
          31461,
          31464,
          31467,
          31470,
          38005
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 32
}