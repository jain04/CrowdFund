{
  "abi": [
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "entryPoint()": "b0d691fe",
    "getNonce()": "d087d288",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smart-wallet/utils/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/smart-wallet/interfaces/IAccount.sol\":{\"keccak256\":\"0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c\",\"dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL\"]},\"contracts/smart-wallet/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e\",\"dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ\"]},\"contracts/smart-wallet/interfaces/IEntrypoint.sol\":{\"keccak256\":\"0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114\",\"dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK\"]},\"contracts/smart-wallet/interfaces/INonceManager.sol\":{\"keccak256\":\"0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4\",\"dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp\"]},\"contracts/smart-wallet/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"contracts/smart-wallet/utils/BaseAccount.sol\":{\"keccak256\":\"0xdd1a564a2151cd6ee4d0cea6a2a4bd02e678600761f784ce909493228a80e69c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460dac3ad82f86bed2d6e33ec36a4c5f61b87e1135fe1fee18f6be3a2246fa67\",\"dweb:/ipfs/QmcoQaEux8rDgfgG1xPadAH5uviBv8oS3JHC3sc6fMRasb\"]},\"contracts/smart-wallet/utils/Helpers.sol\":{\"keccak256\":\"0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561\",\"dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh\"]},\"contracts/smart-wallet/utils/UserOperation.sol\":{\"keccak256\":\"0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5\",\"dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "entryPoint()": {
            "notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/smart-wallet/utils/BaseAccount.sol": "BaseAccount"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/smart-wallet/interfaces/IAccount.sol": {
        "keccak256": "0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41",
        "urls": [
          "bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c",
          "dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IAggregator.sol": {
        "keccak256": "0xf933b69fee393c235a75d99f8d310091b955e8af0240d3855939e16e86a85873",
        "urls": [
          "bzz-raw://772937aa4c500fac35a8edf31c413c59d307d8558c941272a51deba44c0f730e",
          "dweb:/ipfs/QmNvW9G3BCTLFvSBb15ZqJMzETWF5drE7gAfbLxkz6aknJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IEntrypoint.sol": {
        "keccak256": "0xe94c12629f153c344d698c207f32a0744b49d3849df95101e631fbb96a8f6f8d",
        "urls": [
          "bzz-raw://810ae34240668bf730ffd252bff57ff6f94215c6a461c6d42bc9b8842a0e5114",
          "dweb:/ipfs/QmQ1SnuCxgvEAHS4z2y6Vz4P5scwCxRP1wBqYQvKcabqAK"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/INonceManager.sol": {
        "keccak256": "0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3",
        "urls": [
          "bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4",
          "dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/interfaces/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/smart-wallet/utils/BaseAccount.sol": {
        "keccak256": "0xdd1a564a2151cd6ee4d0cea6a2a4bd02e678600761f784ce909493228a80e69c",
        "urls": [
          "bzz-raw://460dac3ad82f86bed2d6e33ec36a4c5f61b87e1135fe1fee18f6be3a2246fa67",
          "dweb:/ipfs/QmcoQaEux8rDgfgG1xPadAH5uviBv8oS3JHC3sc6fMRasb"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/utils/Helpers.sol": {
        "keccak256": "0xb7d1f138c5d0a2d3302c2256d2bd0ab8976baf89edfe0d2de35c5017aeb079c7",
        "urls": [
          "bzz-raw://a2a8db74e00c5e83f03f35f067a341df50b2171877f1847cd1b544fac6457561",
          "dweb:/ipfs/QmZyhkL5WD97uMmpiXWqjipiWGN1GLhZgadXR56eLQMZEh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/smart-wallet/utils/UserOperation.sol": {
        "keccak256": "0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964",
        "urls": [
          "bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5",
          "dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/smart-wallet/utils/BaseAccount.sol",
    "id": 88523,
    "exportedSymbols": {
      "BaseAccount": [
        88522
      ],
      "IAccount": [
        85983
      ],
      "IAggregator": [
        86113
      ],
      "IEntryPoint": [
        86317
      ],
      "INonceManager": [
        86336
      ],
      "IStakeManager": [
        86476
      ],
      "UserOperation": [
        92406
      ],
      "UserOperationLib": [
        92576
      ],
      "ValidationData": [
        91456
      ],
      "_intersectTimeRange": [
        91600
      ],
      "_packValidationData": [
        91637,
        91675
      ],
      "_parseValidationData": [
        91515
      ],
      "calldataKeccak": [
        91685
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4662:361",
    "nodes": [
      {
        "id": 88382,
        "nodeType": "PragmaDirective",
        "src": "36:24:361",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 88383,
        "nodeType": "ImportDirective",
        "src": "145:36:361",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/interfaces/IAccount.sol",
        "file": "../interfaces/IAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88523,
        "sourceUnit": 85984,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88384,
        "nodeType": "ImportDirective",
        "src": "182:39:361",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "file": "../interfaces/IEntrypoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88523,
        "sourceUnit": 86318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88385,
        "nodeType": "ImportDirective",
        "src": "222:23:361",
        "nodes": [],
        "absolutePath": "contracts/smart-wallet/utils/Helpers.sol",
        "file": "./Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88523,
        "sourceUnit": 91686,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88522,
        "nodeType": "ContractDefinition",
        "src": "480:4217:361",
        "nodes": [
          {
            "id": 88392,
            "nodeType": "UsingForDirective",
            "src": "528:41:361",
            "nodes": [],
            "libraryName": {
              "id": 88389,
              "name": "UserOperationLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 92576,
              "src": "534:16:361"
            },
            "typeName": {
              "id": 88391,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88390,
                "name": "UserOperation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 92406,
                "src": "555:13:361"
              },
              "referencedDeclaration": 92406,
              "src": "555:13:361",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$92406_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 88395,
            "nodeType": "VariableDeclaration",
            "src": "696:51:361",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIG_VALIDATION_FAILED",
            "nameLocation": "722:21:361",
            "scope": 88522,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88393,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:361",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 88394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "746:1:361",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 88412,
            "nodeType": "FunctionDefinition",
            "src": "935:121:361",
            "nodes": [],
            "body": {
              "id": 88411,
              "nodeType": "Block",
              "src": "993:63:361",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88406,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1040:4:361",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseAccount_$88522",
                              "typeString": "contract BaseAccount"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseAccount_$88522",
                              "typeString": "contract BaseAccount"
                            }
                          ],
                          "id": 88405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1032:7:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1032:7:361",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1032:13:361",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:1:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 88401,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88419,
                          "src": "1010:10:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$86317_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 88402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1010:12:361",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 88403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86329,
                      "src": "1010:21:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$",
                        "typeString": "function (address,uint192) view external returns (uint256)"
                      }
                    },
                    "id": 88409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:39:361",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88400,
                  "id": 88410,
                  "nodeType": "Return",
                  "src": "1003:46:361"
                }
              ]
            },
            "documentation": {
              "id": 88396,
              "nodeType": "StructuredDocumentation",
              "src": "754:176:361",
              "text": " Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
            },
            "functionSelector": "d087d288",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "944:8:361",
            "parameters": {
              "id": 88397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:2:361"
            },
            "returnParameters": {
              "id": 88400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88412,
                  "src": "984:7:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:9:361"
            },
            "scope": 88522,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 88419,
            "nodeType": "FunctionDefinition",
            "src": "1204:64:361",
            "nodes": [],
            "documentation": {
              "id": 88413,
              "nodeType": "StructuredDocumentation",
              "src": "1062:137:361",
              "text": " return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."
            },
            "functionSelector": "b0d691fe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "1213:10:361",
            "parameters": {
              "id": 88414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:2:361"
            },
            "returnParameters": {
              "id": 88418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88419,
                  "src": "1255:11:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 88416,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88415,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86317,
                      "src": "1255:11:361"
                    },
                    "referencedDeclaration": 86317,
                    "src": "1255:11:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:13:361"
            },
            "scope": 88522,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 88453,
            "nodeType": "FunctionDefinition",
            "src": "1458:379:361",
            "nodes": [],
            "body": {
              "id": 88452,
              "nodeType": "Block",
              "src": "1651:186:361",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 88433,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88470,
                      "src": "1661:22:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 88434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:24:361",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88435,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:24:361"
                },
                {
                  "expression": {
                    "id": 88441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88436,
                      "name": "validationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88431,
                      "src": "1695:14:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88438,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88423,
                          "src": "1731:6:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        {
                          "id": 88439,
                          "name": "userOpHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88425,
                          "src": "1739:10:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 88437,
                        "name": "_validateSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88481,
                        "src": "1712:18:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$92406_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct UserOperation calldata,bytes32) returns (uint256)"
                        }
                      },
                      "id": 88440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1712:38:361",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1695:55:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88442,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:55:361"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88444,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88423,
                          "src": "1775:6:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 88445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92387,
                        "src": "1775:12:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88443,
                      "name": "_validateNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88488,
                      "src": "1760:14:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 88446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:28:361",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88447,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:28:361"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88449,
                        "name": "missingAccountFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88427,
                        "src": "1810:19:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88448,
                      "name": "_payPrefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88521,
                      "src": "1798:11:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 88450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:32:361",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88451,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:32:361"
                }
              ]
            },
            "baseFunctions": [
              85982
            ],
            "documentation": {
              "id": 88420,
              "nodeType": "StructuredDocumentation",
              "src": "1274:179:361",
              "text": " Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
            },
            "functionSelector": "3a871cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateUserOp",
            "nameLocation": "1467:14:361",
            "overrides": {
              "id": 88429,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1609:8:361"
            },
            "parameters": {
              "id": 88428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88423,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1514:6:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88453,
                  "src": "1491:29:361",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 88422,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88421,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 92406,
                      "src": "1491:13:361"
                    },
                    "referencedDeclaration": 92406,
                    "src": "1491:13:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$92406_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88425,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1538:10:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88453,
                  "src": "1530:18:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88424,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88427,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "1566:19:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88453,
                  "src": "1558:27:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:110:361"
            },
            "returnParameters": {
              "id": 88432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88431,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1635:14:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88453,
                  "src": "1627:22:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:24:361"
            },
            "scope": 88522,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 88470,
            "nodeType": "FunctionDefinition",
            "src": "1918:149:361",
            "nodes": [],
            "body": {
              "id": 88469,
              "nodeType": "Block",
              "src": "1974:93:361",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 88465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88458,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1992:3:361",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1992:10:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88462,
                                "name": "entryPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88419,
                                "src": "2014:10:361",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$86317_$",
                                  "typeString": "function () view returns (contract IEntryPoint)"
                                }
                              },
                              "id": 88463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2014:12:361",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$86317",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 88461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2006:7:361",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 88460,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2006:7:361",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 88464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2006:21:361",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1992:35:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
                        "id": 88466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2029:30:361",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        },
                        "value": "account: not from EntryPoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        }
                      ],
                      "id": 88457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1984:7:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:76:361",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88468,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:76:361"
                }
              ]
            },
            "documentation": {
              "id": 88454,
              "nodeType": "StructuredDocumentation",
              "src": "1843:70:361",
              "text": " ensure the request comes from the known entrypoint."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "1927:22:361",
            "parameters": {
              "id": 88455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:2:361"
            },
            "returnParameters": {
              "id": 88456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:0:361"
            },
            "scope": 88522,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88481,
            "nodeType": "FunctionDefinition",
            "src": "2982:153:361",
            "nodes": [],
            "documentation": {
              "id": 88471,
              "nodeType": "StructuredDocumentation",
              "src": "2073:904:361",
              "text": " validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "2991:18:361",
            "parameters": {
              "id": 88477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88474,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3033:6:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88481,
                  "src": "3010:29:361",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$92406_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 88473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88472,
                      "name": "UserOperation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 92406,
                      "src": "3010:13:361"
                    },
                    "referencedDeclaration": 92406,
                    "src": "3010:13:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$92406_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88476,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "3049:10:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88481,
                  "src": "3041:18:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88475,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:51:361"
            },
            "returnParameters": {
              "id": 88480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88479,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3119:14:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88481,
                  "src": "3111:22:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3110:24:361"
            },
            "scope": 88522,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88488,
            "nodeType": "FunctionDefinition",
            "src": "3786:63:361",
            "nodes": [],
            "body": {
              "id": 88487,
              "nodeType": "Block",
              "src": "3847:2:361",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 88482,
              "nodeType": "StructuredDocumentation",
              "src": "3141:640:361",
              "text": " Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateNonce",
            "nameLocation": "3795:14:361",
            "parameters": {
              "id": 88485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88484,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3818:5:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88488,
                  "src": "3810:13:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3810:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3809:15:361"
            },
            "returnParameters": {
              "id": 88486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3847:0:361"
            },
            "scope": 88522,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88521,
            "nodeType": "FunctionDefinition",
            "src": "4357:338:361",
            "nodes": [],
            "body": {
              "id": 88520,
              "nodeType": "Block",
              "src": "4424:271:361",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88494,
                      "name": "missingAccountFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88491,
                      "src": "4438:19:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 88495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4461:1:361",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4438:24:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88519,
                  "nodeType": "IfStatement",
                  "src": "4434:255:361",
                  "trueBody": {
                    "id": 88518,
                    "nodeType": "Block",
                    "src": "4464:225:361",
                    "statements": [
                      {
                        "assignments": [
                          88498,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 88498,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4484:7:361",
                            "nodeType": "VariableDeclaration",
                            "scope": 88518,
                            "src": "4479:12:361",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 88497,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4479:4:361",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 88514,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 88512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4576:2:361",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 88501,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4505:3:361",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 88502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4505:10:361",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 88500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4497:8:361",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 88499,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4497:8:361",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 88503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4497:19:361",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 88504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4497:24:361",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 88511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value",
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 88505,
                                "name": "missingAccountFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88491,
                                "src": "4530:19:361",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 88508,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4561:7:361",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 88507,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4561:7:361",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      }
                                    ],
                                    "id": 88506,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "4556:4:361",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 88509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4556:13:361",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint256",
                                    "typeString": "type(uint256)"
                                  }
                                },
                                "id": 88510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "4556:17:361",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4497:78:361",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 88513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4497:82:361",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4478:101:361"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 88515,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88498,
                              "src": "4594:7:361",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 88516,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4593:9:361",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 88517,
                        "nodeType": "ExpressionStatement",
                        "src": "4593:9:361"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 88489,
              "nodeType": "StructuredDocumentation",
              "src": "3855:497:361",
              "text": " sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payPrefund",
            "nameLocation": "4366:11:361",
            "parameters": {
              "id": 88492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88491,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "4386:19:361",
                  "nodeType": "VariableDeclaration",
                  "scope": 88521,
                  "src": "4378:27:361",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:7:361",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4377:29:361"
            },
            "returnParameters": {
              "id": 88493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4424:0:361"
            },
            "scope": 88522,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 88387,
              "name": "IAccount",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 85983,
              "src": "513:8:361"
            },
            "id": 88388,
            "nodeType": "InheritanceSpecifier",
            "src": "513:8:361"
          }
        ],
        "canonicalName": "BaseAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88386,
          "nodeType": "StructuredDocumentation",
          "src": "247:232:361",
          "text": " Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          88522,
          85983
        ],
        "name": "BaseAccount",
        "nameLocation": "498:11:361",
        "scope": 88523,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 361
}