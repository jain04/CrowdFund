{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_primarySaleRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityMinted",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mintedTo",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "mintRequest",
          "type": "tuple"
        }
      ],
      "name": "TokensMintedWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mintWithSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "primarySaleRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "validityStartTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "validityEndTimestamp",
              "type": "uint128"
            },
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ISignatureMintERC20.MintRequest",
          "name": "_req",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162003bc038038062003bc08339810160408190526200005991620004f7565b6040518060400160405280601281526020017105369676e61747572654d696e7445524332360741b815250604051806040016040528060018152602001603160f81b815250858585818181818160059080519060200190620000bd92919062000367565b508051620000d390600690602084019062000367565b50504660a052503060c052620000e8620001ab565b60805250620000f990508362000231565b50508251602080850191909120835191840191909120610160829052610180819052466101205290915060008051602062003ba0833981519152620001838184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101005230610140526101a05250620001a192508391505062000283565b50505050620005c4565b600060008051602062003ba0833981519152620001c7620002cd565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b606060058054620002de9062000587565b80601f01602080910402602001604051908101604052809291908181526020018280546200030c9062000587565b80156200035d5780601f1062000331576101008083540402835291602001916200035d565b820191906000526020600020905b8154815290600101906020018083116200033f57829003601f168201915b5050505050905090565b828054620003759062000587565b90600052602060002090601f016020900481019282620003995760008555620003e4565b82601f10620003b457805160ff1916838001178555620003e4565b82800160010185558215620003e4579182015b82811115620003e4578251825591602001919060010190620003c7565b50620003f2929150620003f6565b5090565b5b80821115620003f25760008155600101620003f7565b80516001600160a01b03811681146200042557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200045257600080fd5b81516001600160401b03808211156200046f576200046f6200042a565b604051601f8301601f19908116603f011681019082821181831017156200049a576200049a6200042a565b81604052838152602092508683858801011115620004b757600080fd5b600091505b83821015620004db5785820183015181830184015290820190620004bc565b83821115620004ed5760008385830101525b9695505050505050565b600080600080608085870312156200050e57600080fd5b62000519856200040d565b60208601519094506001600160401b03808211156200053757600080fd5b620005458883890162000440565b945060408701519150808211156200055c57600080fd5b506200056b8782880162000440565b9250506200057c606086016200040d565b905092959194509250565b600181811c908216806200059c57607f821691505b60208210811415620005be57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516135606200064060003960006129560152600061299801526000612977015260006128db015260006129050152600061292f01526000610ffa0152600061075a01526000610784015260006107ae01526135606000f3fe6080604052600436106101995760003560e01c806379cc6790116100dd57806379cc6790146103ed5780637ecebe001461040d5780638da5cb5b1461042d5780638e539e8c146104425780638f0fefbb14610462578063938e3d7b1461047557806395d89b41146104955780639ab24eb0146104aa578063a457c2d7146104ca578063a9059cbb146104ea578063ac9650d81461050a578063c1b606e214610537578063c3cda52014610576578063d505accf14610596578063dd62ed3e146105b6578063e8a3d485146105d6578063f1127ed8146105eb57600080fd5b806306fdde031461019e578063079fe40e146101c9578063095ea7b3146101f657806313af40351461022657806318160ddd1461024857806323b872dd14610267578063313ce567146102875780633644e515146102a357806339509351146102b85780633a46b1a8146102d857806342966c68146102f8578063449a52f814610318578063587cde1e146103385780635c19a95c146103585780636f4f2837146103785780636fcfff451461039857806370a08231146103cd575b600080fd5b3480156101aa57600080fd5b506101b3610635565b6040516101c09190612d6a565b60405180910390f35b3480156101d557600080fd5b506101de6106c7565b6040516001600160a01b0390911681526020016101c0565b34801561020257600080fd5b50610216610211366004612d99565b6106d6565b60405190151581526020016101c0565b34801561023257600080fd5b50610246610241366004612dc3565b6106ee565b005b34801561025457600080fd5b506004545b6040519081526020016101c0565b34801561027357600080fd5b50610216610282366004612dde565b610727565b34801561029357600080fd5b50604051601281526020016101c0565b3480156102af57600080fd5b5061025961074d565b3480156102c457600080fd5b506102166102d3366004612d99565b6107dd565b3480156102e457600080fd5b506102596102f3366004612d99565b61081c565b34801561030457600080fd5b50610246610313366004612e1a565b61085f565b34801561032457600080fd5b50610246610333366004612d99565b610891565b34801561034457600080fd5b506101de610353366004612dc3565b61090a565b34801561036457600080fd5b50610246610373366004612dc3565b610928565b34801561038457600080fd5b50610246610393366004612dc3565b610932565b3480156103a457600080fd5b506103b86103b3366004612dc3565b61095f565b60405163ffffffff90911681526020016101c0565b3480156103d957600080fd5b506102596103e8366004612dc3565b610987565b3480156103f957600080fd5b50610246610408366004612d99565b6109a2565b34801561041957600080fd5b50610259610428366004612dc3565b610a57565b34801561043957600080fd5b506101de610a75565b34801561044e57600080fd5b5061025961045d366004612e1a565b610a84565b6101de610470366004612e33565b610ab0565b34801561048157600080fd5b50610246610490366004612ed5565b610ba4565b3480156104a157600080fd5b506101b3610bd1565b3480156104b657600080fd5b506102596104c5366004612dc3565b610be0565b3480156104d657600080fd5b506102166104e5366004612d99565b610c66565b3480156104f657600080fd5b50610216610505366004612d99565b610d03565b34801561051657600080fd5b5061052a610525366004612f85565b610d11565b6040516101c09190612ff9565b34801561054357600080fd5b50610557610552366004612e33565b610e05565b6040805192151583526001600160a01b039091166020830152016101c0565b34801561058257600080fd5b5061024661059136600461306c565b610e48565b3480156105a257600080fd5b506102466105b13660046130c4565b610fa6565b3480156105c257600080fd5b506102596105d136600461312e565b61110c565b3480156105e257600080fd5b506101b3611137565b3480156105f757600080fd5b5061060b610606366004613161565b6111c5565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101c0565b606060058054610644906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610670906131a1565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050905090565b600b546001600160a01b031690565b6000336106e4818585611248565b5060019392505050565b6106f661136c565b61071b5760405162461bcd60e51b8152600401610712906131d6565b60405180910390fd5b6107248161138f565b50565b6000336107358582856113e1565b61074085858561145b565b60019150505b9392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107a657507f000000000000000000000000000000000000000000000000000000000000000046145b156107d057507f000000000000000000000000000000000000000000000000000000000000000090565b6107d861161d565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906106e49082908690610817908790613214565b611248565b600043821061083d5760405162461bcd60e51b81526004016107129061322c565b6001600160a01b0383166000908152600960205260409020610746908361169f565b8061086933610987565b10156108875760405162461bcd60e51b815260040161071290613263565b610724338261175b565b61089961136c565b6108df5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b6044820152606401610712565b806108fc5760405162461bcd60e51b81526004016107129061328f565b6109068282611773565b5050565b6001600160a01b039081166000908152600860205260409020541690565b61072433826117fd565b61093a61136c565b6109565760405162461bcd60e51b8152600401610712906131d6565b6107248161187d565b6001600160a01b038116600090815260096020526040812054610981906118c7565b92915050565b6001600160a01b031660009081526002602052604090205490565b6109aa61136c565b6109f05760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b6044820152606401610712565b806109fa83610987565b1015610a185760405162461bcd60e51b815260040161071290613263565b600081610a25843361110c565b610a2f91906132bd565b9050610a3d83336000611248565b610a48833383611248565b610a52838361175b565b505050565b6001600160a01b038116600090815260076020526040812054610981565b6001546001600160a01b031690565b6000438210610aa55760405162461bcd60e51b81526004016107129061322c565b610981600a8361169f565b600080846040013511610ad55760405162461bcd60e51b81526004016107129061328f565b610ae0848484611930565b9050600080610af26020870187612dc3565b6001600160a01b031614610b1257610b0d6020860186612dc3565b610b14565b335b9050610b43610b296040870160208801612dc3565b610b3960a0880160808901612dc3565b8760600135611abe565b610b51818660400135611773565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610b9491906132eb565b60405180910390a3509392505050565b610bac61136c565b610bc85760405162461bcd60e51b8152600401610712906131d6565b61072481611bdc565b606060068054610644906131a1565b6001600160a01b0381166000908152600960205260408120548015610c53576001600160a01b0383166000908152600960205260409020610c226001836132bd565b81548110610c3257610c32613381565b600091825260209091200154600160201b90046001600160e01b0316610c56565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610ceb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610712565b610cf88286868403611248565b506001949350505050565b6000336106e481858561145b565b6060816001600160401b03811115610d2b57610d2b612ebf565b604051908082528060200260200182016040528015610d5e57816020015b6060815260200190600190039081610d495790505b50905060005b82811015610dfe57610dce30858584818110610d8257610d82613381565b9050602002810190610d949190613397565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611cbd92505050565b828281518110610de057610de0613381565b60200260200101819052508080610df6906133dd565b915050610d64565b5092915050565b600080610e13858585611ce2565b60e08601356000908152600c602052604090205490915060ff16158015610e3e5750610e3e81611d46565b9150935093915050565b83421115610e985760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610712565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610f2c610f0c61074d565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610f3c82878787611d6b565b9050610f4781611d93565b8814610f915760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610712565b610f9b818a6117fd565b505050505050505050565b83421115610ff65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610712565b60007f00000000000000000000000000000000000000000000000000000000000000008888886110258c611d93565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611082610f0c61074d565b9050600061109282878787611d6b565b9050896001600160a01b0316816001600160a01b0316146110f55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610712565b6111008a8a8a611248565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054611144906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611170906131a1565b80156111bd5780601f10611192576101008083540402835291602001916111bd565b820191906000526020600020905b8154815290600101906020018083116111a057829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff841690811061120957611209613381565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b0383166112aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610712565b6001600160a01b03821661130b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610712565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611376610a75565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006113ed848461110c565b9050600019811461145557818110156114485760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610712565b6114558484848403611248565b50505050565b6001600160a01b0383166114bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610712565b6001600160a01b0382166115215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610712565b6001600160a01b038316600090815260026020526040902054818110156115995760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610712565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906115d0908490613214565b92505081905550826001600160a01b0316846001600160a01b031660008051602061350b8339815191528460405161160a91815260200190565b60405180910390a3611455848484611dbb565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611648610635565b805160209182012060405161168493927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69146913091016133f8565b60405160208183030381529060405280519060200120905090565b8154600090815b818110156117035760006116ba8284611dd6565b9050848682815481106116cf576116cf613381565b60009182526020909120015463ffffffff1611156116ef578092506116fd565b6116fa816001613214565b91505b506116a6565b811561174657846117156001846132bd565b8154811061172557611725613381565b600091825260209091200154600160201b90046001600160e01b0316611749565b60005b6001600160e01b031695945050505050565b6117658282611df1565b611455600a611f3483611f40565b61177d82826120b7565b6004546001600160e01b0310156117ef5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610712565b611455600a61218c83611f40565b60006118088361090a565b9050600061181584610987565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611455828483612198565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff82111561192c5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610712565b5090565b60008061193e858585610e05565b92509050806119815760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610712565b4261199260c0870160a08801613424565b6001600160801b0316111580156119c157506119b460e0860160c08701613424565b6001600160801b03164211155b6119ff5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610712565b6000611a0e6020870187612dc3565b6001600160a01b03161415611a5b5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610712565b6000856040013511611a975760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610712565b5060e0909301356000908152600c60205260409020805460ff191660011790555090919050565b80611afa573415610a525760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610712565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611b6c57803414611b675760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610712565b611baf565b3415611baf5760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b6044820152606401610712565b60006001600160a01b03841615611bc65783611bce565b611bce6106c7565b9050611455833383856122d5565b6000808054611bea906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611c16906131a1565b8015611c635780601f10611c3857610100808354040283529160200191611c63565b820191906000526020600020905b815481529060010190602001808311611c4657829003601f168201915b50508551939450611c7f93600093506020870192509050612c82565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611cb192919061343f565b60405180910390a15050565b606061074683836040518060600160405280602781526020016134e46027913961231f565b6000611d3e83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d389250611d2c91508890506123fa565b805190602001206124ee565b906124fb565b949350505050565b6000611d50610a75565b6001600160a01b0316826001600160a01b0316149050919050565b6000806000611d7c8787878761251f565b91509150611d89816125d9565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610a52611dc78461090a565b611dd08461090a565b83612198565b6000611de5600284841861346d565b61074690848416613214565b6001600160a01b038216611e515760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610712565b6001600160a01b03821660009081526002602052604090205481811015611ec55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610712565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611ef49084906132bd565b90915550506040518281526000906001600160a01b0385169060008051602061350b8339815191529060200160405180910390a3610a5283600084611dbb565b600061074682846132bd565b825460009081908015611f8a5785611f596001836132bd565b81548110611f6957611f69613381565b600091825260209091200154600160201b90046001600160e01b0316611f8d565b60005b6001600160e01b03169250611fa683858763ffffffff16565b9150600081118015611fe457504386611fc06001846132bd565b81548110611fd057611fd0613381565b60009182526020909120015463ffffffff16145b1561204457611ff282612722565b86611ffe6001846132bd565b8154811061200e5761200e613381565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506120ae565b856040518060400160405280612059436118c7565b63ffffffff16815260200161206d85612722565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b03821661210d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610712565b806004600082825461211f9190613214565b90915550506001600160a01b0382166000908152600260205260408120805483929061214c908490613214565b90915550506040518181526001600160a01b0383169060009060008051602061350b8339815191529060200160405180910390a361090660008383611dbb565b60006107468284613214565b816001600160a01b0316836001600160a01b0316141580156121ba5750600081115b15610a52576001600160a01b03831615612248576001600160a01b038316600090815260096020526040812081906121f590611f3485611f40565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161223d929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a52576001600160a01b0382166000908152600960205260408120819061227e9061218c85611f40565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516122c6929190918252602082015260400190565b60405180910390a25050505050565b806122df57611455565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156123135761230e828261278b565b611455565b6114558484848461282d565b606061232a84612886565b6123855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610712565b600080856001600160a01b0316856040516123a0919061348f565b600060405180830381855af49150503d80600081146123db576040519150601f19603f3d011682016040523d82523d6000602084013e6123e0565b606091505b50915091506123f0828286612895565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e161242a6020840184612dc3565b61243a6040850160208601612dc3565b6040850135606086013561245460a0880160808901612dc3565b61246460c0890160a08a01613424565b61247460e08a0160c08b01613424565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610981610f0c6128ce565b600080600061250a85856129bc565b91509150612517816125d9565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561254c57506000905060036125d0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156125a0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166125c9576000600192509250506125d0565b9150600090505b94509492505050565b60008160048111156125ed576125ed6134ab565b14156125f65750565b600181600481111561260a5761260a6134ab565b14156126535760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610712565b6002816004811115612667576126676134ab565b14156126b55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610712565b60038160048111156126c9576126c96134ab565b14156107245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610712565b60006001600160e01b0382111561192c5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610712565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127d8576040519150601f19603f3d011682016040523d82523d6000602084013e6127dd565b606091505b5050905080610a525760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610712565b816001600160a01b0316836001600160a01b0316141561284c57611455565b6001600160a01b0383163014156128715761230e6001600160a01b0385168383612a02565b6114556001600160a01b038516848484612a65565b6001600160a01b03163b151590565b606083156128a4575081610746565b8251156128b45782518084602001fd5b8160405162461bcd60e51b81526004016107129190612d6a565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561292757507f000000000000000000000000000000000000000000000000000000000000000046145b1561295157507f000000000000000000000000000000000000000000000000000000000000000090565b6107d87f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612a9d565b6000808251604114156129f35760208301516040840151606085015160001a6129e78782858561251f565b945094505050506129fb565b506000905060025b9250929050565b6040516001600160a01b038316602482015260448101829052610a5290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ad7565b6040516001600160a01b03808516602483015283166044820152606481018290526114559085906323b872dd60e01b90608401612a2e565b60008383834630604051602001612ab89594939291906133f8565b6040516020818303038152906040528051906020012090509392505050565b6000612b2c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ba99092919063ffffffff16565b805190915015610a525780806020019051810190612b4a91906134c1565b610a525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610712565b6060611d3e848460008585612bbd85612886565b612c095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610712565b600080866001600160a01b03168587604051612c25919061348f565b60006040518083038185875af1925050503d8060008114612c62576040519150601f19603f3d011682016040523d82523d6000602084013e612c67565b606091505b5091509150612c77828286612895565b979650505050505050565b828054612c8e906131a1565b90600052602060002090601f016020900481019282612cb05760008555612cf6565b82601f10612cc957805160ff1916838001178555612cf6565b82800160010185558215612cf6579182015b82811115612cf6578251825591602001919060010190612cdb565b5061192c9291505b8082111561192c5760008155600101612cfe565b60005b83811015612d2d578181015183820152602001612d15565b838111156114555750506000910152565b60008151808452612d56816020860160208601612d12565b601f01601f19169290920160200192915050565b6020815260006107466020830184612d3e565b80356001600160a01b0381168114612d9457600080fd5b919050565b60008060408385031215612dac57600080fd5b612db583612d7d565b946020939093013593505050565b600060208284031215612dd557600080fd5b61074682612d7d565b600080600060608486031215612df357600080fd5b612dfc84612d7d565b9250612e0a60208501612d7d565b9150604084013590509250925092565b600060208284031215612e2c57600080fd5b5035919050565b6000806000838503610120811215612e4a57600080fd5b61010080821215612e5a57600080fd5b85945084013590506001600160401b0380821115612e7757600080fd5b818601915086601f830112612e8b57600080fd5b813581811115612e9a57600080fd5b876020828501011115612eac57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215612ee757600080fd5b81356001600160401b0380821115612efe57600080fd5b818401915084601f830112612f1257600080fd5b813581811115612f2457612f24612ebf565b604051601f8201601f19908116603f01168101908382118183101715612f4c57612f4c612ebf565b81604052828152876020848701011115612f6557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060208385031215612f9857600080fd5b82356001600160401b0380821115612faf57600080fd5b818501915085601f830112612fc357600080fd5b813581811115612fd257600080fd5b8660208260051b8501011115612fe757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561304e57603f1988860301845261303c858351612d3e565b94509285019290850190600101613020565b5092979650505050505050565b803560ff81168114612d9457600080fd5b60008060008060008060c0878903121561308557600080fd5b61308e87612d7d565b955060208701359450604087013593506130aa6060880161305b565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156130df57600080fd5b6130e888612d7d565b96506130f660208901612d7d565b955060408801359450606088013593506131126080890161305b565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561314157600080fd5b61314a83612d7d565b915061315860208401612d7d565b90509250929050565b6000806040838503121561317457600080fd5b61317d83612d7d565b9150602083013563ffffffff8116811461319657600080fd5b809150509250929050565b600181811c908216806131b557607f821691505b60208210811415611db557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613227576132276131fe565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b6000828210156132cf576132cf6131fe565b500390565b80356001600160801b0381168114612d9457600080fd5b61010081016001600160a01b038061330285612d7d565b1683528061331260208601612d7d565b16602084015260408401356040840152606084013560608401528061333960808601612d7d565b1660808401525061334c60a084016132d4565b6001600160801b0381811660a08501528061336960c087016132d4565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126133ae57600080fd5b8301803591506001600160401b038211156133c857600080fd5b6020019150368190038213156129fb57600080fd5b60006000198214156133f1576133f16131fe565b5060010190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60006020828403121561343657600080fd5b610746826132d4565b6040815260006134526040830185612d3e565b82810360208401526134648185612d3e565b95945050505050565b60008261348a57634e487b7160e01b600052601260045260246000fd5b500490565b600082516134a1818460208701612d12565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156134d357600080fd5b8151801515811461074657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122069d6478f93aca08ea1fae08532569a26b48dcf5f6b8d5e64e4fad9b57d3f2f4164736f6c634300080c00338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
    "sourceMap": "850:3336:26:-:0;;;1440:95:319;1387:148;;1113:255:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:333;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:333;;;1271:13:26;1286:5;1293:7;1416:5:27;1423:7;1829:5:319;1836:7;2083:5:318;2075;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2098:17:318;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1874:13:319::1;1855:32;::::0;-1:-1:-1;1920:4:319::1;1897:28;::::0;1962:23:::1;:21;:23::i;:::-;1935:50;::::0;-1:-1:-1;1442:26:27::1;::::0;-1:-1:-1;1454:13:27;1442:11:::1;:26::i;:::-;-1:-1:-1::0;;2541:22:333;;;;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;2541:22;;-1:-1:-1;;;;;;;;;;;;2923:58:333;2651:117;2541:22;2597:25;3633:73;;;;;;2215:25:641;;;2256:18;;;2249:34;;;2299:18;;;2292:34;;;3677:13:333;2342:18:641;;;2335:34;3700:4:333;2385:19:641;;;2378:61;3597:7:333;;2187:19:641;;3633:73:333;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;1312:49:26::1;::::0;-1:-1:-1;1339:21:26;;-1:-1:-1;;1312:26:26::1;:49::i;:::-;1113:255:::0;;;;850:3336;;3293:438:319;3348:7;-1:-1:-1;;;;;;;;;;;3578:6:319;:4;:6::i;:::-;3562:24;;;;;;;3413:297;;;;;;2215:25:641;;;;2256:18;;;2249:34;;;;3608:14:319;2299:18:641;;;2292:34;3644:13:319;2342:18:641;;;2335:34;3687:4:319;2385:19:641;;;2378:61;2187:19;;3413:297:319;;;;;;;;;;;;3386:338;;;;;;3367:357;;3293:438;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;2187:98:318:-;2241:13;2273:5;2266:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98;:::o;850:3336:26:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:3336:26;;;-1:-1:-1;850:3336:26;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:641;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:641;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:641;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:641:o;1218:733::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1452:40;1482:9;1452:40;:::i;:::-;1536:2;1521:18;;1515:25;1442:50;;-1:-1:-1;;;;;;1589:14:641;;;1586:34;;;1616:1;1613;1606:12;1586:34;1639:61;1692:7;1683:6;1672:9;1668:22;1639:61;:::i;:::-;1629:71;;1746:2;1735:9;1731:18;1725:25;1709:41;;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;;1814:63;1869:7;1858:8;1847:9;1843:24;1814:63;:::i;:::-;1804:73;;;1896:49;1941:2;1930:9;1926:18;1896:49;:::i;:::-;1886:59;;1218:733;;;;;;;:::o;2450:380::-;2529:1;2525:12;;;;2572;;;2593:61;;2647:4;2639:6;2635:17;2625:27;;2593:61;2700:2;2692:6;2689:14;2669:18;2666:38;2663:161;;;2746:10;2741:3;2737:20;2734:1;2727:31;2781:4;2778:1;2771:15;2809:4;2806:1;2799:15;2663:161;;2450:380;;;:::o;:::-;850:3336:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101995760003560e01c806379cc6790116100dd57806379cc6790146103ed5780637ecebe001461040d5780638da5cb5b1461042d5780638e539e8c146104425780638f0fefbb14610462578063938e3d7b1461047557806395d89b41146104955780639ab24eb0146104aa578063a457c2d7146104ca578063a9059cbb146104ea578063ac9650d81461050a578063c1b606e214610537578063c3cda52014610576578063d505accf14610596578063dd62ed3e146105b6578063e8a3d485146105d6578063f1127ed8146105eb57600080fd5b806306fdde031461019e578063079fe40e146101c9578063095ea7b3146101f657806313af40351461022657806318160ddd1461024857806323b872dd14610267578063313ce567146102875780633644e515146102a357806339509351146102b85780633a46b1a8146102d857806342966c68146102f8578063449a52f814610318578063587cde1e146103385780635c19a95c146103585780636f4f2837146103785780636fcfff451461039857806370a08231146103cd575b600080fd5b3480156101aa57600080fd5b506101b3610635565b6040516101c09190612d6a565b60405180910390f35b3480156101d557600080fd5b506101de6106c7565b6040516001600160a01b0390911681526020016101c0565b34801561020257600080fd5b50610216610211366004612d99565b6106d6565b60405190151581526020016101c0565b34801561023257600080fd5b50610246610241366004612dc3565b6106ee565b005b34801561025457600080fd5b506004545b6040519081526020016101c0565b34801561027357600080fd5b50610216610282366004612dde565b610727565b34801561029357600080fd5b50604051601281526020016101c0565b3480156102af57600080fd5b5061025961074d565b3480156102c457600080fd5b506102166102d3366004612d99565b6107dd565b3480156102e457600080fd5b506102596102f3366004612d99565b61081c565b34801561030457600080fd5b50610246610313366004612e1a565b61085f565b34801561032457600080fd5b50610246610333366004612d99565b610891565b34801561034457600080fd5b506101de610353366004612dc3565b61090a565b34801561036457600080fd5b50610246610373366004612dc3565b610928565b34801561038457600080fd5b50610246610393366004612dc3565b610932565b3480156103a457600080fd5b506103b86103b3366004612dc3565b61095f565b60405163ffffffff90911681526020016101c0565b3480156103d957600080fd5b506102596103e8366004612dc3565b610987565b3480156103f957600080fd5b50610246610408366004612d99565b6109a2565b34801561041957600080fd5b50610259610428366004612dc3565b610a57565b34801561043957600080fd5b506101de610a75565b34801561044e57600080fd5b5061025961045d366004612e1a565b610a84565b6101de610470366004612e33565b610ab0565b34801561048157600080fd5b50610246610490366004612ed5565b610ba4565b3480156104a157600080fd5b506101b3610bd1565b3480156104b657600080fd5b506102596104c5366004612dc3565b610be0565b3480156104d657600080fd5b506102166104e5366004612d99565b610c66565b3480156104f657600080fd5b50610216610505366004612d99565b610d03565b34801561051657600080fd5b5061052a610525366004612f85565b610d11565b6040516101c09190612ff9565b34801561054357600080fd5b50610557610552366004612e33565b610e05565b6040805192151583526001600160a01b039091166020830152016101c0565b34801561058257600080fd5b5061024661059136600461306c565b610e48565b3480156105a257600080fd5b506102466105b13660046130c4565b610fa6565b3480156105c257600080fd5b506102596105d136600461312e565b61110c565b3480156105e257600080fd5b506101b3611137565b3480156105f757600080fd5b5061060b610606366004613161565b6111c5565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101c0565b606060058054610644906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610670906131a1565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050905090565b600b546001600160a01b031690565b6000336106e4818585611248565b5060019392505050565b6106f661136c565b61071b5760405162461bcd60e51b8152600401610712906131d6565b60405180910390fd5b6107248161138f565b50565b6000336107358582856113e1565b61074085858561145b565b60019150505b9392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107a657507f000000000000000000000000000000000000000000000000000000000000000046145b156107d057507f000000000000000000000000000000000000000000000000000000000000000090565b6107d861161d565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906106e49082908690610817908790613214565b611248565b600043821061083d5760405162461bcd60e51b81526004016107129061322c565b6001600160a01b0383166000908152600960205260409020610746908361169f565b8061086933610987565b10156108875760405162461bcd60e51b815260040161071290613263565b610724338261175b565b61089961136c565b6108df5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b6044820152606401610712565b806108fc5760405162461bcd60e51b81526004016107129061328f565b6109068282611773565b5050565b6001600160a01b039081166000908152600860205260409020541690565b61072433826117fd565b61093a61136c565b6109565760405162461bcd60e51b8152600401610712906131d6565b6107248161187d565b6001600160a01b038116600090815260096020526040812054610981906118c7565b92915050565b6001600160a01b031660009081526002602052604090205490565b6109aa61136c565b6109f05760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b6044820152606401610712565b806109fa83610987565b1015610a185760405162461bcd60e51b815260040161071290613263565b600081610a25843361110c565b610a2f91906132bd565b9050610a3d83336000611248565b610a48833383611248565b610a52838361175b565b505050565b6001600160a01b038116600090815260076020526040812054610981565b6001546001600160a01b031690565b6000438210610aa55760405162461bcd60e51b81526004016107129061322c565b610981600a8361169f565b600080846040013511610ad55760405162461bcd60e51b81526004016107129061328f565b610ae0848484611930565b9050600080610af26020870187612dc3565b6001600160a01b031614610b1257610b0d6020860186612dc3565b610b14565b335b9050610b43610b296040870160208801612dc3565b610b3960a0880160808901612dc3565b8760600135611abe565b610b51818660400135611773565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610b9491906132eb565b60405180910390a3509392505050565b610bac61136c565b610bc85760405162461bcd60e51b8152600401610712906131d6565b61072481611bdc565b606060068054610644906131a1565b6001600160a01b0381166000908152600960205260408120548015610c53576001600160a01b0383166000908152600960205260409020610c226001836132bd565b81548110610c3257610c32613381565b600091825260209091200154600160201b90046001600160e01b0316610c56565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610ceb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610712565b610cf88286868403611248565b506001949350505050565b6000336106e481858561145b565b6060816001600160401b03811115610d2b57610d2b612ebf565b604051908082528060200260200182016040528015610d5e57816020015b6060815260200190600190039081610d495790505b50905060005b82811015610dfe57610dce30858584818110610d8257610d82613381565b9050602002810190610d949190613397565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611cbd92505050565b828281518110610de057610de0613381565b60200260200101819052508080610df6906133dd565b915050610d64565b5092915050565b600080610e13858585611ce2565b60e08601356000908152600c602052604090205490915060ff16158015610e3e5750610e3e81611d46565b9150935093915050565b83421115610e985760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610712565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610f2c610f0c61074d565b8360405161190160f01b8152600281019290925260228201526042902090565b90506000610f3c82878787611d6b565b9050610f4781611d93565b8814610f915760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b6044820152606401610712565b610f9b818a6117fd565b505050505050505050565b83421115610ff65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610712565b60007f00000000000000000000000000000000000000000000000000000000000000008888886110258c611d93565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611082610f0c61074d565b9050600061109282878787611d6b565b9050896001600160a01b0316816001600160a01b0316146110f55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610712565b6111008a8a8a611248565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054611144906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611170906131a1565b80156111bd5780601f10611192576101008083540402835291602001916111bd565b820191906000526020600020905b8154815290600101906020018083116111a057829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff841690811061120957611209613381565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b0383166112aa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610712565b6001600160a01b03821661130b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610712565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611376610a75565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006113ed848461110c565b9050600019811461145557818110156114485760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610712565b6114558484848403611248565b50505050565b6001600160a01b0383166114bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610712565b6001600160a01b0382166115215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610712565b6001600160a01b038316600090815260026020526040902054818110156115995760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610712565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906115d0908490613214565b92505081905550826001600160a01b0316846001600160a01b031660008051602061350b8339815191528460405161160a91815260200190565b60405180910390a3611455848484611dbb565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611648610635565b805160209182012060405161168493927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69146913091016133f8565b60405160208183030381529060405280519060200120905090565b8154600090815b818110156117035760006116ba8284611dd6565b9050848682815481106116cf576116cf613381565b60009182526020909120015463ffffffff1611156116ef578092506116fd565b6116fa816001613214565b91505b506116a6565b811561174657846117156001846132bd565b8154811061172557611725613381565b600091825260209091200154600160201b90046001600160e01b0316611749565b60005b6001600160e01b031695945050505050565b6117658282611df1565b611455600a611f3483611f40565b61177d82826120b7565b6004546001600160e01b0310156117ef5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610712565b611455600a61218c83611f40565b60006118088361090a565b9050600061181584610987565b6001600160a01b0385811660008181526008602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611455828483612198565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff82111561192c5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610712565b5090565b60008061193e858585610e05565b92509050806119815760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606401610712565b4261199260c0870160a08801613424565b6001600160801b0316111580156119c157506119b460e0860160c08701613424565b6001600160801b03164211155b6119ff5760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610712565b6000611a0e6020870187612dc3565b6001600160a01b03161415611a5b5760405162461bcd60e51b81526020600482015260136024820152721c9958da5c1a595b9d081d5b9919599a5b9959606a1b6044820152606401610712565b6000856040013511611a975760405162461bcd60e51b8152602060048201526005602482015264302071747960d81b6044820152606401610712565b5060e0909301356000908152600c60205260409020805460ff191660011790555090919050565b80611afa573415610a525760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b6044820152606401610712565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611b6c57803414611b675760405162461bcd60e51b815260206004820152601660248201527526bab9ba1039b2b732103a37ba30b610383934b1b29760511b6044820152606401610712565b611baf565b3415611baf5760405162461bcd60e51b81526020600482015260126024820152716d73672076616c7565206e6f74207a65726f60701b6044820152606401610712565b60006001600160a01b03841615611bc65783611bce565b611bce6106c7565b9050611455833383856122d5565b6000808054611bea906131a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611c16906131a1565b8015611c635780601f10611c3857610100808354040283529160200191611c63565b820191906000526020600020905b815481529060010190602001808311611c4657829003601f168201915b50508551939450611c7f93600093506020870192509050612c82565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611cb192919061343f565b60405180910390a15050565b606061074683836040518060600160405280602781526020016134e46027913961231f565b6000611d3e83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d389250611d2c91508890506123fa565b805190602001206124ee565b906124fb565b949350505050565b6000611d50610a75565b6001600160a01b0316826001600160a01b0316149050919050565b6000806000611d7c8787878761251f565b91509150611d89816125d9565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b610a52611dc78461090a565b611dd08461090a565b83612198565b6000611de5600284841861346d565b61074690848416613214565b6001600160a01b038216611e515760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610712565b6001600160a01b03821660009081526002602052604090205481811015611ec55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610712565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611ef49084906132bd565b90915550506040518281526000906001600160a01b0385169060008051602061350b8339815191529060200160405180910390a3610a5283600084611dbb565b600061074682846132bd565b825460009081908015611f8a5785611f596001836132bd565b81548110611f6957611f69613381565b600091825260209091200154600160201b90046001600160e01b0316611f8d565b60005b6001600160e01b03169250611fa683858763ffffffff16565b9150600081118015611fe457504386611fc06001846132bd565b81548110611fd057611fd0613381565b60009182526020909120015463ffffffff16145b1561204457611ff282612722565b86611ffe6001846132bd565b8154811061200e5761200e613381565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506120ae565b856040518060400160405280612059436118c7565b63ffffffff16815260200161206d85612722565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b6001600160a01b03821661210d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610712565b806004600082825461211f9190613214565b90915550506001600160a01b0382166000908152600260205260408120805483929061214c908490613214565b90915550506040518181526001600160a01b0383169060009060008051602061350b8339815191529060200160405180910390a361090660008383611dbb565b60006107468284613214565b816001600160a01b0316836001600160a01b0316141580156121ba5750600081115b15610a52576001600160a01b03831615612248576001600160a01b038316600090815260096020526040812081906121f590611f3485611f40565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161223d929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610a52576001600160a01b0382166000908152600960205260408120819061227e9061218c85611f40565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516122c6929190918252602082015260400190565b60405180910390a25050505050565b806122df57611455565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156123135761230e828261278b565b611455565b6114558484848461282d565b606061232a84612886565b6123855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610712565b600080856001600160a01b0316856040516123a0919061348f565b600060405180830381855af49150503d80600081146123db576040519150601f19603f3d011682016040523d82523d6000602084013e6123e0565b606091505b50915091506123f0828286612895565b9695505050505050565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e161242a6020840184612dc3565b61243a6040850160208601612dc3565b6040850135606086013561245460a0880160808901612dc3565b61246460c0890160a08a01613424565b61247460e08a0160c08b01613424565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610981610f0c6128ce565b600080600061250a85856129bc565b91509150612517816125d9565b509392505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561254c57506000905060036125d0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156125a0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166125c9576000600192509250506125d0565b9150600090505b94509492505050565b60008160048111156125ed576125ed6134ab565b14156125f65750565b600181600481111561260a5761260a6134ab565b14156126535760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610712565b6002816004811115612667576126676134ab565b14156126b55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610712565b60038160048111156126c9576126c96134ab565b14156107245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610712565b60006001600160e01b0382111561192c5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610712565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127d8576040519150601f19603f3d011682016040523d82523d6000602084013e6127dd565b606091505b5050905080610a525760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610712565b816001600160a01b0316836001600160a01b0316141561284c57611455565b6001600160a01b0383163014156128715761230e6001600160a01b0385168383612a02565b6114556001600160a01b038516848484612a65565b6001600160a01b03163b151590565b606083156128a4575081610746565b8251156128b45782518084602001fd5b8160405162461bcd60e51b81526004016107129190612d6a565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561292757507f000000000000000000000000000000000000000000000000000000000000000046145b1561295157507f000000000000000000000000000000000000000000000000000000000000000090565b6107d87f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612a9d565b6000808251604114156129f35760208301516040840151606085015160001a6129e78782858561251f565b945094505050506129fb565b506000905060025b9250929050565b6040516001600160a01b038316602482015260448101829052610a5290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ad7565b6040516001600160a01b03808516602483015283166044820152606481018290526114559085906323b872dd60e01b90608401612a2e565b60008383834630604051602001612ab89594939291906133f8565b6040516020818303038152906040528051906020012090509392505050565b6000612b2c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ba99092919063ffffffff16565b805190915015610a525780806020019051810190612b4a91906134c1565b610a525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610712565b6060611d3e848460008585612bbd85612886565b612c095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610712565b600080866001600160a01b03168587604051612c25919061348f565b60006040518083038185875af1925050503d8060008114612c62576040519150601f19603f3d011682016040523d82523d6000602084013e612c67565b606091505b5091509150612c77828286612895565b979650505050505050565b828054612c8e906131a1565b90600052602060002090601f016020900481019282612cb05760008555612cf6565b82601f10612cc957805160ff1916838001178555612cf6565b82800160010185558215612cf6579182015b82811115612cf6578251825591602001919060010190612cdb565b5061192c9291505b8082111561192c5760008155600101612cfe565b60005b83811015612d2d578181015183820152602001612d15565b838111156114555750506000910152565b60008151808452612d56816020860160208601612d12565b601f01601f19169290920160200192915050565b6020815260006107466020830184612d3e565b80356001600160a01b0381168114612d9457600080fd5b919050565b60008060408385031215612dac57600080fd5b612db583612d7d565b946020939093013593505050565b600060208284031215612dd557600080fd5b61074682612d7d565b600080600060608486031215612df357600080fd5b612dfc84612d7d565b9250612e0a60208501612d7d565b9150604084013590509250925092565b600060208284031215612e2c57600080fd5b5035919050565b6000806000838503610120811215612e4a57600080fd5b61010080821215612e5a57600080fd5b85945084013590506001600160401b0380821115612e7757600080fd5b818601915086601f830112612e8b57600080fd5b813581811115612e9a57600080fd5b876020828501011115612eac57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208284031215612ee757600080fd5b81356001600160401b0380821115612efe57600080fd5b818401915084601f830112612f1257600080fd5b813581811115612f2457612f24612ebf565b604051601f8201601f19908116603f01168101908382118183101715612f4c57612f4c612ebf565b81604052828152876020848701011115612f6557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060208385031215612f9857600080fd5b82356001600160401b0380821115612faf57600080fd5b818501915085601f830112612fc357600080fd5b813581811115612fd257600080fd5b8660208260051b8501011115612fe757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561304e57603f1988860301845261303c858351612d3e565b94509285019290850190600101613020565b5092979650505050505050565b803560ff81168114612d9457600080fd5b60008060008060008060c0878903121561308557600080fd5b61308e87612d7d565b955060208701359450604087013593506130aa6060880161305b565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156130df57600080fd5b6130e888612d7d565b96506130f660208901612d7d565b955060408801359450606088013593506131126080890161305b565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561314157600080fd5b61314a83612d7d565b915061315860208401612d7d565b90509250929050565b6000806040838503121561317457600080fd5b61317d83612d7d565b9150602083013563ffffffff8116811461319657600080fd5b809150509250929050565b600181811c908216806131b557607f821691505b60208210811415611db557634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115613227576132276131fe565b500190565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526014908201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604082015260600190565b6000828210156132cf576132cf6131fe565b500390565b80356001600160801b0381168114612d9457600080fd5b61010081016001600160a01b038061330285612d7d565b1683528061331260208601612d7d565b16602084015260408401356040840152606084013560608401528061333960808601612d7d565b1660808401525061334c60a084016132d4565b6001600160801b0381811660a08501528061336960c087016132d4565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126133ae57600080fd5b8301803591506001600160401b038211156133c857600080fd5b6020019150368190038213156129fb57600080fd5b60006000198214156133f1576133f16131fe565b5060010190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60006020828403121561343657600080fd5b610746826132d4565b6040815260006134526040830185612d3e565b82810360208401526134648185612d3e565b95945050505050565b60008261348a57634e487b7160e01b600052601260045260246000fd5b500490565b600082516134a1818460208701612d12565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156134d357600080fd5b8151801515811461074657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122069d6478f93aca08ea1fae08532569a26b48dcf5f6b8d5e64e4fad9b57d3f2f4164736f6c634300080c0033",
    "sourceMap": "850:3336:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98:318;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:104:136;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;929:32:641;;;911:51;;899:2;884:18;676:104:136;765:203:641;4464:197:318;;;;;;;;;;-1:-1:-1;4464:197:318;;;;;:::i;:::-;;:::i;:::-;;;1575:14:641;;1568:22;1550:41;;1538:2;1523:18;4464:197:318;1410:187:641;1133:173:132;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;:::-;;3275:106:318;;;;;;;;;;-1:-1:-1;3362:12:318;;3275:106;;;1939:25:641;;;1927:2;1912:18;3275:106:318;1793:177:641;5223:286:318;;;;;;;;;;-1:-1:-1;5223:286:318;;;;;:::i;:::-;;:::i;3124:91::-;;;;;;;;;;-1:-1:-1;3124:91:318;;3206:2;2450:36:641;;2438:2;2423:18;3124:91:318;2308:184:641;3015:272:319;;;;;;;;;;;;;:::i;5904:236:318:-;;;;;;;;;;-1:-1:-1;5904:236:318;;;;;:::i;:::-;;:::i;2756:265:320:-;;;;;;;;;;-1:-1:-1;2756:265:320;;;;;:::i;:::-;;:::i;2434:166:27:-;;;;;;;;;;-1:-1:-1;2434:166:27;;;;;:::i;:::-;;:::i;2002:209::-;;;;;;;;;;-1:-1:-1;2002:209:27;;;;;:::i;:::-;;:::i;2149:126:320:-;;;;;;;;;;-1:-1:-1;2149:126:320;;;;;:::i;:::-;;:::i;5179:167::-;;;;;;;;;;-1:-1:-1;5179:167:320;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;1912:149:320:-;;;;;;;;;;-1:-1:-1;1912:149:320;;;;;:::i;:::-;;:::i;:::-;;;3038:10:641;3026:23;;;3008:42;;2996:2;2981:18;1912:149:320;2864:192:641;3439:125:318;;;;;;;;;;-1:-1:-1;3439:125:318;;;;;:::i;:::-;;:::i;2897:430:27:-;;;;;;;;;;-1:-1:-1;2897:430:27;;;;;:::i;:::-;;:::i;2765:126:319:-;;;;;;;;;;-1:-1:-1;2765:126:319;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;;;;:::i;3300:256:320:-;;;;;;;;;;-1:-1:-1;3300:256:320;;;;;:::i;:::-;;:::i;1806:966:26:-;;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2398:102:318:-;;;;;;;;;;;;;:::i;2354:209:320:-;;;;;;;;;;-1:-1:-1;2354:209:320;;;;;:::i;:::-;;:::i;6627:429:318:-;;;;;;;;;;-1:-1:-1;6627:429:318;;;;;:::i;:::-;;:::i;3760:189::-;;;;;;;;;;-1:-1:-1;3760:189:318;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;868:293:145:-;;;;;;;;;;-1:-1:-1;868:293:145;;;;;:::i;:::-;;:::i;:::-;;;;6520:14:641;;6513:22;6495:41;;-1:-1:-1;;;;;6572:32:641;;;6567:2;6552:18;;6545:60;6468:18;868:293:145;6327:284:641;5615:613:320;;;;;;;;;;-1:-1:-1;5615:613:320;;;;;:::i;:::-;;:::i;2053:651:319:-;;;;;;;;;;-1:-1:-1;2053:651:319;;;;;:::i;:::-;;:::i;4007:149:318:-;;;;;;;;;;-1:-1:-1;4007:149:318;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;1689:148:320:-;;;;;;;;;;-1:-1:-1;1689:148:320;;;;;:::i;:::-;;:::i;:::-;;;;8770:13:641;;8785:10;8766:30;8748:49;;8857:4;8845:17;;;8839:24;-1:-1:-1;;;;;8835:50:641;8813:20;;;8806:80;;;;8721:18;1689:148:320;8544:348:641;2187:98:318;2241:13;2273:5;2266:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:98;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;4464:197:318:-;4547:4;719:10:325;4601:32:318;719:10:325;4617:7:318;4626:6;4601:8;:32::i;:::-;-1:-1:-1;4650:4:318;;4464:197;-1:-1:-1;;;4464:197:318:o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;5223:286:318:-;5350:4;719:10:325;5406:38:318;5422:4;719:10:325;5437:6:318;5406:15;:38::i;:::-;5454:27;5464:4;5470:2;5474:6;5454:9;:27::i;:::-;5498:4;5491:11;;;5223:286;;;;;;:::o;3015:272:319:-;3073:7;3104:4;-1:-1:-1;;;;;3113:12:319;3096:29;;:66;;;;;3146:16;3129:13;:33;3096:66;3092:189;;;-1:-1:-1;3185:24:319;;3015:272::o;3092:189::-;3247:23;:21;:23::i;:::-;3240:30;;3015:272;:::o;5904:236:318:-;719:10:325;5992:4:318;6071:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6071:27:318;;;;;;;;;;5992:4;;719:10:325;6046:66:318;;719:10:325;;6071:27:318;;:40;;6101:10;;6071:40;:::i;:::-;6046:8;:66::i;2756:265:320:-;2854:7;2895:12;2881:11;:26;2873:70;;;;-1:-1:-1;;;2873:70:320;;;;;;;:::i;:::-;-1:-1:-1;;;;;2979:21:320;;;;;;:12;:21;;;;;2960:54;;3002:11;2960:18;:54::i;2434:166:27:-;2527:7;2500:23;719:10:325;3439:125:318;:::i;2500:23:27:-;:34;;2492:65;;;;-1:-1:-1;;;2492:65:27;;;;;;;:::i;:::-;2567:26;2573:10;2585:7;2567:5;:26::i;2002:209::-;2081:10;:8;:10::i;:::-;2073:46;;;;-1:-1:-1;;;2073:46:27;;10799:2:641;2073:46:27;;;10781:21:641;10838:2;10818:18;;;10811:30;-1:-1:-1;;;10857:18:641;;;10850:53;10920:18;;2073:46:27;10597:347:641;2073:46:27;2137:12;2129:45;;;;-1:-1:-1;;;2129:45:27;;;;;;;:::i;:::-;2185:19;2191:3;2196:7;2185:5;:19::i;:::-;2002:209;;:::o;2149:126:320:-;-1:-1:-1;;;;;2249:19:320;;;2223:7;2249:19;;;:10;:19;;;;;;;;2149:126::o;5179:167::-;5305:34;719:10:325;5329:9:320;5305;:34::i;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;1912:149:320:-;-1:-1:-1;;;;;2025:21:320;;1982:6;2025:21;;;:12;:21;;;;;:28;2007:47;;:17;:47::i;:::-;2000:54;1912:149;-1:-1:-1;;1912:149:320:o;3439:125:318:-;-1:-1:-1;;;;;3539:18:318;3513:7;3539:18;;;:9;:18;;;;;;;3439:125::o;2897:430:27:-;2994:10;:8;:10::i;:::-;2986:46;;;;-1:-1:-1;;;2986:46:27;;11500:2:641;2986:46:27;;;11482:21:641;11539:2;11519:18;;;11512:30;-1:-1:-1;;;11558:18:641;;;11551:53;11621:18;;2986:46:27;11298:347:641;2986:46:27;3073:7;3050:19;3060:8;3050:9;:19::i;:::-;:30;;3042:61;;;;-1:-1:-1;;;3042:61:27;;;;;;;:::i;:::-;3113:26;3176:7;3142:31;3152:8;3162:10;3142:9;:31::i;:::-;:41;;;;:::i;:::-;3113:70;;3193:33;3202:8;3212:10;3224:1;3193:8;:33::i;:::-;3236:50;3245:8;3255:10;3267:18;3236:8;:50::i;:::-;3296:24;3302:8;3312:7;3296:5;:24::i;:::-;2976:351;2897:430;;:::o;2765:126:319:-;-1:-1:-1;;;;;2860:14:319;;2834:7;2860:14;;;:7;:14;;;;;918::326;2860:24:319;827:112:326;871:86:132;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;3300:256:320:-;3387:7;3428:12;3414:11;:26;3406:70;;;;-1:-1:-1;;;3406:70:320;;;;;;;:::i;:::-;3493:56;3512:23;3537:11;3493:18;:56::i;1806:966:26:-;1953:14;2007:1;1991:4;:13;;;:17;1983:50;;;;-1:-1:-1;;;1983:50:26;;;;;;;:::i;:::-;2092:33;2108:4;2114:10;;2092:15;:33::i;:::-;2083:42;-1:-1:-1;2462:16:26;;2481:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;2481:21:26;;:44;;2518:7;;;;:4;:7;:::i;:::-;2481:44;;;2505:10;2481:44;2462:63;-1:-1:-1;2561:74:26;2582:25;;;;;;;;:::i;:::-;2609:13;;;;;;;;:::i;:::-;2624:4;:10;;;2561:20;:74::i;:::-;2670:30;2676:8;2686:4;:13;;;2670:5;:30::i;:::-;2750:8;-1:-1:-1;;;;;2716:49:26;2742:6;-1:-1:-1;;;;;2716:49:26;;2760:4;2716:49;;;;;;:::i;:::-;;;;;;;;1973:799;1806:966;;;;;:::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2398:102:318:-;2454:13;2486:7;2479:14;;;;;:::i;2354:209:320:-;-1:-1:-1;;;;;2460:21:320;;2427:7;2460:21;;;:12;:21;;;;;:28;2505:8;;:51;;-1:-1:-1;;;;;2520:21:320;;;;;;:12;:21;;;;;2542:7;2548:1;2542:3;:7;:::i;:::-;2520:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2520:36:320;;-1:-1:-1;;;;;2520:36:320;2505:51;;;2516:1;2505:51;-1:-1:-1;;;;;2498:58:320;;2354:209;-1:-1:-1;;;2354:209:320:o;6627:429:318:-;719:10:325;6720:4:318;6801:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6801:27:318;;;;;;;;;;6720:4;;719:10:325;6846:35:318;;;;6838:85;;;;-1:-1:-1;;;6838:85:318;;13233:2:641;6838:85:318;;;13215:21:641;13272:2;13252:18;;;13245:30;13311:34;13291:18;;;13284:62;-1:-1:-1;;;13362:18:641;;;13355:35;13407:19;;6838:85:318;13031:401:641;6838:85:318;6957:60;6966:5;6973:7;7001:15;6982:16;:34;6957:8;:60::i;:::-;-1:-1:-1;7045:4:318;;6627:429;-1:-1:-1;;;;6627:429:318:o;3760:189::-;3839:4;719:10:325;3893:28:318;719:10:325;3910:2:318;3914:6;3893:9;:28::i;698:319:127:-;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;868:293:145:-;1000:12;1014:14;1053:33;1069:4;1075:10;;1053:15;:33::i;:::-;1114:8;;;;1107:16;;;;:6;:16;;;;;;1044:42;;-1:-1:-1;1107:16:145;;1106:17;:48;;;;;1127:27;1147:6;1127:19;:27::i;:::-;1096:58;;868:293;;;;;;:::o;5615:613:320:-;5834:6;5815:15;:25;;5807:67;;;;-1:-1:-1;;;5807:67:320;;14305:2:641;5807:67:320;;;14287:21:641;14344:2;14324:18;;;14317:30;14383:31;14363:18;;;14356:59;14432:18;;5807:67:320;14103:353:641;5807:67:320;5916:58;;;1378:71;5916:58;;;14692:25:641;-1:-1:-1;;;;;14753:32:641;;14733:18;;;14726:60;;;;14802:18;;;14795:34;;;14845:18;;;14838:34;;;5885:18:320;;14664:19:641;;5916:58:320;;;;;;;;;;;;5906:69;;;;;;5885:90;;5985:12;6000:53;6022:18;:16;:18::i;:::-;6042:10;8686:4:332;8680:11;-1:-1:-1;;;8704:23:332;;8756:4;8747:14;;8740:39;;;;8808:4;8799:14;;8792:34;8862:4;8847:20;;;8486:397;6000:53:320;5985:68;;6063:14;6080:28;6094:4;6100:1;6103;6106;6080:13;:28::i;:::-;6063:45;;6136:17;6146:6;6136:9;:17::i;:::-;6127:5;:26;6119:64;;;;-1:-1:-1;;;6119:64:320;;15085:2:641;6119:64:320;;;15067:21:641;15124:2;15104:18;;;15097:30;-1:-1:-1;;;15143:18:641;;;15136:55;15208:18;;6119:64:320;14883:349:641;6119:64:320;6193:28;6203:6;6211:9;6193;:28::i;:::-;5797:431;;;5615:613;;;;;;:::o;2053:651:319:-;2288:8;2269:15;:27;;2261:69;;;;-1:-1:-1;;;2261:69:319;;15439:2:641;2261:69:319;;;15421:21:641;15478:2;15458:18;;;15451:30;15517:31;15497:18;;;15490:59;15566:18;;2261:69:319;15237:353:641;2261:69:319;2341:18;2383:16;2401:5;2408:7;2417:5;2424:16;2434:5;2424:9;:16::i;:::-;2372:79;;;;;;15882:25:641;;;;-1:-1:-1;;;;;15981:15:641;;;15961:18;;;15954:43;16033:15;;;;16013:18;;;16006:43;16065:18;;;16058:34;16108:19;;;16101:35;16152:19;;;16145:35;;;15854:19;;2372:79:319;;;;;;;;;;;;2362:90;;;;;;2341:111;;2463:12;2478:53;2500:18;:16;:18::i;2478:53::-;2463:68;;2542:14;2559:28;2573:4;2579:1;2582;2585;2559:13;:28::i;:::-;2542:45;;2615:5;-1:-1:-1;;;;;2605:15:319;:6;-1:-1:-1;;;;;2605:15:319;;2597:58;;;;-1:-1:-1;;;2597:58:319;;16393:2:641;2597:58:319;;;16375:21:641;16432:2;16412:18;;;16405:30;16471:32;16451:18;;;16444:60;16521:18;;2597:58:319;16191:354:641;2597:58:319;2666:31;2675:5;2682:7;2691:5;2666:8;:31::i;:::-;2251:453;;;2053:651;;;;;;;:::o;4007:149:318:-;-1:-1:-1;;;;;4122:18:318;;;4096:7;4122:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4007:149::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1689:148:320:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1804:21:320;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1797:33;;;;;;;;;1804:26;;1797:33;;;;;;-1:-1:-1;;;1797:33:320;;-1:-1:-1;;;;;1797:33:320;;;;;;;;;1689:148;-1:-1:-1;;;1689:148:320:o;10154:370:318:-;-1:-1:-1;;;;;10285:19:318;;10277:68;;;;-1:-1:-1;;;10277:68:318;;16752:2:641;10277:68:318;;;16734:21:641;16791:2;16771:18;;;16764:30;16830:34;16810:18;;;16803:62;-1:-1:-1;;;16881:18:641;;;16874:34;16925:19;;10277:68:318;16550:400:641;10277:68:318;-1:-1:-1;;;;;10363:21:318;;10355:68;;;;-1:-1:-1;;;10355:68:318;;17157:2:641;10355:68:318;;;17139:21:641;17196:2;17176:18;;;17169:30;17235:34;17215:18;;;17208:62;-1:-1:-1;;;17286:18:641;;;17279:32;17328:19;;10355:68:318;16955:398:641;10355:68:318;-1:-1:-1;;;;;10434:18:318;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10485:32;;1939:25:641;;;10485:32:318;;1912:18:641;10485:32:318;;;;;;;10154:370;;;:::o;4205:115:27:-;4269:4;4306:7;:5;:7::i;:::-;-1:-1:-1;;;;;4292:21:27;:10;-1:-1:-1;;;;;4292:21:27;;4285:28;;4205:115;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10801:441:318:-;10931:24;10958:25;10968:5;10975:7;10958:9;:25::i;:::-;10931:52;;-1:-1:-1;;10997:16:318;:37;10993:243;;11078:6;11058:16;:26;;11050:68;;;;-1:-1:-1;;;11050:68:318;;17560:2:641;11050:68:318;;;17542:21:641;17599:2;17579:18;;;17572:30;17638:31;17618:18;;;17611:59;17687:18;;11050:68:318;17358:353:641;11050:68:318;11160:51;11169:5;11176:7;11204:6;11185:16;:25;11160:8;:51::i;:::-;10921:321;10801:441;;;:::o;7519:651::-;-1:-1:-1;;;;;7645:18:318;;7637:68;;;;-1:-1:-1;;;7637:68:318;;17918:2:641;7637:68:318;;;17900:21:641;17957:2;17937:18;;;17930:30;17996:34;17976:18;;;17969:62;-1:-1:-1;;;18047:18:641;;;18040:35;18092:19;;7637:68:318;17716:401:641;7637:68:318;-1:-1:-1;;;;;7723:16:318;;7715:64;;;;-1:-1:-1;;;7715:64:318;;18324:2:641;7715:64:318;;;18306:21:641;18363:2;18343:18;;;18336:30;18402:34;18382:18;;;18375:62;-1:-1:-1;;;18453:18:641;;;18446:33;18496:19;;7715:64:318;18122:399:641;7715:64:318;-1:-1:-1;;;;;7861:15:318;;7839:19;7861:15;;;:9;:15;;;;;;7894:21;;;;7886:72;;;;-1:-1:-1;;;7886:72:318;;18728:2:641;7886:72:318;;;18710:21:641;18767:2;18747:18;;;18740:30;18806:34;18786:18;;;18779:62;-1:-1:-1;;;18857:18:641;;;18850:36;18903:19;;7886:72:318;18526:402:641;7886:72:318;-1:-1:-1;;;;;7992:15:318;;;;;;;:9;:15;;;;;;8010:20;;;7992:38;;8050:13;;;;;;;;:23;;8024:6;;7992:15;8050:23;;8024:6;;8050:23;:::i;:::-;;;;;;;;8104:2;-1:-1:-1;;;;;8089:26:318;8098:4;-1:-1:-1;;;;;8089:26:318;-1:-1:-1;;;;;;;;;;;8108:6:318;8089:26;;;;1939:25:641;;1927:2;1912:18;;1793:177;8089:26:318;;;;;;;;8126:37;8146:4;8152:2;8156:6;8126:19;:37::i;3293:438:319:-;3348:7;3445:95;3578:6;:4;:6::i;:::-;3562:24;;;;;;;3413:297;;;;;3608:14;;3644:13;;3687:4;;3413:297;;:::i;:::-;;;;;;;;;;;;;3386:338;;;;;;3367:357;;3293:438;:::o;3640:1458:320:-;4761:12;;3739:7;;;4808:229;4821:4;4815:3;:10;4808:229;;;4841:11;4855:23;4868:3;4873:4;4855:12;:23::i;:::-;4841:37;;4919:11;4896:5;4902:3;4896:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;4892:135;;;4957:3;4950:10;;4892:135;;;5005:7;:3;5011:1;5005:7;:::i;:::-;4999:13;;4892:135;4827:210;4808:229;;;5054:9;;:37;;5070:5;5076:8;5083:1;5076:4;:8;:::i;:::-;5070:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;5070:21:320;;-1:-1:-1;;;;;5070:21:320;5054:37;;;5066:1;5054:37;-1:-1:-1;;;;;5047:44:320;;3640:1458;-1:-1:-1;;;;;3640:1458:320:o;6896:190::-;6980:28;6992:7;7001:6;6980:11;:28::i;:::-;7019:60;7036:23;7061:9;7072:6;7019:16;:60::i;6522:285::-;6606:28;6618:7;6627:6;6606:11;:28::i;:::-;3362:12:318;;-1:-1:-1;;;;;;6652:29:320;6644:90;;;;-1:-1:-1;;;6644:90:320;;19629:2:641;6644:90:320;;;19611:21:641;19668:2;19648:18;;;19641:30;19707:34;19687:18;;;19680:62;-1:-1:-1;;;19758:18:641;;;19751:46;19814:19;;6644:90:320;19427:412:641;6644:90:320;6745:55;6762:23;6787:4;6793:6;6745:16;:55::i;7630:380::-;7714:23;7740:20;7750:9;7740;:20::i;:::-;7714:46;;7770:24;7797:20;7807:9;7797;:20::i;:::-;-1:-1:-1;;;;;7827:21:320;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7827:33:320;;;;;;;;;;7876:54;;7770:47;;-1:-1:-1;7827:33:320;7876:54;;;;;;7827:21;7876:54;7941:62;7958:15;7975:9;7986:16;7941;:62::i;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;3045:187:335:-;3101:6;3136:16;3127:25;;;3119:76;;;;-1:-1:-1;;;3119:76:335;;20046:2:641;3119:76:335;;;20028:21:641;20085:2;20065:18;;;20058:30;20124:34;20104:18;;;20097:62;-1:-1:-1;;;20175:18:641;;;20168:36;20221:19;;3119:76:335;19844:402:641;3119:76:335;-1:-1:-1;3219:5:335;3045:187::o;1408:550:145:-;1505:14;1531:12;1573:24;1580:4;1586:10;;1573:6;:24::i;:::-;1553:44;-1:-1:-1;1553:44:145;-1:-1:-1;1553:44:145;1608:35;;;;-1:-1:-1;;;1608:35:145;;20453:2:641;1608:35:145;;;20435:21:641;20492:2;20472:18;;;20465:30;-1:-1:-1;;;20511:18:641;;;20504:45;20566:18;;1608:35:145;20251:339:641;1608:35:145;1705:15;1674:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1674:46:145;;;:94;;;;-1:-1:-1;1743:25:145;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1724:44:145;:15;:44;;1674:94;1653:156;;;;-1:-1:-1;;;1653:156:145;;20988:2:641;1653:156:145;;;20970:21:641;21027:2;21007:18;;;21000:30;-1:-1:-1;;;21046:18:641;;;21039:45;21101:18;;1653:156:145;20786:339:641;1653:156:145;1846:1;1827:7;;;;:4;:7;:::i;:::-;-1:-1:-1;;;;;1827:21:145;;;1819:53;;;;-1:-1:-1;;;1819:53:145;;21332:2:641;1819:53:145;;;21314:21:641;21371:2;21351:18;;;21344:30;-1:-1:-1;;;21390:18:641;;;21383:49;21449:18;;1819:53:145;21130:343:641;1819:53:145;1906:1;1890:4;:13;;;:17;1882:35;;;;-1:-1:-1;;;1882:35:145;;21680:2:641;1882:35:145;;;21662:21:641;21719:1;21699:18;;;21692:29;-1:-1:-1;;;21737:18:641;;;21730:35;21782:18;;1882:35:145;21478:328:641;1882:35:145;-1:-1:-1;1935:8:145;;;;;1928:16;;;;:6;:16;;;;;:23;;-1:-1:-1;;1928:23:145;1947:4;1928:23;;;-1:-1:-1;1408:550:145;;;-1:-1:-1;1408:550:145:o;3503:681:26:-;3660:11;3656:95;;3695:9;:14;3687:33;;;;-1:-1:-1;;;3687:33:26;;22013:2:641;3687:33:26;;;21995:21:641;22052:1;22032:18;;;22025:29;-1:-1:-1;;;22070:18:641;;;22063:36;22116:18;;3687:33:26;21811:329:641;3656:95:26;-1:-1:-1;;;;;3765:45:26;;397:42:277;3765:45:26;3761:206;;;3847:6;3834:9;:19;3826:54;;;;-1:-1:-1;;;3826:54:26;;22347:2:641;3826:54:26;;;22329:21:641;22386:2;22366:18;;;22359:30;-1:-1:-1;;;22405:18:641;;;22398:52;22467:18;;3826:54:26;22145:346:641;3826:54:26;3761:206;;;3919:9;:14;3911:45;;;;-1:-1:-1;;;3911:45:26;;22698:2:641;3911:45:26;;;22680:21:641;22737:2;22717:18;;;22710:30;-1:-1:-1;;;22756:18:641;;;22749:48;22814:18;;3911:45:26;22496:342:641;3911:45:26;3977:21;-1:-1:-1;;;;;4001:35:26;;;:84;;4064:21;4001:84;;;4039:22;:20;:22::i;:::-;3977:108;;4095:82;4132:9;4143:10;4155:13;4170:6;4095:36;:82::i;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;2032:204:145:-;2134:7;2160:69;2218:10;;2160:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2160:49:145;;-1:-1:-1;2187:20:145;;-1:-1:-1;2202:4:145;;-1:-1:-1;2187:14:145;:20::i;:::-;2177:31;;;;;;2160:16;:49::i;:::-;:57;;:69::i;:::-;2153:76;2032:204;-1:-1:-1;;;;2032:204:145:o;3046:134:26:-;3132:4;3166:7;:5;:7::i;:::-;-1:-1:-1;;;;;3155:18:26;:7;-1:-1:-1;;;;;3155:18:26;;3148:25;;3046:134;;;:::o;6708:270:332:-;6831:7;6851:17;6870:18;6892:25;6903:4;6909:1;6912;6915;6892:10;:25::i;:::-;6850:67;;;;6927:18;6939:5;6927:11;:18::i;:::-;-1:-1:-1;6962:9:332;6708:270;-1:-1:-1;;;;;6708:270:332:o;3862:203:319:-;-1:-1:-1;;;;;3982:14:319;;3922:15;3982:14;;;:7;:14;;;;;918::326;;1050:1;1032:19;;;;918:14;4041:17:319;3939:126;3862:203;;;:::o;7219:254:320:-;7410:56;7427:15;7437:4;7427:9;:15::i;:::-;7444:13;7454:2;7444:9;:13::i;:::-;7459:6;7410:16;:56::i;678:153:334:-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;9155:576:318:-;-1:-1:-1;;;;;9238:21:318;;9230:67;;;;-1:-1:-1;;;9230:67:318;;23655:2:641;9230:67:318;;;23637:21:641;23694:2;23674:18;;;23667:30;23733:34;23713:18;;;23706:62;-1:-1:-1;;;23784:18:641;;;23777:31;23825:19;;9230:67:318;23453:397:641;9230:67:318;-1:-1:-1;;;;;9393:18:318;;9368:22;9393:18;;;:9;:18;;;;;;9429:24;;;;9421:71;;;;-1:-1:-1;;;9421:71:318;;24057:2:641;9421:71:318;;;24039:21:641;24096:2;24076:18;;;24069:30;24135:34;24115:18;;;24108:62;-1:-1:-1;;;24186:18:641;;;24179:32;24228:19;;9421:71:318;23855:398:641;9421:71:318;-1:-1:-1;;;;;9526:18:318;;;;;;:9;:18;;;;;9547:23;;;9526:44;;9590:12;:22;;9564:6;;9526:18;9590:22;;9564:6;;9590:22;:::i;:::-;;;;-1:-1:-1;;9628:37:318;;1939:25:641;;;9654:1:318;;-1:-1:-1;;;;;9628:37:318;;;-1:-1:-1;;;;;;;;;;;9628:37:318;1927:2:641;1912:18;9628:37:318;;;;;;;9676:48;9696:7;9713:1;9717:6;9676:19;:48::i;9420:101:320:-;9483:7;9509:5;9513:1;9509;:5;:::i;8649:663::-;8881:12;;8819:17;;;;8915:8;;:35;;8930:5;8936:7;8942:1;8936:3;:7;:::i;:::-;8930:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;8930:20:320;;-1:-1:-1;;;;;8930:20:320;8915:35;;;8926:1;8915:35;-1:-1:-1;;;;;8903:47:320;;;8972:20;8975:9;8986:5;8972:2;:20;;:::i;:::-;8960:32;;9013:1;9007:3;:7;:51;;;;-1:-1:-1;9046:12:320;9018:5;9024:7;9030:1;9024:3;:7;:::i;:::-;9018:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;9007:51;9003:303;;;9097:29;9116:9;9097:18;:29::i;:::-;9074:5;9080:7;9086:1;9080:3;:7;:::i;:::-;9074:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;9074:52:320;;;;;-1:-1:-1;;;;;9074:52:320;;;;;;9003:303;;;9157:5;9185:96;;;;;;;;9209:31;9227:12;9209:17;:31::i;:::-;9185:96;;;;;;9249:29;9268:9;9249:18;:29::i;:::-;-1:-1:-1;;;;;9185:96:320;;;;;;9157:138;;;;;;;-1:-1:-1;9157:138:320;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9157:138:320;;;;;;;;;;;;9003:303;8857:455;8649:663;;;;;;:::o;8446:389:318:-;-1:-1:-1;;;;;8529:21:318;;8521:65;;;;-1:-1:-1;;;8521:65:318;;24460:2:641;8521:65:318;;;24442:21:641;24499:2;24479:18;;;24472:30;24538:33;24518:18;;;24511:61;24589:18;;8521:65:318;24258:355:641;8521:65:318;8673:6;8657:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8689:18:318;;;;;;:9;:18;;;;;:28;;8711:6;;8689:18;:28;;8711:6;;8689:28;:::i;:::-;;;;-1:-1:-1;;8732:37:318;;1939:25:641;;;-1:-1:-1;;;;;8732:37:318;;;8749:1;;-1:-1:-1;;;;;;;;;;;8732:37:318;1927:2:641;1912:18;8732:37:318;;;;;;;8780:48;8808:1;8812:7;8821:6;8780:19;:48::i;9318:96:320:-;9376:7;9402:5;9406:1;9402;:5;:::i;8016:627::-;8143:3;-1:-1:-1;;;;;8136:10:320;:3;-1:-1:-1;;;;;8136:10:320;;;:24;;;;;8159:1;8150:6;:10;8136:24;8132:505;;;-1:-1:-1;;;;;8180:17:320;;;8176:221;;-1:-1:-1;;;;;8275:17:320;;8218;8275;;;:12;:17;;;;;8218;;8258:54;;8294:9;8305:6;8258:16;:54::i;:::-;8217:95;;;;8356:3;-1:-1:-1;;;;;8335:47:320;;8361:9;8372;8335:47;;;;;;24792:25:641;;;24848:2;24833:18;;24826:34;24780:2;24765:18;;24618:248;8335:47:320;;;;;;;;8199:198;;8176:221;-1:-1:-1;;;;;8415:17:320;;;8411:216;;-1:-1:-1;;;;;8510:17:320;;8453;8510;;;:12;:17;;;;;8453;;8493:49;;8529:4;8535:6;8493:16;:49::i;:::-;8452:90;;;;8586:3;-1:-1:-1;;;;;8565:47:320;;8591:9;8602;8565:47;;;;;;24792:25:641;;;24848:2;24833:18;;24826:34;24780:2;24765:18;;24618:248;8565:47:320;;;;;;;;8434:193;;8016:627;;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;:::-;703:173;;;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;25073:2:641;7087:69:281;;;25055:21:641;25112:2;25092:18;;;25085:30;25151:34;25131:18;;;25124:62;-1:-1:-1;;;25202:18:641;;;25195:36;25248:19;;7087:69:281;24871:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;2308:446:145:-;2382:12;345:207;2479:7;;;;:4;:7;:::i;:::-;2504:25;;;;;;;;:::i;:::-;2547:13;;;;2578:10;;;;2606:13;;;;;;;;:::i;:::-;2637:27;;;;;;;;:::i;:::-;2682:25;;;;;;;;:::i;:::-;2425:322;;;;;;25928:25:641;;;;-1:-1:-1;;;;;26027:15:641;;;26007:18;;;26000:43;26079:15;;;26059:18;;;26052:43;26111:18;;;26104:34;;;;26154:19;;;26147:35;;;;26219:15;;;26198:19;;;26191:44;-1:-1:-1;;;;;26310:15:641;;;2725:8:145;26289:19:641;;;26282:44;;;;26363:15;;26342:19;;;26335:44;2725:8:145;;;26395:19:641;;;26388:35;25900:19;;2425:322:145;;;;;;;;;;;;2406:341;;2308:446;;;:::o;4339:165:333:-;4416:7;4442:55;4464:20;:18;:20::i;3673:227:332:-;3751:7;3771:17;3790:18;3812:27;3823:4;3829:9;3812:10;:27::i;:::-;3770:69;;;;3849:18;3861:5;3849:11;:18::i;:::-;-1:-1:-1;3884:9:332;3673:227;-1:-1:-1;;;3673:227:332:o;5081:1494::-;5207:7;;-1:-1:-1;;;;;6118:79:332;;6114:161;;;-1:-1:-1;6229:1:332;;-1:-1:-1;6233:30:332;6213:51;;6114:161;6386:24;;;6369:14;6386:24;;;;;;;;;26661:25:641;;;26734:4;26722:17;;26702:18;;;26695:45;;;;26756:18;;;26749:34;;;26799:18;;;26792:34;;;6386:24:332;;26633:19:641;;6386:24:332;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6386:24:332;;-1:-1:-1;;6386:24:332;;;-1:-1:-1;;;;;;;6424:20:332;;6420:101;;6476:1;6480:29;6460:50;;;;;;;6420:101;6539:6;-1:-1:-1;6547:20:332;;-1:-1:-1;5081:1494:332;;;;;;;;:::o;582:511::-;659:20;650:5;:29;;;;;;;;:::i;:::-;;646:441;;;582:511;:::o;646:441::-;755:29;746:5;:38;;;;;;;;:::i;:::-;;742:345;;;800:34;;-1:-1:-1;;;800:34:332;;27171:2:641;800:34:332;;;27153:21:641;27210:2;27190:18;;;27183:30;-1:-1:-1;;;27229:18:641;;;27222:54;27293:18;;800:34:332;26969:348:641;742:345:332;864:35;855:5;:44;;;;;;;;:::i;:::-;;851:236;;;915:41;;-1:-1:-1;;;915:41:332;;27524:2:641;915:41:332;;;27506:21:641;27563:2;27543:18;;;27536:30;27602:33;27582:18;;;27575:61;27653:18;;915:41:332;27322:355:641;851:236:332;986:30;977:5;:39;;;;;;;;:::i;:::-;;973:114;;;1032:44;;-1:-1:-1;;;1032:44:332;;27884:2:641;1032:44:332;;;27866:21:641;27923:2;27903:18;;;27896:30;27962:34;27942:18;;;27935:62;-1:-1:-1;;;28013:18:641;;;28006:32;28055:19;;1032:44:332;27682:398:641;1135:192:335;1192:7;-1:-1:-1;;;;;1219:26:335;;;1211:78;;;;-1:-1:-1;;;1211:78:335;;28287:2:641;1211:78:335;;;28269:21:641;28326:2;28306:18;;;28299:30;28365:34;28345:18;;;28338:62;-1:-1:-1;;;28416:18:641;;;28409:37;28463:19;;1211:78:335;28085:403:641;2521:292:277;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;28905:2:641;2758:48:277;;;28887:21:641;28944:2;28924:18;;;28917:30;-1:-1:-1;;;28963:18:641;;;28956:58;29031:18;;2758:48:277;28703:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;1137:320:281:-;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;3143:308:333:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:333;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:333;;3143:308::o;3215:230::-;3370:64;3392:10;3404:12;3418:15;3370:21;:64::i;2157:730:332:-;2238:7;2247:12;2275:9;:16;2295:2;2275:22;2271:610;;;2611:4;2596:20;;2590:27;2660:4;2645:20;;2639:27;2717:4;2702:20;;2696:27;2313:9;2688:36;2758:25;2769:4;2688:36;2590:27;2639;2758:10;:25::i;:::-;2751:32;;;;;;;;;2271:610;-1:-1:-1;2830:1:332;;-1:-1:-1;2834:35:332;2271:610;2157:730;;;;;:::o;729:205:321:-;868:58;;-1:-1:-1;;;;;29252:32:641;;868:58:321;;;29234:51:641;29301:18;;;29294:34;;;841:86:321;;861:5;;-1:-1:-1;;;891:23:321;29207:18:641;;868:58:321;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;29597:15:641;;;1105:68:321;;;29579:34:641;29649:15;;29629:18;;;29622:43;29681:18;;;29674:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;29514:18:641;;1105:68:321;29339:375:641;3457:257:333;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;3235:706:321:-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;30203:2:641;3839:85:321;;;30185:21:641;30242:2;30222:18;;;30215:30;30281:34;30261:18;;;30254:62;-1:-1:-1;;;30332:18:641;;;30325:40;30382:19;;3839:85:321;30001:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;31021:2:641;5194:60:281;;;31003:21:641;31060:2;31040:18;;;31033:30;31099:31;31079:18;;;31072:59;31148:18;;5194:60:281;30819:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:258:641;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:641;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:641;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:641:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;973:173::-;1041:20;;-1:-1:-1;;;;;1090:31:641;;1080:42;;1070:70;;1136:1;1133;1126:12;1070:70;973:173;;;:::o;1151:254::-;1219:6;1227;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;1395:2;1380:18;;;;1367:32;;-1:-1:-1;;;1151:254:641:o;1602:186::-;1661:6;1714:2;1702:9;1693:7;1689:23;1685:32;1682:52;;;1730:1;1727;1720:12;1682:52;1753:29;1772:9;1753:29;:::i;1975:328::-;2052:6;2060;2068;2121:2;2109:9;2100:7;2096:23;2092:32;2089:52;;;2137:1;2134;2127:12;2089:52;2160:29;2179:9;2160:29;:::i;:::-;2150:39;;2208:38;2242:2;2231:9;2227:18;2208:38;:::i;:::-;2198:48;;2293:2;2282:9;2278:18;2265:32;2255:42;;1975:328;;;;;:::o;2679:180::-;2738:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:52;;;2807:1;2804;2797:12;2759:52;-1:-1:-1;2830:23:641;;2679:180;-1:-1:-1;2679:180:641:o;3061:765::-;3172:6;3180;3188;3232:9;3223:7;3219:23;3262:3;3258:2;3254:12;3251:32;;;3279:1;3276;3269:12;3251:32;3302:3;3325:2;3321;3317:11;3314:31;;;3341:1;3338;3331:12;3314:31;3364:9;;-1:-1:-1;3409:18:641;;3396:32;;-1:-1:-1;;;;;;3477:14:641;;;3474:34;;;3504:1;3501;3494:12;3474:34;3542:6;3531:9;3527:22;3517:32;;3587:7;3580:4;3576:2;3572:13;3568:27;3558:55;;3609:1;3606;3599:12;3558:55;3649:2;3636:16;3675:2;3667:6;3664:14;3661:34;;;3691:1;3688;3681:12;3661:34;3738:7;3731:4;3722:6;3718:2;3714:15;3710:26;3707:39;3704:59;;;3759:1;3756;3749:12;3704:59;3790:4;3786:2;3782:13;3772:23;;3814:6;3804:16;;;;;3061:765;;;;;:::o;3831:127::-;3892:10;3887:3;3883:20;3880:1;3873:31;3923:4;3920:1;3913:15;3947:4;3944:1;3937:15;3963:922;4032:6;4085:2;4073:9;4064:7;4060:23;4056:32;4053:52;;;4101:1;4098;4091:12;4053:52;4141:9;4128:23;-1:-1:-1;;;;;4211:2:641;4203:6;4200:14;4197:34;;;4227:1;4224;4217:12;4197:34;4265:6;4254:9;4250:22;4240:32;;4310:7;4303:4;4299:2;4295:13;4291:27;4281:55;;4332:1;4329;4322:12;4281:55;4368:2;4355:16;4390:2;4386;4383:10;4380:36;;;4396:18;;:::i;:::-;4471:2;4465:9;4439:2;4525:13;;-1:-1:-1;;4521:22:641;;;4545:2;4517:31;4513:40;4501:53;;;4569:18;;;4589:22;;;4566:46;4563:72;;;4615:18;;:::i;:::-;4655:10;4651:2;4644:22;4690:2;4682:6;4675:18;4730:7;4725:2;4720;4716;4712:11;4708:20;4705:33;4702:53;;;4751:1;4748;4741:12;4702:53;4807:2;4802;4798;4794:11;4789:2;4781:6;4777:15;4764:46;4852:1;4830:15;;;4847:2;4826:24;4819:35;;;;-1:-1:-1;4834:6:641;3963:922;-1:-1:-1;;;;;3963:922:641:o;4890:626::-;4987:6;4995;5048:2;5036:9;5027:7;5023:23;5019:32;5016:52;;;5064:1;5061;5054:12;5016:52;5104:9;5091:23;-1:-1:-1;;;;;5174:2:641;5166:6;5163:14;5160:34;;;5190:1;5187;5180:12;5160:34;5228:6;5217:9;5213:22;5203:32;;5273:7;5266:4;5262:2;5258:13;5254:27;5244:55;;5295:1;5292;5285:12;5244:55;5335:2;5322:16;5361:2;5353:6;5350:14;5347:34;;;5377:1;5374;5367:12;5347:34;5430:7;5425:2;5415:6;5412:1;5408:14;5404:2;5400:23;5396:32;5393:45;5390:65;;;5451:1;5448;5441:12;5390:65;5482:2;5474:11;;;;;5504:6;;-1:-1:-1;4890:626:641;;-1:-1:-1;;;;4890:626:641:o;5521:801::-;5681:4;5710:2;5750;5739:9;5735:18;5780:2;5769:9;5762:21;5803:6;5838;5832:13;5869:6;5861;5854:22;5907:2;5896:9;5892:18;5885:25;;5969:2;5959:6;5956:1;5952:14;5941:9;5937:30;5933:39;5919:53;;6007:2;5999:6;5995:15;6028:1;6038:255;6052:6;6049:1;6046:13;6038:255;;;6145:2;6141:7;6129:9;6121:6;6117:22;6113:36;6108:3;6101:49;6173:40;6206:6;6197;6191:13;6173:40;:::i;:::-;6163:50;-1:-1:-1;6271:12:641;;;;6236:15;;;;6074:1;6067:9;6038:255;;;-1:-1:-1;6310:6:641;;5521:801;-1:-1:-1;;;;;;;5521:801:641:o;6616:156::-;6682:20;;6742:4;6731:16;;6721:27;;6711:55;;6762:1;6759;6752:12;6777:531;6879:6;6887;6895;6903;6911;6919;6972:3;6960:9;6951:7;6947:23;6943:33;6940:53;;;6989:1;6986;6979:12;6940:53;7012:29;7031:9;7012:29;:::i;:::-;7002:39;;7088:2;7077:9;7073:18;7060:32;7050:42;;7139:2;7128:9;7124:18;7111:32;7101:42;;7162:36;7194:2;7183:9;7179:18;7162:36;:::i;:::-;7152:46;;7245:3;7234:9;7230:19;7217:33;7207:43;;7297:3;7286:9;7282:19;7269:33;7259:43;;6777:531;;;;;;;;:::o;7313:606::-;7424:6;7432;7440;7448;7456;7464;7472;7525:3;7513:9;7504:7;7500:23;7496:33;7493:53;;;7542:1;7539;7532:12;7493:53;7565:29;7584:9;7565:29;:::i;:::-;7555:39;;7613:38;7647:2;7636:9;7632:18;7613:38;:::i;:::-;7603:48;;7698:2;7687:9;7683:18;7670:32;7660:42;;7749:2;7738:9;7734:18;7721:32;7711:42;;7772:37;7804:3;7793:9;7789:19;7772:37;:::i;:::-;7762:47;;7856:3;7845:9;7841:19;7828:33;7818:43;;7908:3;7897:9;7893:19;7880:33;7870:43;;7313:606;;;;;;;;;;:::o;7924:260::-;7992:6;8000;8053:2;8041:9;8032:7;8028:23;8024:32;8021:52;;;8069:1;8066;8059:12;8021:52;8092:29;8111:9;8092:29;:::i;:::-;8082:39;;8140:38;8174:2;8163:9;8159:18;8140:38;:::i;:::-;8130:48;;7924:260;;;;;:::o;8189:350::-;8256:6;8264;8317:2;8305:9;8296:7;8292:23;8288:32;8285:52;;;8333:1;8330;8323:12;8285:52;8356:29;8375:9;8356:29;:::i;:::-;8346:39;;8435:2;8424:9;8420:18;8407:32;8479:10;8472:5;8468:22;8461:5;8458:33;8448:61;;8505:1;8502;8495:12;8448:61;8528:5;8518:15;;;8189:350;;;;;:::o;8897:380::-;8976:1;8972:12;;;;9019;;;9040:61;;9094:4;9086:6;9082:17;9072:27;;9040:61;9147:2;9139:6;9136:14;9116:18;9113:38;9110:161;;;9193:10;9188:3;9184:20;9181:1;9174:31;9228:4;9225:1;9218:15;9256:4;9253:1;9246:15;9282:338;9484:2;9466:21;;;9523:2;9503:18;;;9496:30;-1:-1:-1;;;9557:2:641;9542:18;;9535:44;9611:2;9596:18;;9282:338::o;9625:127::-;9686:10;9681:3;9677:20;9674:1;9667:31;9717:4;9714:1;9707:15;9741:4;9738:1;9731:15;9757:128;9797:3;9828:1;9824:6;9821:1;9818:13;9815:39;;;9834:18;;:::i;:::-;-1:-1:-1;9870:9:641;;9757:128::o;9890:355::-;10092:2;10074:21;;;10131:2;10111:18;;;10104:30;10170:33;10165:2;10150:18;;10143:61;10236:2;10221:18;;9890:355::o;10250:342::-;10452:2;10434:21;;;10491:2;10471:18;;;10464:30;-1:-1:-1;;;10525:2:641;10510:18;;10503:48;10583:2;10568:18;;10250:342::o;10949:344::-;11151:2;11133:21;;;11190:2;11170:18;;;11163:30;-1:-1:-1;;;11224:2:641;11209:18;;11202:50;11284:2;11269:18;;10949:344::o;11650:125::-;11690:4;11718:1;11715;11712:8;11709:34;;;11723:18;;:::i;:::-;-1:-1:-1;11760:9:641;;11650:125::o;11780:173::-;11848:20;;-1:-1:-1;;;;;11897:31:641;;11887:42;;11877:70;;11943:1;11940;11933:12;11958:936;12154:3;12139:19;;-1:-1:-1;;;;;12177:19:641;12227:26;12246:6;12227:26;:::i;:::-;12223:35;12212:9;12205:54;12340:2;12301:37;12332:4;12324:6;12320:17;12301:37;:::i;:::-;12297:46;12290:4;12279:9;12275:20;12268:76;12407:4;12399:6;12395:17;12382:31;12375:4;12364:9;12360:20;12353:61;12477:4;12469:6;12465:17;12452:31;12445:4;12434:9;12430:20;12423:61;12565:2;12526:37;12557:4;12549:6;12545:17;12526:37;:::i;:::-;12522:46;12515:4;12504:9;12500:20;12493:76;;12598:37;12629:4;12621:6;12617:17;12598:37;:::i;:::-;-1:-1:-1;;;;;12711:21:641;;;12704:4;12689:20;;12682:51;12654:19;12775:37;12806:4;12794:17;;12775:37;:::i;:::-;12771:46;12764:4;12753:9;12749:20;12742:76;;;12881:4;12873:6;12869:17;12856:31;12849:4;12838:9;12834:20;12827:61;11958:936;;;;:::o;12899:127::-;12960:10;12955:3;12951:20;12948:1;12941:31;12991:4;12988:1;12981:15;13015:4;13012:1;13005:15;13437:521;13514:4;13520:6;13580:11;13567:25;13674:2;13670:7;13659:8;13643:14;13639:29;13635:43;13615:18;13611:68;13601:96;;13693:1;13690;13683:12;13601:96;13720:33;;13772:20;;;-1:-1:-1;;;;;;13804:30:641;;13801:50;;;13847:1;13844;13837:12;13801:50;13880:4;13868:17;;-1:-1:-1;13911:14:641;13907:27;;;13897:38;;13894:58;;;13948:1;13945;13938:12;13963:135;14002:3;-1:-1:-1;;14023:17:641;;14020:43;;;14043:18;;:::i;:::-;-1:-1:-1;14090:1:641;14079:13;;13963:135::o;18933:489::-;19192:25;;;19248:2;19233:18;;19226:34;;;;19291:2;19276:18;;19269:34;;;;19334:2;19319:18;;19312:34;-1:-1:-1;;;;;19383:32:641;19377:3;19362:19;;19355:61;19179:3;19164:19;;18933:489::o;20595:186::-;20654:6;20707:2;20695:9;20686:7;20682:23;20678:32;20675:52;;;20723:1;20720;20713:12;20675:52;20746:29;20765:9;20746:29;:::i;22843:383::-;23040:2;23029:9;23022:21;23003:4;23066:45;23107:2;23096:9;23092:18;23084:6;23066:45;:::i;:::-;23159:9;23151:6;23147:22;23142:2;23131:9;23127:18;23120:50;23187:33;23213:6;23205;23187:33;:::i;:::-;23179:41;22843:383;-1:-1:-1;;;;;22843:383:641:o;23231:217::-;23271:1;23297;23287:132;;23341:10;23336:3;23332:20;23329:1;23322:31;23376:4;23373:1;23366:15;23404:4;23401:1;23394:15;23287:132;-1:-1:-1;23433:9:641;;23231:217::o;25278:274::-;25407:3;25445:6;25439:13;25461:53;25507:6;25502:3;25495:4;25487:6;25483:17;25461:53;:::i;:::-;25530:16;;;;;25278:274;-1:-1:-1;;25278:274:641:o;26837:127::-;26898:10;26893:3;26889:20;26886:1;26879:31;26929:4;26926:1;26919:15;26953:4;26950:1;26943:15;29719:277;29786:6;29839:2;29827:9;29818:7;29814:23;29810:32;29807:52;;;29855:1;29852;29845:12;29807:52;29887:9;29881:16;29940:5;29933:13;29926:21;29919:5;29916:32;29906:60;;29962:1;29959;29952:12",
    "linkReferences": {},
    "immutableReferences": {
      "77437": [
        {
          "start": 1966,
          "length": 32
        }
      ],
      "77439": [
        {
          "start": 1924,
          "length": 32
        }
      ],
      "77441": [
        {
          "start": 1882,
          "length": 32
        }
      ],
      "77446": [
        {
          "start": 4090,
          "length": 32
        }
      ],
      "79909": [
        {
          "start": 10543,
          "length": 32
        }
      ],
      "79911": [
        {
          "start": 10501,
          "length": 32
        }
      ],
      "79913": [
        {
          "start": 10459,
          "length": 32
        }
      ],
      "79915": [
        {
          "start": 10615,
          "length": 32
        }
      ],
      "79917": [
        {
          "start": 10648,
          "length": 32
        }
      ],
      "79919": [
        {
          "start": 10582,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "checkpoints(address,uint32)": "f1127ed8",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mintTo(address,uint256)": "449a52f8",
    "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "8f0fefbb",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "primarySaleRecipient()": "079fe40e",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": "c1b606e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_primarySaleRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityMinted\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mintedTo\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"mintRequest\",\"type\":\"tuple\"}],\"name\":\"TokensMintedWithSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"mintWithSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primarySaleRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISignatureMintERC20.MintRequest\",\"name\":\"_req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"`_account` should own the `_amount` of tokens.\",\"params\":{\"_account\":\"The account to burn tokens from.\",\"_amount\":\"The number of tokens to burn.\"}},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"params\":{\"_req\":\"The payload / mint request.\",\"_signature\":\"The signature produced by an account signing the mint request.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Lets an owner burn a given amount of an account's tokens.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Mints tokens according to the provided mint request.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"BASE:      ERC20Vote      EXTENSION: SignatureMintERC20  The `ERC20SignatureMint` contract uses the `ERC20Vote` contract, along with the `SignatureMintERC20` extension.  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by  that external party.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/ERC20SignatureMintVote.sol\":\"ERC20SignatureMintVote\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/ERC20Base.sol\":{\"keccak256\":\"0xe66332288a570b311d65bd71447a7bb6227779607ce3cb3bf7e2d6a485365ddd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c3ea3930addce681895f7edb5a91f6a3d0691c2eece1e1be93c7497a16596d1\",\"dweb:/ipfs/QmaqfiXqJMnhjPcsjCoAvHCeTAAVppVxKfQHHyUvXZtsuc\"]},\"contracts/base/ERC20SignatureMintVote.sol\":{\"keccak256\":\"0x44925c04d55792a56d8393abe72ecc401bf836c5e08d96371d4fdada727cc5ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://264ae6c87f6d0c826df6e47f3aa52aca4f8621b59f2667ea33308d10f254c74f\",\"dweb:/ipfs/QmWemptFK9AXD3CUcqQHyvCbZHXpa45ECtJhyEG5AjYmJ6\"]},\"contracts/base/ERC20Vote.sol\":{\"keccak256\":\"0xb096b640a5f7176dbe80037f8022a87ce62b8d8acd9816935bebb483cb511860\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://af66f27ebfacefee2bb7552d897690812d2be3cfc30a796804470cda58dcb879\",\"dweb:/ipfs/QmYdZksKXAAAtjU1ewNFpworR3TrDHMbwBQLVGwEPW3C7i\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/eip/interface/IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/SignatureMintERC20.sol\":{\"keccak256\":\"0x15e312ccc565f34739216fda8af1f57a654b59997eaf367ed3554c97004eaf02\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52e663f7bb17d7f10196931c911f3aa72ecebf9d8b3d1dcc264c391cf27e6ddd\",\"dweb:/ipfs/Qmd9oJvZvbUE86TpxVUndYswzw79efmdLBypFbMhk8aKoW\"]},\"contracts/extension/interface/IBurnableERC20.sol\":{\"keccak256\":\"0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe\",\"dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMintableERC20.sol\":{\"keccak256\":\"0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4\",\"dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/ISignatureMintERC20.sol\":{\"keccak256\":\"0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5\",\"dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"contracts/openzeppelin-presets/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0429da8e9a940fceb58b83ea0425489dccf4f0c2178625dac6864c889c96f43f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1519284bd9276de5bb35f3fea2068e718518e179091ca494652b0fddfa1ea940\",\"dweb:/ipfs/QmTbZkyEFbgTLA8ehLgs29JLGaqrGdUNJQxagN8dFiiSma\"]},\"contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x409682c602fff6428b40be9c454a3dca04e3c891a9dec03ad923da083b336312\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692a8d672cf6a5c87d4ff10520e7f440496fa3896fe4b3f0bd15a5af6155e032\",\"dweb:/ipfs/QmXnzi7Y3rP8wfRy71j5BsRPZAAmbQ2SMGcQdEdt4N7fYT\"]},\"contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x885363e8b8508655b2a319a9a8e12d3d5a0e4f5cadcf4f1330246039af20de40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fad64730d16bbc0e0f0734b4a7eb423a089c0f970c1df22be0bfa90a65f7d9d8\",\"dweb:/ipfs/QmaDpR975EEVJnmNXq5Fkf2a7dQixdMKuxwk2ESg37tZE9\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/openzeppelin-presets/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8\",\"dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN\"]},\"contracts/openzeppelin-presets/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"contracts/openzeppelin-presets/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"contracts/openzeppelin-presets/utils/math/SafeCast.sol\":{\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1\",\"dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_primarySaleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "mintedTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "mintRequest",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensMintedWithSignature",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISignatureMintERC20.MintRequest",
              "name": "_req",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "primarySaleRecipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "validityStartTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "validityEndTimestamp",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "`_account` should own the `_amount` of tokens.",
            "params": {
              "_account": "The account to burn tokens from.",
              "_amount": "The number of tokens to burn."
            }
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "params": {
              "_req": "The payload / mint request.",
              "_signature": "The signature produced by an account signing the mint request."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "details": "Verifies that a mint request is signed by an account holding MINTER_ROLE (at the time of the function call)."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "burnFrom(address,uint256)": {
            "notice": "Lets an owner burn a given amount of an account's tokens."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)": {
            "notice": "Mints tokens according to the provided mint request."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/ERC20SignatureMintVote.sol": "ERC20SignatureMintVote"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/ERC20Base.sol": {
        "keccak256": "0xe66332288a570b311d65bd71447a7bb6227779607ce3cb3bf7e2d6a485365ddd",
        "urls": [
          "bzz-raw://2c3ea3930addce681895f7edb5a91f6a3d0691c2eece1e1be93c7497a16596d1",
          "dweb:/ipfs/QmaqfiXqJMnhjPcsjCoAvHCeTAAVppVxKfQHHyUvXZtsuc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20SignatureMintVote.sol": {
        "keccak256": "0x44925c04d55792a56d8393abe72ecc401bf836c5e08d96371d4fdada727cc5ed",
        "urls": [
          "bzz-raw://264ae6c87f6d0c826df6e47f3aa52aca4f8621b59f2667ea33308d10f254c74f",
          "dweb:/ipfs/QmWemptFK9AXD3CUcqQHyvCbZHXpa45ECtJhyEG5AjYmJ6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/base/ERC20Vote.sol": {
        "keccak256": "0xb096b640a5f7176dbe80037f8022a87ce62b8d8acd9816935bebb483cb511860",
        "urls": [
          "bzz-raw://af66f27ebfacefee2bb7552d897690812d2be3cfc30a796804470cda58dcb879",
          "dweb:/ipfs/QmYdZksKXAAAtjU1ewNFpworR3TrDHMbwBQLVGwEPW3C7i"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/SignatureMintERC20.sol": {
        "keccak256": "0x15e312ccc565f34739216fda8af1f57a654b59997eaf367ed3554c97004eaf02",
        "urls": [
          "bzz-raw://52e663f7bb17d7f10196931c911f3aa72ecebf9d8b3d1dcc264c391cf27e6ddd",
          "dweb:/ipfs/Qmd9oJvZvbUE86TpxVUndYswzw79efmdLBypFbMhk8aKoW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IBurnableERC20.sol": {
        "keccak256": "0x7098224c3bdcc1ec2e384c035b2f0853232696b4fae77df25919b1c19c033272",
        "urls": [
          "bzz-raw://cc64766fb8746d8ee6a8814a3d4a7b4f0bf643bdf76b4d563f963f828ef020fe",
          "dweb:/ipfs/QmdNe4TrNDzkNBqwyehyS8H73h68bxk5PC8S9CXHfDqrw2"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMintableERC20.sol": {
        "keccak256": "0xd0b56f9f9d665684156294bb479ce09d6ad3cc4f4bebc246064098a9e767642e",
        "urls": [
          "bzz-raw://579ef58d8df23fc25fc9ac10dd5e6f63bc0e0393cf79cc7409089d57b56b3fd4",
          "dweb:/ipfs/QmTVXS9jzQsp9j4Luvr48HWMTe5etgfQdge1hZ7eLJTwp1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ISignatureMintERC20.sol": {
        "keccak256": "0x07856a6a9e84482c0bb0ad79439bcdddaf22ad51ce1233a48cfff98020d3cf15",
        "urls": [
          "bzz-raw://5f8159aafb6eaf9a8207370189408eebce0d0cc590c1109857d7a3fe19a944c5",
          "dweb:/ipfs/QmTaL6qR7CtTwzfLYGX5fLNuaRJ643moCqhL1xdn4yGgEP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/ERC20.sol": {
        "keccak256": "0x0429da8e9a940fceb58b83ea0425489dccf4f0c2178625dac6864c889c96f43f",
        "urls": [
          "bzz-raw://1519284bd9276de5bb35f3fea2068e718518e179091ca494652b0fddfa1ea940",
          "dweb:/ipfs/QmTbZkyEFbgTLA8ehLgs29JLGaqrGdUNJQxagN8dFiiSma"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x409682c602fff6428b40be9c454a3dca04e3c891a9dec03ad923da083b336312",
        "urls": [
          "bzz-raw://692a8d672cf6a5c87d4ff10520e7f440496fa3896fe4b3f0bd15a5af6155e032",
          "dweb:/ipfs/QmXnzi7Y3rP8wfRy71j5BsRPZAAmbQ2SMGcQdEdt4N7fYT"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x885363e8b8508655b2a319a9a8e12d3d5a0e4f5cadcf4f1330246039af20de40",
        "urls": [
          "bzz-raw://fad64730d16bbc0e0f0734b4a7eb423a089c0f970c1df22be0bfa90a65f7d9d8",
          "dweb:/ipfs/QmaDpR975EEVJnmNXq5Fkf2a7dQixdMKuxwk2ESg37tZE9"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xe7c8a90c658962ae2d706fb5a4e522404b11a06347d36186e0d64a26d8f58d2e",
        "urls": [
          "bzz-raw://1e6b4d213258d6693acd3b6131f723e01bf2629c48520103986c5ec039f144f8",
          "dweb:/ipfs/QmQvzsASAkfs4BwPSKE4Quu3dxzseHNBehNntLyGfdwJuN"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/math/Math.sol": {
        "keccak256": "0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2",
        "urls": [
          "bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6",
          "dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/math/SafeCast.sol": {
        "keccak256": "0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7",
        "urls": [
          "bzz-raw://fb62abcee612c175f1b9bc70e5dfe5bd23473c99987ade6e80e291f68dc60ff1",
          "dweb:/ipfs/QmZCMajhG7FtRYNDwBchXN89mXR6HLPVzr9732qfUdNf9E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/ERC20SignatureMintVote.sol",
    "id": 10233,
    "exportedSymbols": {
      "Context": [
        78641
      ],
      "ContractMetadata": [
        34723
      ],
      "Counters": [
        78715
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "ECDSA": [
        79903
      ],
      "EIP712": [
        80057
      ],
      "ERC20": [
        77414
      ],
      "ERC20Base": [
        9265
      ],
      "ERC20Permit": [
        77656
      ],
      "ERC20SignatureMintVote": [
        10232
      ],
      "ERC20Vote": [
        10428
      ],
      "ERC20Votes": [
        78303
      ],
      "IBurnableERC20": [
        49496
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC20": [
        31216
      ],
      "IERC20Metadata": [
        31235
      ],
      "IERC20Permit": [
        31271
      ],
      "IMintableERC20": [
        50131
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IPrimarySale": [
        50580
      ],
      "IVotes": [
        75542
      ],
      "IWETH": [
        55699
      ],
      "Math": [
        80145
      ],
      "Multicall": [
        37872
      ],
      "Ownable": [
        38400
      ],
      "PrimarySale": [
        39318
      ],
      "SafeCast": [
        80538
      ],
      "SafeERC20": [
        78527
      ],
      "SignatureMintERC20": [
        40742
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4148:26",
    "nodes": [
      {
        "id": 10034,
        "nodeType": "PragmaDirective",
        "src": "39:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 10035,
        "nodeType": "ImportDirective",
        "src": "86:25:26",
        "nodes": [],
        "absolutePath": "contracts/base/ERC20Vote.sol",
        "file": "./ERC20Vote.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10233,
        "sourceUnit": 10429,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10036,
        "nodeType": "ImportDirective",
        "src": "113:38:26",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10233,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10038,
        "nodeType": "ImportDirective",
        "src": "152:73:26",
        "nodes": [],
        "absolutePath": "contracts/extension/SignatureMintERC20.sol",
        "file": "../extension/SignatureMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10233,
        "sourceUnit": 40743,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10037,
              "name": "SignatureMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40742,
              "src": "161:18:26",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_SignatureMintERC20_$40742_$",
                "typeString": "type(contract SignatureMintERC20)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10039,
        "nodeType": "ImportDirective",
        "src": "227:40:26",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10233,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10232,
        "nodeType": "ContractDefinition",
        "src": "850:3336:26",
        "nodes": [
          {
            "id": 10067,
            "nodeType": "FunctionDefinition",
            "src": "1113:255:26",
            "nodes": [],
            "body": {
              "id": 10066,
              "nodeType": "Block",
              "src": "1302:66:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10063,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10054,
                        "src": "1339:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10062,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "1312:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:49:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10065,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:49:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10057,
                    "name": "_defaultAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10048,
                    "src": "1271:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 10058,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10050,
                    "src": "1286:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 10059,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10052,
                    "src": "1293:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 10060,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10056,
                  "name": "ERC20Vote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10428,
                  "src": "1261:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1261:40:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10048,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1142:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10067,
                  "src": "1134:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10050,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1179:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10067,
                  "src": "1165:19:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10052,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1208:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10067,
                  "src": "1194:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10054,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "1233:21:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10067,
                  "src": "1225:29:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:136:26"
            },
            "returnParameters": {
              "id": 10061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:0:26"
            },
            "scope": 10232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10131,
            "nodeType": "FunctionDefinition",
            "src": "1806:966:26",
            "nodes": [],
            "body": {
              "id": 10130,
              "nodeType": "Block",
              "src": "1973:799:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10079,
                            "name": "_req",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10071,
                            "src": "1991:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                              "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                            }
                          },
                          "id": 10080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51029,
                          "src": "1991:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2007:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1991:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 10083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 10078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1983:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10085,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:50:26"
                },
                {
                  "expression": {
                    "id": 10091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10086,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10076,
                      "src": "2083:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10088,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2108:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        {
                          "id": 10089,
                          "name": "_signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10073,
                          "src": "2114:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 10087,
                        "name": "_processRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40687,
                        "src": "2092:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MintRequest_$51040_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                          "typeString": "function (struct ISignatureMintERC20.MintRequest calldata,bytes calldata) returns (address)"
                        }
                      },
                      "id": 10090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2092:33:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2083:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10092,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:42:26"
                },
                {
                  "assignments": [
                    10095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10095,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "2470:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 10130,
                      "src": "2462:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2462:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "  Get receiver of tokens.\n  Note: If `_req.to == address(0)`, a `mintWithSignature` transaction sitting in the\n        mempool can be frontrun by copying the input data, since the minted tokens\n        will be sent to the `_msgSender()` in this case.",
                  "id": 10108,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 10102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10096,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2481:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 10097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51025,
                        "src": "2481:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2500:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2492:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2492:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2492:10:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2481:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 10105,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10071,
                        "src": "2518:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      },
                      "id": 10106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51025,
                      "src": "2518:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2481:44:26",
                    "trueExpression": {
                      "expression": {
                        "id": 10103,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2505:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2505:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2462:63:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10110,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2582:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 10111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "primarySaleRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51027,
                        "src": "2582:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10112,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2609:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 10113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51033,
                        "src": "2609:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10114,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2624:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 10115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51031,
                        "src": "2624:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10109,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10231,
                      "src": "2561:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:74:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10117,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:74:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10119,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10095,
                        "src": "2676:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10120,
                          "name": "_req",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10071,
                          "src": "2686:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                            "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                          }
                        },
                        "id": 10121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51029,
                        "src": "2686:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10118,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        78017
                      ],
                      "referencedDeclaration": 78017,
                      "src": "2670:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2670:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "2670:30:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10125,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10076,
                        "src": "2742:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10126,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10095,
                        "src": "2750:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10127,
                        "name": "_req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10071,
                        "src": "2760:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                          "typeString": "struct ISignatureMintERC20.MintRequest calldata"
                        }
                      ],
                      "id": 10124,
                      "name": "TokensMintedWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51050,
                      "src": "2716:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_MintRequest_$51040_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct ISignatureMintERC20.MintRequest memory)"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:49:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10129,
                  "nodeType": "EmitStatement",
                  "src": "2711:54:26"
                }
              ]
            },
            "baseFunctions": [
              51074
            ],
            "documentation": {
              "id": 10068,
              "nodeType": "StructuredDocumentation",
              "src": "1561:240:26",
              "text": "  @notice           Mints tokens according to the provided mint request.\n  @param _req       The payload / mint request.\n  @param _signature The signature produced by an account signing the mint request."
            },
            "functionSelector": "8f0fefbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithSignature",
            "nameLocation": "1815:17:26",
            "parameters": {
              "id": 10074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10071,
                  "mutability": "mutable",
                  "name": "_req",
                  "nameLocation": "1854:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10131,
                  "src": "1833:25:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintRequest_$51040_calldata_ptr",
                    "typeString": "struct ISignatureMintERC20.MintRequest"
                  },
                  "typeName": {
                    "id": 10070,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10069,
                      "name": "MintRequest",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51040,
                      "src": "1833:11:26"
                    },
                    "referencedDeclaration": 51040,
                    "src": "1833:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintRequest_$51040_storage_ptr",
                      "typeString": "struct ISignatureMintERC20.MintRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10073,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1875:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10131,
                  "src": "1860:25:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10072,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:54:26"
            },
            "returnParameters": {
              "id": 10077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10076,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "1961:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10131,
                  "src": "1953:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1952:16:26"
            },
            "scope": 10232,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 10146,
            "nodeType": "FunctionDefinition",
            "src": "3046:134:26",
            "nodes": [],
            "body": {
              "id": 10145,
              "nodeType": "Block",
              "src": "3138:42:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10140,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10134,
                      "src": "3155:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10141,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3166:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3166:7:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3155:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10139,
                  "id": 10144,
                  "nodeType": "Return",
                  "src": "3148:25:26"
                }
              ]
            },
            "baseFunctions": [
              40617
            ],
            "documentation": {
              "id": 10132,
              "nodeType": "StructuredDocumentation",
              "src": "2964:77:26",
              "text": "@dev Returns whether a given address is authorized to sign mint requests."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSignMintRequest",
            "nameLocation": "3055:19:26",
            "overrides": {
              "id": 10136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3114:8:26"
            },
            "parameters": {
              "id": 10135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10134,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "3083:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10146,
                  "src": "3075:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3075:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3074:17:26"
            },
            "returnParameters": {
              "id": 10139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10146,
                  "src": "3132:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:6:26"
            },
            "scope": 10232,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10160,
            "nodeType": "FunctionDefinition",
            "src": "3281:130:26",
            "nodes": [],
            "body": {
              "id": 10159,
              "nodeType": "Block",
              "src": "3366:45:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3383:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3383:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10155,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "3397:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3397:7:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3383:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10152,
                  "id": 10158,
                  "nodeType": "Return",
                  "src": "3376:28:26"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 10147,
              "nodeType": "StructuredDocumentation",
              "src": "3186:90:26",
              "text": "@dev Returns whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "3290:27:26",
            "overrides": {
              "id": 10149,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3342:8:26"
            },
            "parameters": {
              "id": 10148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3317:2:26"
            },
            "returnParameters": {
              "id": 10152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10160,
                  "src": "3360:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3359:6:26"
            },
            "scope": 10232,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 10231,
            "nodeType": "FunctionDefinition",
            "src": "3503:681:26",
            "nodes": [],
            "body": {
              "id": 10230,
              "nodeType": "Block",
              "src": "3646:538:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10170,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10167,
                      "src": "3660:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3670:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3660:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10183,
                  "nodeType": "IfStatement",
                  "src": "3656:95:26",
                  "trueBody": {
                    "id": 10182,
                    "nodeType": "Block",
                    "src": "3673:78:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10174,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3695:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 10175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3695:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 10176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3708:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3695:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 10178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3711:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 10173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3687:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3687:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10180,
                        "nodeType": "ExpressionStatement",
                        "src": "3687:33:26"
                      },
                      {
                        "functionReturnParameters": 10169,
                        "id": 10181,
                        "nodeType": "Return",
                        "src": "3734:7:26"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10184,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10165,
                      "src": "3765:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10185,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "3778:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 10186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "3778:32:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3765:45:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10205,
                    "nodeType": "Block",
                    "src": "3897:70:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10198,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3919:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 10199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3919:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 10200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3932:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3919:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672076616c7565206e6f74207a65726f",
                              "id": 10202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3935:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              },
                              "value": "msg value not zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_775901d0507e28d3e8bac2785458407b5e302e6d60fbd88454d9b046e54b8f3b",
                                "typeString": "literal_string \"msg value not zero\""
                              }
                            ],
                            "id": 10197,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3911:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3911:45:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10204,
                        "nodeType": "ExpressionStatement",
                        "src": "3911:45:26"
                      }
                    ]
                  },
                  "id": 10206,
                  "nodeType": "IfStatement",
                  "src": "3761:206:26",
                  "trueBody": {
                    "id": 10196,
                    "nodeType": "Block",
                    "src": "3812:79:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10189,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3834:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 10190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3834:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 10191,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10167,
                                "src": "3847:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3834:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e6420746f74616c2070726963652e",
                              "id": 10193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3855:24:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              },
                              "value": "Must send total price."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_887e7122236db9b601a42d7e68f87b6c6967cd4fd7480dbc7f4f6f17255d6e3f",
                                "typeString": "literal_string \"Must send total price.\""
                              }
                            ],
                            "id": 10188,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3826:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3826:54:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10195,
                        "nodeType": "ExpressionStatement",
                        "src": "3826:54:26"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10208,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "3985:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 10230,
                      "src": "3977:21:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10207,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3977:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10219,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 10214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10209,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10163,
                        "src": "4001:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4034:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4026:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4026:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4026:10:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4001:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 10217,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10163,
                      "src": "4064:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4001:84:26",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10215,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39275,
                        "src": "4039:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4039:22:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3977:108:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10223,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10165,
                        "src": "4132:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4143:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4143:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10226,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10208,
                        "src": "4155:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10227,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10167,
                        "src": "4170:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10220,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4095:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 10222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "4095:36:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 10228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:82:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10229,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:82:26"
                }
              ]
            },
            "documentation": {
              "id": 10161,
              "nodeType": "StructuredDocumentation",
              "src": "3417:81:26",
              "text": "@dev Collects and distributes the primary sale value of tokens being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "3512:20:26",
            "parameters": {
              "id": 10168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10163,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "3550:21:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10231,
                  "src": "3542:29:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10165,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "3589:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10231,
                  "src": "3581:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10167,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3616:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 10231,
                  "src": "3608:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3532:96:26"
            },
            "returnParameters": {
              "id": 10169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:0:26"
            },
            "scope": 10232,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10041,
              "name": "ERC20Vote",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10428,
              "src": "885:9:26"
            },
            "id": 10042,
            "nodeType": "InheritanceSpecifier",
            "src": "885:9:26"
          },
          {
            "baseName": {
              "id": 10043,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "896:11:26"
            },
            "id": 10044,
            "nodeType": "InheritanceSpecifier",
            "src": "896:11:26"
          },
          {
            "baseName": {
              "id": 10045,
              "name": "SignatureMintERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40742,
              "src": "909:18:26"
            },
            "id": 10046,
            "nodeType": "InheritanceSpecifier",
            "src": "909:18:26"
          }
        ],
        "canonicalName": "ERC20SignatureMintVote",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10040,
          "nodeType": "StructuredDocumentation",
          "src": "269:579:26",
          "text": "      BASE:      ERC20Vote\n      EXTENSION: SignatureMintERC20\n  The `ERC20SignatureMint` contract uses the `ERC20Vote` contract, along with the `SignatureMintERC20` extension.\n  The 'signature minting' mechanism in the `SignatureMintERC20` extension uses EIP 712, and is a way for a contract\n  admin to authorize an external party's request to mint tokens on the admin's contract. At a high level, this means\n  you can authorize some external party to mint tokens on your contract, and specify what exactly will be minted by\n  that external party."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10232,
          40742,
          51075,
          80057,
          39318,
          50580,
          10428,
          49496,
          50131,
          78303,
          77656,
          31271,
          77414,
          31235,
          31216,
          78641,
          75542,
          38400,
          50418,
          37872,
          50168,
          34723,
          49679
        ],
        "name": "ERC20SignatureMintVote",
        "nameLocation": "859:22:26",
        "scope": 10233,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 26
}