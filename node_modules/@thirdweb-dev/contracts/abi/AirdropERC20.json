{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAirdropERC20.AirdropContent[]",
          "name": "_contents",
          "type": "tuple[]"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b62000c471760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b611e2c806200015c6000396000f3fe6080604052600436106100ce5760003560e01c8063248a9ca3146100d35780632f2ff15d1461011357806336568abe146101355780633a105cfb14610155578063572b6c05146101755780639010d07c146101a557806391d14854146101d2578063938e3d7b146101f2578063a0a8e46014610212578063a217fddf1461022e578063a32fa5b314610243578063ac9650d814610263578063ca15c87314610290578063cb2ef6f7146102b0578063d547741f146102d2578063da26dbf1146102f2578063e8a3d48514610305575b600080fd5b3480156100df57600080fd5b506101006100ee366004611735565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561011f57600080fd5b5061013361012e36600461176a565b610327565b005b34801561014157600080fd5b5061013361015036600461176a565b6103c6565b34801561016157600080fd5b5061013361017036600461184b565b610425565b34801561018157600080fd5b5061019561019036600461192e565b61055d565b604051901515815260200161010a565b3480156101b157600080fd5b506101c56101c0366004611949565b61057b565b60405161010a919061196b565b3480156101de57600080fd5b506101956101ed36600461176a565b61066b565b3480156101fe57600080fd5b5061013361020d36600461197f565b610696565b34801561021e57600080fd5b506040516002815260200161010a565b34801561023a57600080fd5b50610100600081565b34801561024f57600080fd5b5061019561025e36600461176a565b6106e7565b34801561026f57600080fd5b5061028361027e3660046119b3565b61073d565b60405161010a9190611a7f565b34801561029c57600080fd5b506101006102ab366004611735565b610831565b3480156102bc57600080fd5b506b041697264726f7045524332360a41b610100565b3480156102de57600080fd5b506101336102ed36600461176a565b6108ba565b610133610300366004611ae1565b6108d3565b34801561031157600080fd5b5061031a610bb9565b60405161010a9190611b71565b6000828152600360205260409020546103409033610c56565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16156103b85760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6103c28282610cd6565b5050565b336001600160a01b0382161461041b5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016103af565b6103c28282610cea565b600054610100900460ff16158080156104455750600054600160ff909116105b80610466575061045430610c47565b158015610466575060005460ff166001145b6104c95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6000805460ff1916600117905580156104ec576000805461ff0019166101001790555b6104f582610d41565b6104fe83610dd0565b610509600085610cd6565b610511610eb2565b8015610557576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156106615760008681526004602090815260408083208484526001019091529020546001600160a01b03161561060a57848214156105f85760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610665915050565b610603600183611b9a565b915061064f565b61061586600061066b565b801561063c5750600086815260046020908152604080832083805260020190915290205481145b1561064f5761064c600183611b9a565b91505b61065a600182611b9a565b905061058d565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61069e610ee3565b6106db5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016103af565b6106e481610dd0565b50565b600082815260026020908152604080832083805290915281205460ff16610734575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610665565b50600192915050565b6060816001600160401b0381111561075757610757611796565b60405190808252806020026020018201604052801561078a57816020015b60608152602001906001900390816107755790505b50905060005b8281101561082a576107fa308585848181106107ae576107ae611bb2565b90506020028101906107c09190611bc8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ef692505050565b82828151811061080c5761080c611bb2565b6020026020010181905250808061082290611c15565b915050610790565b5092915050565b600081815260046020526040812054815b818110156108955760008481526004602090815260408083208484526001019091529020546001600160a01b03161561088357610880600184611b9a565b92505b61088e600182611b9a565b9050610842565b506108a183600061066b565b156108b4576108b1600183611b9a565b91505b50919050565b60008281526003602052604090205461041b9033610c56565b600260055414156109265760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103af565b600260055561093860006101ed610fe8565b6109765760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064016103af565b80600080805b83811015610b4b5760006109d4898989898681811061099d5761099d611bb2565b6109b3926020604090920201908101915061192e565b8a8a878181106109c5576109c5611bb2565b90506040020160200135610ff2565b905080610a75578686838181106109ed576109ed611bb2565b610a03926020604090920201908101915061192e565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a87818110610a5357610a53611bb2565b90506040020160200135604051610a6c91815260200190565b60405180910390a45b6001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610b4257868683818110610aac57610aac611bb2565b9050604002016020013584610ac19190611b9a565b935034841115610b135760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e7460448201526064016103af565b80610b4257868683818110610b2a57610b2a611bb2565b9050604002016020013583610b3f9190611b9a565b92505b5060010161097c565b50348214610b9b5760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e7400000060448201526064016103af565b8015610bab57610bab33826112a0565b505060016005555050505050565b60018054610bc690611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf290611c30565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b505050505081565b6001600160a01b03163b151590565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff166103c257610c94816001600160a01b03166014611347565b610c9f836020611347565b604051602001610cb0929190611c65565b60408051601f198184030181529082905262461bcd60e51b82526103af91600401611b71565b610ce082826114e9565b6103c28282611544565b610cf482826115b1565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600054610100900460ff16610d685760405162461bcd60e51b81526004016103af90611cd2565b60005b81518110156103c257600160696000848481518110610d8c57610d8c611bb2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610dc881611c15565b915050610d6b565b600060018054610ddf90611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0b90611c30565b8015610e585780601f10610e2d57610100808354040283529160200191610e58565b820191906000526020600020905b815481529060010190602001808311610e3b57829003601f168201915b50508551939450610e749360019350602087019250905061169c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610ea6929190611d1d565b60405180910390a15050565b600054610100900460ff16610ed95760405162461bcd60e51b81526004016103af90611cd2565b610ee1611613565b565b6000610ef1816101ed610fe8565b905090565b6060610f0183610c47565b610f5c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103af565b600080846001600160a01b031684604051610f779190611d42565b600060405180830381855af49150503d8060008114610fb2576040519150601f19603f3d011682016040523d82523d6000602084013e610fb7565b606091505b5091509150610fdf8282604051806060016040528060278152602001611dd060279139611641565b95945050505050565b6000610ef161167a565b60008161100157506001611298565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561107f576040516001600160a01b038416908390600081818185875af1925050503d806000811461106f576040519150601f19603f3d011682016040523d82523d6000602084013e611074565b606091505b505080915050611298565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908916916110e39190611d42565b6000604051808303816000865af19150503d8060008114611120576040519150601f19603f3d011682016040523d82523d6000602084013e611125565b606091505b50915091508192508215806111575750600081511180156111575750808060200190518101906111559190611d5e565b155b15611295576040516370a0823160e01b81526000935084906001600160a01b038916906370a082319061118e908a9060040161196b565b602060405180830381865afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf9190611d80565b1015801561124e5750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124b9190611d80565b10155b6112955760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b60448201526064016103af565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112ed576040519150601f19603f3d011682016040523d82523d6000602084013e6112f2565b606091505b50509050806113425760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016103af565b505050565b60606000611356836002611d99565b611361906002611b9a565b6001600160401b0381111561137857611378611796565b6040519080825280601f01601f1916602001820160405280156113a2576020820181803683370190505b509050600360fc1b816000815181106113bd576113bd611bb2565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113ec576113ec611bb2565b60200101906001600160f81b031916908160001a9053506000611410846002611d99565b61141b906001611b9a565b90505b6001811115611493576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144f5761144f611bb2565b1a60f81b82828151811061146557611465611bb2565b60200101906001600160f81b031916908160001a90535060049490941c9361148c81611db8565b905061141e565b5083156114e25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103af565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600460205260408120805491600191906115638385611b9a565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115bb8282610c56565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661163a5760405162461bcd60e51b81526004016103af90611cd2565b6001600555565b606083156116505750816114e2565b8251156116605782518084602001fd5b8160405162461bcd60e51b81526004016103af9190611b71565b60006116853361055d565b15611697575060131936013560601c90565b503390565b8280546116a890611c30565b90600052602060002090601f0160209004810192826116ca5760008555611710565b82601f106116e357805160ff1916838001178555611710565b82800160010185558215611710579182015b828111156117105782518255916020019190600101906116f5565b5061171c929150611720565b5090565b5b8082111561171c5760008155600101611721565b60006020828403121561174757600080fd5b5035919050565b80356001600160a01b038116811461176557600080fd5b919050565b6000806040838503121561177d57600080fd5b8235915061178d6020840161174e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156117d4576117d4611796565b604052919050565b600082601f8301126117ed57600080fd5b81356001600160401b0381111561180657611806611796565b611819601f8201601f19166020016117ac565b81815284602083860101111561182e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561186057600080fd5b6118698461174e565b92506020808501356001600160401b038082111561188657600080fd5b611892888389016117dc565b945060408701359150808211156118a857600080fd5b818701915087601f8301126118bc57600080fd5b8135818111156118ce576118ce611796565b8060051b91506118df8483016117ac565b818152918301840191848101908a8411156118f957600080fd5b938501935b8385101561191e5761190f8561174e565b825293850193908501906118fe565b8096505050505050509250925092565b60006020828403121561194057600080fd5b6114e28261174e565b6000806040838503121561195c57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60006020828403121561199157600080fd5b81356001600160401b038111156119a757600080fd5b611298848285016117dc565b600080602083850312156119c657600080fd5b82356001600160401b03808211156119dd57600080fd5b818501915085601f8301126119f157600080fd5b813581811115611a0057600080fd5b8660208260051b8501011115611a1557600080fd5b60209290920196919550909350505050565b60005b83811015611a42578181015183820152602001611a2a565b838111156105575750506000910152565b60008151808452611a6b816020860160208601611a27565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ad457603f19888603018452611ac2858351611a53565b94509285019290850190600101611aa6565b5092979650505050505050565b60008060008060608587031215611af757600080fd5b611b008561174e565b9350611b0e6020860161174e565b925060408501356001600160401b0380821115611b2a57600080fd5b818701915087601f830112611b3e57600080fd5b813581811115611b4d57600080fd5b8860208260061b8501011115611b6257600080fd5b95989497505060200194505050565b6020815260006114e26020830184611a53565b634e487b7160e01b600052601160045260246000fd5b60008219821115611bad57611bad611b84565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611bdf57600080fd5b8301803591506001600160401b03821115611bf957600080fd5b602001915036819003821315611c0e57600080fd5b9250929050565b6000600019821415611c2957611c29611b84565b5060010190565b600181811c90821680611c4457607f821691505b602082108114156108b457634e487b7160e01b600052602260045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611c95816015850160208801611a27565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611cc6816026840160208801611a27565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000611d306040830185611a53565b8281036020840152610fdf8185611a53565b60008251611d54818460208701611a27565b9190910192915050565b600060208284031215611d7057600080fd5b815180151581146114e257600080fd5b600060208284031215611d9257600080fd5b5051919050565b6000816000190483118215151615611db357611db3611b84565b500290565b600081611dc757611dc7611b84565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220161c67cb658f9cb2f6e9d9cbc644cd472ec748a847f1b208fb4a73c00f4ef35464736f6c634300080c0033",
    "sourceMap": "1350:5728:13:-:0;;;2043:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1350:5728:13;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1350:5728:13;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ce5760003560e01c8063248a9ca3146100d35780632f2ff15d1461011357806336568abe146101355780633a105cfb14610155578063572b6c05146101755780639010d07c146101a557806391d14854146101d2578063938e3d7b146101f2578063a0a8e46014610212578063a217fddf1461022e578063a32fa5b314610243578063ac9650d814610263578063ca15c87314610290578063cb2ef6f7146102b0578063d547741f146102d2578063da26dbf1146102f2578063e8a3d48514610305575b600080fd5b3480156100df57600080fd5b506101006100ee366004611735565b60009081526003602052604090205490565b6040519081526020015b60405180910390f35b34801561011f57600080fd5b5061013361012e36600461176a565b610327565b005b34801561014157600080fd5b5061013361015036600461176a565b6103c6565b34801561016157600080fd5b5061013361017036600461184b565b610425565b34801561018157600080fd5b5061019561019036600461192e565b61055d565b604051901515815260200161010a565b3480156101b157600080fd5b506101c56101c0366004611949565b61057b565b60405161010a919061196b565b3480156101de57600080fd5b506101956101ed36600461176a565b61066b565b3480156101fe57600080fd5b5061013361020d36600461197f565b610696565b34801561021e57600080fd5b506040516002815260200161010a565b34801561023a57600080fd5b50610100600081565b34801561024f57600080fd5b5061019561025e36600461176a565b6106e7565b34801561026f57600080fd5b5061028361027e3660046119b3565b61073d565b60405161010a9190611a7f565b34801561029c57600080fd5b506101006102ab366004611735565b610831565b3480156102bc57600080fd5b506b041697264726f7045524332360a41b610100565b3480156102de57600080fd5b506101336102ed36600461176a565b6108ba565b610133610300366004611ae1565b6108d3565b34801561031157600080fd5b5061031a610bb9565b60405161010a9190611b71565b6000828152600360205260409020546103409033610c56565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16156103b85760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6103c28282610cd6565b5050565b336001600160a01b0382161461041b5760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016103af565b6103c28282610cea565b600054610100900460ff16158080156104455750600054600160ff909116105b80610466575061045430610c47565b158015610466575060005460ff166001145b6104c95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6000805460ff1916600117905580156104ec576000805461ff0019166101001790555b6104f582610d41565b6104fe83610dd0565b610509600085610cd6565b610511610eb2565b8015610557576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b031660009081526069602052604090205460ff1690565b60008281526004602052604081205481805b828110156106615760008681526004602090815260408083208484526001019091529020546001600160a01b03161561060a57848214156105f85760008681526004602090815260408083209383526001909301905220546001600160a01b03169250610665915050565b610603600183611b9a565b915061064f565b61061586600061066b565b801561063c5750600086815260046020908152604080832083805260020190915290205481145b1561064f5761064c600183611b9a565b91505b61065a600182611b9a565b905061058d565b5050505b92915050565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61069e610ee3565b6106db5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016103af565b6106e481610dd0565b50565b600082815260026020908152604080832083805290915281205460ff16610734575060008281526002602090815260408083206001600160a01b038516845290915290205460ff16610665565b50600192915050565b6060816001600160401b0381111561075757610757611796565b60405190808252806020026020018201604052801561078a57816020015b60608152602001906001900390816107755790505b50905060005b8281101561082a576107fa308585848181106107ae576107ae611bb2565b90506020028101906107c09190611bc8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ef692505050565b82828151811061080c5761080c611bb2565b6020026020010181905250808061082290611c15565b915050610790565b5092915050565b600081815260046020526040812054815b818110156108955760008481526004602090815260408083208484526001019091529020546001600160a01b03161561088357610880600184611b9a565b92505b61088e600182611b9a565b9050610842565b506108a183600061066b565b156108b4576108b1600183611b9a565b91505b50919050565b60008281526003602052604090205461041b9033610c56565b600260055414156109265760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103af565b600260055561093860006101ed610fe8565b6109765760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b60448201526064016103af565b80600080805b83811015610b4b5760006109d4898989898681811061099d5761099d611bb2565b6109b3926020604090920201908101915061192e565b8a8a878181106109c5576109c5611bb2565b90506040020160200135610ff2565b905080610a75578686838181106109ed576109ed611bb2565b610a03926020604090920201908101915061192e565b6001600160a01b0316886001600160a01b03168a6001600160a01b03167f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff8a8a87818110610a5357610a53611bb2565b90506040020160200135604051610a6c91815260200190565b60405180910390a45b6001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610b4257868683818110610aac57610aac611bb2565b9050604002016020013584610ac19190611b9a565b935034841115610b135760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74206e617469766520746f6b656e20616d6f756e7460448201526064016103af565b80610b4257868683818110610b2a57610b2a611bb2565b9050604002016020013583610b3f9190611b9a565b92505b5060010161097c565b50348214610b9b5760405162461bcd60e51b815260206004820152601d60248201527f496e636f7272656374206e617469766520746f6b656e20616d6f756e7400000060448201526064016103af565b8015610bab57610bab33826112a0565b505060016005555050505050565b60018054610bc690611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf290611c30565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b505050505081565b6001600160a01b03163b151590565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff166103c257610c94816001600160a01b03166014611347565b610c9f836020611347565b604051602001610cb0929190611c65565b60408051601f198184030181529082905262461bcd60e51b82526103af91600401611b71565b610ce082826114e9565b6103c28282611544565b610cf482826115b1565b60008281526004602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600054610100900460ff16610d685760405162461bcd60e51b81526004016103af90611cd2565b60005b81518110156103c257600160696000848481518110610d8c57610d8c611bb2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610dc881611c15565b915050610d6b565b600060018054610ddf90611c30565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0b90611c30565b8015610e585780601f10610e2d57610100808354040283529160200191610e58565b820191906000526020600020905b815481529060010190602001808311610e3b57829003601f168201915b50508551939450610e749360019350602087019250905061169c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610ea6929190611d1d565b60405180910390a15050565b600054610100900460ff16610ed95760405162461bcd60e51b81526004016103af90611cd2565b610ee1611613565b565b6000610ef1816101ed610fe8565b905090565b6060610f0183610c47565b610f5c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103af565b600080846001600160a01b031684604051610f779190611d42565b600060405180830381855af49150503d8060008114610fb2576040519150601f19603f3d011682016040523d82523d6000602084013e610fb7565b606091505b5091509150610fdf8282604051806060016040528060278152602001611dd060279139611641565b95945050505050565b6000610ef161167a565b60008161100157506001611298565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561107f576040516001600160a01b038416908390600081818185875af1925050503d806000811461106f576040519150601f19603f3d011682016040523d82523d6000602084013e611074565b606091505b505080915050611298565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908916916110e39190611d42565b6000604051808303816000865af19150503d8060008114611120576040519150601f19603f3d011682016040523d82523d6000602084013e611125565b606091505b50915091508192508215806111575750600081511180156111575750808060200190518101906111559190611d5e565b155b15611295576040516370a0823160e01b81526000935084906001600160a01b038916906370a082319061118e908a9060040161196b565b602060405180830381865afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf9190611d80565b1015801561124e5750604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285919089169063dd62ed3e90604401602060405180830381865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124b9190611d80565b10155b6112955760405162461bcd60e51b81526020600482015260186024820152774e6f742062616c616e6365206f7220616c6c6f77616e636560401b60448201526064016103af565b50505b949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112ed576040519150601f19603f3d011682016040523d82523d6000602084013e6112f2565b606091505b50509050806113425760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b60448201526064016103af565b505050565b60606000611356836002611d99565b611361906002611b9a565b6001600160401b0381111561137857611378611796565b6040519080825280601f01601f1916602001820160405280156113a2576020820181803683370190505b509050600360fc1b816000815181106113bd576113bd611bb2565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113ec576113ec611bb2565b60200101906001600160f81b031916908160001a9053506000611410846002611d99565b61141b906001611b9a565b90505b6001811115611493576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144f5761144f611bb2565b1a60f81b82828151811061146557611465611bb2565b60200101906001600160f81b031916908160001a90535060049490941c9361148c81611db8565b905061141e565b5083156114e25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103af565b9392505050565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600460205260408120805491600191906115638385611b9a565b9091555050600092835260046020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6115bb8282610c56565b60008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661163a5760405162461bcd60e51b81526004016103af90611cd2565b6001600555565b606083156116505750816114e2565b8251156116605782518084602001fd5b8160405162461bcd60e51b81526004016103af9190611b71565b60006116853361055d565b15611697575060131936013560601c90565b503390565b8280546116a890611c30565b90600052602060002090601f0160209004810192826116ca5760008555611710565b82601f106116e357805160ff1916838001178555611710565b82800160010185558215611710579182015b828111156117105782518255916020019190600101906116f5565b5061171c929150611720565b5090565b5b8082111561171c5760008155600101611721565b60006020828403121561174757600080fd5b5035919050565b80356001600160a01b038116811461176557600080fd5b919050565b6000806040838503121561177d57600080fd5b8235915061178d6020840161174e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156117d4576117d4611796565b604052919050565b600082601f8301126117ed57600080fd5b81356001600160401b0381111561180657611806611796565b611819601f8201601f19166020016117ac565b81815284602083860101111561182e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561186057600080fd5b6118698461174e565b92506020808501356001600160401b038082111561188657600080fd5b611892888389016117dc565b945060408701359150808211156118a857600080fd5b818701915087601f8301126118bc57600080fd5b8135818111156118ce576118ce611796565b8060051b91506118df8483016117ac565b818152918301840191848101908a8411156118f957600080fd5b938501935b8385101561191e5761190f8561174e565b825293850193908501906118fe565b8096505050505050509250925092565b60006020828403121561194057600080fd5b6114e28261174e565b6000806040838503121561195c57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b60006020828403121561199157600080fd5b81356001600160401b038111156119a757600080fd5b611298848285016117dc565b600080602083850312156119c657600080fd5b82356001600160401b03808211156119dd57600080fd5b818501915085601f8301126119f157600080fd5b813581811115611a0057600080fd5b8660208260051b8501011115611a1557600080fd5b60209290920196919550909350505050565b60005b83811015611a42578181015183820152602001611a2a565b838111156105575750506000910152565b60008151808452611a6b816020860160208601611a27565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ad457603f19888603018452611ac2858351611a53565b94509285019290850190600101611aa6565b5092979650505050505050565b60008060008060608587031215611af757600080fd5b611b008561174e565b9350611b0e6020860161174e565b925060408501356001600160401b0380821115611b2a57600080fd5b818701915087601f830112611b3e57600080fd5b813581811115611b4d57600080fd5b8860208260061b8501011115611b6257600080fd5b95989497505060200194505050565b6020815260006114e26020830184611a53565b634e487b7160e01b600052601160045260246000fd5b60008219821115611bad57611bad611b84565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611bdf57600080fd5b8301803591506001600160401b03821115611bf957600080fd5b602001915036819003821315611c0e57600080fd5b9250929050565b6000600019821415611c2957611c29611b84565b5060010190565b600181811c90821680611c4457607f821691505b602082108114156108b457634e487b7160e01b600052602260045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351611c95816015850160208801611a27565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351611cc6816026840160208801611a27565b01602601949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000611d306040830185611a53565b8281036020840152610fdf8185611a53565b60008251611d54818460208701611a27565b9190910192915050565b600060208284031215611d7057600080fd5b815180151581146114e257600080fd5b600060208284031215611d9257600080fd5b5051919050565b6000816000190483118215151615611db357611db3611b84565b500290565b600081611dc757611dc7611b84565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220161c67cb658f9cb2f6e9d9cbc644cd472ec748a847f1b208fb4a73c00f4ef35464736f6c634300080c0033",
    "sourceMap": "1350:5728:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:120:133;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;;;;345:25:641;;;333:2;318:18;2740:120:133;;;;;;;;3255:271;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;:::-;;4466:217;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;2136:358:13:-;;;;;;;;;;-1:-1:-1;2136:358:13;;;;;:::i;:::-;;:::i;918:134:304:-;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;:::-;;;3353:14:641;;3346:22;3328:41;;3316:2;3301:18;918:134:304;3188:187:641;1643:633:134;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2881:95:13:-;;;;;;;;;;-1:-1:-1;2881:95:13;;1843:1;4310:36:641;;4298:2;4283:18;2881:95:13;4168:184:641;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;2206:211;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;2734:91:13:-;;;;;;;;;;-1:-1:-1;;;;2734:91:13;;3897:171:133;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;3673:1452:13:-;;;;;;:::i;:::-;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;7729:2:641;3435:39:133;;;7711:21:641;7768:2;7748:18;;;7741:30;7807:31;7787:18;;;7780:59;7856:18;;3435:39:133;;;;;;;;3392:93;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;4466:217::-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;8087:2:641;4594:36:133;;;8069:21:641;8126:2;8106:18;;;8099:30;-1:-1:-1;;;8145:18:641;;;8138:56;8211:18;;4594:36:133;7885:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;2136:358:13:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;8442:2:641;3157:201:436;;;8424:21:641;8481:2;8461:18;;;8454:30;8520:34;8500:18;;;8493:62;-1:-1:-1;;;8571:18:641;;;8564:44;8625:19;;3157:201:436;8240:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;2305:51:13::1;2337:18;2305:31;:51::i;:::-;2367:31;2385:12;2367:17;:31::i;:::-;2408:45;787:4:133;2439:13:13::0;2408:10:::1;:45::i;:::-;2463:24;:22;:24::i;:::-;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;4310:36:641;;3553:14:436;;4298:2:641;4283:18;3553:14:436;;;;;;;3479:99;3101:483;2136:358:13;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;9321:2:641;1116:24:116;;;9303:21:641;9360:2;9340:18;;;9333:30;-1:-1:-1;;;9379:18:641;;;9372:44;9433:18;;1116:24:116;9119:338:641;1075:76:116;1161:23;1179:4;1161:17;:23::i;:::-;1003:188;:::o;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;3673:1452:13:-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;10462:2:641;2561:63:438;;;10444:21:641;10501:2;10481:18;;;10474:30;10540:33;10520:18;;;10513:61;10591:18;;2561:63:438;10260:355:641;2561:63:438;1815:1;2699:7;:18;3849:41:13::1;787:4:133;3877:12:13;:10;:12::i;3849:41::-;3841:69;;;::::0;-1:-1:-1;;;3841:69:13;;10822:2:641;3841:69:13::1;::::0;::::1;10804:21:641::0;10861:2;10841:18;;;10834:30;-1:-1:-1;;;10880:18:641;;;10873:45;10935:18;;3841:69:13::1;10620:339:641::0;3841:69:13::1;3935:9:::0;3921:11:::1;::::0;;4027:811:::1;4051:3;4047:1;:7;4027:811;;;4072:12;4087:181;4135:13;4166:11;4195:9;;4205:1;4195:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4195:22:13::1;:::i;:::-;4235:9;;4245:1;4235:12;;;;;;;:::i;:::-;;;;;;:19;;;4087:30;:181::i;:::-;4072:196;;4288:7;4283:138;;4362:9;;4372:1;4362:12;;;;;;;:::i;:::-;:22;::::0;::::1;:12;::::0;;::::1;;:22:::0;;::::1;::::0;-1:-1:-1;4362:22:13::1;:::i;:::-;-1:-1:-1::0;;;;;4320:86:13::1;4349:11;-1:-1:-1::0;;;;;4320:86:13::1;4334:13;-1:-1:-1::0;;;;;4320:86:13::1;;4386:9;;4396:1;4386:12;;;;;;;:::i;:::-;;;;;;:19;;;4320:86;;;;345:25:641::0;;333:2;318:18;;199:177;4320:86:13::1;;;;;;;;4283:138;-1:-1:-1::0;;;;;4439:49:13;::::1;397:42:277;4439:49:13;4435:330;;;4529:9;;4539:1;4529:12;;;;;;;:::i;:::-;;;;;;:19;;;4508:40;;;;;:::i;:::-;;;4596:9;4575:17;:30;;4567:75;;;::::0;-1:-1:-1;;;4567:75:13;;11166:2:641;4567:75:13::1;::::0;::::1;11148:21:641::0;;;11185:18;;;11178:30;11244:34;11224:18;;;11217:62;11296:18;;4567:75:13::1;10964:356:641::0;4567:75:13::1;4666:7;4661:90;;4713:9;;4723:1;4713:12;;;;;;;:::i;:::-;;;;;;:19;;;4697:35;;;;;:::i;:::-;;;4661:90;-1:-1:-1::0;4812:1:13::1;4807:6;4027:811;;;;4877:9;4856:17;:30;4848:72;;;::::0;-1:-1:-1;;;4848:72:13;;11527:2:641;4848:72:13::1;::::0;::::1;11509:21:641::0;11566:2;11546:18;;;11539:30;11605:31;11585:18;;;11578:59;11654:18;;4848:72:13::1;11325:353:641::0;4848:72:13::1;4935:16:::0;;4931:188:::1;;5039:69;5083:10;5095:12;5039:43;:69::i;:::-;-1:-1:-1::0;;1772:1:438;2872:7;:22;-1:-1:-1;;;;;3673:1452:13:o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;5557:495:133:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;3255:271:133;;:::o;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;1273:185:116::0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;6605:133:13:-;6667:4;6690:41;6667:4;6718:12;:10;:12::i;6690:41::-;6683:48;;6605:133;:::o;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;13857:2:641;1226:88:466;;;13839:21:641;13896:2;13876:18;;;13869:30;13935:34;13915:18;;;13908:62;-1:-1:-1;;;13986:18:641;;;13979:36;14032:19;;1226:88:466;13655:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;6769:140:13:-;6831:14;6864:38;:36;:38::i;5400:1110::-;5560:12;5588;5584:85;;-1:-1:-1;5626:4:13;5644:14;;5584:85;-1:-1:-1;;;;;5683:45:13;;397:42:277;5683:45:13;5679:825;;;5868:30;;-1:-1:-1;;;;;5868:8:13;;;5885:7;;5868:30;;;;5885:7;5868:8;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5854:44;;;;;5679:825;;;5999:73;;;-1:-1:-1;;;;;14809:15:641;;;5999:73:13;;;14791:34:641;14861:15;;;14841:18;;;14834:43;14893:18;;;;14886:34;;;5999:73:13;;;;;;;;;;14726:18:641;;;;5999:73:13;;;;;;;-1:-1:-1;;;;;5999:73:13;-1:-1:-1;;;5999:73:13;;;5967:119;;-1:-1:-1;;;;5967:14:13;;;;:119;;5999:73;5967:119;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:157;;;;6111:8;6101:18;;6138:7;6137:8;:60;;;;6165:1;6150:5;:12;:16;:46;;;;;6182:5;6171:25;;;;;;;;;;;;:::i;:::-;6170:26;6150:46;6133:361;;;6280:34;;-1:-1:-1;;;6280:34:13;;6227:5;;-1:-1:-1;6318:7:13;;-1:-1:-1;;;;;6280:27:13;;;;;:34;;6308:5;;6280:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;:133;;;;-1:-1:-1;6353:49:13;;-1:-1:-1;;;6353:49:13;;-1:-1:-1;;;;;15632:15:641;;;6353:49:13;;;15614:34:641;6396:4:13;15664:18:641;;;15657:43;6406:7:13;;6353:27;;;;;;15549:18:641;;6353:49:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6280:133;6251:228;;;;-1:-1:-1;;;6251:228:13;;15913:2:641;6251:228:13;;;15895:21:641;15952:2;15932:18;;;15925:30;-1:-1:-1;;;15971:18:641;;;15964:54;16035:18;;6251:228:13;15711:348:641;6251:228:13;5915:589;;5679:825;5400:1110;;;;;;:::o;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;16266:2:641;2758:48:277;;;16248:21:641;16305:2;16285:18;;;16278:30;-1:-1:-1;;;16324:18:641;;;16317:58;16392:18;;2758:48:277;16064:352:641;2758:48:277;2590:223;2521:292;;:::o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;16937:2:641;1913:55:285;;;16919:21:641;;;16956:18;;;16949:30;17015:34;16995:18;;;16988:62;17067:18;;1913:55:285;16735:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;5036:168:133:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;1970:109:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;6605:133:13:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:641;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:641;;14:180;-1:-1:-1;14:180:641:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:641;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:254::-;627:6;635;688:2;676:9;667:7;663:23;659:32;656:52;;;704:1;701;694:12;656:52;740:9;727:23;717:33;;769:38;803:2;792:9;788:18;769:38;:::i;:::-;759:48;;559:254;;;;;:::o;818:127::-;879:10;874:3;870:20;867:1;860:31;910:4;907:1;900:15;934:4;931:1;924:15;950:275;1021:2;1015:9;1086:2;1067:13;;-1:-1:-1;;1063:27:641;1051:40;;-1:-1:-1;;;;;1106:34:641;;1142:22;;;1103:62;1100:88;;;1168:18;;:::i;:::-;1204:2;1197:22;950:275;;-1:-1:-1;950:275:641:o;1230:531::-;1273:5;1326:3;1319:4;1311:6;1307:17;1303:27;1293:55;;1344:1;1341;1334:12;1293:55;1380:6;1367:20;-1:-1:-1;;;;;1402:2:641;1399:26;1396:52;;;1428:18;;:::i;:::-;1472:55;1515:2;1496:13;;-1:-1:-1;;1492:27:641;1521:4;1488:38;1472:55;:::i;:::-;1552:2;1543:7;1536:19;1598:3;1591:4;1586:2;1578:6;1574:15;1570:26;1567:35;1564:55;;;1615:1;1612;1605:12;1564:55;1680:2;1673:4;1665:6;1661:17;1654:4;1645:7;1641:18;1628:55;1728:1;1703:16;;;1721:4;1699:27;1692:38;;;;1707:7;1230:531;-1:-1:-1;;;1230:531:641:o;1766:1226::-;1878:6;1886;1894;1947:2;1935:9;1926:7;1922:23;1918:32;1915:52;;;1963:1;1960;1953:12;1915:52;1986:29;2005:9;1986:29;:::i;:::-;1976:39;;2034:2;2087;2076:9;2072:18;2059:32;-1:-1:-1;;;;;2151:2:641;2143:6;2140:14;2137:34;;;2167:1;2164;2157:12;2137:34;2190:50;2232:7;2223:6;2212:9;2208:22;2190:50;:::i;:::-;2180:60;;2293:2;2282:9;2278:18;2265:32;2249:48;;2322:2;2312:8;2309:16;2306:36;;;2338:1;2335;2328:12;2306:36;2376:8;2365:9;2361:24;2351:34;;2423:7;2416:4;2412:2;2408:13;2404:27;2394:55;;2445:1;2442;2435:12;2394:55;2481:2;2468:16;2503:2;2499;2496:10;2493:36;;;2509:18;;:::i;:::-;2555:2;2552:1;2548:10;2538:20;;2578:28;2602:2;2598;2594:11;2578:28;:::i;:::-;2640:15;;;2710:11;;;2706:20;;;2671:12;;;;2738:19;;;2735:39;;;2770:1;2767;2760:12;2735:39;2794:11;;;;2814:148;2830:6;2825:3;2822:15;2814:148;;;2896:23;2915:3;2896:23;:::i;:::-;2884:36;;2847:12;;;;2940;;;;2814:148;;;2981:5;2971:15;;;;;;;;1766:1226;;;;;:::o;2997:186::-;3056:6;3109:2;3097:9;3088:7;3084:23;3080:32;3077:52;;;3125:1;3122;3115:12;3077:52;3148:29;3167:9;3148:29;:::i;3380:248::-;3448:6;3456;3509:2;3497:9;3488:7;3484:23;3480:32;3477:52;;;3525:1;3522;3515:12;3477:52;-1:-1:-1;;3548:23:641;;;3618:2;3603:18;;;3590:32;;-1:-1:-1;3380:248:641:o;3633:203::-;-1:-1:-1;;;;;3797:32:641;;;;3779:51;;3767:2;3752:18;;3633:203::o;3841:322::-;3910:6;3963:2;3951:9;3942:7;3938:23;3934:32;3931:52;;;3979:1;3976;3969:12;3931:52;4019:9;4006:23;-1:-1:-1;;;;;4044:6:641;4041:30;4038:50;;;4084:1;4081;4074:12;4038:50;4107;4149:7;4140:6;4129:9;4125:22;4107:50;:::i;4357:626::-;4454:6;4462;4515:2;4503:9;4494:7;4490:23;4486:32;4483:52;;;4531:1;4528;4521:12;4483:52;4571:9;4558:23;-1:-1:-1;;;;;4641:2:641;4633:6;4630:14;4627:34;;;4657:1;4654;4647:12;4627:34;4695:6;4684:9;4680:22;4670:32;;4740:7;4733:4;4729:2;4725:13;4721:27;4711:55;;4762:1;4759;4752:12;4711:55;4802:2;4789:16;4828:2;4820:6;4817:14;4814:34;;;4844:1;4841;4834:12;4814:34;4897:7;4892:2;4882:6;4879:1;4875:14;4871:2;4867:23;4863:32;4860:45;4857:65;;;4918:1;4915;4908:12;4857:65;4949:2;4941:11;;;;;4971:6;;-1:-1:-1;4357:626:641;;-1:-1:-1;;;;4357:626:641:o;4988:258::-;5060:1;5070:113;5084:6;5081:1;5078:13;5070:113;;;5160:11;;;5154:18;5141:11;;;5134:39;5106:2;5099:10;5070:113;;;5201:6;5198:1;5195:13;5192:48;;;-1:-1:-1;;5236:1:641;5218:16;;5211:27;4988:258::o;5251:257::-;5292:3;5330:5;5324:12;5357:6;5352:3;5345:19;5373:63;5429:6;5422:4;5417:3;5413:14;5406:4;5399:5;5395:16;5373:63;:::i;:::-;5490:2;5469:15;-1:-1:-1;;5465:29:641;5456:39;;;;5497:4;5452:50;;5251:257;-1:-1:-1;;5251:257:641:o;5513:800::-;5673:4;5702:2;5742;5731:9;5727:18;5772:2;5761:9;5754:21;5795:6;5830;5824:13;5861:6;5853;5846:22;5899:2;5888:9;5884:18;5877:25;;5961:2;5951:6;5948:1;5944:14;5933:9;5929:30;5925:39;5911:53;;5999:2;5991:6;5987:15;6020:1;6030:254;6044:6;6041:1;6038:13;6030:254;;;6137:2;6133:7;6121:9;6113:6;6109:22;6105:36;6100:3;6093:49;6165:39;6197:6;6188;6182:13;6165:39;:::i;:::-;6155:49;-1:-1:-1;6262:12:641;;;;6227:15;;;;6066:1;6059:9;6030:254;;;-1:-1:-1;6301:6:641;;5513:800;-1:-1:-1;;;;;;;5513:800:641:o;6500:798::-;6639:6;6647;6655;6663;6716:2;6704:9;6695:7;6691:23;6687:32;6684:52;;;6732:1;6729;6722:12;6684:52;6755:29;6774:9;6755:29;:::i;:::-;6745:39;;6803:38;6837:2;6826:9;6822:18;6803:38;:::i;:::-;6793:48;;6892:2;6881:9;6877:18;6864:32;-1:-1:-1;;;;;6956:2:641;6948:6;6945:14;6942:34;;;6972:1;6969;6962:12;6942:34;7010:6;6999:9;6995:22;6985:32;;7055:7;7048:4;7044:2;7040:13;7036:27;7026:55;;7077:1;7074;7067:12;7026:55;7117:2;7104:16;7143:2;7135:6;7132:14;7129:34;;;7159:1;7156;7149:12;7129:34;7212:7;7207:2;7197:6;7194:1;7190:14;7186:2;7182:23;7178:32;7175:45;7172:65;;;7233:1;7230;7223:12;7172:65;6500:798;;;;-1:-1:-1;;7264:2:641;7256:11;;-1:-1:-1;;;6500:798:641:o;7303:219::-;7452:2;7441:9;7434:21;7415:4;7472:44;7512:2;7501:9;7497:18;7489:6;7472:44;:::i;8854:127::-;8915:10;8910:3;8906:20;8903:1;8896:31;8946:4;8943:1;8936:15;8970:4;8967:1;8960:15;8986:128;9026:3;9057:1;9053:6;9050:1;9047:13;9044:39;;;9063:18;;:::i;:::-;-1:-1:-1;9099:9:641;;8986:128::o;9462:127::-;9523:10;9518:3;9514:20;9511:1;9504:31;9554:4;9551:1;9544:15;9578:4;9575:1;9568:15;9594:521;9671:4;9677:6;9737:11;9724:25;9831:2;9827:7;9816:8;9800:14;9796:29;9792:43;9772:18;9768:68;9758:96;;9850:1;9847;9840:12;9758:96;9877:33;;9929:20;;;-1:-1:-1;;;;;;9961:30:641;;9958:50;;;10004:1;10001;9994:12;9958:50;10037:4;10025:17;;-1:-1:-1;10068:14:641;10064:27;;;10054:38;;10051:58;;;10105:1;10102;10095:12;10051:58;9594:521;;;;;:::o;10120:135::-;10159:3;-1:-1:-1;;10180:17:641;;10177:43;;;10200:18;;:::i;:::-;-1:-1:-1;10247:1:641;10236:13;;10120:135::o;11683:380::-;11762:1;11758:12;;;;11805;;;11826:61;;11880:4;11872:6;11868:17;11858:27;;11826:61;11933:2;11925:6;11922:14;11902:18;11899:38;11896:161;;;11979:10;11974:3;11970:20;11967:1;11960:31;12014:4;12011:1;12004:15;12042:4;12039:1;12032:15;12068:784;-1:-1:-1;;;12474:3:641;12467:36;12449:3;12532:6;12526:13;12548:62;12603:6;12598:2;12593:3;12589:12;12582:4;12574:6;12570:17;12548:62;:::i;:::-;-1:-1:-1;;;12669:2:641;12629:16;;;12661:11;;;12654:40;12719:13;;12741:63;12719:13;12790:2;12782:11;;12775:4;12763:17;;12741:63;:::i;:::-;12824:17;12843:2;12820:26;;12068:784;-1:-1:-1;;;;12068:784:641:o;12857:407::-;13059:2;13041:21;;;13098:2;13078:18;;;13071:30;13137:34;13132:2;13117:18;;13110:62;-1:-1:-1;;;13203:2:641;13188:18;;13181:41;13254:3;13239:19;;12857:407::o;13269:381::-;13466:2;13455:9;13448:21;13429:4;13492:44;13532:2;13521:9;13517:18;13509:6;13492:44;:::i;:::-;13584:9;13576:6;13572:22;13567:2;13556:9;13552:18;13545:50;13612:32;13637:6;13629;13612:32;:::i;14062:274::-;14191:3;14229:6;14223:13;14245:53;14291:6;14286:3;14279:4;14271:6;14267:17;14245:53;:::i;:::-;14314:16;;;;;14062:274;-1:-1:-1;;14062:274:641:o;14931:277::-;14998:6;15051:2;15039:9;15030:7;15026:23;15022:32;15019:52;;;15067:1;15064;15057:12;15019:52;15099:9;15093:16;15152:5;15145:13;15138:21;15131:5;15128:32;15118:60;;15174:1;15171;15164:12;15213:184;15283:6;15336:2;15324:9;15315:7;15311:23;15307:32;15304:52;;;15352:1;15349;15342:12;15304:52;-1:-1:-1;15375:16:641;;15213:184;-1:-1:-1;15213:184:641:o;16421:168::-;16461:7;16527:1;16523;16519:6;16515:14;16512:1;16509:21;16504:1;16497:9;16490:17;16486:45;16483:71;;;16534:18;;:::i;:::-;-1:-1:-1;16574:9:641;;16421:168::o;16594:136::-;16633:3;16661:5;16651:39;;16670:18;;:::i;:::-;-1:-1:-1;;;16706:18:641;;16594:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "airdrop(address,address,(address,uint256)[])": "da26dbf1",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,address[])": "3a105cfb",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAirdropERC20.AirdropContent[]\",\"name\":\"_contents\",\"type\":\"tuple[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdrop(address,address,(address,uint256)[])\":{\"details\":\"The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.\",\"params\":{\"_contents\":\"List containing recipient, tokenId and amounts to airdrop.\",\"_tokenAddress\":\"The contract address of the tokens to transfer.\",\"_tokenOwner\":\"The owner of the the tokens to transfer.\"}},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,address[])\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AirdropFailed(address,address,address,uint256)\":{\"notice\":\"Emitted when an airdrop fails for a recipient address.\"}},\"kind\":\"user\",\"methods\":{\"airdrop(address,address,(address,uint256)[])\":{\"notice\":\"Lets contract-owner send ERC20 tokens to a list of addresses.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/airdrop/AirdropERC20.sol\":\"AirdropERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/airdrop/AirdropERC20.sol\":{\"keccak256\":\"0x50f758fbd4ebf6364f8fd930b84667a575356a5a6e51d9ad593a580694dbd687\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75f3368b3d1f2061c7a2b1a909d01c8d8d95e4f7d789b078f2d35e04c4f91dc4\",\"dweb:/ipfs/QmVxCfu89yBnTmsTKXu3bzwm2yGt91SPuXWrvc3mtUEev5\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/interfaces/airdrop/IAirdropERC20.sol\":{\"keccak256\":\"0x00c98bb7ab8d5e6a17bf84c3256b62058651fcffdcc007f4255be6cea6a32c8b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e92051668691fd50a0406965d349dbb124d7ba3b164b16faa07f76a555538cfd\",\"dweb:/ipfs/QmSZRYiXwYSMUoDwHj13eHVu6Yb4unJmmCGvTiKiaSv9Ju\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AirdropFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "struct IAirdropERC20.AirdropContent[]",
              "name": "_contents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "airdrop"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "airdrop(address,address,(address,uint256)[])": {
            "details": "The token-owner should approve target tokens to Airdrop contract,                   which acts as operator for the tokens.",
            "params": {
              "_contents": "List containing recipient, tokenId and amounts to airdrop.",
              "_tokenAddress": "The contract address of the tokens to transfer.",
              "_tokenOwner": "The owner of the the tokens to transfer."
            }
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,address[])": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "airdrop(address,address,(address,uint256)[])": {
            "notice": "Lets contract-owner send ERC20 tokens to a list of addresses."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/airdrop/AirdropERC20.sol": "AirdropERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/airdrop/AirdropERC20.sol": {
        "keccak256": "0x50f758fbd4ebf6364f8fd930b84667a575356a5a6e51d9ad593a580694dbd687",
        "urls": [
          "bzz-raw://75f3368b3d1f2061c7a2b1a909d01c8d8d95e4f7d789b078f2d35e04c4f91dc4",
          "dweb:/ipfs/QmVxCfu89yBnTmsTKXu3bzwm2yGt91SPuXWrvc3mtUEev5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/airdrop/IAirdropERC20.sol": {
        "keccak256": "0x00c98bb7ab8d5e6a17bf84c3256b62058651fcffdcc007f4255be6cea6a32c8b",
        "urls": [
          "bzz-raw://e92051668691fd50a0406965d349dbb124d7ba3b164b16faa07f76a555538cfd",
          "dweb:/ipfs/QmSZRYiXwYSMUoDwHj13eHVu6Yb4unJmmCGvTiKiaSv9Ju"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/airdrop/AirdropERC20.sol",
    "id": 5495,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "AirdropERC20": [
        5494
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "IAirdropERC20": [
        55797
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC20": [
        31216
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "Initializable": [
        151869
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "ReentrancyGuardUpgradeable": [
        152055
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7040:13",
    "nodes": [
      {
        "id": 5120,
        "nodeType": "PragmaDirective",
        "src": "39:24:13",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 5121,
        "nodeType": "ImportDirective",
        "src": "775:85:13",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 152056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5122,
        "nodeType": "ImportDirective",
        "src": "861:76:13",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5123,
        "nodeType": "ImportDirective",
        "src": "987:49:13",
        "nodes": [],
        "absolutePath": "contracts/interfaces/airdrop/IAirdropERC20.sol",
        "file": "../interfaces/airdrop/IAirdropERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 55798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5125,
        "nodeType": "ImportDirective",
        "src": "1037:69:13",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 64494,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5124,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64493,
              "src": "1046:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5126,
        "nodeType": "ImportDirective",
        "src": "1107:37:13",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 31217,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5127,
        "nodeType": "ImportDirective",
        "src": "1145:70:13",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5128,
        "nodeType": "ImportDirective",
        "src": "1256:48:13",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5129,
        "nodeType": "ImportDirective",
        "src": "1305:43:13",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5495,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5494,
        "nodeType": "ContractDefinition",
        "src": "1350:5728:13",
        "nodes": [
          {
            "id": 5149,
            "nodeType": "VariableDeclaration",
            "src": "1740:62:13",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "1765:11:13",
            "scope": 5494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5144,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1740:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41697264726f704552433230",
                  "id": 5147,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1787:14:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  },
                  "value": "AirdropERC20"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d8a06fdfd641ef6e9bfa8682572ce0daaf81505bbd975ec0d64b7db90968bd10",
                    "typeString": "literal_string \"AirdropERC20\""
                  }
                ],
                "id": 5146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1779:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 5145,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1779:7:13",
                  "typeDescriptions": {}
                }
              },
              "id": 5148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1779:23:13",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5152,
            "nodeType": "VariableDeclaration",
            "src": "1808:36:13",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1833:7:13",
            "scope": 5494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1808:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 5151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1843:1:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 5158,
            "nodeType": "FunctionDefinition",
            "src": "2043:28:13",
            "nodes": [],
            "body": {
              "id": 5157,
              "nodeType": "Block",
              "src": "2069:2:13",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 5155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5154,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "2057:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2057:11:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:2:13"
            },
            "returnParameters": {
              "id": 5156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:0:13"
            },
            "scope": 5494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5188,
            "nodeType": "FunctionDefinition",
            "src": "2136:358:13",
            "nodes": [],
            "body": {
              "id": 5187,
              "nodeType": "Block",
              "src": "2295:199:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5172,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5166,
                        "src": "2337:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 5171,
                      "name": "__ERC2771Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75702,
                      "src": "2305:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 5173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2305:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5174,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:51:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5176,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5163,
                        "src": "2385:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 5175,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "2367:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 5177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5178,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5180,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "2419:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5181,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5161,
                        "src": "2439:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5179,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "2408:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 5182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5183,
                  "nodeType": "ExpressionStatement",
                  "src": "2408:45:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5184,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152019,
                      "src": "2463:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5186,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:24:13"
                }
              ]
            },
            "documentation": {
              "id": 5159,
              "nodeType": "StructuredDocumentation",
              "src": "2077:54:13",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "3a105cfb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5168,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "2283:11:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2283:11:13"
              }
            ],
            "name": "initialize",
            "nameLocation": "2145:10:13",
            "parameters": {
              "id": 5167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5161,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "2173:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5188,
                  "src": "2165:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "2210:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5188,
                  "src": "2196:26:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5166,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "2249:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5188,
                  "src": "2232:35:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5164,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2232:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5165,
                    "nodeType": "ArrayTypeName",
                    "src": "2232:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2155:118:13"
            },
            "returnParameters": {
              "id": 5170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2295:0:13"
            },
            "scope": 5494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5197,
            "nodeType": "FunctionDefinition",
            "src": "2734:91:13",
            "nodes": [],
            "body": {
              "id": 5196,
              "nodeType": "Block",
              "src": "2790:35:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5194,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5149,
                    "src": "2807:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5193,
                  "id": 5195,
                  "nodeType": "Return",
                  "src": "2800:18:13"
                }
              ]
            },
            "documentation": {
              "id": 5189,
              "nodeType": "StructuredDocumentation",
              "src": "2687:42:13",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "2743:12:13",
            "parameters": {
              "id": 5190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:2:13"
            },
            "returnParameters": {
              "id": 5193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5197,
                  "src": "2781:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5191,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:9:13"
            },
            "scope": 5494,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5209,
            "nodeType": "FunctionDefinition",
            "src": "2881:95:13",
            "nodes": [],
            "body": {
              "id": 5208,
              "nodeType": "Block",
              "src": "2938:38:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5205,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5152,
                        "src": "2961:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2955:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 5203,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2955:5:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:14:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 5202,
                  "id": 5207,
                  "nodeType": "Return",
                  "src": "2948:21:13"
                }
              ]
            },
            "documentation": {
              "id": 5198,
              "nodeType": "StructuredDocumentation",
              "src": "2831:45:13",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "2890:15:13",
            "parameters": {
              "id": 5199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2905:2:13"
            },
            "returnParameters": {
              "id": 5202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5209,
                  "src": "2931:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5200,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2930:7:13"
            },
            "scope": 5494,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5343,
            "nodeType": "FunctionDefinition",
            "src": "3673:1452:13",
            "nodes": [],
            "body": {
              "id": 5342,
              "nodeType": "Block",
              "src": "3831:1294:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5225,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38423,
                            "src": "3857:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5226,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5481
                              ],
                              "referencedDeclaration": 5481,
                              "src": "3877:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3877:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5224,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38454,
                          "src": "3849:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 5228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3849:41:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "id": 5229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        },
                        "value": "Not authorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        }
                      ],
                      "id": 5223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3841:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3841:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5231,
                  "nodeType": "ExpressionStatement",
                  "src": "3841:69:13"
                },
                {
                  "assignments": [
                    5233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5233,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3929:3:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5342,
                      "src": "3921:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3921:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5236,
                  "initialValue": {
                    "expression": {
                      "id": 5234,
                      "name": "_contents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5218,
                      "src": "3935:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                      }
                    },
                    "id": 5235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3935:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3921:30:13"
                },
                {
                  "assignments": [
                    5238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5238,
                      "mutability": "mutable",
                      "name": "nativeTokenAmount",
                      "nameLocation": "3969:17:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5342,
                      "src": "3961:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3961:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5239,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3961:25:13"
                },
                {
                  "assignments": [
                    5241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5241,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nameLocation": "4004:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5342,
                      "src": "3996:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5240,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5242,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:20:13"
                },
                {
                  "body": {
                    "id": 5319,
                    "nodeType": "Block",
                    "src": "4058:780:13",
                    "statements": [
                      {
                        "assignments": [
                          5251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5251,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4077:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5319,
                            "src": "4072:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 5250,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4072:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5264,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 5253,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5212,
                              "src": "4135:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5254,
                              "name": "_tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5214,
                              "src": "4166:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 5255,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5218,
                                  "src": "4195:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 5257,
                                "indexExpression": {
                                  "id": 5256,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5244,
                                  "src": "4205:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4195:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 5258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55781,
                              "src": "4195:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 5259,
                                  "name": "_contents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5218,
                                  "src": "4235:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                  }
                                },
                                "id": 5261,
                                "indexExpression": {
                                  "id": 5260,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5244,
                                  "src": "4245:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4235:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                  "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                }
                              },
                              "id": 5262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55783,
                              "src": "4235:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5252,
                            "name": "_transferCurrencyWithReturnVal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5455,
                            "src": "4087:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 5263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4087:181:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4072:196:13"
                      },
                      {
                        "condition": {
                          "id": 5266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4287:8:13",
                          "subExpression": {
                            "id": 5265,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5251,
                            "src": "4288:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5281,
                        "nodeType": "IfStatement",
                        "src": "4283:138:13",
                        "trueBody": {
                          "id": 5280,
                          "nodeType": "Block",
                          "src": "4297:124:13",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 5268,
                                    "name": "_tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5212,
                                    "src": "4334:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 5269,
                                    "name": "_tokenOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5214,
                                    "src": "4349:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 5270,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5218,
                                        "src": "4362:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 5272,
                                      "indexExpression": {
                                        "id": 5271,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5244,
                                        "src": "4372:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4362:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 5273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "recipient",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 55781,
                                    "src": "4362:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 5274,
                                        "name": "_contents",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5218,
                                        "src": "4386:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                        }
                                      },
                                      "id": 5276,
                                      "indexExpression": {
                                        "id": 5275,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5244,
                                        "src": "4396:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4386:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                      }
                                    },
                                    "id": 5277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 55783,
                                    "src": "4386:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 5267,
                                  "name": "AirdropFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55779,
                                  "src": "4320:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 5278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4320:86:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5279,
                              "nodeType": "EmitStatement",
                              "src": "4315:91:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5282,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5212,
                            "src": "4439:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 5283,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64493,
                              "src": "4456:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 5284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "NATIVE_TOKEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64261,
                            "src": "4456:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4439:49:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5313,
                        "nodeType": "IfStatement",
                        "src": "4435:330:13",
                        "trueBody": {
                          "id": 5312,
                          "nodeType": "Block",
                          "src": "4490:275:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 5291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 5286,
                                  "name": "nativeTokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5238,
                                  "src": "4508:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 5287,
                                      "name": "_contents",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5218,
                                      "src": "4529:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                      }
                                    },
                                    "id": 5289,
                                    "indexExpression": {
                                      "id": 5288,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5244,
                                      "src": "4539:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4529:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                      "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                    }
                                  },
                                  "id": 5290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55783,
                                  "src": "4529:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4508:40:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5292,
                              "nodeType": "ExpressionStatement",
                              "src": "4508:40:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 5294,
                                      "name": "nativeTokenAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5238,
                                      "src": "4575:17:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 5295,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4596:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 5296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "4596:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4575:30:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74206e617469766520746f6b656e20616d6f756e74",
                                    "id": 5298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4607:34:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    },
                                    "value": "Insufficient native token amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b5f7847becfd85def84c08d77b158a27213a97332b8d819a8c96e6af6cf46854",
                                      "typeString": "literal_string \"Insufficient native token amount\""
                                    }
                                  ],
                                  "id": 5293,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4567:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 5299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4567:75:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5300,
                              "nodeType": "ExpressionStatement",
                              "src": "4567:75:13"
                            },
                            {
                              "condition": {
                                "id": 5302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4665:8:13",
                                "subExpression": {
                                  "id": 5301,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5251,
                                  "src": "4666:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5311,
                              "nodeType": "IfStatement",
                              "src": "4661:90:13",
                              "trueBody": {
                                "id": 5310,
                                "nodeType": "Block",
                                "src": "4675:76:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 5308,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 5303,
                                        "name": "refundAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5241,
                                        "src": "4697:12:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 5304,
                                            "name": "_contents",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5218,
                                            "src": "4713:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                                              "typeString": "struct IAirdropERC20.AirdropContent calldata[] calldata"
                                            }
                                          },
                                          "id": 5306,
                                          "indexExpression": {
                                            "id": 5305,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5244,
                                            "src": "4723:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4713:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AirdropContent_$55784_calldata_ptr",
                                            "typeString": "struct IAirdropERC20.AirdropContent calldata"
                                          }
                                        },
                                        "id": 5307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 55783,
                                        "src": "4713:19:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4697:35:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5309,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4697:35:13"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 5318,
                        "nodeType": "UncheckedBlock",
                        "src": "4779:49:13",
                        "statements": [
                          {
                            "expression": {
                              "id": 5316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 5314,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5244,
                                "src": "4807:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 5315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4812:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4807:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5317,
                            "nodeType": "ExpressionStatement",
                            "src": "4807:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5247,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5244,
                      "src": "4047:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5248,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5233,
                      "src": "4051:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4047:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5320,
                  "initializationExpression": {
                    "assignments": [
                      5244
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5244,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4040:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 5320,
                        "src": "4032:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5246,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4044:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4032:13:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "4027:811:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5322,
                          "name": "nativeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5238,
                          "src": "4856:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 5323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4877:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4877:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4856:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206e617469766520746f6b656e20616d6f756e74",
                        "id": 5326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4888:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        },
                        "value": "Incorrect native token amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce5f59a11237ec549173ecd41c5fdf614dfe256f40250ad64b203f7b403da89",
                          "typeString": "literal_string \"Incorrect native token amount\""
                        }
                      ],
                      "id": 5321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4848:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:72:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5328,
                  "nodeType": "ExpressionStatement",
                  "src": "4848:72:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5329,
                      "name": "refundAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5241,
                      "src": "4935:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4950:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4935:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5341,
                  "nodeType": "IfStatement",
                  "src": "4931:188:13",
                  "trueBody": {
                    "id": 5340,
                    "nodeType": "Block",
                    "src": "4953:166:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5335,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5083:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5083:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5337,
                              "name": "refundAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5241,
                              "src": "5095:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5332,
                              "name": "CurrencyTransferLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64493,
                              "src": "5039:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                                "typeString": "type(library CurrencyTransferLib)"
                              }
                            },
                            "id": 5334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferNativeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64452,
                            "src": "5039:43:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 5338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5039:69:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5339,
                        "nodeType": "ExpressionStatement",
                        "src": "5039:69:13"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              55796
            ],
            "documentation": {
              "id": 5210,
              "nodeType": "StructuredDocumentation",
              "src": "3164:504:13",
              "text": "  @notice          Lets contract-owner send ERC20 tokens to a list of addresses.\n  @dev             The token-owner should approve target tokens to Airdrop contract,\n                   which acts as operator for the tokens.\n  @param _tokenAddress    The contract address of the tokens to transfer.\n  @param _tokenOwner      The owner of the the tokens to transfer.\n  @param _contents        List containing recipient, tokenId and amounts to airdrop."
            },
            "functionSelector": "da26dbf1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5220,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152049,
                  "src": "3818:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3818:12:13"
              }
            ],
            "name": "airdrop",
            "nameLocation": "3682:7:13",
            "parameters": {
              "id": 5219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5212,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3707:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "3699:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3699:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5214,
                  "mutability": "mutable",
                  "name": "_tokenOwner",
                  "nameLocation": "3738:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "3730:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3730:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5218,
                  "mutability": "mutable",
                  "name": "_contents",
                  "nameLocation": "3785:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "3759:35:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IAirdropERC20.AirdropContent[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5216,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5215,
                        "name": "AirdropContent",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55784,
                        "src": "3759:14:13"
                      },
                      "referencedDeclaration": 55784,
                      "src": "3759:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AirdropContent_$55784_storage_ptr",
                        "typeString": "struct IAirdropERC20.AirdropContent"
                      }
                    },
                    "id": 5217,
                    "nodeType": "ArrayTypeName",
                    "src": "3759:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AirdropContent_$55784_storage_$dyn_storage_ptr",
                      "typeString": "struct IAirdropERC20.AirdropContent[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3689:111:13"
            },
            "returnParameters": {
              "id": 5222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:0:13"
            },
            "scope": 5494,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5455,
            "nodeType": "FunctionDefinition",
            "src": "5400:1110:13",
            "nodes": [],
            "body": {
              "id": 5454,
              "nodeType": "Block",
              "src": "5574:936:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5357,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5352,
                      "src": "5588:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5599:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5588:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5367,
                  "nodeType": "IfStatement",
                  "src": "5584:85:13",
                  "trueBody": {
                    "id": 5366,
                    "nodeType": "Block",
                    "src": "5602:67:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 5362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5360,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5355,
                            "src": "5616:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5626:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5616:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5363,
                        "nodeType": "ExpressionStatement",
                        "src": "5616:14:13"
                      },
                      {
                        "expression": {
                          "id": 5364,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5355,
                          "src": "5651:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 5356,
                        "id": 5365,
                        "nodeType": "Return",
                        "src": "5644:14:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5368,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5346,
                      "src": "5683:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 5369,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "5696:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 5370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "5696:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5683:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5452,
                    "nodeType": "Block",
                    "src": "5915:589:13",
                    "statements": [
                      {
                        "assignments": [
                          5384,
                          5386
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5384,
                            "mutability": "mutable",
                            "name": "success_",
                            "nameLocation": "5935:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5452,
                            "src": "5930:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 5383,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5930:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 5386,
                            "mutability": "mutable",
                            "name": "data_",
                            "nameLocation": "5958:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5452,
                            "src": "5945:18:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 5385,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5945:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5399,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 5391,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31216,
                                      "src": "6022:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 5392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31199,
                                    "src": "6022:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 5393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6022:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 5394,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5348,
                                  "src": "6052:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5395,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5350,
                                  "src": "6059:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5396,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5352,
                                  "src": "6064:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 5389,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5999:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "5999:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 5397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5999:73:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 5387,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5346,
                              "src": "5967:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 5388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5967:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 5398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5967:119:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5929:157:13"
                      },
                      {
                        "expression": {
                          "id": 5402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5400,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5355,
                            "src": "6101:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5401,
                            "name": "success_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5384,
                            "src": "6111:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6101:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5403,
                        "nodeType": "ExpressionStatement",
                        "src": "6101:18:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6137:8:13",
                            "subExpression": {
                              "id": 5404,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5355,
                              "src": "6138:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 5418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 5406,
                                      "name": "data_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5386,
                                      "src": "6150:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 5407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "6150:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 5408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6165:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6150:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 5417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "6170:26:13",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "id": 5412,
                                        "name": "data_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5386,
                                        "src": "6182:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 5414,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6190:4:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 5413,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6190:4:13",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 5415,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "6189:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 5410,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "6171:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 5411,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "6171:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 5416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6171:25:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6150:46:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 5419,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6149:48:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6137:60:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5451,
                        "nodeType": "IfStatement",
                        "src": "6133:361:13",
                        "trueBody": {
                          "id": 5450,
                          "nodeType": "Block",
                          "src": "6199:295:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 5423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 5421,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5355,
                                  "src": "6217:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 5422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6227:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6217:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5424,
                              "nodeType": "ExpressionStatement",
                              "src": "6217:15:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 5446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5433,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 5430,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5348,
                                            "src": "6308:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 5427,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5346,
                                                "src": "6287:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 5426,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 31216,
                                              "src": "6280:6:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 5428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6280:17:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$31216",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 5429,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 31161,
                                          "src": "6280:27:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 5431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6280:34:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 5432,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5352,
                                        "src": "6318:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6280:45:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 5438,
                                            "name": "_from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5348,
                                            "src": "6381:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 5441,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "6396:4:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$5494",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_AirdropERC20_$5494",
                                                  "typeString": "contract AirdropERC20"
                                                }
                                              ],
                                              "id": 5440,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "6388:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 5439,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6388:7:13",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 5442,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6388:13:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 5435,
                                                "name": "_currency",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5346,
                                                "src": "6360:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 5434,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 31216,
                                              "src": "6353:6:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 5436,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6353:17:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$31216",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 5437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "allowance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 31170,
                                          "src": "6353:27:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address,address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 5443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6353:49:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "id": 5444,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5352,
                                        "src": "6406:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6353:60:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6280:133:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f742062616c616e6365206f7220616c6c6f77616e6365",
                                    "id": 5447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6435:26:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    },
                                    "value": "Not balance or allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_938cb21e45b1cdea9582a25de019a56300a849007f54682c1db1a8fbf02c5005",
                                      "typeString": "literal_string \"Not balance or allowance\""
                                    }
                                  ],
                                  "id": 5425,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6251:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 5448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6251:228:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5449,
                              "nodeType": "ExpressionStatement",
                              "src": "6251:228:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 5453,
                  "nodeType": "IfStatement",
                  "src": "5679:825:13",
                  "trueBody": {
                    "id": 5382,
                    "nodeType": "Block",
                    "src": "5730:179:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 5380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 5372,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5355,
                                "src": "5855:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 5373,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5854:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 5378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5895:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 5374,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5350,
                                  "src": "5868:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 5375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "5868:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 5377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 5376,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5352,
                                  "src": "5885:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "5868:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 5379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5868:30:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "5854:44:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5381,
                        "nodeType": "ExpressionStatement",
                        "src": "5854:44:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5344,
              "nodeType": "StructuredDocumentation",
              "src": "5309:86:13",
              "text": "@dev Transfers ERC20 tokens and returns a boolean i.e. the status of the transfer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferCurrencyWithReturnVal",
            "nameLocation": "5409:30:13",
            "parameters": {
              "id": 5353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5346,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "5457:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "5449:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5449:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5348,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5484:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "5476:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5476:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5350,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5507:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "5499:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5499:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5352,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5528:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "5520:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5439:102:13"
            },
            "returnParameters": {
              "id": 5356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5355,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5565:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5455,
                  "src": "5560:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5559:14:13"
            },
            "scope": 5494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5469,
            "nodeType": "FunctionDefinition",
            "src": "6605:133:13",
            "nodes": [],
            "body": {
              "id": 5468,
              "nodeType": "Block",
              "src": "6673:65:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5463,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "6698:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5464,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            5481
                          ],
                          "referencedDeclaration": 5481,
                          "src": "6718:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6718:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5462,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "6690:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 5466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6690:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5461,
                  "id": 5467,
                  "nodeType": "Return",
                  "src": "6683:48:13"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 5456,
              "nodeType": "StructuredDocumentation",
              "src": "6516:84:13",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6614:18:13",
            "overrides": {
              "id": 5458,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6649:8:13"
            },
            "parameters": {
              "id": 5457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6632:2:13"
            },
            "returnParameters": {
              "id": 5461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5469,
                  "src": "6667:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:6:13"
            },
            "scope": 5494,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5481,
            "nodeType": "FunctionDefinition",
            "src": "6769:140:13",
            "nodes": [],
            "body": {
              "id": 5480,
              "nodeType": "Block",
              "src": "6847:62:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5476,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "6864:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 5477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "6864:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6864:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5475,
                  "id": 5479,
                  "nodeType": "Return",
                  "src": "6857:45:13"
                }
              ]
            },
            "baseFunctions": [
              75733
            ],
            "documentation": {
              "id": 5470,
              "nodeType": "StructuredDocumentation",
              "src": "6744:20:13",
              "text": "@dev See ERC2771"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "6778:10:13",
            "overrides": {
              "id": 5472,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6813:8:13"
            },
            "parameters": {
              "id": 5471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6788:2:13"
            },
            "returnParameters": {
              "id": 5475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5474,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6839:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5481,
                  "src": "6831:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6831:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6830:16:13"
            },
            "scope": 5494,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5493,
            "nodeType": "FunctionDefinition",
            "src": "6940:136:13",
            "nodes": [],
            "body": {
              "id": 5492,
              "nodeType": "Block",
              "src": "7016:60:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5488,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "7033:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 5489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "7033:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 5490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7033:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 5487,
                  "id": 5491,
                  "nodeType": "Return",
                  "src": "7026:43:13"
                }
              ]
            },
            "baseFunctions": [
              75760
            ],
            "documentation": {
              "id": 5482,
              "nodeType": "StructuredDocumentation",
              "src": "6915:20:13",
              "text": "@dev See ERC2771"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "6949:8:13",
            "overrides": {
              "id": 5484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6982:8:13"
            },
            "parameters": {
              "id": 5483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6957:2:13"
            },
            "returnParameters": {
              "id": 5487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5493,
                  "src": "7000:14:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5485,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7000:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6999:16:13"
            },
            "scope": 5494,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5130,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1379:13:13"
            },
            "id": 5131,
            "nodeType": "InheritanceSpecifier",
            "src": "1379:13:13"
          },
          {
            "baseName": {
              "id": 5132,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1398:16:13"
            },
            "id": 5133,
            "nodeType": "InheritanceSpecifier",
            "src": "1398:16:13"
          },
          {
            "baseName": {
              "id": 5134,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1420:21:13"
            },
            "id": 5135,
            "nodeType": "InheritanceSpecifier",
            "src": "1420:21:13"
          },
          {
            "baseName": {
              "id": 5136,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152055,
              "src": "1447:26:13"
            },
            "id": 5137,
            "nodeType": "InheritanceSpecifier",
            "src": "1447:26:13"
          },
          {
            "baseName": {
              "id": 5138,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1479:25:13"
            },
            "id": 5139,
            "nodeType": "InheritanceSpecifier",
            "src": "1479:25:13"
          },
          {
            "baseName": {
              "id": 5140,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1510:20:13"
            },
            "id": 5141,
            "nodeType": "InheritanceSpecifier",
            "src": "1510:20:13"
          },
          {
            "baseName": {
              "id": 5142,
              "name": "IAirdropERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55797,
              "src": "1536:13:13"
            },
            "id": 5143,
            "nodeType": "InheritanceSpecifier",
            "src": "1536:13:13"
          }
        ],
        "canonicalName": "AirdropERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5494,
          55797,
          157897,
          75765,
          157714,
          152055,
          39046,
          38747,
          50516,
          50491,
          34723,
          151869,
          49679
        ],
        "name": "AirdropERC20",
        "nameLocation": "1359:12:13",
        "scope": 5495,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 13
}