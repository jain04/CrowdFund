{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610c36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b6100963660046109f3565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610a0c565b61017a565b005b6100c16100d1366004610a0c565b61022e565b6100e96100e4366004610a48565b6102a1565b6040516100a59190610a6a565b610109610104366004610a0c565b61039c565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610a0c565b6103d2565b61009b6101423660046109f3565b610433565b6100c1610155366004610a0c565b6104c8565b6000806101656104fc565b60009384526001016020525050604090205490565b60006101846104fc565b60008481526001820160205260409020549091506101a9906101a4610520565b61059e565b6000838152602082815260408083206001600160a01b038616845290915290205460ff161561021f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6102298383610629565b505050565b806001600160a01b0316610240610520565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610216565b61029d828261063d565b5050565b6000806102ac610651565b600085815260208290526040812054919250805b82811015610391576000878152602085815260408083208484526001019091529020546001600160a01b03161561033c578582141561032a576000878152602094855260408082209282526001909201909452909220546001600160a01b03169250610396915050565b610335600183610a94565b915061037f565b61034787600061039c565b801561036c575060008781526020858152604080832083805260020190915290205481145b1561037f5761037c600183610a94565b91505b61038a600182610a94565b90506102c0565b505050505b92915050565b6000806103a76104fc565b6000948552602090815260408086206001600160a01b03959095168652939052505090205460ff1690565b6000806103dd6104fc565b60008581526020828152604080832083805290915290205490915060ff16610429576000848152602091825260408082206001600160a01b0386168352909252205460ff169050610396565b5060019392505050565b60008061043e610651565b6000848152602082905260408120549192505b818110156104a2576000858152602084815260408083208484526001019091529020546001600160a01b0316156104905761048d600185610a94565b93505b61049b600182610a94565b9050610451565b506104ae84600061039c565b156104c1576104be600184610a94565b92505b5050919050565b60006104d26104fc565b60008481526001820160205260409020549091506104f2906101a4610520565b610229838361063d565b7fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed590565b60405163572b6c0560e01b8152600090309063572b6c0590610546903390600401610a6a565b602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610aac565b15610599575060131936013560601c90565b503390565b60006105a86104fc565b6000848152602082815260408083206001600160a01b038716845290915290205490915060ff16610229576105e7826001600160a01b03166014610675565b6105f2846020610675565b604051602001610603929190610afe565b60408051601f198184030181529082905262461bcd60e51b825261021691600401610b6b565b6106338282610818565b61029d828261089c565b6106478282610913565b61029d828261099e565b7f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c90565b60606000610684836002610b9e565b61068f906002610a94565b67ffffffffffffffff8111156106a7576106a7610bbd565b6040519080825280601f01601f1916602001820160405280156106d1576020820181803683370190505b509050600360fc1b816000815181106106ec576106ec610bd3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061071b5761071b610bd3565b60200101906001600160f81b031916908160001a905350600061073f846002610b9e565b61074a906001610a94565b90505b60018111156107c2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061077e5761077e610bd3565b1a60f81b82828151811061079457610794610bd3565b60200101906001600160f81b031916908160001a90535060049490941c936107bb81610be9565b905061074d565b5083156108115760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610216565b9392505050565b60006108226104fc565b6000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790559050610857610520565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4505050565b60006108a6610651565b600084815260208290526040812080549293506001916108c68385610a94565b909155505060009384526020918252604080852082865260018101845281862080546001600160a01b039096166001600160a01b0319909616861790559385526002909301909152912055565b600061091d6104fc565b9050610929838361059e565b6000838152602082815260408083206001600160a01b03861684529091529020805460ff19169055610959610520565b6001600160a01b0316826001600160a01b0316847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4505050565b60006109a8610651565b6000938452602090815260408085206001600160a01b0390941680865260028501808452828720805488526001909601845291862080546001600160a01b0319169055855290525055565b600060208284031215610a0557600080fd5b5035919050565b60008060408385031215610a1f57600080fd5b8235915060208301356001600160a01b0381168114610a3d57600080fd5b809150509250929050565b60008060408385031215610a5b57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa757610aa7610a7e565b500190565b600060208284031215610abe57600080fd5b8151801515811461081157600080fd5b60005b83811015610ae9578181015183820152602001610ad1565b83811115610af8576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610b2e816015850160208801610ace565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610b5f816026840160208801610ace565b01602601949350505050565b6020815260008251806020840152610b8a816040850160208701610ace565b601f01601f19169190910160400192915050565b6000816000190483118215151615610bb857610bb8610a7e565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610bf857610bf8610a7e565b50600019019056fea2646970667358221220b14c77ff33754f2e29a50a90776303073b5b22a37a18910686eba4006bc1c0d364736f6c634300080c0033",
    "sourceMap": "192:750:67:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c8063248a9ca3146100885780632f2ff15d146100ae57806336568abe146100c35780639010d07c146100d657806391d14854146100f6578063a217fddf14610119578063a32fa5b314610121578063ca15c87314610134578063d547741f14610147575b600080fd5b61009b6100963660046109f3565b61015a565b6040519081526020015b60405180910390f35b6100c16100bc366004610a0c565b61017a565b005b6100c16100d1366004610a0c565b61022e565b6100e96100e4366004610a48565b6102a1565b6040516100a59190610a6a565b610109610104366004610a0c565b61039c565b60405190151581526020016100a5565b61009b600081565b61010961012f366004610a0c565b6103d2565b61009b6101423660046109f3565b610433565b6100c1610155366004610a0c565b6104c8565b6000806101656104fc565b60009384526001016020525050604090205490565b60006101846104fc565b60008481526001820160205260409020549091506101a9906101a4610520565b61059e565b6000838152602082815260408083206001600160a01b038616845290915290205460ff161561021f5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6102298383610629565b505050565b806001600160a01b0316610240610520565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610216565b61029d828261063d565b5050565b6000806102ac610651565b600085815260208290526040812054919250805b82811015610391576000878152602085815260408083208484526001019091529020546001600160a01b03161561033c578582141561032a576000878152602094855260408082209282526001909201909452909220546001600160a01b03169250610396915050565b610335600183610a94565b915061037f565b61034787600061039c565b801561036c575060008781526020858152604080832083805260020190915290205481145b1561037f5761037c600183610a94565b91505b61038a600182610a94565b90506102c0565b505050505b92915050565b6000806103a76104fc565b6000948552602090815260408086206001600160a01b03959095168652939052505090205460ff1690565b6000806103dd6104fc565b60008581526020828152604080832083805290915290205490915060ff16610429576000848152602091825260408082206001600160a01b0386168352909252205460ff169050610396565b5060019392505050565b60008061043e610651565b6000848152602082905260408120549192505b818110156104a2576000858152602084815260408083208484526001019091529020546001600160a01b0316156104905761048d600185610a94565b93505b61049b600182610a94565b9050610451565b506104ae84600061039c565b156104c1576104be600184610a94565b92505b5050919050565b60006104d26104fc565b60008481526001820160205260409020549091506104f2906101a4610520565b610229838361063d565b7fd0ebebe8e6445c62babf8fef767eb39f1002bb957bb5b83258275a4e46428ed590565b60405163572b6c0560e01b8152600090309063572b6c0590610546903390600401610a6a565b602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610aac565b15610599575060131936013560601c90565b503390565b60006105a86104fc565b6000848152602082815260408083206001600160a01b038716845290915290205490915060ff16610229576105e7826001600160a01b03166014610675565b6105f2846020610675565b604051602001610603929190610afe565b60408051601f198184030181529082905262461bcd60e51b825261021691600401610b6b565b6106338282610818565b61029d828261089c565b6106478282610913565b61029d828261099e565b7f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c90565b60606000610684836002610b9e565b61068f906002610a94565b67ffffffffffffffff8111156106a7576106a7610bbd565b6040519080825280601f01601f1916602001820160405280156106d1576020820181803683370190505b509050600360fc1b816000815181106106ec576106ec610bd3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061071b5761071b610bd3565b60200101906001600160f81b031916908160001a905350600061073f846002610b9e565b61074a906001610a94565b90505b60018111156107c2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061077e5761077e610bd3565b1a60f81b82828151811061079457610794610bd3565b60200101906001600160f81b031916908160001a90535060049490941c936107bb81610be9565b905061074d565b5083156108115760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610216565b9392505050565b60006108226104fc565b6000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790559050610857610520565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4505050565b60006108a6610651565b600084815260208290526040812080549293506001916108c68385610a94565b909155505060009384526020918252604080852082865260018101845281862080546001600160a01b039096166001600160a01b0319909616861790559385526002909301909152912055565b600061091d6104fc565b9050610929838361059e565b6000838152602082815260408083206001600160a01b03861684529091529020805460ff19169055610959610520565b6001600160a01b0316826001600160a01b0316847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4505050565b60006109a8610651565b6000938452602090815260408085206001600160a01b0390941680865260028501808452828720805488526001909601845291862080546001600160a01b0319169055855290525055565b600060208284031215610a0557600080fd5b5035919050565b60008060408385031215610a1f57600080fd5b8235915060208301356001600160a01b0381168114610a3d57600080fd5b809150509250929050565b60008060408385031215610a5b57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa757610aa7610a7e565b500190565b600060208284031215610abe57600080fd5b8151801515811461081157600080fd5b60005b83811015610ae9578181015183820152602001610ad1565b83811115610af8576000848401525b50505050565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351610b2e816015850160208801610ace565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351610b5f816026840160208801610ace565b01602601949350505050565b6020815260008251806020840152610b8a816040850160208701610ace565b601f01601f19169190910160400192915050565b6000816000190483118215151615610bb857610bb8610a7e565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610bf857610bf8610a7e565b50600019019056fea2646970667358221220b14c77ff33754f2e29a50a90776303073b5b22a37a18910686eba4006bc1c0d364736f6c634300080c0033",
    "sourceMap": "192:750:67:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:213:57;;;;;;:::i;:::-;;:::i;:::-;;;345:25:641;;;333:2;318:18;3326:213:57;;;;;;;;3934:371;;;;;;:::i;:::-;;:::i;:::-;;5340:219;;;;;;:::i;:::-;;:::i;2107:771:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1719:224:57:-;;;;;;:::i;:::-;;:::i;:::-;;;1366:14:641;;1359:22;1341:41;;1329:2;1314:18;1719:224:57;1201:187:641;1135:49:57;;1180:4;1135:49;;2694:309;;;;;;:::i;:::-;;:::i;3285:526:58:-;;;;;;:::i;:::-;;:::i;4676:266:57:-;;;;;;:::i;:::-;;:::i;3326:213::-;3394:7;3413:36;3452:39;:37;:39::i;:::-;3508:24;;;;:18;;:24;;-1:-1:-1;;3508:24:57;;;;;3326:213::o;3934:371::-;4018:36;4057:39;:37;:39::i;:::-;4117:24;;;;:18;;;:24;;;;;;4018:78;;-1:-1:-1;4106:50:57;;4143:12;:10;:12::i;:::-;4106:10;:50::i;:::-;4170:13;:19;;;;;;;;;;;-1:-1:-1;;;;;4170:28:57;;;;;;;;;;;;4166:98;;;4214:39;;-1:-1:-1;;;4214:39:57;;1777:2:641;4214:39:57;;;1759:21:641;1816:2;1796:18;;;1789:30;1855:31;1835:18;;;1828:59;1904:18;;4214:39:57;;;;;;;;4166:98;4273:25;4284:4;4290:7;4273:10;:25::i;:::-;4008:297;3934:371;;:::o;5340:219::-;5447:7;-1:-1:-1;;;;;5431:23:57;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5431:23:57;;5427:90;;5470:36;;-1:-1:-1;;;5470:36:57;;2135:2:641;5470:36:57;;;2117:21:641;2174:2;2154:18;;;2147:30;-1:-1:-1;;;2193:18:641;;;2186:56;2259:18;;5470:36:57;1933:350:641;5427:90:57;5526:26;5538:4;5544:7;5526:11;:26::i;:::-;5340:219;;:::o;2107:771:58:-;2191:14;2217:46;2266:59;:57;:59::i;:::-;2335:20;2358:22;;;;;;;;;;:28;2217:108;;-1:-1:-1;2335:20:58;2420:452;2444:12;2440:1;:16;2420:452;;;2529:1;2484:22;;;;;;;;;;;:33;;;:30;;:33;;;;;;-1:-1:-1;;;;;2484:33:58;:47;2480:382;;2564:5;2555;:14;2551:138;;;2602:16;:22;;;;;;;;;;;:33;;;:30;;;;:33;;;;;;;-1:-1:-1;;;;;2602:33:58;;-1:-1:-1;2657:13:58;;-1:-1:-1;;2657:13:58;2551:138;2706:10;2715:1;2706:10;;:::i;:::-;;;2480:382;;;2741:25;2749:4;2763:1;2741:7;:25::i;:::-;:76;;;;-1:-1:-1;2775:16:58;:22;;;;;;;;;;;:42;;;:30;;:42;;;;;;2770:47;;2741:76;2737:125;;;2837:10;2846:1;2837:10;;:::i;:::-;;;2737:125;2458:6;2463:1;2458:6;;:::i;:::-;;;2420:452;;;;2207:671;;;2107:771;;;;;:::o;1719:224:57:-;1797:4;1813:36;1852:39;:37;:39::i;:::-;1908:13;:19;;;;;;;;;;;-1:-1:-1;;;;;1908:28:57;;;;;;;;;-1:-1:-1;;1908:28:57;;;;;;1719:224::o;2694:309::-;2773:4;2789:36;2828:39;:37;:39::i;:::-;2882:13;:19;;;;;;;;;;;:31;;;;;;;;;2789:78;;-1:-1:-1;2882:31:57;;2877:98;;2936:13;:19;;;;;;;;;;;-1:-1:-1;;;;;2936:28:57;;;;;;;;;;;;-1:-1:-1;2929:35:57;;2877:98;-1:-1:-1;2992:4:57;;2694:309;-1:-1:-1;;;2694:309:57:o;3285:526:58:-;3359:13;3384:46;3433:59;:57;:59::i;:::-;3502:20;3525:22;;;;;;;;;;:28;3384:108;;-1:-1:-1;3564:166:58;3588:12;3584:1;:16;3564:166;;;3673:1;3628:22;;;;;;;;;;;:33;;;:30;;:33;;;;;;-1:-1:-1;;;;;3628:33:58;:47;3624:96;;3695:10;3704:1;3695:10;;:::i;:::-;;;3624:96;3602:6;3607:1;3602:6;;:::i;:::-;;;3564:166;;;;3743:25;3751:4;3765:1;3743:7;:25::i;:::-;3739:66;;;3784:10;3793:1;3784:10;;:::i;:::-;;;3739:66;3374:437;;3285:526;;;:::o;4676:266:57:-;4761:36;4800:39;:37;:39::i;:::-;4860:24;;;;:18;;;:24;;;;;;4761:78;;-1:-1:-1;4849:50:57;;4886:12;:10;:12::i;4849:50::-;4909:26;4921:4;4927:7;4909:11;:26::i;761:221::-;395:32;;761:221::o;258:416:67:-;342:61;;-1:-1:-1;;;342:61:67;;312:14;;366:4;;342:49;;:61;;392:10;;342:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;338:330;;;-1:-1:-1;;;575:14:67;571:23;558:37;554:2;550:46;258:416;:::o;338:330::-;-1:-1:-1;647:10:67;;258:416::o;6721:588:57:-;6804:36;6843:39;:37;:39::i;:::-;6897:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6897:28:57;;;;;;;;;;6804:78;;-1:-1:-1;6897:28:57;;6892:411;;7084:43;7114:7;-1:-1:-1;;;;;7084:43:57;7124:2;7084:21;:43::i;:::-;7198:40;7228:4;7235:2;7198:21;:40::i;:::-;6993:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6993:267:57;;;;;;;;;;-1:-1:-1;;;6941:351:57;;;;;;;:::i;4213:160:58:-;4300:31;4317:4;4323:7;4300:16;:31::i;:::-;4341:25;4352:4;4358:7;4341:10;:25::i;3935:165::-;4023:32;4041:4;4047:7;4023:17;:32::i;:::-;4065:28;4079:4;4085:7;4065:13;:28::i;1230:262::-;536:43;;1230:262::o;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;1687:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;5055:2:641;1913:55:285;;;5037:21:641;;;5074:18;;;5067:30;5133:34;5113:18;;;5106:62;5185:18;;1913:55:285;4853:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;6010:263:57:-;6088:36;6127:39;:37;:39::i;:::-;6176:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6176:28:57;;;;;;;;;:35;;-1:-1:-1;;6176:35:57;6207:4;6176:35;;;6088:78;-1:-1:-1;6253:12:57;:10;:12::i;:::-;-1:-1:-1;;;;;6226:40:57;6244:7;-1:-1:-1;;;;;6226:40:57;6238:4;6226:40;;;;;;;;;;6078:195;6010:263;;:::o;4436:391:58:-;4506:46;4555:59;:57;:59::i;:::-;4624:11;4638:22;;;;;;;;;;:28;;4506:108;;-1:-1:-1;4708:1:58;;4676:33;4708:1;4638:28;4676:33;:::i;:::-;;;;-1:-1:-1;;4720:16:58;:22;;;;;;;;;;;:35;;;:30;;;:35;;;;;:45;;-1:-1:-1;;;;;4720:45:58;;;-1:-1:-1;;;;;;4720:45:58;;;;;;;4775:39;;;:30;;;;:39;;;;;:45;4436:391::o;6322:299:57:-;6401:36;6440:39;:37;:39::i;:::-;6401:78;;6489:25;6500:4;6506:7;6489:10;:25::i;:::-;6531:13;:19;;;;;;;;;;;-1:-1:-1;;;;;6531:28:57;;;;;;;;;6524:35;;-1:-1:-1;;6524:35:57;;;6601:12;:10;:12::i;:::-;-1:-1:-1;;;;;6574:40:57;6592:7;-1:-1:-1;;;;;6574:40:57;6586:4;6574:40;;;;;;;;;;6391:230;6322:299;;:::o;4895:360:58:-;4968:46;5017:59;:57;:59::i;:::-;5086:11;5100:22;;;;;;;;;;;-1:-1:-1;;;;;5100:39:58;;;;;;:30;;;:39;;;;;;;;5157:35;;:30;;;;:35;;;;;5150:42;;-1:-1:-1;;;;;;5150:42:58;;;5209:39;;;;-1:-1:-1;5202:46:58;4895:360::o;14:180:641:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:641;;14:180;-1:-1:-1;14:180:641:o;381:354::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:23;;;-1:-1:-1;622:2:641;607:18;;594:32;-1:-1:-1;;;;;655:31:641;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;714:15;;;381:354;;;;;:::o;740:248::-;808:6;816;869:2;857:9;848:7;844:23;840:32;837:52;;;885:1;882;875:12;837:52;-1:-1:-1;;908:23:641;;;978:2;963:18;;;950:32;;-1:-1:-1;740:248:641:o;993:203::-;-1:-1:-1;;;;;1157:32:641;;;;1139:51;;1127:2;1112:18;;993:203::o;2288:127::-;2349:10;2344:3;2340:20;2337:1;2330:31;2380:4;2377:1;2370:15;2404:4;2401:1;2394:15;2420:128;2460:3;2491:1;2487:6;2484:1;2481:13;2478:39;;;2497:18;;:::i;:::-;-1:-1:-1;2533:9:641;;2420:128::o;2553:277::-;2620:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2721:9;2715:16;2774:5;2767:13;2760:21;2753:5;2750:32;2740:60;;2796:1;2793;2786:12;2835:258;2907:1;2917:113;2931:6;2928:1;2925:13;2917:113;;;3007:11;;;3001:18;2988:11;;;2981:39;2953:2;2946:10;2917:113;;;3048:6;3045:1;3042:13;3039:48;;;3083:1;3074:6;3069:3;3065:16;3058:27;3039:48;;2835:258;;;:::o;3098:784::-;-1:-1:-1;;;3504:3:641;3497:36;3479:3;3562:6;3556:13;3578:62;3633:6;3628:2;3623:3;3619:12;3612:4;3604:6;3600:17;3578:62;:::i;:::-;-1:-1:-1;;;3699:2:641;3659:16;;;3691:11;;;3684:40;3749:13;;3771:63;3749:13;3820:2;3812:11;;3805:4;3793:17;;3771:63;:::i;:::-;3854:17;3873:2;3850:26;;3098:784;-1:-1:-1;;;;3098:784:641:o;3887:383::-;4036:2;4025:9;4018:21;3999:4;4068:6;4062:13;4111:6;4106:2;4095:9;4091:18;4084:34;4127:66;4186:6;4181:2;4170:9;4166:18;4161:2;4153:6;4149:15;4127:66;:::i;:::-;4254:2;4233:15;-1:-1:-1;;4229:29:641;4214:45;;;;4261:2;4210:54;;3887:383;-1:-1:-1;;3887:383:641:o;4275:168::-;4315:7;4381:1;4377;4373:6;4369:14;4366:1;4363:21;4358:1;4351:9;4344:17;4340:45;4337:71;;;4388:18;;:::i;:::-;-1:-1:-1;4428:9:641;;4275:168::o;4448:127::-;4509:10;4504:3;4500:20;4497:1;4490:31;4540:4;4537:1;4530:15;4564:4;4561:1;4554:15;4580:127;4641:10;4636:3;4632:20;4629:1;4622:31;4672:4;4669:1;4662:15;4696:4;4693:1;4686:15;4712:136;4751:3;4779:5;4769:39;;4788:18;;:::i;:::-;-1:-1:-1;;;4824:18:641;;4712:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dynamic-contracts/impl/PermissionsEnumerableImpl.sol\":\"PermissionsEnumerableImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/dynamic-contracts/extension/Permissions.sol\":{\"keccak256\":\"0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb\",\"dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW\"]},\"contracts/dynamic-contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0xa156234787f12171792390996178b65a58ba5e8e599b7d19b09da7a38d155d2d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://08e5978857b48d8eee2f2b418f34c710ea06378f1678555ec97dab259ce96e5a\",\"dweb:/ipfs/Qme75akhwCF5UzfxU8EWSfWtpPj2hKfszfp4RSHh371wfS\"]},\"contracts/dynamic-contracts/impl/PermissionsEnumerableImpl.sol\":{\"keccak256\":\"0x86b9b32e946ec071eb087d832d9869e6e54ed53afb55d1677ee8799e4da6ed85\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82740b95750e3cc0dd43f0a7127bdf6f52f3892fd0de285cad4f0c8812614f74\",\"dweb:/ipfs/QmRcgfqejA1Q7Cq25kdekqVJbH5X3Pgz9oe2JTb4R9iJBQ\"]},\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dynamic-contracts/impl/PermissionsEnumerableImpl.sol": "PermissionsEnumerableImpl"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dynamic-contracts/extension/Permissions.sol": {
        "keccak256": "0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a",
        "urls": [
          "bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb",
          "dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0xa156234787f12171792390996178b65a58ba5e8e599b7d19b09da7a38d155d2d",
        "urls": [
          "bzz-raw://08e5978857b48d8eee2f2b418f34c710ea06378f1678555ec97dab259ce96e5a",
          "dweb:/ipfs/Qme75akhwCF5UzfxU8EWSfWtpPj2hKfszfp4RSHh371wfS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/impl/PermissionsEnumerableImpl.sol": {
        "keccak256": "0x86b9b32e946ec071eb087d832d9869e6e54ed53afb55d1677ee8799e4da6ed85",
        "urls": [
          "bzz-raw://82740b95750e3cc0dd43f0a7127bdf6f52f3892fd0de285cad4f0c8812614f74",
          "dweb:/ipfs/QmRcgfqejA1Q7Cq25kdekqVJbH5X3Pgz9oe2JTb4R9iJBQ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dynamic-contracts/impl/PermissionsEnumerableImpl.sol",
    "id": 24807,
    "exportedSymbols": {
      "IERC2771Context": [
        50027
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "Permissions": [
        22886
      ],
      "PermissionsEnumerable": [
        23256
      ],
      "PermissionsEnumerableImpl": [
        24806
      ],
      "PermissionsEnumerableStorage": [
        22927
      ],
      "PermissionsStorage": [
        22443
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:904:67",
    "nodes": [
      {
        "id": 24745,
        "nodeType": "PragmaDirective",
        "src": "39:23:67",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 24746,
        "nodeType": "ImportDirective",
        "src": "86:55:67",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../extension/interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24807,
        "sourceUnit": 50028,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24747,
        "nodeType": "ImportDirective",
        "src": "142:48:67",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24807,
        "sourceUnit": 23257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24806,
        "nodeType": "ContractDefinition",
        "src": "192:750:67",
        "nodes": [
          {
            "id": 24773,
            "nodeType": "FunctionDefinition",
            "src": "258:416:67",
            "nodes": [],
            "body": {
              "id": 24772,
              "nodeType": "Block",
              "src": "328:346:67",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24762,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "392:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "392:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24758,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "366:4:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$24806",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$24806",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 24757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "358:7:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24756,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "358:7:67",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "358:13:67",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24755,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50027,
                          "src": "342:15:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$50027_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 24760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "342:30:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$50027",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 24761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50026,
                      "src": "342:49:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 24764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "342:61:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24770,
                    "nodeType": "Block",
                    "src": "626:42:67",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 24767,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "647:3:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "647:10:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 24754,
                        "id": 24769,
                        "nodeType": "Return",
                        "src": "640:17:67"
                      }
                    ]
                  },
                  "id": 24771,
                  "nodeType": "IfStatement",
                  "src": "338:330:67",
                  "trueBody": {
                    "id": 24766,
                    "nodeType": "Block",
                    "src": "405:215:67",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "522:88:67",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "540:56:67",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "554:2:67",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "calldatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "575:12:67"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "575:14:67"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "591:2:67",
                                            "type": "",
                                            "value": "20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "571:3:67"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "571:23:67"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "558:12:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "558:37:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "550:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "550:46:67"
                              },
                              "variableNames": [
                                {
                                  "name": "sender",
                                  "nodeType": "YulIdentifier",
                                  "src": "540:6:67"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 24753,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "540:6:67",
                            "valueSize": 1
                          }
                        ],
                        "id": 24765,
                        "nodeType": "InlineAssembly",
                        "src": "513:97:67"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              22876
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "267:10:67",
            "overrides": {
              "id": 24751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "294:8:67"
            },
            "parameters": {
              "id": 24750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:2:67"
            },
            "returnParameters": {
              "id": 24754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24753,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "320:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 24773,
                  "src": "312:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:16:67"
            },
            "scope": 24806,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 24805,
            "nodeType": "FunctionDefinition",
            "src": "680:260:67",
            "nodes": [],
            "body": {
              "id": 24804,
              "nodeType": "Block",
              "src": "748:192:67",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24786,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "812:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "812:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24782,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "786:4:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$24806",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PermissionsEnumerableImpl_$24806",
                                  "typeString": "contract PermissionsEnumerableImpl"
                                }
                              ],
                              "id": 24781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "778:7:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24780,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "778:7:67",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "778:13:67",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24779,
                          "name": "IERC2771Context",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50027,
                          "src": "762:15:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$50027_$",
                            "typeString": "type(contract IERC2771Context)"
                          }
                        },
                        "id": 24784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "762:30:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC2771Context_$50027",
                          "typeString": "contract IERC2771Context"
                        }
                      },
                      "id": 24785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50026,
                      "src": "762:49:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 24788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:61:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24802,
                    "nodeType": "Block",
                    "src": "894:40:67",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 24799,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "915:3:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "915:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 24778,
                        "id": 24801,
                        "nodeType": "Return",
                        "src": "908:15:67"
                      }
                    ]
                  },
                  "id": 24803,
                  "nodeType": "IfStatement",
                  "src": "758:176:67",
                  "trueBody": {
                    "id": 24798,
                    "nodeType": "Block",
                    "src": "825:63:67",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 24789,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "846:3:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "src": "846:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 24795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 24791,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "856:3:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 24792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "src": "856:8:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 24793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "856:15:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 24794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "874:2:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "856:20:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 24796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "846:31:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        "functionReturnParameters": 24778,
                        "id": 24797,
                        "nodeType": "Return",
                        "src": "839:38:67"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              22885
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "689:8:67",
            "overrides": {
              "id": 24775,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "714:8:67"
            },
            "parameters": {
              "id": 24774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:67"
            },
            "returnParameters": {
              "id": 24778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24805,
                  "src": "732:14:67",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "731:16:67"
            },
            "scope": 24806,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24748,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23256,
              "src": "230:21:67"
            },
            "id": 24749,
            "nodeType": "InheritanceSpecifier",
            "src": "230:21:67"
          }
        ],
        "canonicalName": "PermissionsEnumerableImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24806,
          23256,
          22886,
          50516,
          50491
        ],
        "name": "PermissionsEnumerableImpl",
        "nameLocation": "201:25:67",
        "scope": 24807,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 67
}