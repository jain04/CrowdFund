{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedContents",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        }
      ],
      "name": "TokensWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getTokenCountOfBundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTokenOfBundle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bundleId",
          "type": "uint256"
        }
      ],
      "name": "getUriOfBundle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getWrappedContents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "contents",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "_tokensToWrap",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "_uriForWrappedToken",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162004fa738038062004fa783398101604081905262000034916200017c565b6001600160a01b038116608052600054610100900460ff1615808015620000625750600054600160ff909116105b806200009257506200007f306200016d60201b62001bb11760201c565b15801562000092575060005460ff166001145b620000fa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff1916600117905580156200011e576000805461ff0019166101001790555b801562000165576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050620001ae565b6001600160a01b03163b151590565b6000602082840312156200018f57600080fd5b81516001600160a01b0381168114620001a757600080fd5b9392505050565b608051614dd6620001d16000396000818161025201526133b50152614dd66000f3fe6080604052600436106102425760003560e01c8063754b8fe711610135578063754b8fe7146106475780637647691d146106675780638da5cb5b146106875780639010d07c146106a557806391d14854146106c5578063938e3d7b146106e557806395d89b41146107055780639bcf7a151461071a578063a0a8e4601461073a578063a217fddf14610756578063a22cb4651461076b578063a32fa5b31461078b578063ac9650d8146107ab578063b24f2d39146107d8578063b88d4fde14610803578063bc197c8114610823578063c87b56dd1461084f578063ca15c8731461086f578063cb2ef6f71461088f578063d0d2fe25146108ae578063d547741f146108db578063d5576d26146108fb578063e8a3d48514610928578063e985e9c51461093d578063f23a6e611461095d57600080fd5b806301ffc9a7146102cb57806306fdde0314610300578063081812fc14610322578063095ea7b31461035a57806313af40351461037a578063150b7a021461039a57806318160ddd146103d35780631da799c9146103f357806323b872dd14610420578063248a9ca31461044057806329e471dd1461046d5780632a55205a146104805780632f2ff15d146104ae5780632f745c59146104ce57806336568abe146104ee5780633b1475a71461050e57806342842e0e146105255780634cc157df146105455780634f6ccce714610587578063572b6c05146105a7578063600dd5ea146105c757806361195e94146105e75780636352211e1461060757806370a082311461062757600080fd5b366102c657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c45760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613d3b565b610989565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156109eb565b6040516102f79190613db0565b34801561032e57600080fd5b5061034261033d366004613dc3565b610a7e565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b506102c4610375366004613e01565b610aa6565b34801561038657600080fd5b506102c4610395366004613e2d565b610bce565b3480156103a657600080fd5b506103ba6103b5366004613eff565b610bfe565b6040516001600160e01b031990911681526020016102f7565b3480156103df57600080fd5b50610137545b6040519081526020016102f7565b3480156103ff57600080fd5b5061041361040e366004613f6a565b610c0f565b6040516102f79190613ffa565b34801561042c57600080fd5b506102c461043b366004614008565b610c9b565b34801561044c57600080fd5b506103e561045b366004613dc3565b60009081526007602052604090205490565b6103e561047b366004614091565b610cd3565b34801561048c57600080fd5b506104a061049b366004613f6a565b610e7f565b6040516102f792919061413f565b3480156104ba57600080fd5b506102c46104c9366004614158565b610ebc565b3480156104da57600080fd5b506103e56104e9366004613e01565b610f56565b3480156104fa57600080fd5b506102c4610509366004614158565b610fed565b34801561051a57600080fd5b506103e56101675481565b34801561053157600080fd5b506102c4610540366004614008565b61104c565b34801561055157600080fd5b50610565610560366004613dc3565b611067565b604080516001600160a01b03909316835261ffff9091166020830152016102f7565b34801561059357600080fd5b506103e56105a2366004613dc3565b6110d2565b3480156105b357600080fd5b506102eb6105c2366004613e2d565b611167565b3480156105d357600080fd5b506102c46105e2366004613e01565b611185565b3480156105f357600080fd5b50610315610602366004613dc3565b6111b3565b34801561061357600080fd5b50610342610622366004613dc3565b611258565b34801561063357600080fd5b506103e5610642366004613e2d565b61128e565b34801561065357600080fd5b506102c4610662366004614225565b611315565b34801561067357600080fd5b506102c4610682366004614158565b61150d565b34801561069357600080fd5b506005546001600160a01b0316610342565b3480156106b157600080fd5b506103426106c0366004613f6a565b611675565b3480156106d157600080fd5b506102eb6106e0366004614158565b611764565b3480156106f157600080fd5b506102c46107003660046142fc565b61178f565b34801561071157600080fd5b506103156117bc565b34801561072657600080fd5b506102c4610735366004614330565b6117cc565b34801561074657600080fd5b50604051600181526020016102f7565b34801561076257600080fd5b506103e5600081565b34801561077757600080fd5b506102c4610786366004614365565b6117fb565b34801561079757600080fd5b506102eb6107a6366004614158565b61180d565b3480156107b757600080fd5b506107cb6107c6366004614393565b611863565b6040516102f79190614407565b3480156107e457600080fd5b506003546001600160a01b03811690600160a01b900461ffff16610565565b34801561080f57600080fd5b506102c461081e366004613eff565b611957565b34801561082f57600080fd5b506103ba61083e3660046144cf565b63bc197c8160e01b95945050505050565b34801561085b57600080fd5b5061031561086a366004613dc3565b611996565b34801561087b57600080fd5b506103e561088a366004613dc3565b6119a1565b34801561089b57600080fd5b506804d756c7469777261760bc1b6103e5565b3480156108ba57600080fd5b506103e56108c9366004613dc3565b60009081526002602052604090205490565b3480156108e757600080fd5b506102c46108f6366004614158565b611a2a565b34801561090757600080fd5b5061091b610916366004613dc3565b611a43565b6040516102f7919061457c565b34801561093457600080fd5b50610315611af4565b34801561094957600080fd5b506102eb6109583660046145ca565b611b82565b34801561096957600080fd5b506103ba6109783660046145f8565b63f23a6e6160e01b95945050505050565b600061099482611bc0565b806109af57506001600160e01b031982166380ac58cd60e01b145b806109ca57506001600160e01b03198216630271189760e51b145b806109e557506001600160e01b0319821663152a902d60e11b145b92915050565b606061010380546109fb90614660565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2790614660565b8015610a745780601f10610a4957610100808354040283529160200191610a74565b820191906000526020600020905b815481529060010190602001808311610a5757829003601f168201915b5050505050905090565b6000610a8982611be5565b50600090815261010760205260409020546001600160a01b031690565b6000610ab182611258565b9050806001600160a01b0316836001600160a01b03161415610b1f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016102bb565b806001600160a01b0316610b31611c0a565b6001600160a01b03161480610b4d5750610b4d81610958611c0a565b610bbf5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016102bb565b610bc98383611c19565b505050565b610bd6611c88565b610bf25760405162461bcd60e51b81526004016102bb90614695565b610bfb81611c96565b50565b630a85bd0160e11b5b949350505050565b610c17613c63565b6000838152600260208181526040808420868552830182529283902083516080810190945280546001600160a01b0381168552909291840191600160a01b90910460ff1690811115610c6b57610c6b613f8c565b6002811115610c7c57610c7c613f8c565b8152600182015460208201526002909101546040909101529392505050565b610cac610ca6611c0a565b82611ce8565b610cc85760405162461bcd60e51b81526004016102bb906146bd565b610bc9838383611d46565b600060026009541415610cf85760405162461bcd60e51b81526004016102bb9061470b565b60026009557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d2f81610d2a611c0a565b611ede565b610d48600080516020614d3a8339815191526000611764565b610daa5760005b86811015610da857610d96600080516020614d3a833981519152898984818110610d7b57610d7b614742565b610d919260206080909202019081019150613e2d565b611f42565b610da160018261476e565b9050610d4f565b505b610167805492506001906000610dc0838661476e565b90915550610e119050610dd1611c0a565b888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611f80915050565b610e1b8383611ff9565b81836001600160a01b0316610e2e611c0a565b6001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610e68929190614793565b60405180910390a450600160095595945050505050565b600080600080610e8e86611067565b90945084925061ffff169050612710610ea78287614812565b610eb19190614831565b925050509250929050565b600082815260076020526040902054610ed59033611f42565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff1615610f485760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016102bb565b610f528282612013565b5050565b6000610f618361128e565b8210610fc35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016102bb565b506001600160a01b0391909116600090815261013560209081526040808320938352929052205490565b336001600160a01b038216146110425760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016102bb565b610f528282612027565b610bc983838360405180602001604052806000815250611957565b6000818152600460209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156110ae57805160208201516110c8565b6003546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60006110de6101375490565b82106111415760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016102bb565b610137828154811061115557611155614742565b90600052602060002001549050919050565b6001600160a01b03166000908152606d602052604090205460ff1690565b61118d611c88565b6111a95760405162461bcd60e51b81526004016102bb90614695565b610f52828261207e565b60008181526002602052604090206001018054606091906111d390614660565b80601f01602080910402602001604051908101604052809291908181526020018280546111ff90614660565b801561124c5780601f106112215761010080835404028352916020019161124c565b820191906000526020600020905b81548152906001019060200180831161122f57829003601f168201915b50505050509050919050565b600081815261010560205260408120546001600160a01b0316806109e55760405162461bcd60e51b81526004016102bb90614853565b60006001600160a01b0382166112f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016102bb565b506001600160a01b03166000908152610106602052604090205490565b600054610100900460ff16158080156113355750600054600160ff909116105b80611356575061134430611bb1565b158015611356575060005460ff166001145b6113b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102bb565b6000805460ff1916600117905580156113dc576000805461ff0019166101001790555b6113e4612102565b6113ed84612133565b6113f7878761216b565b611401838361207e565b61140a88611c96565b6114138561219c565b61141e600089612013565b6114487f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a689612013565b611460600080516020614d1a83398151915289612013565b611479600080516020614d1a8339815191526000612013565b6114a47fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436000612013565b6114bd600080516020614d3a8339815191526000612013565b8015611503576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b600260095414156115305760405162461bcd60e51b81526004016102bb9061470b565b60026009557fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054361156281610d2a611c0a565b6101675483106115a75760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b60448201526064016102bb565b6115b86115b2611c0a565b84611ce8565b6116105760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b60648201526084016102bb565b6116198361227e565b6116238284612315565b82826001600160a01b0316611636611c0a565b6001600160a01b03167fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7360405160405180910390a45050600160095550565b60008281526008602052604081205481805b8281101561175b5760008681526008602090815260408083208484526001019091529020546001600160a01b03161561170457848214156116f25760008681526008602090815260408083209383526001909301905220546001600160a01b031692506109e5915050565b6116fd60018361476e565b9150611749565b61170f866000611764565b80156117365750600086815260086020908152604080832083805260020190915290205481145b156117495761174660018361476e565b91505b61175460018261476e565b9050611687565b50505092915050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611797611c88565b6117b35760405162461bcd60e51b81526004016102bb90614695565b610bfb8161219c565b606061010480546109fb90614660565b6117d4611c88565b6117f05760405162461bcd60e51b81526004016102bb90614695565b610bc98383836123d2565b610f52611806611c0a565b838361247a565b600082815260066020908152604080832083805290915281205460ff1661185a575060008281526006602090815260408083206001600160a01b038516845290915290205460ff166109e5565b50600192915050565b6060816001600160401b0381111561187d5761187d613e4a565b6040519080825280602002602001820160405280156118b057816020015b606081526020019060019003908161189b5790505b50905060005b8281101561195057611920308585848181106118d4576118d4614742565b90506020028101906118e69190614885565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061253e92505050565b82828151811061193257611932614742565b60200260200101819052508080611948906148cb565b9150506118b6565b5092915050565b611968611962611c0a565b83611ce8565b6119845760405162461bcd60e51b81526004016102bb906146bd565b61199084848484612630565b50505050565b60606109e5826111b3565b600081815260086020526040812054815b81811015611a055760008481526008602090815260408083208484526001019091529020546001600160a01b0316156119f3576119f060018461476e565b92505b6119fe60018261476e565b90506119b2565b50611a11836000611764565b15611a2457611a2160018361476e565b91505b50919050565b6000828152600760205260409020546110429033611f42565b600081815260026020526040902054606090806001600160401b03811115611a6d57611a6d613e4a565b604051908082528060200260200182016040528015611aa657816020015b611a93613c63565b815260200190600190039081611a8b5790505b50915060005b81811015611aed57611abe8482610c0f565b838281518110611ad057611ad0614742565b6020908102919091010152611ae660018261476e565b9050611aac565b5050919050565b60018054611b0190614660565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2d90614660565b8015611b7a5780601f10611b4f57610100808354040283529160200191611b7a565b820191906000526020600020905b815481529060010190602001808311611b5d57829003601f168201915b505050505081565b6001600160a01b0391821660009081526101086020908152604080832093909416825291909152205460ff1690565b6001600160a01b03163b151590565b60006001600160e01b0319821663780e9d6360e01b14806109e557506109e582612663565b611bee816126b3565b610bfb5760405162461bcd60e51b81526004016102bb90614853565b6000611c146126d1565b905090565b60008181526101076020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c4f82611258565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611c14816106e0611c0a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600080611cf483611258565b9050806001600160a01b0316846001600160a01b03161480611d1b5750611d1b8185611b82565b80610c075750836001600160a01b0316611d3484610a7e565b6001600160a01b031614949350505050565b826001600160a01b0316611d5982611258565b6001600160a01b031614611dbd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016102bb565b6001600160a01b038216611e1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016102bb565b611e2a8383836126f6565b611e35600082611c19565b6001600160a01b038316600090815261010660205260408120805460019290611e5f9084906148e6565b90915550506001600160a01b038216600090815261010660205260408120805460019290611e8e90849061476e565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020614d8183398151915291a4505050565b611ee8828261180d565b610f5257611f00816001600160a01b031660146127bb565b611f0b8360206127bb565b604051602001611f1c9291906148fd565b60408051601f198184030181529082905262461bcd60e51b82526102bb91600401613db0565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16610f5257611f00816001600160a01b031660146127bb565b611f8b84848361295d565b611f958282612a85565b611ff285308686808060200260200160405190810160405280939291908181526020016000905b82821015611fe857611fd96080830286013681900381019061496a565b81526020019060010190611fbc565b5050505050612aaa565b5050505050565b610f52828260405180602001604052806000815250612bc6565b61201d8282612bf9565b610f528282612c54565b6120318282612cc1565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6127108111156120a05760405162461bcd60e51b81526004016102bb906149de565b600380546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600054610100900460ff166121295760405162461bcd60e51b81526004016102bb90614a07565b612131612d23565b565b600054610100900460ff1661215a5760405162461bcd60e51b81526004016102bb90614a07565b612162612d51565b610bfb81612d78565b600054610100900460ff166121925760405162461bcd60e51b81526004016102bb90614a07565b610f528282612e07565b6000600180546121ab90614660565b80601f01602080910402602001604051908101604052809291908181526020018280546121d790614660565b80156122245780601f106121f957610100808354040283529160200191612224565b820191906000526020600020905b81548152906001019060200180831161220757829003601f168201915b5050855193945061224093600193506020870192509050613c8c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612272929190614a52565b60405180910390a15050565b600061228982611258565b9050612297816000846126f6565b6122a2600083611c19565b6001600160a01b0381166000908152610106602052604081208054600192906122cc9084906148e6565b90915550506000828152610105602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020614d81833981519152908390a45050565b60008181526002602052604081205490816001600160401b0381111561233d5761233d613e4a565b60405190808252806020026020018201604052801561237657816020015b612363613c63565b81526020019060019003908161235b5790505b50905060005b828110156123bd5761238e8482610c0f565b8282815181106123a0576123a0614742565b60209081029190910101526123b660018261476e565b905061237c565b506123c783612e57565b611990308583612aaa565b6127108111156123f45760405162461bcd60e51b81526004016102bb906149de565b6040805180820182526001600160a01b038481168083526020808401868152600089815260048352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b031614156124d85760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016102bb565b6001600160a01b0383811660008181526101086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910161246d565b606061254983611bb1565b6125a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102bb565b600080846001600160a01b0316846040516125bf9190614a77565b600060405180830381855af49150503d80600081146125fa576040519150601f19603f3d011682016040523d82523d6000602084013e6125ff565b606091505b50915091506126278282604051806060016040528060278152602001614d5a60279139612eca565b95945050505050565b61263b848484611d46565b61264784848484612f03565b6119905760405162461bcd60e51b81526004016102bb90614a93565b60006001600160e01b031982166380ac58cd60e01b148061269457506001600160e01b03198216635b5e139f60e01b145b806109e557506301ffc9a760e01b6001600160e01b03198316146109e5565b600090815261010560205260409020546001600160a01b0316151590565b60006126dc33611167565b156126ee575060131936013560601c90565b503390565b90565b61270183838361300c565b61271a600080516020614d1a8339815191526000611764565b15801561272f57506001600160a01b03831615155b801561274357506001600160a01b03821615155b15610bc957612760600080516020614d1a83398151915284611764565b8061277e575061277e600080516020614d1a83398151915283611764565b610bc95760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b60448201526064016102bb565b606060006127ca836002614812565b6127d590600261476e565b6001600160401b038111156127ec576127ec613e4a565b6040519080825280601f01601f191660200182016040528015612816576020820181803683370190505b509050600360fc1b8160008151811061283157612831614742565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061286057612860614742565b60200101906001600160f81b031916908160001a9053506000612884846002614812565b61288f90600161476e565b90505b6001811115612907576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106128c3576128c3614742565b1a60f81b8282815181106128d9576128d9614742565b60200101906001600160f81b031916908160001a90535060049490941c9361290081614ae5565b9050612892565b5083156129565760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102bb565b9392505050565b81806129955760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b60448201526064016102bb565b600082815260026020526040902054156129dd5760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b60448201526064016102bb565b60005b81811015612a7057612a188585838181106129fd576129fd614742565b905060800201803603810190612a13919061496a565b6130c6565b848482818110612a2a57612a2a614742565b600086815260026020818152604080842088855290920190529020608090910292909201919050612a5b8282614afc565b50612a69905060018261476e565b90506129e0565b50600091825260026020526040909120555050565b60008181526002602090815260409091208351610bc992600190920191850190613c8c565b6000805b8251811015612b7c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838281518110612ae757612ae7614742565b6020026020010151600001516001600160a01b0316148015612b1157506001600160a01b03841630145b15612b4657828181518110612b2857612b28614742565b60200260200101516060015182612b3f919061476e565b9150612b6a565b612b6a8585858481518110612b5d57612b5d614742565b6020026020010151613386565b612b7560018261476e565b9050612aae565b508015611990576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81526000602082018190529181019190915260608101829052611ff2858583613386565b612bd083836134e3565b612bdd6000848484612f03565b610bc95760405162461bcd60e51b81526004016102bb90614a93565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260086020526040812080549160019190612c73838561476e565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612ccb8282611f42565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16612d4a5760405162461bcd60e51b81526004016102bb90614a07565b6001600955565b600054610100900460ff166121315760405162461bcd60e51b81526004016102bb90614a07565b600054610100900460ff16612d9f5760405162461bcd60e51b81526004016102bb90614a07565b60005b8151811015610f52576001606d6000848481518110612dc357612dc3614742565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580612dff816148cb565b915050612da2565b600054610100900460ff16612e2e5760405162461bcd60e51b81526004016102bb90614a07565b8151612e4290610103906020850190613c8c565b508051610bc990610104906020840190613c8c565b60005b600082815260026020526040902054811015612eb85760008281526002602081815260408084208585528301909152822080546001600160a81b03191681556001808201849055910191909155612eb1908261476e565b9050612e5a565b50600090815260026020526040812055565b60608315612ed9575081612956565b825115612ee95782518084602001fd5b8160405162461bcd60e51b81526004016102bb9190613db0565b6000612f17846001600160a01b0316611bb1565b1561300457836001600160a01b031663150b7a02612f33611c0a565b8786866040518563ffffffff1660e01b8152600401612f559493929190614b88565b6020604051808303816000875af1925050508015612f90575060408051601f3d908101601f19168201909252612f8d91810190614bc5565b60015b612fea573d808015612fbe576040519150601f19603f3d011682016040523d82523d6000602084013e612fc3565b606091505b508051612fe25760405162461bcd60e51b81526004016102bb90614a93565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c07565b506001610c07565b6001600160a01b03831661306957613064816101378054600083815261013860205260408120829055600182018355919091527f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa10155565b61308c565b816001600160a01b0316836001600160a01b03161461308c5761308c8382613611565b6001600160a01b0382166130a357610bc9816136b3565b826001600160a01b0316826001600160a01b031614610bc957610bc98282613768565b6001816020015160028111156130de576130de613f8c565b14156131895780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613117906380ac58cd90600401614be2565b602060405180830381865afa925050508015613150575060408051601f3d908101601f1916820190925261314d91810190614bfa565b60015b61316c5760405162461bcd60e51b81526004016102bb90614c17565b80610f525760405162461bcd60e51b81526004016102bb90614c17565b6002816020015160028111156131a1576131a1613f8c565b14156131da5780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906131179063d9b67a2690600401614be2565b6000816020015160028111156131f2576131f2613f8c565b1415610bfb5780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bfb5780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613250906380ac58cd90600401614be2565b602060405180830381865afa925050508015613289575060408051601f3d908101601f1916820190925261328691810190614bfa565b60015b6132b357613295614c3b565b806308c379a01415610f5257506132aa614c56565b80610f52575050565b80156132d15760405162461bcd60e51b81526004016102bb90614c17565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906133049063d9b67a2690600401614be2565b602060405180830381865afa92505050801561333d575060408051601f3d908101601f1916820190925261333a91810190614bfa565b60015b61336857613349614c3b565b806308c379a01415610bc9575061335e614c56565b80610bc957505050565b8015610bc95760405162461bcd60e51b81526004016102bb90614c17565b60008160200151600281111561339e5761339e613f8c565b14156133d957610bc98160000151848484606001517f00000000000000000000000000000000000000000000000000000000000000006137ae565b6001816020015160028111156133f1576133f1613f8c565b14156134645780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e9161342d9187918791600401614cdf565b600060405180830381600087803b15801561344757600080fd5b505af115801561345b573d6000803e3d6000fd5b50505050505050565b60028160200151600281111561347c5761347c613f8c565b1415610bc957805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c40161342d565b6001600160a01b0382166135395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016102bb565b613542816126b3565b1561358e5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016102bb565b61359a600083836126f6565b6001600160a01b0382166000908152610106602052604081208054600192906135c490849061476e565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020614d81833981519152908290a45050565b6000600161361e8461128e565b61362891906148e6565b6000838152610136602052604090205490915080821461367e576001600160a01b038416600090815261013560209081526040808320858452825280832054848452818420819055835261013690915290208190555b506000918252610136602090815260408084208490556001600160a01b03909416835261013581528383209183525290812055565b610137546000906136c6906001906148e6565b6000838152610138602052604081205461013780549394509092849081106136f0576136f0614742565b9060005260206000200154905080610137838154811061371257613712614742565b6000918252602080832090910192909255828152610138909152604080822084905585825281205561013780548061374c5761374c614d03565b6001900381819060005260206000200160009055905550505050565b60006137738361128e565b6001600160a01b0390931660009081526101356020908152604080832086845282528083208590559382526101369052919091209190915550565b816137b857611ff2565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613912576001600160a01b03841630141561385857604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b15801561383057600080fd5b505af1158015613844573d6000803e3d6000fd5b5050505061385383838361391e565b611ff2565b6001600160a01b038316301415613907573482146138ae5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b60448201526064016102bb565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156138e957600080fd5b505af11580156138fd573d6000803e3d6000fd5b5050505050611ff2565b61385383838361391e565b611ff2858585856139e3565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461396b576040519150601f19603f3d011682016040523d82523d6000602084013e613970565b606091505b505090508061199057816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156139b457600080fd5b505af11580156139c8573d6000803e3d6000fd5b50611990935050506001600160a01b03841690508585613a41565b816001600160a01b0316836001600160a01b03161415613a0257611990565b6001600160a01b038316301415613a2c57613a276001600160a01b0385168383613a41565b611990565b6119906001600160a01b038516848484613a97565b610bc98363a9059cbb60e01b8484604051602401613a6092919061413f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613ab8565b611990846323b872dd60e01b858585604051602401613a6093929190614cdf565b6000613b0d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b8a9092919063ffffffff16565b805190915015610bc95780806020019051810190613b2b9190614bfa565b610bc95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b6060610c07848460008585613b9e85611bb1565b613bea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b600080866001600160a01b03168587604051613c069190614a77565b60006040518083038185875af1925050503d8060008114613c43576040519150601f19603f3d011682016040523d82523d6000602084013e613c48565b606091505b5091509150613c58828286612eca565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b828054613c9890614660565b90600052602060002090601f016020900481019282613cba5760008555613d00565b82601f10613cd357805160ff1916838001178555613d00565b82800160010185558215613d00579182015b82811115613d00578251825591602001919060010190613ce5565b50613d0c929150613d10565b5090565b5b80821115613d0c5760008155600101613d11565b6001600160e01b031981168114610bfb57600080fd5b600060208284031215613d4d57600080fd5b813561295681613d25565b60005b83811015613d73578181015183820152602001613d5b565b838111156119905750506000910152565b60008151808452613d9c816020860160208601613d58565b601f01601f19169290920160200192915050565b6020815260006129566020830184613d84565b600060208284031215613dd557600080fd5b5035919050565b6001600160a01b0381168114610bfb57600080fd5b8035613dfc81613ddc565b919050565b60008060408385031215613e1457600080fd5b8235613e1f81613ddc565b946020939093013593505050565b600060208284031215613e3f57600080fd5b813561295681613ddc565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613e8557613e85613e4a565b6040525050565b600082601f830112613e9d57600080fd5b81356001600160401b03811115613eb657613eb6613e4a565b604051613ecd601f8301601f191660200182613e60565b818152846020838601011115613ee257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613f1557600080fd5b8435613f2081613ddc565b93506020850135613f3081613ddc565b92506040850135915060608501356001600160401b03811115613f5257600080fd5b613f5e87828801613e8c565b91505092959194509250565b60008060408385031215613f7d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60038110613fc057634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190613fe490840182613fa2565b5060408181015190830152606090810151910152565b608081016109e58284613fc4565b60008060006060848603121561401d57600080fd5b833561402881613ddc565b9250602084013561403881613ddc565b929592945050506040919091013590565b60008083601f84011261405b57600080fd5b5081356001600160401b0381111561407257600080fd5b60208301915083602082850101111561408a57600080fd5b9250929050565b6000806000806000606086880312156140a957600080fd5b85356001600160401b03808211156140c057600080fd5b818801915088601f8301126140d457600080fd5b8135818111156140e357600080fd5b8960208260071b85010111156140f857600080fd5b60209283019750955090870135908082111561411357600080fd5b5061412088828901614049565b9094509250614133905060408701613df1565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561416b57600080fd5b82359150602083013561417d81613ddc565b809150509250929050565b60006001600160401b038211156141a1576141a1613e4a565b5060051b60200190565b600082601f8301126141bc57600080fd5b813560206141c982614188565b6040516141d68282613e60565b83815260059390931b85018201928281019150868411156141f657600080fd5b8286015b8481101561421a57803561420d81613ddc565b83529183019183016141fa565b509695505050505050565b600080600080600080600060e0888a03121561424057600080fd5b61424988613df1565b965060208801356001600160401b038082111561426557600080fd5b6142718b838c01613e8c565b975060408a013591508082111561428757600080fd5b6142938b838c01613e8c565b965060608a01359150808211156142a957600080fd5b6142b58b838c01613e8c565b955060808a01359150808211156142cb57600080fd5b506142d88a828b016141ab565b9350506142e760a08901613df1565b915060c0880135905092959891949750929550565b60006020828403121561430e57600080fd5b81356001600160401b0381111561432457600080fd5b610c0784828501613e8c565b60008060006060848603121561434557600080fd5b83359250602084013561403881613ddc565b8015158114610bfb57600080fd5b6000806040838503121561437857600080fd5b823561438381613ddc565b9150602083013561417d81614357565b600080602083850312156143a657600080fd5b82356001600160401b03808211156143bd57600080fd5b818501915085601f8301126143d157600080fd5b8135818111156143e057600080fd5b8660208260051b85010111156143f557600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561445c57603f1988860301845261444a858351613d84565b9450928501929085019060010161442e565b5092979650505050505050565b600082601f83011261447a57600080fd5b8135602061448782614188565b6040516144948282613e60565b83815260059390931b85018201928281019150868411156144b457600080fd5b8286015b8481101561421a57803583529183019183016144b8565b600080600080600060a086880312156144e757600080fd5b85356144f281613ddc565b9450602086013561450281613ddc565b935060408601356001600160401b038082111561451e57600080fd5b61452a89838a01614469565b9450606088013591508082111561454057600080fd5b61454c89838a01614469565b9350608088013591508082111561456257600080fd5b5061456f88828901613e8c565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156145be576145ab838551613fc4565b9284019260809290920191600101614598565b50909695505050505050565b600080604083850312156145dd57600080fd5b82356145e881613ddc565b9150602083013561417d81613ddc565b600080600080600060a0868803121561461057600080fd5b853561461b81613ddc565b9450602086013561462b81613ddc565b9350604086013592506060860135915060808601356001600160401b0381111561465457600080fd5b61456f88828901613e8c565b600181811c9082168061467457607f821691505b60208210811415611a2457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561478157614781614758565b500190565b60038110610bfb57600080fd5b6020808252818101839052600090604080840186845b878110156148055781356147bc81613ddc565b6001600160a01b03168352818501356147d481614786565b6147e086850182613fa2565b50818401358385015260608083013590840152608092830192909101906001016147a9565b5090979650505050505050565b600081600019048311821515161561482c5761482c614758565b500290565b60008261484e57634e487b7160e01b600052601260045260246000fd5b500490565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000808335601e1984360301811261489c57600080fd5b8301803591506001600160401b038211156148b657600080fd5b60200191503681900382131561408a57600080fd5b60006000198214156148df576148df614758565b5060010190565b6000828210156148f8576148f8614758565b500390565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161492d816015850160208801613d58565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161495e816026840160208801613d58565b01602601949350505050565b60006080828403121561497c57600080fd5b604051608081018181106001600160401b038211171561499e5761499e613e4a565b60405282356149ac81613ddc565b815260208301356149bc81614786565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000614a656040830185613d84565b82810360208401526126278185613d84565b60008251614a89818460208701613d58565b9190910192915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600081614af457614af4614758565b506000190190565b8135614b0781613ddc565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614b3381614786565b60038110614b5157634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614bbb90830184613d84565b9695505050505050565b600060208284031215614bd757600080fd5b815161295681613d25565b60e09190911b6001600160e01b031916815260200190565b600060208284031215614c0c57600080fd5b815161295681614357565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d11156126f35760046000803e5060005160e01c90565b600060443d1015614c645790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715614c9357505050505090565b8285019150815181811115614cab5750505050505090565b843d8701016020828501011115614cc55750505050505090565b614cd460208286010187613e60565b509095945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603160045260246000fdfe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220319493f8917b988c21a8813ea0252cf9797966cbb8567e240d174c4071d2bbc264736f6c634300080c0033",
    "sourceMap": "1578:8812:297:-:0;;;3088:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1026:40:157;;;;3111:19:436::1;3134:13:::0;::::1;::::0;::::1;;;3133:14;::::0;3179:34;::::1;;;-1:-1:-1::0;3197:12:436::1;::::0;3212:1:::1;3197:12;::::0;;::::1;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1::0;3268:12:436::1;::::0;::::1;;::::0;:17:::1;3219:66;3157:201;;;::::0;-1:-1:-1;;;3157:201:436;;511:2:641;3157:201:436::1;::::0;::::1;493:21:641::0;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:641;;;633:44;694:19;;3157:201:436::1;;;;;;;;3368:12;:16:::0;;-1:-1:-1;;3368:16:436::1;3383:1;3368:16;::::0;;3394:65;::::1;;;3428:13;:20:::0;;-1:-1:-1;;3428:20:436::1;;;::::0;;3394:65:::1;3483:14;3479:99;;;3529:5;3513:21:::0;;-1:-1:-1;;3513:21:436::1;::::0;;3553:14:::1;::::0;-1:-1:-1;876:36:641;;3553:14:436::1;::::0;864:2:641;849:18;3553:14:436::1;;;;;;;3479:99;3101:483;3088:87:297::0;1578:8812;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;14:290:641:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:641;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:641:o;724:194::-;1578:8812:297;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102425760003560e01c8063754b8fe711610135578063754b8fe7146106475780637647691d146106675780638da5cb5b146106875780639010d07c146106a557806391d14854146106c5578063938e3d7b146106e557806395d89b41146107055780639bcf7a151461071a578063a0a8e4601461073a578063a217fddf14610756578063a22cb4651461076b578063a32fa5b31461078b578063ac9650d8146107ab578063b24f2d39146107d8578063b88d4fde14610803578063bc197c8114610823578063c87b56dd1461084f578063ca15c8731461086f578063cb2ef6f71461088f578063d0d2fe25146108ae578063d547741f146108db578063d5576d26146108fb578063e8a3d48514610928578063e985e9c51461093d578063f23a6e611461095d57600080fd5b806301ffc9a7146102cb57806306fdde0314610300578063081812fc14610322578063095ea7b31461035a57806313af40351461037a578063150b7a021461039a57806318160ddd146103d35780631da799c9146103f357806323b872dd14610420578063248a9ca31461044057806329e471dd1461046d5780632a55205a146104805780632f2ff15d146104ae5780632f745c59146104ce57806336568abe146104ee5780633b1475a71461050e57806342842e0e146105255780634cc157df146105455780634f6ccce714610587578063572b6c05146105a7578063600dd5ea146105c757806361195e94146105e75780636352211e1461060757806370a082311461062757600080fd5b366102c657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c45760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613d3b565b610989565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156109eb565b6040516102f79190613db0565b34801561032e57600080fd5b5061034261033d366004613dc3565b610a7e565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b506102c4610375366004613e01565b610aa6565b34801561038657600080fd5b506102c4610395366004613e2d565b610bce565b3480156103a657600080fd5b506103ba6103b5366004613eff565b610bfe565b6040516001600160e01b031990911681526020016102f7565b3480156103df57600080fd5b50610137545b6040519081526020016102f7565b3480156103ff57600080fd5b5061041361040e366004613f6a565b610c0f565b6040516102f79190613ffa565b34801561042c57600080fd5b506102c461043b366004614008565b610c9b565b34801561044c57600080fd5b506103e561045b366004613dc3565b60009081526007602052604090205490565b6103e561047b366004614091565b610cd3565b34801561048c57600080fd5b506104a061049b366004613f6a565b610e7f565b6040516102f792919061413f565b3480156104ba57600080fd5b506102c46104c9366004614158565b610ebc565b3480156104da57600080fd5b506103e56104e9366004613e01565b610f56565b3480156104fa57600080fd5b506102c4610509366004614158565b610fed565b34801561051a57600080fd5b506103e56101675481565b34801561053157600080fd5b506102c4610540366004614008565b61104c565b34801561055157600080fd5b50610565610560366004613dc3565b611067565b604080516001600160a01b03909316835261ffff9091166020830152016102f7565b34801561059357600080fd5b506103e56105a2366004613dc3565b6110d2565b3480156105b357600080fd5b506102eb6105c2366004613e2d565b611167565b3480156105d357600080fd5b506102c46105e2366004613e01565b611185565b3480156105f357600080fd5b50610315610602366004613dc3565b6111b3565b34801561061357600080fd5b50610342610622366004613dc3565b611258565b34801561063357600080fd5b506103e5610642366004613e2d565b61128e565b34801561065357600080fd5b506102c4610662366004614225565b611315565b34801561067357600080fd5b506102c4610682366004614158565b61150d565b34801561069357600080fd5b506005546001600160a01b0316610342565b3480156106b157600080fd5b506103426106c0366004613f6a565b611675565b3480156106d157600080fd5b506102eb6106e0366004614158565b611764565b3480156106f157600080fd5b506102c46107003660046142fc565b61178f565b34801561071157600080fd5b506103156117bc565b34801561072657600080fd5b506102c4610735366004614330565b6117cc565b34801561074657600080fd5b50604051600181526020016102f7565b34801561076257600080fd5b506103e5600081565b34801561077757600080fd5b506102c4610786366004614365565b6117fb565b34801561079757600080fd5b506102eb6107a6366004614158565b61180d565b3480156107b757600080fd5b506107cb6107c6366004614393565b611863565b6040516102f79190614407565b3480156107e457600080fd5b506003546001600160a01b03811690600160a01b900461ffff16610565565b34801561080f57600080fd5b506102c461081e366004613eff565b611957565b34801561082f57600080fd5b506103ba61083e3660046144cf565b63bc197c8160e01b95945050505050565b34801561085b57600080fd5b5061031561086a366004613dc3565b611996565b34801561087b57600080fd5b506103e561088a366004613dc3565b6119a1565b34801561089b57600080fd5b506804d756c7469777261760bc1b6103e5565b3480156108ba57600080fd5b506103e56108c9366004613dc3565b60009081526002602052604090205490565b3480156108e757600080fd5b506102c46108f6366004614158565b611a2a565b34801561090757600080fd5b5061091b610916366004613dc3565b611a43565b6040516102f7919061457c565b34801561093457600080fd5b50610315611af4565b34801561094957600080fd5b506102eb6109583660046145ca565b611b82565b34801561096957600080fd5b506103ba6109783660046145f8565b63f23a6e6160e01b95945050505050565b600061099482611bc0565b806109af57506001600160e01b031982166380ac58cd60e01b145b806109ca57506001600160e01b03198216630271189760e51b145b806109e557506001600160e01b0319821663152a902d60e11b145b92915050565b606061010380546109fb90614660565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2790614660565b8015610a745780601f10610a4957610100808354040283529160200191610a74565b820191906000526020600020905b815481529060010190602001808311610a5757829003601f168201915b5050505050905090565b6000610a8982611be5565b50600090815261010760205260409020546001600160a01b031690565b6000610ab182611258565b9050806001600160a01b0316836001600160a01b03161415610b1f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016102bb565b806001600160a01b0316610b31611c0a565b6001600160a01b03161480610b4d5750610b4d81610958611c0a565b610bbf5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016102bb565b610bc98383611c19565b505050565b610bd6611c88565b610bf25760405162461bcd60e51b81526004016102bb90614695565b610bfb81611c96565b50565b630a85bd0160e11b5b949350505050565b610c17613c63565b6000838152600260208181526040808420868552830182529283902083516080810190945280546001600160a01b0381168552909291840191600160a01b90910460ff1690811115610c6b57610c6b613f8c565b6002811115610c7c57610c7c613f8c565b8152600182015460208201526002909101546040909101529392505050565b610cac610ca6611c0a565b82611ce8565b610cc85760405162461bcd60e51b81526004016102bb906146bd565b610bc9838383611d46565b600060026009541415610cf85760405162461bcd60e51b81526004016102bb9061470b565b60026009557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610d2f81610d2a611c0a565b611ede565b610d48600080516020614d3a8339815191526000611764565b610daa5760005b86811015610da857610d96600080516020614d3a833981519152898984818110610d7b57610d7b614742565b610d919260206080909202019081019150613e2d565b611f42565b610da160018261476e565b9050610d4f565b505b610167805492506001906000610dc0838661476e565b90915550610e119050610dd1611c0a565b888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250899250611f80915050565b610e1b8383611ff9565b81836001600160a01b0316610e2e611c0a565b6001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a604051610e68929190614793565b60405180910390a450600160095595945050505050565b600080600080610e8e86611067565b90945084925061ffff169050612710610ea78287614812565b610eb19190614831565b925050509250929050565b600082815260076020526040902054610ed59033611f42565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff1615610f485760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064016102bb565b610f528282612013565b5050565b6000610f618361128e565b8210610fc35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016102bb565b506001600160a01b0391909116600090815261013560209081526040808320938352929052205490565b336001600160a01b038216146110425760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b60448201526064016102bb565b610f528282612027565b610bc983838360405180602001604052806000815250611957565b6000818152600460209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156110ae57805160208201516110c8565b6003546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60006110de6101375490565b82106111415760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016102bb565b610137828154811061115557611155614742565b90600052602060002001549050919050565b6001600160a01b03166000908152606d602052604090205460ff1690565b61118d611c88565b6111a95760405162461bcd60e51b81526004016102bb90614695565b610f52828261207e565b60008181526002602052604090206001018054606091906111d390614660565b80601f01602080910402602001604051908101604052809291908181526020018280546111ff90614660565b801561124c5780601f106112215761010080835404028352916020019161124c565b820191906000526020600020905b81548152906001019060200180831161122f57829003601f168201915b50505050509050919050565b600081815261010560205260408120546001600160a01b0316806109e55760405162461bcd60e51b81526004016102bb90614853565b60006001600160a01b0382166112f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016102bb565b506001600160a01b03166000908152610106602052604090205490565b600054610100900460ff16158080156113355750600054600160ff909116105b80611356575061134430611bb1565b158015611356575060005460ff166001145b6113b95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102bb565b6000805460ff1916600117905580156113dc576000805461ff0019166101001790555b6113e4612102565b6113ed84612133565b6113f7878761216b565b611401838361207e565b61140a88611c96565b6114138561219c565b61141e600089612013565b6114487f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a689612013565b611460600080516020614d1a83398151915289612013565b611479600080516020614d1a8339815191526000612013565b6114a47fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436000612013565b6114bd600080516020614d3a8339815191526000612013565b8015611503576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b600260095414156115305760405162461bcd60e51b81526004016102bb9061470b565b60026009557fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054361156281610d2a611c0a565b6101675483106115a75760405162461bcd60e51b815260206004820152601060248201526f3bb930b83832b21027232a102227229760811b60448201526064016102bb565b6115b86115b2611c0a565b84611ce8565b6116105760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b60648201526084016102bb565b6116198361227e565b6116238284612315565b82826001600160a01b0316611636611c0a565b6001600160a01b03167fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7360405160405180910390a45050600160095550565b60008281526008602052604081205481805b8281101561175b5760008681526008602090815260408083208484526001019091529020546001600160a01b03161561170457848214156116f25760008681526008602090815260408083209383526001909301905220546001600160a01b031692506109e5915050565b6116fd60018361476e565b9150611749565b61170f866000611764565b80156117365750600086815260086020908152604080832083805260020190915290205481145b156117495761174660018361476e565b91505b61175460018261476e565b9050611687565b50505092915050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611797611c88565b6117b35760405162461bcd60e51b81526004016102bb90614695565b610bfb8161219c565b606061010480546109fb90614660565b6117d4611c88565b6117f05760405162461bcd60e51b81526004016102bb90614695565b610bc98383836123d2565b610f52611806611c0a565b838361247a565b600082815260066020908152604080832083805290915281205460ff1661185a575060008281526006602090815260408083206001600160a01b038516845290915290205460ff166109e5565b50600192915050565b6060816001600160401b0381111561187d5761187d613e4a565b6040519080825280602002602001820160405280156118b057816020015b606081526020019060019003908161189b5790505b50905060005b8281101561195057611920308585848181106118d4576118d4614742565b90506020028101906118e69190614885565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061253e92505050565b82828151811061193257611932614742565b60200260200101819052508080611948906148cb565b9150506118b6565b5092915050565b611968611962611c0a565b83611ce8565b6119845760405162461bcd60e51b81526004016102bb906146bd565b61199084848484612630565b50505050565b60606109e5826111b3565b600081815260086020526040812054815b81811015611a055760008481526008602090815260408083208484526001019091529020546001600160a01b0316156119f3576119f060018461476e565b92505b6119fe60018261476e565b90506119b2565b50611a11836000611764565b15611a2457611a2160018361476e565b91505b50919050565b6000828152600760205260409020546110429033611f42565b600081815260026020526040902054606090806001600160401b03811115611a6d57611a6d613e4a565b604051908082528060200260200182016040528015611aa657816020015b611a93613c63565b815260200190600190039081611a8b5790505b50915060005b81811015611aed57611abe8482610c0f565b838281518110611ad057611ad0614742565b6020908102919091010152611ae660018261476e565b9050611aac565b5050919050565b60018054611b0190614660565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2d90614660565b8015611b7a5780601f10611b4f57610100808354040283529160200191611b7a565b820191906000526020600020905b815481529060010190602001808311611b5d57829003601f168201915b505050505081565b6001600160a01b0391821660009081526101086020908152604080832093909416825291909152205460ff1690565b6001600160a01b03163b151590565b60006001600160e01b0319821663780e9d6360e01b14806109e557506109e582612663565b611bee816126b3565b610bfb5760405162461bcd60e51b81526004016102bb90614853565b6000611c146126d1565b905090565b60008181526101076020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c4f82611258565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611c14816106e0611c0a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600080611cf483611258565b9050806001600160a01b0316846001600160a01b03161480611d1b5750611d1b8185611b82565b80610c075750836001600160a01b0316611d3484610a7e565b6001600160a01b031614949350505050565b826001600160a01b0316611d5982611258565b6001600160a01b031614611dbd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016102bb565b6001600160a01b038216611e1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016102bb565b611e2a8383836126f6565b611e35600082611c19565b6001600160a01b038316600090815261010660205260408120805460019290611e5f9084906148e6565b90915550506001600160a01b038216600090815261010660205260408120805460019290611e8e90849061476e565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020614d8183398151915291a4505050565b611ee8828261180d565b610f5257611f00816001600160a01b031660146127bb565b611f0b8360206127bb565b604051602001611f1c9291906148fd565b60408051601f198184030181529082905262461bcd60e51b82526102bb91600401613db0565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16610f5257611f00816001600160a01b031660146127bb565b611f8b84848361295d565b611f958282612a85565b611ff285308686808060200260200160405190810160405280939291908181526020016000905b82821015611fe857611fd96080830286013681900381019061496a565b81526020019060010190611fbc565b5050505050612aaa565b5050505050565b610f52828260405180602001604052806000815250612bc6565b61201d8282612bf9565b610f528282612c54565b6120318282612cc1565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6127108111156120a05760405162461bcd60e51b81526004016102bb906149de565b600380546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600054610100900460ff166121295760405162461bcd60e51b81526004016102bb90614a07565b612131612d23565b565b600054610100900460ff1661215a5760405162461bcd60e51b81526004016102bb90614a07565b612162612d51565b610bfb81612d78565b600054610100900460ff166121925760405162461bcd60e51b81526004016102bb90614a07565b610f528282612e07565b6000600180546121ab90614660565b80601f01602080910402602001604051908101604052809291908181526020018280546121d790614660565b80156122245780601f106121f957610100808354040283529160200191612224565b820191906000526020600020905b81548152906001019060200180831161220757829003601f168201915b5050855193945061224093600193506020870192509050613c8c565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612272929190614a52565b60405180910390a15050565b600061228982611258565b9050612297816000846126f6565b6122a2600083611c19565b6001600160a01b0381166000908152610106602052604081208054600192906122cc9084906148e6565b90915550506000828152610105602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020614d81833981519152908390a45050565b60008181526002602052604081205490816001600160401b0381111561233d5761233d613e4a565b60405190808252806020026020018201604052801561237657816020015b612363613c63565b81526020019060019003908161235b5790505b50905060005b828110156123bd5761238e8482610c0f565b8282815181106123a0576123a0614742565b60209081029190910101526123b660018261476e565b905061237c565b506123c783612e57565b611990308583612aaa565b6127108111156123f45760405162461bcd60e51b81526004016102bb906149de565b6040805180820182526001600160a01b038481168083526020808401868152600089815260048352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b031614156124d85760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016102bb565b6001600160a01b0383811660008181526101086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910161246d565b606061254983611bb1565b6125a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102bb565b600080846001600160a01b0316846040516125bf9190614a77565b600060405180830381855af49150503d80600081146125fa576040519150601f19603f3d011682016040523d82523d6000602084013e6125ff565b606091505b50915091506126278282604051806060016040528060278152602001614d5a60279139612eca565b95945050505050565b61263b848484611d46565b61264784848484612f03565b6119905760405162461bcd60e51b81526004016102bb90614a93565b60006001600160e01b031982166380ac58cd60e01b148061269457506001600160e01b03198216635b5e139f60e01b145b806109e557506301ffc9a760e01b6001600160e01b03198316146109e5565b600090815261010560205260409020546001600160a01b0316151590565b60006126dc33611167565b156126ee575060131936013560601c90565b503390565b90565b61270183838361300c565b61271a600080516020614d1a8339815191526000611764565b15801561272f57506001600160a01b03831615155b801561274357506001600160a01b03821615155b15610bc957612760600080516020614d1a83398151915284611764565b8061277e575061277e600080516020614d1a83398151915283611764565b610bc95760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b60448201526064016102bb565b606060006127ca836002614812565b6127d590600261476e565b6001600160401b038111156127ec576127ec613e4a565b6040519080825280601f01601f191660200182016040528015612816576020820181803683370190505b509050600360fc1b8160008151811061283157612831614742565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061286057612860614742565b60200101906001600160f81b031916908160001a9053506000612884846002614812565b61288f90600161476e565b90505b6001811115612907576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106128c3576128c3614742565b1a60f81b8282815181106128d9576128d9614742565b60200101906001600160f81b031916908160001a90535060049490941c9361290081614ae5565b9050612892565b5083156129565760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102bb565b9392505050565b81806129955760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b60448201526064016102bb565b600082815260026020526040902054156129dd5760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b60448201526064016102bb565b60005b81811015612a7057612a188585838181106129fd576129fd614742565b905060800201803603810190612a13919061496a565b6130c6565b848482818110612a2a57612a2a614742565b600086815260026020818152604080842088855290920190529020608090910292909201919050612a5b8282614afc565b50612a69905060018261476e565b90506129e0565b50600091825260026020526040909120555050565b60008181526002602090815260409091208351610bc992600190920191850190613c8c565b6000805b8251811015612b7c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838281518110612ae757612ae7614742565b6020026020010151600001516001600160a01b0316148015612b1157506001600160a01b03841630145b15612b4657828181518110612b2857612b28614742565b60200260200101516060015182612b3f919061476e565b9150612b6a565b612b6a8585858481518110612b5d57612b5d614742565b6020026020010151613386565b612b7560018261476e565b9050612aae565b508015611990576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81526000602082018190529181019190915260608101829052611ff2858583613386565b612bd083836134e3565b612bdd6000848484612f03565b610bc95760405162461bcd60e51b81526004016102bb90614a93565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260086020526040812080549160019190612c73838561476e565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b612ccb8282611f42565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff16612d4a5760405162461bcd60e51b81526004016102bb90614a07565b6001600955565b600054610100900460ff166121315760405162461bcd60e51b81526004016102bb90614a07565b600054610100900460ff16612d9f5760405162461bcd60e51b81526004016102bb90614a07565b60005b8151811015610f52576001606d6000848481518110612dc357612dc3614742565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580612dff816148cb565b915050612da2565b600054610100900460ff16612e2e5760405162461bcd60e51b81526004016102bb90614a07565b8151612e4290610103906020850190613c8c565b508051610bc990610104906020840190613c8c565b60005b600082815260026020526040902054811015612eb85760008281526002602081815260408084208585528301909152822080546001600160a81b03191681556001808201849055910191909155612eb1908261476e565b9050612e5a565b50600090815260026020526040812055565b60608315612ed9575081612956565b825115612ee95782518084602001fd5b8160405162461bcd60e51b81526004016102bb9190613db0565b6000612f17846001600160a01b0316611bb1565b1561300457836001600160a01b031663150b7a02612f33611c0a565b8786866040518563ffffffff1660e01b8152600401612f559493929190614b88565b6020604051808303816000875af1925050508015612f90575060408051601f3d908101601f19168201909252612f8d91810190614bc5565b60015b612fea573d808015612fbe576040519150601f19603f3d011682016040523d82523d6000602084013e612fc3565b606091505b508051612fe25760405162461bcd60e51b81526004016102bb90614a93565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c07565b506001610c07565b6001600160a01b03831661306957613064816101378054600083815261013860205260408120829055600182018355919091527f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa10155565b61308c565b816001600160a01b0316836001600160a01b03161461308c5761308c8382613611565b6001600160a01b0382166130a357610bc9816136b3565b826001600160a01b0316826001600160a01b031614610bc957610bc98282613768565b6001816020015160028111156130de576130de613f8c565b14156131895780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613117906380ac58cd90600401614be2565b602060405180830381865afa925050508015613150575060408051601f3d908101601f1916820190925261314d91810190614bfa565b60015b61316c5760405162461bcd60e51b81526004016102bb90614c17565b80610f525760405162461bcd60e51b81526004016102bb90614c17565b6002816020015160028111156131a1576131a1613f8c565b14156131da5780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906131179063d9b67a2690600401614be2565b6000816020015160028111156131f2576131f2613f8c565b1415610bfb5780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bfb5780516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a790613250906380ac58cd90600401614be2565b602060405180830381865afa925050508015613289575060408051601f3d908101601f1916820190925261328691810190614bfa565b60015b6132b357613295614c3b565b806308c379a01415610f5257506132aa614c56565b80610f52575050565b80156132d15760405162461bcd60e51b81526004016102bb90614c17565b81516040516301ffc9a760e01b81526001600160a01b03909116906301ffc9a7906133049063d9b67a2690600401614be2565b602060405180830381865afa92505050801561333d575060408051601f3d908101601f1916820190925261333a91810190614bfa565b60015b61336857613349614c3b565b806308c379a01415610bc9575061335e614c56565b80610bc957505050565b8015610bc95760405162461bcd60e51b81526004016102bb90614c17565b60008160200151600281111561339e5761339e613f8c565b14156133d957610bc98160000151848484606001517f00000000000000000000000000000000000000000000000000000000000000006137ae565b6001816020015160028111156133f1576133f1613f8c565b14156134645780516040808301519051632142170760e11b81526001600160a01b03909216916342842e0e9161342d9187918791600401614cdf565b600060405180830381600087803b15801561344757600080fd5b505af115801561345b573d6000803e3d6000fd5b50505050505050565b60028160200151600281111561347c5761347c613f8c565b1415610bc957805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c40161342d565b6001600160a01b0382166135395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016102bb565b613542816126b3565b1561358e5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016102bb565b61359a600083836126f6565b6001600160a01b0382166000908152610106602052604081208054600192906135c490849061476e565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020614d81833981519152908290a45050565b6000600161361e8461128e565b61362891906148e6565b6000838152610136602052604090205490915080821461367e576001600160a01b038416600090815261013560209081526040808320858452825280832054848452818420819055835261013690915290208190555b506000918252610136602090815260408084208490556001600160a01b03909416835261013581528383209183525290812055565b610137546000906136c6906001906148e6565b6000838152610138602052604081205461013780549394509092849081106136f0576136f0614742565b9060005260206000200154905080610137838154811061371257613712614742565b6000918252602080832090910192909255828152610138909152604080822084905585825281205561013780548061374c5761374c614d03565b6001900381819060005260206000200160009055905550505050565b60006137738361128e565b6001600160a01b0390931660009081526101356020908152604080832086845282528083208590559382526101369052919091209190915550565b816137b857611ff2565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613912576001600160a01b03841630141561385857604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b15801561383057600080fd5b505af1158015613844573d6000803e3d6000fd5b5050505061385383838361391e565b611ff2565b6001600160a01b038316301415613907573482146138ae5760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b60448201526064016102bb565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156138e957600080fd5b505af11580156138fd573d6000803e3d6000fd5b5050505050611ff2565b61385383838361391e565b611ff2858585856139e3565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461396b576040519150601f19603f3d011682016040523d82523d6000602084013e613970565b606091505b505090508061199057816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156139b457600080fd5b505af11580156139c8573d6000803e3d6000fd5b50611990935050506001600160a01b03841690508585613a41565b816001600160a01b0316836001600160a01b03161415613a0257611990565b6001600160a01b038316301415613a2c57613a276001600160a01b0385168383613a41565b611990565b6119906001600160a01b038516848484613a97565b610bc98363a9059cbb60e01b8484604051602401613a6092919061413f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613ab8565b611990846323b872dd60e01b858585604051602401613a6093929190614cdf565b6000613b0d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b8a9092919063ffffffff16565b805190915015610bc95780806020019051810190613b2b9190614bfa565b610bc95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b6060610c07848460008585613b9e85611bb1565b613bea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b600080866001600160a01b03168587604051613c069190614a77565b60006040518083038185875af1925050503d8060008114613c43576040519150601f19603f3d011682016040523d82523d6000602084013e613c48565b606091505b5091509150613c58828286612eca565b979650505050505050565b604080516080810190915260008082526020820190815260200160008152602001600081525090565b828054613c9890614660565b90600052602060002090601f016020900481019282613cba5760008555613d00565b82601f10613cd357805160ff1916838001178555613d00565b82800160010185558215613d00579182015b82811115613d00578251825591602001919060010190613ce5565b50613d0c929150613d10565b5090565b5b80821115613d0c5760008155600101613d11565b6001600160e01b031981168114610bfb57600080fd5b600060208284031215613d4d57600080fd5b813561295681613d25565b60005b83811015613d73578181015183820152602001613d5b565b838111156119905750506000910152565b60008151808452613d9c816020860160208601613d58565b601f01601f19169290920160200192915050565b6020815260006129566020830184613d84565b600060208284031215613dd557600080fd5b5035919050565b6001600160a01b0381168114610bfb57600080fd5b8035613dfc81613ddc565b919050565b60008060408385031215613e1457600080fd5b8235613e1f81613ddc565b946020939093013593505050565b600060208284031215613e3f57600080fd5b813561295681613ddc565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715613e8557613e85613e4a565b6040525050565b600082601f830112613e9d57600080fd5b81356001600160401b03811115613eb657613eb6613e4a565b604051613ecd601f8301601f191660200182613e60565b818152846020838601011115613ee257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613f1557600080fd5b8435613f2081613ddc565b93506020850135613f3081613ddc565b92506040850135915060608501356001600160401b03811115613f5257600080fd5b613f5e87828801613e8c565b91505092959194509250565b60008060408385031215613f7d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60038110613fc057634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190613fe490840182613fa2565b5060408181015190830152606090810151910152565b608081016109e58284613fc4565b60008060006060848603121561401d57600080fd5b833561402881613ddc565b9250602084013561403881613ddc565b929592945050506040919091013590565b60008083601f84011261405b57600080fd5b5081356001600160401b0381111561407257600080fd5b60208301915083602082850101111561408a57600080fd5b9250929050565b6000806000806000606086880312156140a957600080fd5b85356001600160401b03808211156140c057600080fd5b818801915088601f8301126140d457600080fd5b8135818111156140e357600080fd5b8960208260071b85010111156140f857600080fd5b60209283019750955090870135908082111561411357600080fd5b5061412088828901614049565b9094509250614133905060408701613df1565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561416b57600080fd5b82359150602083013561417d81613ddc565b809150509250929050565b60006001600160401b038211156141a1576141a1613e4a565b5060051b60200190565b600082601f8301126141bc57600080fd5b813560206141c982614188565b6040516141d68282613e60565b83815260059390931b85018201928281019150868411156141f657600080fd5b8286015b8481101561421a57803561420d81613ddc565b83529183019183016141fa565b509695505050505050565b600080600080600080600060e0888a03121561424057600080fd5b61424988613df1565b965060208801356001600160401b038082111561426557600080fd5b6142718b838c01613e8c565b975060408a013591508082111561428757600080fd5b6142938b838c01613e8c565b965060608a01359150808211156142a957600080fd5b6142b58b838c01613e8c565b955060808a01359150808211156142cb57600080fd5b506142d88a828b016141ab565b9350506142e760a08901613df1565b915060c0880135905092959891949750929550565b60006020828403121561430e57600080fd5b81356001600160401b0381111561432457600080fd5b610c0784828501613e8c565b60008060006060848603121561434557600080fd5b83359250602084013561403881613ddc565b8015158114610bfb57600080fd5b6000806040838503121561437857600080fd5b823561438381613ddc565b9150602083013561417d81614357565b600080602083850312156143a657600080fd5b82356001600160401b03808211156143bd57600080fd5b818501915085601f8301126143d157600080fd5b8135818111156143e057600080fd5b8660208260051b85010111156143f557600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561445c57603f1988860301845261444a858351613d84565b9450928501929085019060010161442e565b5092979650505050505050565b600082601f83011261447a57600080fd5b8135602061448782614188565b6040516144948282613e60565b83815260059390931b85018201928281019150868411156144b457600080fd5b8286015b8481101561421a57803583529183019183016144b8565b600080600080600060a086880312156144e757600080fd5b85356144f281613ddc565b9450602086013561450281613ddc565b935060408601356001600160401b038082111561451e57600080fd5b61452a89838a01614469565b9450606088013591508082111561454057600080fd5b61454c89838a01614469565b9350608088013591508082111561456257600080fd5b5061456f88828901613e8c565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156145be576145ab838551613fc4565b9284019260809290920191600101614598565b50909695505050505050565b600080604083850312156145dd57600080fd5b82356145e881613ddc565b9150602083013561417d81613ddc565b600080600080600060a0868803121561461057600080fd5b853561461b81613ddc565b9450602086013561462b81613ddc565b9350604086013592506060860135915060808601356001600160401b0381111561465457600080fd5b61456f88828901613e8c565b600181811c9082168061467457607f821691505b60208210811415611a2457634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561478157614781614758565b500190565b60038110610bfb57600080fd5b6020808252818101839052600090604080840186845b878110156148055781356147bc81613ddc565b6001600160a01b03168352818501356147d481614786565b6147e086850182613fa2565b50818401358385015260608083013590840152608092830192909101906001016147a9565b5090979650505050505050565b600081600019048311821515161561482c5761482c614758565b500290565b60008261484e57634e487b7160e01b600052601260045260246000fd5b500490565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000808335601e1984360301811261489c57600080fd5b8301803591506001600160401b038211156148b657600080fd5b60200191503681900382131561408a57600080fd5b60006000198214156148df576148df614758565b5060010190565b6000828210156148f8576148f8614758565b500390565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161492d816015850160208801613d58565b7001034b99036b4b9b9b4b733903937b6329607d1b601591840191820152835161495e816026840160208801613d58565b01602601949350505050565b60006080828403121561497c57600080fd5b604051608081018181106001600160401b038211171561499e5761499e613e4a565b60405282356149ac81613ddc565b815260208301356149bc81614786565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000614a656040830185613d84565b82810360208401526126278185613d84565b60008251614a89818460208701613d58565b9190910192915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600081614af457614af4614758565b506000190190565b8135614b0781613ddc565b81546001600160a01b031981166001600160a01b039290921691821783556020840135614b3381614786565b60038110614b5157634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614bbb90830184613d84565b9695505050505050565b600060208284031215614bd757600080fd5b815161295681613d25565b60e09190911b6001600160e01b031916815260200190565b600060208284031215614c0c57600080fd5b815161295681614357565b6020808252600a908201526921546f6b656e5479706560b01b604082015260600190565b600060033d11156126f35760046000803e5060005160e01c90565b600060443d1015614c645790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715614c9357505050505090565b8285019150815181811115614cab5750505050505090565b843d8701016020828501011115614cc55750505050505090565b614cd460208286010187613e60565b509095945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603160045260246000fdfe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220319493f8917b988c21a8813ea0252cf9797966cbb8567e240d174c4071d2bbc264736f6c634300080c0033",
    "sourceMap": "1578:8812:297:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5319:10;-1:-1:-1;;;;;5333:18:297;5319:32;;5311:77;;;;-1:-1:-1;;;5311:77:297;;216:2:641;5311:77:297;;;198:21:641;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;5311:77:297;;;;;;;;;1578:8812;;;;;5802:462;;;;;;;;;;-1:-1:-1;5802:462:297;;;;;:::i;:::-;;:::i;:::-;;;926:14:641;;919:22;901:41;;889:2;874:18;5802:462:297;;;;;;;;2931:98:455;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4407:167::-;;;;;;;;;;-1:-1:-1;4407:167:455;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2053:32:641;;;2035:51;;2023:2;2008:18;4407:167:455;1889:203:641;3928:418:455;;;;;;;;;;-1:-1:-1;3928:418:455;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;608:200:330:-;;;;;;;;;;-1:-1:-1;608:200:330;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4722:33:641;;;4704:52;;4692:2;4677:18;608:200:330;4560:202:641;1935:111:458;;;;;;;;;;-1:-1:-1;2022:10:458;:17;1935:111;;;4913:25:641;;;4901:2;4886:18;1935:111:458;4767:177:641;1007:150:156;;;;;;;;;;-1:-1:-1;1007:150:156;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5084:327:455:-;;;;;;;;;;-1:-1:-1;5084:327:455;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;6542:712:297;;;;;;:::i;:::-;;:::i;1421:347:139:-;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3255:271:133:-;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;1600:264:458:-;;;;;;;;;;-1:-1:-1;1600:264:458;;;;;:::i;:::-;;:::i;4466:217:133:-;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;2857:32:297:-;;;;;;;;;;;;;;;;5477:179:455;;;;;;;;;;-1:-1:-1;5477:179:455;;;;;:::i;:::-;;:::i;2008:381:139:-;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9158:32:641;;;9140:51;;9239:6;9227:19;;;9222:2;9207:18;;9200:47;9113:18;2008:381:139;8968:285:641;2118:241:458;;;;;;;;;;-1:-1:-1;2118:241:458;;;;;:::i;:::-;;:::i;918:134:304:-;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;1216:124:156:-;;;;;;;;;;-1:-1:-1;1216:124:156;;;;;:::i;:::-;;:::i;2651:218:455:-;;;;;;;;;;-1:-1:-1;2651:218:455;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;;;;;-1:-1:-1;2390:204:455;;;;;:::i;:::-;;:::i;3240:1182:297:-;;;;;;;;;;-1:-1:-1;3240:1182:297;;;;;:::i;:::-;;:::i;7348:421::-;;;;;;;;;;-1:-1:-1;7348:421:297;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;-1:-1:-1;944:6:132;;-1:-1:-1;;;;;944:6:132;871:86;;1643:633:134;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;3093:102:455:-;;;;;;;;;;;;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;5103:95:297:-;;;;;;;;;;-1:-1:-1;5103:95:297;;2137:1;12870:36:641;;12858:2;12843:18;5103:95:297;12728:184:641;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;4641:153:455;;;;;;;;;;-1:-1:-1;4641:153:455;;;;;:::i;:::-;;:::i;2206:211:133:-;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;;;;;;;;;;-1:-1:-1;2599:16:139;;-1:-1:-1;;;;;2599:16:139;;;-1:-1:-1;;;2624:10:139;;;;2499:144;;5722:315:455;;;;;;;;;;-1:-1:-1;5722:315:455;;;;;:::i;:::-;;:::i;724:247:328:-;;;;;;;;;;-1:-1:-1;724:247:328;;;;;:::i;:::-;-1:-1:-1;;;724:247:328;;;;;;;;5642:129:297;;;;;;;;;;-1:-1:-1;5642:129:297;;;;;:::i;:::-;;:::i;2683:398:134:-;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;4956:91:297:-;;;;;;;;;;-1:-1:-1;;;;4956:91:297;;787:127:156;;;;;;;;;;-1:-1:-1;787:127:156;;;;;:::i;:::-;858:7;884:17;;;:6;:17;;;;;:23;;787:127;3897:171:133;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;8019:314:297:-;;;;;;;;;;-1:-1:-1;8019:314:297;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;4860:162:455:-;;;;;;;;;;-1:-1:-1;4860:162:455;;;;;:::i;:::-;;:::i;499:219:328:-;;;;;;;;;;-1:-1:-1;499:219:328;;;;;:::i;:::-;-1:-1:-1;;;499:219:328;;;;;;;;5802:462:297;5982:4;6021:36;6045:11;6021:23;:36::i;:::-;:103;;;-1:-1:-1;;;;;;;6073:51:297;;-1:-1:-1;;;6073:51:297;6021:103;:168;;;-1:-1:-1;;;;;;;6140:49:297;;-1:-1:-1;;;6140:49:297;6021:168;:236;;;-1:-1:-1;;;;;;;6205:52:297;;-1:-1:-1;;;6205:52:297;6021:236;6002:255;5802:462;-1:-1:-1;;5802:462:297:o;2931:98:455:-;2985:13;3017:5;3010:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:98;:::o;4407:167::-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:455;;;;:15;:24;;;;;;-1:-1:-1;;;;;4543:24:455;;4407:167::o;3928:418::-;4008:13;4024:34;4050:7;4024:25;:34::i;:::-;4008:50;;4082:5;-1:-1:-1;;;;;4076:11:455;:2;-1:-1:-1;;;;;4076:11:455;;;4068:57;;;;-1:-1:-1;;;4068:57:455;;19092:2:641;4068:57:455;;;19074:21:641;19131:2;19111:18;;;19104:30;19170:34;19150:18;;;19143:62;-1:-1:-1;;;19221:18:641;;;19214:31;19262:19;;4068:57:455;18890:397:641;4068:57:455;4173:5;-1:-1:-1;;;;;4157:21:455;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4157:21:455;;:62;;;;4182:37;4199:5;4206:12;:10;:12::i;4182:37::-;4136:171;;;;-1:-1:-1;;;4136:171:455;;19494:2:641;4136:171:455;;;19476:21:641;19533:2;19513:18;;;19506:30;19572:34;19552:18;;;19545:62;19643:32;19623:18;;;19616:60;19693:19;;4136:171:455;19292:426:641;4136:171:455;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3998:348;3928:418;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;608:200:330:-;-1:-1:-1;;;608:200:330;;;;;;;:::o;1007:150:156:-;1088:12;;:::i;:::-;1119:17;;;;:6;:17;;;;;;;;:31;;;:24;;:31;;;;;;1112:38;;;;;;;;;;-1:-1:-1;;;;;1112:38:156;;;;1119:31;;1112:38;;;;-1:-1:-1;;;1112:38:156;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1007:150;-1:-1:-1;;;1007:150:156:o;5084:327:455:-;5273:41;5292:12;:10;:12::i;:::-;5306:7;5273:18;:41::i;:::-;5265:100;;;;-1:-1:-1;;;5265:100:455;;;;;;;:::i;:::-;5376:28;5386:4;5392:2;5396:7;5376:9;:28::i;6542:712:297:-;6746:15;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2444:24:297::1;4658:40;2444:24:::0;4685:12:::1;:10;:12::i;:::-;4658:20;:40::i;:::-;6778:31:::2;-1:-1:-1::0;;;;;;;;;;;6806:1:297::2;6778:7;:31::i;:::-;6773:203;;6830:9;6825:141;6845:24:::0;;::::2;6825:141;;;6897:54;-1:-1:-1::0;;;;;;;;;;;6920:13:297::2;;6934:1;6920:16;;;;;;;:::i;:::-;:30;::::0;::::2;:16;::::0;;::::2;;:30:::0;;::::2;::::0;-1:-1:-1;6920:30:297::2;:::i;:::-;6897:10;:54::i;:::-;6871:6;6876:1;6871:6:::0;::::2;:::i;:::-;;;6825:141;;;;6773:203;6996:17;::::0;;;-1:-1:-1;7044:1:297::2;::::0;7023:17:::2;:22;7044:1:::0;6996:17;7023:22:::2;:::i;:::-;::::0;;;-1:-1:-1;7056:71:297::2;::::0;-1:-1:-1;7069:12:297::2;:10;:12::i;:::-;7083:13;;7098:19;;7056:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;7119:7:297;;-1:-1:-1;7056:12:297::2;::::0;-1:-1:-1;;7056:71:297:i:2;:::-;7138:30;7148:10;7160:7;7138:9;:30::i;:::-;7224:7;7212:10;-1:-1:-1::0;;;;;7184:63:297::2;7198:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;7184:63:297::2;;7233:13;;7184:63;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;1772:1:438;2872:7;:22;6542:712:297;;-1:-1:-1;;;;;6542:712:297:o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;23082:2:641;3435:39:133;;;23064:21:641;23121:2;23101:18;;;23094:30;23160:31;23140:18;;;23133:59;23209:18;;3435:39:133;22880:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;:::-;3255:271;;:::o;1600:264:458:-;1697:7;1732:34;1760:5;1732:27;:34::i;:::-;1724:5;:42;1716:98;;;;-1:-1:-1;;;1716:98:458;;23440:2:641;1716:98:458;;;23422:21:641;23479:2;23459:18;;;23452:30;23518:34;23498:18;;;23491:62;-1:-1:-1;;;23569:18:641;;;23562:41;23620:19;;1716:98:458;23238:407:641;1716:98:458;-1:-1:-1;;;;;;1831:19:458;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1600:264::o;4466:217:133:-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;23852:2:641;4594:36:133;;;23834:21:641;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:641;;;23903:56;23976:18;;4594:36:133;23650:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;5477:179:455:-;5610:39;5627:4;5633:2;5637:7;5610:39;;;;;;;;;;;;:16;:39::i;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:139;;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;2118:241:458:-;2193:7;2228:41;2022:10;:17;;1935:111;2228:41;2220:5;:49;2212:106;;;;-1:-1:-1;;;2212:106:458;;24207:2:641;2212:106:458;;;24189:21:641;24246:2;24226:18;;;24219:30;24285:34;24265:18;;;24258:62;-1:-1:-1;;;24336:18:641;;;24329:42;24388:19;;2212:106:458;24005:408:641;2212:106:458;2335:10;2346:5;2335:17;;;;;;;;:::i;:::-;;;;;;;;;2328:24;;2118:241;;;:::o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;3087:256:139:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;1216:124:156:-;1312:17;;;;:6;:17;;;;;:21;;1305:28;;1280:13;;1312:21;1305:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:124;;;:::o;2651:218:455:-;2723:7;2758:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2758:16:455;2792:19;2784:56;;;;-1:-1:-1;;;2784:56:455;;;;;;;:::i;2390:204::-;2462:7;-1:-1:-1;;;;;2489:19:455;;2481:73;;;;-1:-1:-1;;;2481:73:455;;24973:2:641;2481:73:455;;;24955:21:641;25012:2;24992:18;;;24985:30;25051:34;25031:18;;;25024:62;-1:-1:-1;;;25102:18:641;;;25095:39;25151:19;;2481:73:455;24771:405:641;2481:73:455;-1:-1:-1;;;;;;2571:16:455;;;;;:9;:16;;;;;;;2390:204::o;3240:1182:297:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;25383:2:641;3157:201:436;;;25365:21:641;25422:2;25402:18;;;25395:30;25461:34;25441:18;;;25434:62;-1:-1:-1;;;25512:18:641;;;25505:44;25566:19;;3157:201:436;25181:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3608:24:297::1;:22;:24::i;:::-;3642:41;3664:18;3642:21;:41::i;:::-;3693:29;3707:5;3714:7;3693:13;:29::i;:::-;3778:56;3803:17;3822:11;3778:24;:56::i;:::-;3844:26;3856:13;3844:11;:26::i;:::-;3880:31;3898:12;3880:17;:31::i;:::-;3922:45;787:4:133;3953:13:297::0;3922:10:::1;:45::i;:::-;3977:38;2444:24;4001:13;3977:10;:38::i;:::-;4025:40;-1:-1:-1::0;;;;;;;;;;;4051:13:297::1;4025:10;:40::i;:::-;4149:37;-1:-1:-1::0;;;;;;;;;;;4183:1:297::1;4149:10;:37::i;:::-;4266:35;2601:24;4298:1;4266:10;:35::i;:::-;4381:34;-1:-1:-1::0;;;;;;;;;;;4412:1:297::1;4381:10;:34::i;:::-;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;12870:36:641;;3553:14:436;;12858:2:641;12843:18;3553:14:436;;;;;;;3479:99;3101:483;3240:1182:297;;;;;;;:::o;7348:421::-;1815:1:438;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:438;;;;;;;:::i;:::-;1815:1;2699:7;:18;2601:24:297::1;4658:40;2601:24:::0;4685:12:::1;:10;:12::i;4658:40::-;7485:17:::2;;7474:8;:28;7466:57;;;::::0;-1:-1:-1;;;7466:57:297;;25997:2:641;7466:57:297::2;::::0;::::2;25979:21:641::0;26036:2;26016:18;;;26009:30;-1:-1:-1;;;26055:18:641;;;26048:46;26111:18;;7466:57:297::2;25795:340:641::0;7466:57:297::2;7541:42;7560:12;:10;:12::i;:::-;7574:8;7541:18;:42::i;:::-;7533:90;;;::::0;-1:-1:-1;;;7533:90:297;;26342:2:641;7533:90:297::2;::::0;::::2;26324:21:641::0;26381:2;26361:18;;;26354:30;26420:34;26400:18;;;26393:62;-1:-1:-1;;;26471:18:641;;;26464:33;26514:19;;7533:90:297::2;26140:399:641::0;7533:90:297::2;7634:15;7640:8;7634:5;:15::i;:::-;7659:36;7674:10;7686:8;7659:14;:36::i;:::-;7753:8;7741:10;-1:-1:-1::0;;;;;7711:51:297::2;7727:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;7711:51:297::2;;;;;;;;;;;-1:-1:-1::0;;1772:1:438;2872:7;:22;-1:-1:-1;7348:421:297:o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;3093:102:455:-;3149:13;3181:7;3174:14;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;4641:153:455:-;4735:52;4754:12;:10;:12::i;:::-;4768:8;4778;4735:18;:52::i;2206:211:133:-;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;5722:315:455:-;5890:41;5909:12;:10;:12::i;:::-;5923:7;5890:18;:41::i;:::-;5882:100;;;;-1:-1:-1;;;5882:100:455;;;;;;;:::i;:::-;5992:38;6006:4;6012:2;6016:7;6025:4;5992:13;:38::i;:::-;5722:315;;;;:::o;5642:129:297:-;5708:13;5740:24;5755:8;5740:14;:24::i;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;8019:314:297:-;8123:13;884:17:156;;;:6;:17;;;;;:23;8088::297;;884::156;-1:-1:-1;;;;;8191:18:297;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8180:29;;8225:9;8220:107;8244:5;8240:1;:9;8220:107;;;8287:29;8304:8;8314:1;8287:16;:29::i;:::-;8273:8;8282:1;8273:11;;;;;;;;:::i;:::-;;;;;;;;;;:43;8251:6;8256:1;8251:6;;:::i;:::-;;;8220:107;;;;8113:220;8019:314;;;:::o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4860:162:455:-;-1:-1:-1;;;;;4980:25:455;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162::o;1186:320:462:-;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;1266:255:458:-;1390:4;-1:-1:-1;;;;;;1413:61:458;;-1:-1:-1;;;1413:61:458;;:101;;;1478:36;1502:11;1478:23;:36::i;12173:133:455:-;12254:16;12262:7;12254;:16::i;:::-;12246:53;;;;-1:-1:-1;;;12246:53:455;;;;;;;:::i;9924:231:297:-;10073:14;10110:38;:36;:38::i;:::-;10103:45;;9924:231;:::o;11464:182:455:-;11538:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11538:29:455;-1:-1:-1;;;;;11538:29:455;;;;;;;;:24;;11591:34;11538:24;11591:25;:34::i;:::-;-1:-1:-1;;;;;11582:57:455;;;;;;;;;;;11464:182;;:::o;8600:127:297:-;8656:4;8679:41;8656:4;8707:12;:10;:12::i;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;7789:272:455:-;7882:4;7898:13;7914:34;7940:7;7914:25;:34::i;:::-;7898:50;;7977:5;-1:-1:-1;;;;;7966:16:455;:7;-1:-1:-1;;;;;7966:16:455;;:52;;;;7986:32;8003:5;8010:7;7986:16;:32::i;:::-;7966:87;;;;8046:7;-1:-1:-1;;;;;8022:31:455;:20;8034:7;8022:11;:20::i;:::-;-1:-1:-1;;;;;8022:31:455;;7958:96;7789:272;-1:-1:-1;;;;7789:272:455:o;10736:616::-;10901:4;-1:-1:-1;;;;;10863:42:455;:34;10889:7;10863:25;:34::i;:::-;-1:-1:-1;;;;;10863:42:455;;10855:92;;;;-1:-1:-1;;;10855:92:455;;27412:2:641;10855:92:455;;;27394:21:641;27451:2;27431:18;;;27424:30;27490:34;27470:18;;;27463:62;-1:-1:-1;;;27541:18:641;;;27534:35;27586:19;;10855:92:455;27210:401:641;10855:92:455;-1:-1:-1;;;;;10965:16:455;;10957:65;;;;-1:-1:-1;;;10957:65:455;;27818:2:641;10957:65:455;;;27800:21:641;27857:2;27837:18;;;27830:30;27896:34;27876:18;;;27869:62;-1:-1:-1;;;27947:18:641;;;27940:34;27991:19;;10957:65:455;27616:400:641;10957:65:455;11033:39;11054:4;11060:2;11064:7;11033:20;:39::i;:::-;11134:29;11151:1;11155:7;11134:8;:29::i;:::-;-1:-1:-1;;;;;11174:15:455;;;;;;:9;:15;;;;;:20;;11193:1;;11174:15;:20;;11193:1;;11174:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11204:13:455;;;;;;:9;:13;;;;;:18;;11221:1;;11204:13;:18;;11221:1;;11204:18;:::i;:::-;;;;-1:-1:-1;;11232:16:455;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11232:21:455;-1:-1:-1;;;;;11232:21:455;;;;;;;;;11269:27;;11232:16;;11269:27;;;;-1:-1:-1;;;;;;;;;;;11269:27:455;;3998:348;3928:418;;:::o;6152:514:133:-;6250:32;6268:4;6274:7;6250:17;:32::i;:::-;6245:415;;6441:43;6471:7;-1:-1:-1;;;;;6441:43:133;6481:2;6441:21;:43::i;:::-;6555:40;6585:4;6592:2;6555:21;:40::i;:::-;6350:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6350:267:133;;;;;;;;;;-1:-1:-1;;;6298:351:133;;;;;;;:::i;5557:495::-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;1147:340:157:-;1324:36;1338:7;;1347:12;1324:13;:36::i;:::-;1370:44;1386:13;1401:12;1370:15;:44::i;:::-;1424:56;1444:11;1465:4;1472:7;;1424:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:19;:56::i;:::-;1147:340;;;;;:::o;8391:108:455:-;8466:26;8476:2;8480:7;8466:26;;;;;;;;;;;;:9;:26::i;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;3255:271:133;;:::o;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;3617:36:139;;-1:-1:-1;;;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;4913:25:641;;;3711:46:139;;4901:2:641;4886:18;3711:46:139;;;;;;;3430:334;;:::o;1853:111:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1923:34:438::1;:32;:34::i;:::-;1853:111::o:0;470:194:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;1605:149:455:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1708:39:455::1;1732:5;1739:7;1708:23;:39::i;1273:185:116:-:0;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;9995:417:455:-;10054:13;10070:34;10096:7;10070:25;:34::i;:::-;10054:50;;10115:48;10136:5;10151:1;10155:7;10115:20;:48::i;:::-;10201:29;10218:1;10222:7;10201:8;:29::i;:::-;-1:-1:-1;;;;;10241:16:455;;;;;;:9;:16;;;;;:21;;10261:1;;10241:16;:21;;10261:1;;10241:21;:::i;:::-;;;;-1:-1:-1;;10279:16:455;;;;:7;:16;;;;;;10272:23;;-1:-1:-1;;;;;;10272:23:455;;;10311:36;10287:7;;10279:16;-1:-1:-1;;;;;10311:36:455;;;-1:-1:-1;;;;;;;;;;;10311:36:455;10279:16;;10311:36;3255:271:133;;:::o;1563:448:157:-;1649:13;884:17:156;;;:6;:17;;;;;:23;;;-1:-1:-1;;;;;1744:18:157;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1711:51;;1778:9;1773:119;1797:5;1793:1;:9;1773:119;;;1847:34;1864:13;1879:1;1847:16;:34::i;:::-;1826:15;1842:1;1826:18;;;;;;;;:::i;:::-;;;;;;;;;;:55;1804:6;1809:1;1804:6;;:::i;:::-;;;1773:119;;;;1902:28;1916:13;1902;:28::i;:::-;1941:63;1969:4;1976:10;1988:15;1941:19;:63::i;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;4913:25:641;;;4918:49:139;;4886:29;;4983:43;;4886:18:641;4983:43:139;;;;;;;;4671:362;;;:::o;11782:307:455:-;11932:8;-1:-1:-1;;;;;11923:17:455;:5;-1:-1:-1;;;;;11923:17:455;;;11915:55;;;;-1:-1:-1;;;11915:55:455;;31075:2:641;11915:55:455;;;31057:21:641;31114:2;31094:18;;;31087:30;-1:-1:-1;;;31133:18:641;;;31126:55;31198:18;;11915:55:455;30873:349:641;11915:55:455;-1:-1:-1;;;;;11980:25:455;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11980:46:455;;;;;;;;;;12041:41;;901::641;;;12041::455;;874:18:641;12041:41:455;761:187:641;1119:455:466;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;31429:2:641;1226:88:466;;;31411:21:641;31468:2;31448:18;;;31441:30;31507:34;31487:18;;;31480:62;-1:-1:-1;;;31558:18:641;;;31551:36;31604:19;;1226:88:466;31227:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;6898:305:455:-;7048:28;7058:4;7064:2;7068:7;7048:9;:28::i;:::-;7094:47;7117:4;7123:2;7127:7;7136:4;7094:22;:47::i;:::-;7086:110;;;;-1:-1:-1;;;7086:110:455;;;;;;;:::i;1987:344::-;2111:4;-1:-1:-1;;;;;;2146:51:455;;-1:-1:-1;;;2146:51:455;;:126;;-1:-1:-1;;;;;;;2213:59:455;;-1:-1:-1;;;2213:59:455;2146:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;2288:36:455;1060:166:471;7506:125:455;7571:4;7594:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7594:16:455;:30;;;7506:125::o;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;9924:231:297:o;1146:307:304:-;1058:401;:::o;9427:491:297:-;9566:45;9593:4;9599:2;9603:7;9566:26;:45::i;:::-;9724:34;-1:-1:-1;;;;;;;;;;;9755:1:297;9724:7;:34::i;:::-;9723:35;:57;;;;-1:-1:-1;;;;;;9762:18:297;;;;9723:57;:77;;;;-1:-1:-1;;;;;;9784:16:297;;;;9723:77;9719:193;;;9824:28;-1:-1:-1;;;;;;;;;;;9847:4:297;9824:7;:28::i;:::-;:58;;;;9856:26;-1:-1:-1;;;;;;;;;;;9879:2:297;9856:7;:26::i;:::-;9816:85;;;;-1:-1:-1;;;9816:85:297;;32534:2:641;9816:85:297;;;32516:21:641;32573:2;32553:18;;;32546:30;-1:-1:-1;;;32592:18:641;;;32585:44;32646:18;;9816:85:297;32332:338:641;1565:441:285;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;33018:2:641;1913:55:285;;;33000:21:641;;;33037:18;;;33030:30;33096:34;33076:18;;;33069:62;33148:18;;1913:55:285;32816:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;1450:469:156:-;1565:13;1604:15;1596:35;;;;-1:-1:-1;;;1596:35:156;;33379:2:641;1596:35:156;;;33361:21:641;33418:1;33398:18;;;33391:29;-1:-1:-1;;;33436:18:641;;;33429:37;33483:18;;1596:35:156;33177:330:641;1596:35:156;1649:17;;;;:6;:17;;;;;:23;:28;1641:50;;;;-1:-1:-1;;;1641:50:156;;33714:2:641;1641:50:156;;;33696:21:641;33753:1;33733:18;;;33726:29;-1:-1:-1;;;33771:18:641;;;33764:39;33820:18;;1641:50:156;33512:332:641;1641:50:156;1707:9;1702:163;1726:11;1722:1;:15;1702:163;;;1761:33;1777:13;;1791:1;1777:16;;;;;;;:::i;:::-;;;;;;1761:33;;;;;;;;;;:::i;:::-;:15;:33::i;:::-;1838:13;;1852:1;1838:16;;;;;;;:::i;:::-;1808:17;;;;:6;:17;;;;;;;;:27;;;:24;;;:27;;;;1838:16;;;;;;;;;1808:27;-1:-1:-1;1808:46:156;1838:16;1808:27;:46;:::i;:::-;-1:-1:-1;1739:6:156;;-1:-1:-1;1744:1:156;1739:6;;:::i;:::-;;;1702:163;;;-1:-1:-1;1875:17:156;;;;:6;:17;;;;;;:37;-1:-1:-1;;1450:469:156:o;4981:118::-;5064:17;;;;:6;:17;;;;;;;;:28;;;;:21;;;;;:28;;;;:::i;2895:845:157:-;3025:24;;3059:314;3083:7;:14;3079:1;:18;3059:314;;;397:42:277;-1:-1:-1;;;;;3125:60:157;:7;3133:1;3125:10;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;3125:60:157;;:84;;;;-1:-1:-1;;;;;;3189:20:157;;3204:4;3189:20;3125:84;3121:242;;;3249:7;3257:1;3249:10;;;;;;;;:::i;:::-;;;;;;;:22;;;3229:42;;;;;:::i;:::-;;;3121:242;;;3310:38;3325:5;3332:3;3337:7;3345:1;3337:10;;;;;;;;:::i;:::-;;;;;;;3310:14;:38::i;:::-;3099:6;3104:1;3099:6;;:::i;:::-;;;3059:314;;;-1:-1:-1;3386:21:157;;3382:352;;3451:218;;;;;;;;397:42:277;3451:218:157;;-1:-1:-1;3451:218:157;;;;;;;;;;;;;;;;;;;3683:40;3698:5;3705:3;3451:218;3683:14;:40::i;8720:309:455:-;8844:18;8850:2;8854:7;8844:5;:18::i;:::-;8893:53;8924:1;8928:2;8932:7;8941:4;8893:22;:53::i;:::-;8872:150;;;;-1:-1:-1;;;8872:150:455;;;;;;;:::i;5036:168:133:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;1970:109:438:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1772:1:438::1;2050:7;:22:::0;1970:109::o;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;1760:160:455::0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1873:13:455;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1896:17:455;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;5172:220:156:-:0;5238:9;5233:116;5257:17;;;;:6;:17;;;;;:23;5253:27;;5233:116;;;5311:17;;;;:6;:17;;;;;;;;:27;;;:24;;:27;;;;;5304:34;;-1:-1:-1;;;;;;5304:34:156;;;;;;;;;;;;;;;;5282:6;;5336:1;5282:6;:::i;:::-;;;5233:116;;;-1:-1:-1;5384:1:156;5358:17;;;:6;:17;;;;;:27;5172:220::o;6622:742:462:-;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;12858:853:455:-;13007:4;13027:15;:2;-1:-1:-1;;;;;13027:13:455;;:15::i;:::-;13023:682;;;13089:2;-1:-1:-1;;;;;13062:47:455;;13110:12;:10;:12::i;:::-;13124:4;13130:7;13139:4;13062:82;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13062:82:455;;;;;;;;-1:-1:-1;;13062:82:455;;;;;;;;;;;;:::i;:::-;;;13058:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13322:13:455;;13318:321;;13364:60;;-1:-1:-1;;;13364:60:455;;;;;;;:::i;13318:321::-;13591:6;13585:13;13576:6;13572:2;13568:15;13561:38;13058:595;-1:-1:-1;;;;;;13194:62:455;-1:-1:-1;;;13194:62:455;;-1:-1:-1;13187:69:455;;13023:682;-1:-1:-1;13690:4:455;13683:11;;2955:572:458;-1:-1:-1;;;;;3154:18:458;;3150:183;;3188:40;3220:7;4347:10;:17;;4320:24;;;;:15;:24;;;;;:44;;;4374:24;;;;;;;;;;;;4244:161;3188:40;3150:183;;;3257:2;-1:-1:-1;;;;;3249:10:458;:4;-1:-1:-1;;;;;3249:10:458;;3245:88;;3275:47;3308:4;3314:7;3275:32;:47::i;:::-;-1:-1:-1;;;;;3346:16:458;;3342:179;;3378:45;3415:7;3378:36;:45::i;3342:179::-;3450:4;-1:-1:-1;;;;;3444:10:458;:2;-1:-1:-1;;;;;3444:10:458;;3440:81;;3470:40;3498:2;3502:7;3470:27;:40::i;3593:1300:156:-;3687:16;3667:6;:16;;;:36;;;;;;;;:::i;:::-;;3663:1224;;;3731:20;;3723:59;;-1:-1:-1;;;3723:59:156;;-1:-1:-1;;;;;3723:47:156;;;;;;:59;;3771:10;;3723:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3723:59:156;;;;;;;;-1:-1:-1;;3723:59:156;;;;;;;;;;;;:::i;:::-;;;3719:220;;3904:20;;-1:-1:-1;;;3904:20:156;;;;;;;:::i;3719:220::-;3837:12;3829:35;;;;-1:-1:-1;;;3829:35:156;;;;;;;:::i;3663:1224::-;3979:17;3959:6;:16;;;:37;;;;;;;;:::i;:::-;;3955:932;;;4024:20;;4016:59;;-1:-1:-1;;;4016:59:156;;-1:-1:-1;;;;;4016:47:156;;;;;;:59;;4064:10;;4016:59;;;:::i;3955:932::-;4274:15;4254:6;:16;;;:35;;;;;;;;:::i;:::-;;4250:637;;;4309:20;;-1:-1:-1;;;;;4309:56:156;397:42:277;4309:56:156;4305:572;;4427:20;;4419:59;;-1:-1:-1;;;4419:59:156;;-1:-1:-1;;;;;4419:47:156;;;;;;:59;;4467:10;;4419:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4419:59:156;;;;;;;;-1:-1:-1;;4419:59:156;;;;;;;;;;;;:::i;:::-;;;4415:448;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;1133:173:132;:::o;4415:448:156:-;4538:12;4537:13;4529:36;;;;-1:-1:-1;;;4529:36:156;;;;;;;:::i;:::-;4600:20;;4592:59;;-1:-1:-1;;;4592:59:156;;-1:-1:-1;;;;;4592:47:156;;;;;;:59;;4640:10;;4592:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;4592:59:156;;;;;;;;-1:-1:-1;;4592:59:156;;;;;;;;;;;;:::i;:::-;;;4588:218;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;3255:271:133;;:::o;4588:218:156:-;4716:13;4715:14;4707:37;;;;-1:-1:-1;;;4707:37:156;;;;;;;:::i;2085:729:157:-;2231:15;2211:6;:16;;;:35;;;;;;;;:::i;:::-;;2207:601;;;2262:215;2327:6;:20;;;2365:5;2388:3;2409:6;:18;;;2445;2262:47;:215::i;2207:601::-;2518:16;2498:6;:16;;;:36;;;;;;;;:::i;:::-;;2494:314;;;2558:20;;2609:14;;;;;2550:74;;-1:-1:-1;;;2550:74:157;;-1:-1:-1;;;;;2550:46:157;;;;;;:74;;2597:5;;2604:3;;2550:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3998:348:455;3928:418;;:::o;2494:314:157:-;2665:17;2645:6;:16;;;:37;;;;;;;;:::i;:::-;;2641:167;;;2707:20;;2758:14;;;;;2774:18;;;;2698:99;;-1:-1:-1;;;2698:99:157;;-1:-1:-1;;;;;38095:15:641;;;2698:99:157;;;38077:34:641;38147:15;;;38127:18;;;38120:43;38179:18;;;38172:34;;;;38222:18;;;38215:34;;;;38057:3;38265:19;;;38258:32;-1:-1:-1;38306:19:641;;;38299:30;2698:47:157;;;;;;38346:19:641;;2698:99:157;37744:627:641;9351:427:455;-1:-1:-1;;;;;9430:16:455;;9422:61;;;;-1:-1:-1;;;9422:61:455;;38578:2:641;9422:61:455;;;38560:21:641;;;38597:18;;;38590:30;38656:34;38636:18;;;38629:62;38708:18;;9422:61:455;38376:356:641;9422:61:455;9502:16;9510:7;9502;:16::i;:::-;9501:17;9493:58;;;;-1:-1:-1;;;9493:58:455;;38939:2:641;9493:58:455;;;38921:21:641;38978:2;38958:18;;;38951:30;-1:-1:-1;;;38997:18:641;;;38990:58;39065:18;;9493:58:455;38737:352:641;9493:58:455;9562:45;9591:1;9595:2;9599:7;9562:20;:45::i;:::-;-1:-1:-1;;;;;9618:13:455;;;;;;:9;:13;;;;;:18;;9635:1;;9618:13;:18;;9635:1;;9618:18;:::i;:::-;;;;-1:-1:-1;;9646:16:455;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9646:21:455;-1:-1:-1;;;;;9646:21:455;;;;;;;;9683:33;;9646:16;;;-1:-1:-1;;;;;;;;;;;9683:33:455;9646:16;;9683:33;3255:271:133;;:::o;5022:981:458:-;5284:22;5345:1;5309:33;5337:4;5309:27;:33::i;:::-;:37;;;;:::i;:::-;5356:18;5377:26;;;:17;:26;;;;;;5284:62;;-1:-1:-1;5507:28:458;;;5503:323;;-1:-1:-1;;;;;5573:18:458;;5551:19;5573:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5622:30;;;;;;:44;;;5738:30;;:17;:30;;;;;:43;;;5503:323;-1:-1:-1;5919:26:458;;;;:17;:26;;;;;;;;5912:33;;;-1:-1:-1;;;;;5962:18:458;;;;;:12;:18;;;;;:34;;;;;;;5955:41;5022:981::o;6291:1061::-;6565:10;:17;6540:22;;6565:21;;6585:1;;6565:21;:::i;:::-;6596:18;6617:24;;;:15;:24;;;;;;6985:10;:26;;6540:46;;-1:-1:-1;6617:24:458;;6540:46;;6985:26;;;;;;:::i;:::-;;;;;;;;;6963:48;;7047:11;7022:10;7033;7022:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;7126:28;;;:15;:28;;;;;;;:41;;;7295:24;;;;;7288:31;7329:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6362:990;;;6291:1061;:::o;3821:228::-;3905:14;3922:31;3950:2;3922:27;:31::i;:::-;-1:-1:-1;;;;;3963:16:458;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;4007:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3821:228:458:o;968:1021:277:-;1167:12;1163:49;;1195:7;;1163:49;-1:-1:-1;;;;;1226:25:277;;397:42;1226:25;1222:761;;;-1:-1:-1;;;;;1271:22:277;;1288:4;1271:22;1267:626;;;1401:44;;-1:-1:-1;;;1401:44:277;;;;;4913:25:641;;;-1:-1:-1;;;;;1401:35:277;;;;;4886:18:641;;1401:44:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:69;1498:3;1503:7;1512:19;1463:34;:69::i;:::-;1222:761;;1267:626;-1:-1:-1;;;;;1557:20:277;;1572:4;1557:20;1553:340;;;1665:9;1654:7;:20;1646:52;;;;-1:-1:-1;;;1646:52:277;;39428:2:641;1646:52:277;;;39410:21:641;39467:2;39447:18;;;39440:30;-1:-1:-1;;;39486:18:641;;;39479:49;39545:18;;1646:52:277;39226:343:641;1646:52:277;1722:19;-1:-1:-1;;;;;1716:34:277;;1759:7;1716:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:761;;1553:340;1809:69;1844:3;1849:7;1858:19;1809:34;:69::i;1222:761::-;1923:49;1941:9;1952:5;1959:3;1964:7;1923:17;:49::i;2905:469::-;3157:12;3175:2;-1:-1:-1;;;;;3175:7:277;3191:5;3175:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:46;;;3217:7;3212:156;;3246:19;-1:-1:-1;;;;;3240:34:277;;3283:5;3240:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3306:51:277;;-1:-1:-1;;;;;;;;3306:40:277;;;-1:-1:-1;3347:2:277;3351:5;3306:40;:51::i;2062:396::-;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;:::-;2269:183;;;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1078:96;1098:5;1128:27;;;1157:4;1163:2;1167:5;1105:68;;;;;;;;;;:::i;3235:706::-;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;39986:2:641;3839:85:321;;;39968:21:641;40025:2;40005:18;;;39998:30;40064:34;40044:18;;;40037:62;-1:-1:-1;;;40115:18:641;;;40108:40;40165:19;;3839:85:321;39784:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;40804:2:641;5194:60:281;;;40786:21:641;40843:2;40823:18;;;40816:30;40882:31;40862:18;;;40855:59;40931:18;;5194:60:281;40602:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:131:641;-1:-1:-1;;;;;;449:32:641;;439:43;;429:71;;496:1;493;486:12;511:245;569:6;622:2;610:9;601:7;597:23;593:32;590:52;;;638:1;635;628:12;590:52;677:9;664:23;696:30;720:5;696:30;:::i;953:258::-;1025:1;1035:113;1049:6;1046:1;1043:13;1035:113;;;1125:11;;;1119:18;1106:11;;;1099:39;1071:2;1064:10;1035:113;;;1166:6;1163:1;1160:13;1157:48;;;-1:-1:-1;;1201:1:641;1183:16;;1176:27;953:258::o;1216:::-;1258:3;1296:5;1290:12;1323:6;1318:3;1311:19;1339:63;1395:6;1388:4;1383:3;1379:14;1372:4;1365:5;1361:16;1339:63;:::i;:::-;1456:2;1435:15;-1:-1:-1;;1431:29:641;1422:39;;;;1463:4;1418:50;;1216:258;-1:-1:-1;;1216:258:641:o;1479:220::-;1628:2;1617:9;1610:21;1591:4;1648:45;1689:2;1678:9;1674:18;1666:6;1648:45;:::i;1704:180::-;1763:6;1816:2;1804:9;1795:7;1791:23;1787:32;1784:52;;;1832:1;1829;1822:12;1784:52;-1:-1:-1;1855:23:641;;1704:180;-1:-1:-1;1704:180:641:o;2097:131::-;-1:-1:-1;;;;;2172:31:641;;2162:42;;2152:70;;2218:1;2215;2208:12;2233:134;2301:20;;2330:31;2301:20;2330:31;:::i;:::-;2233:134;;;:::o;2372:315::-;2440:6;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2556:9;2543:23;2575:31;2600:5;2575:31;:::i;:::-;2625:5;2677:2;2662:18;;;;2649:32;;-1:-1:-1;;;2372:315:641:o;2692:247::-;2751:6;2804:2;2792:9;2783:7;2779:23;2775:32;2772:52;;;2820:1;2817;2810:12;2772:52;2859:9;2846:23;2878:31;2903:5;2878:31;:::i;2944:127::-;3005:10;3000:3;2996:20;2993:1;2986:31;3036:4;3033:1;3026:15;3060:4;3057:1;3050:15;3076:249;3186:2;3167:13;;-1:-1:-1;;3163:27:641;3151:40;;-1:-1:-1;;;;;3206:34:641;;3242:22;;;3203:62;3200:88;;;3268:18;;:::i;:::-;3304:2;3297:22;-1:-1:-1;;3076:249:641:o;3330:555::-;3372:5;3425:3;3418:4;3410:6;3406:17;3402:27;3392:55;;3443:1;3440;3433:12;3392:55;3479:6;3466:20;-1:-1:-1;;;;;3501:2:641;3498:26;3495:52;;;3527:18;;:::i;:::-;3576:2;3570:9;3588:67;3643:2;3624:13;;-1:-1:-1;;3620:27:641;3649:4;3616:38;3570:9;3588:67;:::i;:::-;3679:2;3671:6;3664:18;3725:3;3718:4;3713:2;3705:6;3701:15;3697:26;3694:35;3691:55;;;3742:1;3739;3732:12;3691:55;3806:2;3799:4;3791:6;3787:17;3780:4;3772:6;3768:17;3755:54;3853:1;3829:15;;;3846:4;3825:26;3818:37;;;;3833:6;3330:555;-1:-1:-1;;;3330:555:641:o;3890:665::-;3985:6;3993;4001;4009;4062:3;4050:9;4041:7;4037:23;4033:33;4030:53;;;4079:1;4076;4069:12;4030:53;4118:9;4105:23;4137:31;4162:5;4137:31;:::i;:::-;4187:5;-1:-1:-1;4244:2:641;4229:18;;4216:32;4257:33;4216:32;4257:33;:::i;:::-;4309:7;-1:-1:-1;4363:2:641;4348:18;;4335:32;;-1:-1:-1;4418:2:641;4403:18;;4390:32;-1:-1:-1;;;;;4434:30:641;;4431:50;;;4477:1;4474;4467:12;4431:50;4500:49;4541:7;4532:6;4521:9;4517:22;4500:49;:::i;:::-;4490:59;;;3890:665;;;;;;;:::o;4949:248::-;5017:6;5025;5078:2;5066:9;5057:7;5053:23;5049:32;5046:52;;;5094:1;5091;5084:12;5046:52;-1:-1:-1;;5117:23:641;;;5187:2;5172:18;;;5159:32;;-1:-1:-1;4949:248:641:o;5202:127::-;5263:10;5258:3;5254:20;5251:1;5244:31;5294:4;5291:1;5284:15;5318:4;5315:1;5308:15;5334:237;5415:1;5408:5;5405:12;5395:143;;5460:10;5455:3;5451:20;5448:1;5441:31;5495:4;5492:1;5485:15;5523:4;5520:1;5513:15;5395:143;5547:18;;5334:237::o;5576:344::-;5651:12;;-1:-1:-1;;;;;5647:38:641;5635:51;;5732:4;5721:16;;;5715:23;;5747:55;;5787:14;;5715:23;5747:55;:::i;:::-;-1:-1:-1;5851:4:641;5840:16;;;5834:23;5818:14;;;5811:47;5907:4;5896:16;;;5890:23;5874:14;;5867:47;5576:344::o;5925:243::-;6107:3;6092:19;;6120:42;6096:9;6144:6;6120:42;:::i;6173:456::-;6250:6;6258;6266;6319:2;6307:9;6298:7;6294:23;6290:32;6287:52;;;6335:1;6332;6325:12;6287:52;6374:9;6361:23;6393:31;6418:5;6393:31;:::i;:::-;6443:5;-1:-1:-1;6500:2:641;6485:18;;6472:32;6513:33;6472:32;6513:33;:::i;:::-;6173:456;;6565:7;;-1:-1:-1;;;6619:2:641;6604:18;;;;6591:32;;6173:456::o;7001:348::-;7053:8;7063:6;7117:3;7110:4;7102:6;7098:17;7094:27;7084:55;;7135:1;7132;7125:12;7084:55;-1:-1:-1;7158:20:641;;-1:-1:-1;;;;;7190:30:641;;7187:50;;;7233:1;7230;7223:12;7187:50;7270:4;7262:6;7258:17;7246:29;;7322:3;7315:4;7306:6;7298;7294:19;7290:30;7287:39;7284:59;;;7339:1;7336;7329:12;7284:59;7001:348;;;;;:::o;7354:1010::-;7496:6;7504;7512;7520;7528;7581:2;7569:9;7560:7;7556:23;7552:32;7549:52;;;7597:1;7594;7587:12;7549:52;7637:9;7624:23;-1:-1:-1;;;;;7707:2:641;7699:6;7696:14;7693:34;;;7723:1;7720;7713:12;7693:34;7761:6;7750:9;7746:22;7736:32;;7806:7;7799:4;7795:2;7791:13;7787:27;7777:55;;7828:1;7825;7818:12;7777:55;7868:2;7855:16;7894:2;7886:6;7883:14;7880:34;;;7910:1;7907;7900:12;7880:34;7965:7;7958:4;7948:6;7945:1;7941:14;7937:2;7933:23;7929:34;7926:47;7923:67;;;7986:1;7983;7976:12;7923:67;8017:4;8009:13;;;;-1:-1:-1;8041:6:641;-1:-1:-1;8085:20:641;;;8072:34;;8118:16;;;8115:36;;;8147:1;8144;8137:12;8115:36;;8186:61;8239:7;8228:8;8217:9;8213:24;8186:61;:::i;:::-;8266:8;;-1:-1:-1;8160:87:641;-1:-1:-1;8320:38:641;;-1:-1:-1;8354:2:641;8339:18;;8320:38;:::i;:::-;8310:48;;7354:1010;;;;;;;;:::o;8369:274::-;-1:-1:-1;;;;;8561:32:641;;;;8543:51;;8625:2;8610:18;;8603:34;8531:2;8516:18;;8369:274::o;8648:315::-;8716:6;8724;8777:2;8765:9;8756:7;8752:23;8748:32;8745:52;;;8793:1;8790;8783:12;8745:52;8829:9;8816:23;8806:33;;8889:2;8878:9;8874:18;8861:32;8902:31;8927:5;8902:31;:::i;:::-;8952:5;8942:15;;;8648:315;;;;;:::o;9258:183::-;9318:4;-1:-1:-1;;;;;9343:6:641;9340:30;9337:56;;;9373:18;;:::i;:::-;-1:-1:-1;9418:1:641;9414:14;9430:4;9410:25;;9258:183::o;9446:799::-;9500:5;9553:3;9546:4;9538:6;9534:17;9530:27;9520:55;;9571:1;9568;9561:12;9520:55;9607:6;9594:20;9633:4;9656:43;9696:2;9656:43;:::i;:::-;9728:2;9722:9;9740:31;9768:2;9760:6;9740:31;:::i;:::-;9806:18;;;9898:1;9894:10;;;;9882:23;;9878:32;;;9840:15;;;;-1:-1:-1;9922:15:641;;;9919:35;;;9950:1;9947;9940:12;9919:35;9986:2;9978:6;9974:15;9998:217;10014:6;10009:3;10006:15;9998:217;;;10094:3;10081:17;10111:31;10136:5;10111:31;:::i;:::-;10155:18;;10193:12;;;;10031;;9998:217;;;-1:-1:-1;10233:6:641;9446:799;-1:-1:-1;;;;;;9446:799:641:o;10250:1186::-;10418:6;10426;10434;10442;10450;10458;10466;10519:3;10507:9;10498:7;10494:23;10490:33;10487:53;;;10536:1;10533;10526:12;10487:53;10559:29;10578:9;10559:29;:::i;:::-;10549:39;;10639:2;10628:9;10624:18;10611:32;-1:-1:-1;;;;;10703:2:641;10695:6;10692:14;10689:34;;;10719:1;10716;10709:12;10689:34;10742:49;10783:7;10774:6;10763:9;10759:22;10742:49;:::i;:::-;10732:59;;10844:2;10833:9;10829:18;10816:32;10800:48;;10873:2;10863:8;10860:16;10857:36;;;10889:1;10886;10879:12;10857:36;10912:51;10955:7;10944:8;10933:9;10929:24;10912:51;:::i;:::-;10902:61;;11016:2;11005:9;11001:18;10988:32;10972:48;;11045:2;11035:8;11032:16;11029:36;;;11061:1;11058;11051:12;11029:36;11084:51;11127:7;11116:8;11105:9;11101:24;11084:51;:::i;:::-;11074:61;;11188:3;11177:9;11173:19;11160:33;11144:49;;11218:2;11208:8;11205:16;11202:36;;;11234:1;11231;11224:12;11202:36;;11257:63;11312:7;11301:8;11290:9;11286:24;11257:63;:::i;:::-;11247:73;;;11339:39;11373:3;11362:9;11358:19;11339:39;:::i;:::-;11329:49;;11425:3;11414:9;11410:19;11397:33;11387:43;;10250:1186;;;;;;;;;;:::o;12014:321::-;12083:6;12136:2;12124:9;12115:7;12111:23;12107:32;12104:52;;;12152:1;12149;12142:12;12104:52;12192:9;12179:23;-1:-1:-1;;;;;12217:6:641;12214:30;12211:50;;;12257:1;12254;12247:12;12211:50;12280:49;12321:7;12312:6;12301:9;12297:22;12280:49;:::i;12340:383::-;12417:6;12425;12433;12486:2;12474:9;12465:7;12461:23;12457:32;12454:52;;;12502:1;12499;12492:12;12454:52;12538:9;12525:23;12515:33;;12598:2;12587:9;12583:18;12570:32;12611:31;12636:5;12611:31;:::i;12917:118::-;13003:5;12996:13;12989:21;12982:5;12979:32;12969:60;;13025:1;13022;13015:12;13040:382;13105:6;13113;13166:2;13154:9;13145:7;13141:23;13137:32;13134:52;;;13182:1;13179;13172:12;13134:52;13221:9;13208:23;13240:31;13265:5;13240:31;:::i;:::-;13290:5;-1:-1:-1;13347:2:641;13332:18;;13319:32;13360:30;13319:32;13360:30;:::i;13427:626::-;13524:6;13532;13585:2;13573:9;13564:7;13560:23;13556:32;13553:52;;;13601:1;13598;13591:12;13553:52;13641:9;13628:23;-1:-1:-1;;;;;13711:2:641;13703:6;13700:14;13697:34;;;13727:1;13724;13717:12;13697:34;13765:6;13754:9;13750:22;13740:32;;13810:7;13803:4;13799:2;13795:13;13791:27;13781:55;;13832:1;13829;13822:12;13781:55;13872:2;13859:16;13898:2;13890:6;13887:14;13884:34;;;13914:1;13911;13904:12;13884:34;13967:7;13962:2;13952:6;13949:1;13945:14;13941:2;13937:23;13933:32;13930:45;13927:65;;;13988:1;13985;13978:12;13927:65;14019:2;14011:11;;;;;14041:6;;-1:-1:-1;13427:626:641;;-1:-1:-1;;;;13427:626:641:o;14058:801::-;14218:4;14247:2;14287;14276:9;14272:18;14317:2;14306:9;14299:21;14340:6;14375;14369:13;14406:6;14398;14391:22;14444:2;14433:9;14429:18;14422:25;;14506:2;14496:6;14493:1;14489:14;14478:9;14474:30;14470:39;14456:53;;14544:2;14536:6;14532:15;14565:1;14575:255;14589:6;14586:1;14583:13;14575:255;;;14682:2;14678:7;14666:9;14658:6;14654:22;14650:36;14645:3;14638:49;14710:40;14743:6;14734;14728:13;14710:40;:::i;:::-;14700:50;-1:-1:-1;14808:12:641;;;;14773:15;;;;14611:1;14604:9;14575:255;;;-1:-1:-1;14847:6:641;;14058:801;-1:-1:-1;;;;;;;14058:801:641:o;14864:724::-;14918:5;14971:3;14964:4;14956:6;14952:17;14948:27;14938:55;;14989:1;14986;14979:12;14938:55;15025:6;15012:20;15051:4;15074:43;15114:2;15074:43;:::i;:::-;15146:2;15140:9;15158:31;15186:2;15178:6;15158:31;:::i;:::-;15224:18;;;15316:1;15312:10;;;;15300:23;;15296:32;;;15258:15;;;;-1:-1:-1;15340:15:641;;;15337:35;;;15368:1;15365;15358:12;15337:35;15404:2;15396:6;15392:15;15416:142;15432:6;15427:3;15424:15;15416:142;;;15498:17;;15486:30;;15536:12;;;;15449;;15416:142;;15593:1071;15747:6;15755;15763;15771;15779;15832:3;15820:9;15811:7;15807:23;15803:33;15800:53;;;15849:1;15846;15839:12;15800:53;15888:9;15875:23;15907:31;15932:5;15907:31;:::i;:::-;15957:5;-1:-1:-1;16014:2:641;15999:18;;15986:32;16027:33;15986:32;16027:33;:::i;:::-;16079:7;-1:-1:-1;16137:2:641;16122:18;;16109:32;-1:-1:-1;;;;;16190:14:641;;;16187:34;;;16217:1;16214;16207:12;16187:34;16240:61;16293:7;16284:6;16273:9;16269:22;16240:61;:::i;:::-;16230:71;;16354:2;16343:9;16339:18;16326:32;16310:48;;16383:2;16373:8;16370:16;16367:36;;;16399:1;16396;16389:12;16367:36;16422:63;16477:7;16466:8;16455:9;16451:24;16422:63;:::i;:::-;16412:73;;16538:3;16527:9;16523:19;16510:33;16494:49;;16568:2;16558:8;16555:16;16552:36;;;16584:1;16581;16574:12;16552:36;;16607:51;16650:7;16639:8;16628:9;16624:24;16607:51;:::i;:::-;16597:61;;;15593:1071;;;;;;;;:::o;16669:699::-;16888:2;16940:21;;;17010:13;;16913:18;;;17032:22;;;16859:4;;16888:2;17111:15;;;;17085:2;17070:18;;;16859:4;17154:188;17168:6;17165:1;17162:13;17154:188;;;17217:43;17256:3;17247:6;17241:13;17217:43;:::i;:::-;17317:15;;;;17289:4;17280:14;;;;;17190:1;17183:9;17154:188;;;-1:-1:-1;17359:3:641;;16669:699;-1:-1:-1;;;;;;16669:699:641:o;17373:388::-;17441:6;17449;17502:2;17490:9;17481:7;17477:23;17473:32;17470:52;;;17518:1;17515;17508:12;17470:52;17557:9;17544:23;17576:31;17601:5;17576:31;:::i;:::-;17626:5;-1:-1:-1;17683:2:641;17668:18;;17655:32;17696:33;17655:32;17696:33;:::i;17766:734::-;17870:6;17878;17886;17894;17902;17955:3;17943:9;17934:7;17930:23;17926:33;17923:53;;;17972:1;17969;17962:12;17923:53;18011:9;17998:23;18030:31;18055:5;18030:31;:::i;:::-;18080:5;-1:-1:-1;18137:2:641;18122:18;;18109:32;18150:33;18109:32;18150:33;:::i;:::-;18202:7;-1:-1:-1;18256:2:641;18241:18;;18228:32;;-1:-1:-1;18307:2:641;18292:18;;18279:32;;-1:-1:-1;18362:3:641;18347:19;;18334:33;-1:-1:-1;;;;;18379:30:641;;18376:50;;;18422:1;18419;18412:12;18376:50;18445:49;18486:7;18477:6;18466:9;18462:22;18445:49;:::i;18505:380::-;18584:1;18580:12;;;;18627;;;18648:61;;18702:4;18694:6;18690:17;18680:27;;18648:61;18755:2;18747:6;18744:14;18724:18;18721:38;18718:161;;;18801:10;18796:3;18792:20;18789:1;18782:31;18836:4;18833:1;18826:15;18864:4;18861:1;18854:15;19723:338;19925:2;19907:21;;;19964:2;19944:18;;;19937:30;-1:-1:-1;;;19998:2:641;19983:18;;19976:44;20052:2;20037:18;;19723:338::o;20066:410::-;20268:2;20250:21;;;20307:2;20287:18;;;20280:30;20346:34;20341:2;20326:18;;20319:62;-1:-1:-1;;;20412:2:641;20397:18;;20390:44;20466:3;20451:19;;20066:410::o;20481:355::-;20683:2;20665:21;;;20722:2;20702:18;;;20695:30;20761:33;20756:2;20741:18;;20734:61;20827:2;20812:18;;20481:355::o;20841:127::-;20902:10;20897:3;20893:20;20890:1;20883:31;20933:4;20930:1;20923:15;20957:4;20954:1;20947:15;20973:127;21034:10;21029:3;21025:20;21022:1;21015:31;21065:4;21062:1;21055:15;21089:4;21086:1;21079:15;21105:128;21145:3;21176:1;21172:6;21169:1;21166:13;21163:39;;;21182:18;;:::i;:::-;-1:-1:-1;21218:9:641;;21105:128::o;21238:108::-;21320:1;21313:5;21310:12;21300:40;;21336:1;21333;21326:12;21351:1129;21582:2;21634:21;;;21607:18;;;21690:22;;;21553:4;;21731:2;21749:18;;;21790:6;21553:4;21824:630;21838:6;21835:1;21832:13;21824:630;;;21913:6;21900:20;21933:31;21958:5;21933:31;:::i;:::-;-1:-1:-1;;;;;21989:31:641;21977:44;;22062:15;;;22049:29;22091:40;22049:29;22091:40;:::i;:::-;22144:48;22188:2;22183:3;22179:12;22170:7;22144:48;:::i;:::-;-1:-1:-1;22239:15:641;;;22226:29;22212:12;;;22205:51;22279:4;22330:15;;;22317:29;22303:12;;;22296:51;22370:4;22394:12;;;;22429:15;;;;21860:1;21853:9;21824:630;;;-1:-1:-1;22471:3:641;;21351:1129;-1:-1:-1;;;;;;;21351:1129:641:o;22485:168::-;22525:7;22591:1;22587;22583:6;22579:14;22576:1;22573:21;22568:1;22561:9;22554:17;22550:45;22547:71;;;22598:18;;:::i;:::-;-1:-1:-1;22638:9:641;;22485:168::o;22658:217::-;22698:1;22724;22714:132;;22768:10;22763:3;22759:20;22756:1;22749:31;22803:4;22800:1;22793:15;22831:4;22828:1;22821:15;22714:132;-1:-1:-1;22860:9:641;;22658:217::o;24418:348::-;24620:2;24602:21;;;24659:2;24639:18;;;24632:30;-1:-1:-1;;;24693:2:641;24678:18;;24671:54;24757:2;24742:18;;24418:348::o;26544:521::-;26621:4;26627:6;26687:11;26674:25;26781:2;26777:7;26766:8;26750:14;26746:29;26742:43;26722:18;26718:68;26708:96;;26800:1;26797;26790:12;26708:96;26827:33;;26879:20;;;-1:-1:-1;;;;;;26911:30:641;;26908:50;;;26954:1;26951;26944:12;26908:50;26987:4;26975:17;;-1:-1:-1;27018:14:641;27014:27;;;27004:38;;27001:58;;;27055:1;27052;27045:12;27070:135;27109:3;-1:-1:-1;;27130:17:641;;27127:43;;;27150:18;;:::i;:::-;-1:-1:-1;27197:1:641;27186:13;;27070:135::o;28021:125::-;28061:4;28089:1;28086;28083:8;28080:34;;;28094:18;;:::i;:::-;-1:-1:-1;28131:9:641;;28021:125::o;28151:784::-;-1:-1:-1;;;28557:3:641;28550:36;28532:3;28615:6;28609:13;28631:62;28686:6;28681:2;28676:3;28672:12;28665:4;28657:6;28653:17;28631:62;:::i;:::-;-1:-1:-1;;;28752:2:641;28712:16;;;28744:11;;;28737:40;28802:13;;28824:63;28802:13;28873:2;28865:11;;28858:4;28846:17;;28824:63;:::i;:::-;28907:17;28926:2;28903:26;;28151:784;-1:-1:-1;;;;28151:784:641:o;28940:::-;29023:6;29076:3;29064:9;29055:7;29051:23;29047:33;29044:53;;;29093:1;29090;29083:12;29044:53;29126:2;29120:9;29168:3;29160:6;29156:16;29238:6;29226:10;29223:22;-1:-1:-1;;;;;29190:10:641;29187:34;29184:62;29181:88;;;29249:18;;:::i;:::-;29285:2;29278:22;29322:23;;29354:31;29322:23;29354:31;:::i;:::-;29394:21;;29467:2;29452:18;;29439:32;29480:40;29439:32;29480:40;:::i;:::-;29548:2;29536:15;;29529:32;29622:2;29607:18;;;29594:32;29577:15;;;29570:57;29688:2;29673:18;;;29660:32;29643:15;;;29636:57;;;;-1:-1:-1;29540:6:641;28940:784;-1:-1:-1;28940:784:641:o;29729:339::-;29931:2;29913:21;;;29970:2;29950:18;;;29943:30;-1:-1:-1;;;30004:2:641;29989:18;;29982:45;30059:2;30044:18;;29729:339::o;30073:407::-;30275:2;30257:21;;;30314:2;30294:18;;;30287:30;30353:34;30348:2;30333:18;;30326:62;-1:-1:-1;;;30419:2:641;30404:18;;30397:41;30470:3;30455:19;;30073:407::o;30485:383::-;30682:2;30671:9;30664:21;30645:4;30708:45;30749:2;30738:9;30734:18;30726:6;30708:45;:::i;:::-;30801:9;30793:6;30789:22;30784:2;30773:9;30769:18;30762:50;30829:33;30855:6;30847;30829:33;:::i;31634:274::-;31763:3;31801:6;31795:13;31817:53;31863:6;31858:3;31851:4;31843:6;31839:17;31817:53;:::i;:::-;31886:16;;;;;31634:274;-1:-1:-1;;31634:274:641:o;31913:414::-;32115:2;32097:21;;;32154:2;32134:18;;;32127:30;32193:34;32188:2;32173:18;;32166:62;-1:-1:-1;;;32259:2:641;32244:18;;32237:48;32317:3;32302:19;;31913:414::o;32675:136::-;32714:3;32742:5;32732:39;;32751:18;;:::i;:::-;-1:-1:-1;;;32787:18:641;;32675:136::o;33849:843::-;34012:5;33999:19;34027:33;34052:7;34027:33;:::i;:::-;34131:11;;-1:-1:-1;;;;;;34167:33:641;;-1:-1:-1;;;;;34079:33:641;;;;34164:41;;;34151:55;;34254:2;34243:14;;34230:28;34267:40;34230:28;34267:40;:::i;:::-;34338:1;34329:7;34326:14;34316:145;;34383:10;34378:3;34374:20;34371:1;34364:31;34418:4;34415:1;34408:15;34446:4;34443:1;34436:15;34316:145;-1:-1:-1;;;;;;34489:33:641;;;;34486:41;;;34556:3;34533:17;;;;-1:-1:-1;;;34529:37:641;34483:84;34470:98;;34622:2;34611:14;;34598:28;34518:1;34584:12;;34577:50;34681:2;34670:14;;;34657:28;34653:1;34643:12;;;34636:50;33849:843::o;34697:489::-;-1:-1:-1;;;;;34966:15:641;;;34948:34;;35018:15;;35013:2;34998:18;;34991:43;35065:2;35050:18;;35043:34;;;35113:3;35108:2;35093:18;;35086:31;;;34891:4;;35134:46;;35160:19;;35152:6;35134:46;:::i;:::-;35126:54;34697:489;-1:-1:-1;;;;;;34697:489:641:o;35191:249::-;35260:6;35313:2;35301:9;35292:7;35288:23;35284:32;35281:52;;;35329:1;35326;35319:12;35281:52;35361:9;35355:16;35380:30;35404:5;35380:30;:::i;35445:230::-;35651:3;35629:16;;;;-1:-1:-1;;;;;;35625:43:641;35607:62;;35595:2;35580:18;;35445:230::o;35680:245::-;35747:6;35800:2;35788:9;35779:7;35775:23;35771:32;35768:52;;;35816:1;35813;35806:12;35768:52;35848:9;35842:16;35867:28;35889:5;35867:28;:::i;35930:334::-;36132:2;36114:21;;;36171:2;36151:18;;;36144:30;-1:-1:-1;;;36205:2:641;36190:18;;36183:40;36255:2;36240:18;;35930:334::o;36504:179::-;36539:3;36581:1;36563:16;36560:23;36557:120;;;36627:1;36624;36621;36606:23;-1:-1:-1;36664:1:641;36658:8;36653:3;36649:18;36504:179;:::o;36688:671::-;36727:3;36769:4;36751:16;36748:26;36745:39;;;36688:671;:::o;36745:39::-;36811:2;36805:9;-1:-1:-1;;36876:16:641;36872:25;;36869:1;36805:9;36848:50;36927:4;36921:11;36951:16;-1:-1:-1;;;;;37057:2:641;37050:4;37042:6;37038:17;37035:25;37030:2;37022:6;37019:14;37016:45;37013:58;;;37064:5;;;;;36688:671;:::o;37013:58::-;37101:6;37095:4;37091:17;37080:28;;37137:3;37131:10;37164:2;37156:6;37153:14;37150:27;;;37170:5;;;;;;36688:671;:::o;37150:27::-;37254:2;37235:16;37229:4;37225:27;37221:36;37214:4;37205:6;37200:3;37196:16;37192:27;37189:69;37186:82;;;37261:5;;;;;;36688:671;:::o;37186:82::-;37277:57;37328:4;37319:6;37311;37307:19;37303:30;37297:4;37277:57;:::i;:::-;-1:-1:-1;37350:3:641;;36688:671;-1:-1:-1;;;;;36688:671:641:o;37364:375::-;-1:-1:-1;;;;;37622:15:641;;;37604:34;;37674:15;;;;37669:2;37654:18;;37647:43;37721:2;37706:18;;37699:34;;;;37554:2;37539:18;;37364:375::o;39094:127::-;39155:10;39150:3;39146:20;39143:1;39136:31;39186:4;39183:1;39176:15;39210:4;39207:1;39200:15",
    "linkReferences": {},
    "immutableReferences": {
      "48878": [
        {
          "start": 594,
          "length": 32
        },
        {
          "start": 13237,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getTokenCountOfBundle(uint256)": "d0d2fe25",
    "getTokenOfBundle(uint256,uint256)": "1da799c9",
    "getUriOfBundle(uint256)": "61195e94",
    "getWrappedContents(uint256)": "d5576d26",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,uint256)": "754b8fe7",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unwrap(uint256,address)": "7647691d",
    "wrap((address,uint8,uint256,uint256)[],string,address)": "29e471dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedContents\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"}],\"name\":\"TokensWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getTokenCountOfBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenOfBundle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bundleId\",\"type\":\"uint256\"}],\"name\":\"getUriOfBundle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getWrappedContents\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"contents\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"_tokensToWrap\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"_uriForWrappedToken\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"contractType()\":{\"details\":\"Returns the type of the contract.\"},\"contractVersion()\":{\"details\":\"Returns the version of the contract.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getTokenCountOfBundle(uint256)\":{\"details\":\"Returns the total number of assets in a particular bundle.\"},\"getTokenOfBundle(uint256,uint256)\":{\"details\":\"Returns an asset contained in a particular bundle, at a particular index.\"},\"getUriOfBundle(uint256)\":{\"details\":\"Returns the uri of a particular bundle.\"},\"getWrappedContents(uint256)\":{\"details\":\"Returns the underlying contents of a wrapped NFT.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,uint256)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unwrap(uint256,address)\":{\"details\":\"Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\"},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"details\":\"Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\"}},\"stateVariables\":{\"ASSET_ROLE\":{\"details\":\"Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"},\"UNWRAP_ROLE\":{\"details\":\"Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted.\"},\"nextTokenIdToMint\":{\"details\":\"The next token ID of the NFT to mint.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/multiwrap/Multiwrap.sol\":\"Multiwrap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/TokenBundle.sol\":{\"keccak256\":\"0xf457f02c30d796787344439c52f7c8918336982c0cc28884a99b7f743c6d57d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f6d244618017f0a3e73a3f483437a888cca920091154974cede93e4ac249e533\",\"dweb:/ipfs/QmaNFGgEh8BfYKi2Bu9bV4x8X4wuZkwx4AgD8Zbz9bR4za\"]},\"contracts/extension/TokenStore.sol\":{\"keccak256\":\"0x9d15b9fd8535c1eed0ea085e2f790a2c42b4e19abcf74fb69bd5826afde00d42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dfcb1fb90100bb608d06dd6cc7beb38d89e5ad00bb4689b84cdf6c3549e27fb0\",\"dweb:/ipfs/QmS26ZgnMYiJiRyBAKFwzwr1Z2mE9mpRYxk9kvkomuqNAg\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/extension/interface/ITokenBundle.sol\":{\"keccak256\":\"0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0\",\"dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3\"]},\"contracts/interfaces/IMultiwrap.sol\":{\"keccak256\":\"0xf8638871fa6d07ca85e7eeea11087b58480ee23511645d32795933a8f631b46c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://69093c698a5b354393fba17da6d4a03e92aafeab527438fdf966fd2f6f2e7be7\",\"dweb:/ipfs/QmTXPwqBhahnaTuQvd4fUeEHW1JdX6CBRBhWKGctzN6hGo\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/multiwrap/Multiwrap.sol\":{\"keccak256\":\"0xd43fc61657ba117c907987e43d6b52f9dc3d2327a7c6d732e6a1b6e24e70e663\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2982b27a97e701106c907512aa14050bc24766c2a1b1f4c21a41f17ea15849c0\",\"dweb:/ipfs/QmZd64hNfcYLRprDm6V147Q7mDZxSLDCWkVD94AC8gFXQs\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/ERC1155/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"contracts/openzeppelin-presets/utils/ERC1155/ERC1155Receiver.sol\":{\"keccak256\":\"0xdabf75d9dec73b2c1da466ad42695d00a3c534682fd69fc75571ea9bfb5b3835\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://44b524279bd30ff91797fe6b531b90b04b51c9ff14790fc25bd5c7ed4fc23ee4\",\"dweb:/ipfs/QmV7Gkf7j83uT16zc1AWHoPuQQwZPJ8vU9ifyZNS988sgV\"]},\"contracts/openzeppelin-presets/utils/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0x26b186d445e059d16641f8afb9d768e4c5adcd8bd64e85f729e9cde4d87a0a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d716cc89cf6de60dc50c90c28232956c3e386a2d4addf2c7ed7b6f001a837c26\",\"dweb:/ipfs/QmcHcFprGXSegA7y3T2t7qMZqX73EbntX2FaWB2rcJwqbC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x5331c8909221d9f9f3851cfadd5959d0873413a2c27e30e0f2fa234158c1c6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c7d52f47a9174e236c0402654f42c16516c58c6851862f3bcb1b440b873498\",\"dweb:/ipfs/QmZQqiofa8jPJCCAfWyjNnBuoGXrR56Ct4HyW4ugRWfvCb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0x56035505d62f05f5e5040532b749ab25237f6dd87c7a514614acda96af996751\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d52f1b153a61d092665ec00e90ee28f0cbad717577ddea0b2864c47e155abd3\",\"dweb:/ipfs/QmS881RSVGWcfXeWpivX1ChoG1ucEvgbHkcHah4YkMpfgE\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "unwrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedContents",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensUnwrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wrapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientOfWrappedToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenIdOfWrappedToken",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "wrappedContents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWrapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCountOfBundle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenOfBundle",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bundleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUriOfBundle",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWrappedContents",
          "outputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "contents",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrap"
        },
        {
          "inputs": [
            {
              "internalType": "struct ITokenBundle.Token[]",
              "name": "_tokensToWrap",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "assetContract",
                  "type": "address"
                },
                {
                  "internalType": "enum ITokenBundle.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "_uriForWrappedToken",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "contractType()": {
            "details": "Returns the type of the contract."
          },
          "contractVersion()": {
            "details": "Returns the version of the contract."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getTokenCountOfBundle(uint256)": {
            "details": "Returns the total number of assets in a particular bundle."
          },
          "getTokenOfBundle(uint256,uint256)": {
            "details": "Returns an asset contained in a particular bundle, at a particular index."
          },
          "getUriOfBundle(uint256)": {
            "details": "Returns the uri of a particular bundle."
          },
          "getWrappedContents(uint256)": {
            "details": "Returns the underlying contents of a wrapped NFT."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,uint256)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "unwrap(uint256,address)": {
            "details": "Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
          },
          "wrap((address,uint8,uint256,uint256)[],string,address)": {
            "details": "Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/multiwrap/Multiwrap.sol": "Multiwrap"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenBundle.sol": {
        "keccak256": "0xf457f02c30d796787344439c52f7c8918336982c0cc28884a99b7f743c6d57d9",
        "urls": [
          "bzz-raw://f6d244618017f0a3e73a3f483437a888cca920091154974cede93e4ac249e533",
          "dweb:/ipfs/QmaNFGgEh8BfYKi2Bu9bV4x8X4wuZkwx4AgD8Zbz9bR4za"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/TokenStore.sol": {
        "keccak256": "0x9d15b9fd8535c1eed0ea085e2f790a2c42b4e19abcf74fb69bd5826afde00d42",
        "urls": [
          "bzz-raw://dfcb1fb90100bb608d06dd6cc7beb38d89e5ad00bb4689b84cdf6c3549e27fb0",
          "dweb:/ipfs/QmS26ZgnMYiJiRyBAKFwzwr1Z2mE9mpRYxk9kvkomuqNAg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ITokenBundle.sol": {
        "keccak256": "0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949",
        "urls": [
          "bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0",
          "dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IMultiwrap.sol": {
        "keccak256": "0xf8638871fa6d07ca85e7eeea11087b58480ee23511645d32795933a8f631b46c",
        "urls": [
          "bzz-raw://69093c698a5b354393fba17da6d4a03e92aafeab527438fdf966fd2f6f2e7be7",
          "dweb:/ipfs/QmTXPwqBhahnaTuQvd4fUeEHW1JdX6CBRBhWKGctzN6hGo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/multiwrap/Multiwrap.sol": {
        "keccak256": "0xd43fc61657ba117c907987e43d6b52f9dc3d2327a7c6d732e6a1b6e24e70e663",
        "urls": [
          "bzz-raw://2982b27a97e701106c907512aa14050bc24766c2a1b1f4c21a41f17ea15849c0",
          "dweb:/ipfs/QmZd64hNfcYLRprDm6V147Q7mDZxSLDCWkVD94AC8gFXQs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/ERC1155/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/ERC1155/ERC1155Receiver.sol": {
        "keccak256": "0xdabf75d9dec73b2c1da466ad42695d00a3c534682fd69fc75571ea9bfb5b3835",
        "urls": [
          "bzz-raw://44b524279bd30ff91797fe6b531b90b04b51c9ff14790fc25bd5c7ed4fc23ee4",
          "dweb:/ipfs/QmV7Gkf7j83uT16zc1AWHoPuQQwZPJ8vU9ifyZNS988sgV"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/utils/ERC721/ERC721Holder.sol": {
        "keccak256": "0x26b186d445e059d16641f8afb9d768e4c5adcd8bd64e85f729e9cde4d87a0a99",
        "urls": [
          "bzz-raw://d716cc89cf6de60dc50c90c28232956c3e386a2d4addf2c7ed7b6f001a837c26",
          "dweb:/ipfs/QmcHcFprGXSegA7y3T2t7qMZqX73EbntX2FaWB2rcJwqbC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0x5331c8909221d9f9f3851cfadd5959d0873413a2c27e30e0f2fa234158c1c6cf",
        "urls": [
          "bzz-raw://31c7d52f47a9174e236c0402654f42c16516c58c6851862f3bcb1b440b873498",
          "dweb:/ipfs/QmZQqiofa8jPJCCAfWyjNnBuoGXrR56Ct4HyW4ugRWfvCb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005",
        "urls": [
          "bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2",
          "dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol": {
        "keccak256": "0x56035505d62f05f5e5040532b749ab25237f6dd87c7a514614acda96af996751",
        "urls": [
          "bzz-raw://2d52f1b153a61d092665ec00e90ee28f0cbad717577ddea0b2864c47e155abd3",
          "dweb:/ipfs/QmS881RSVGWcfXeWpivX1ChoG1ucEvgbHkcHah4YkMpfgE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol": {
        "keccak256": "0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff",
        "urls": [
          "bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d",
          "dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/multiwrap/Multiwrap.sol",
    "id": 72254,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "ERC1155Receiver": [
        78911
      ],
      "ERC165Upgradeable": [
        158919
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "ERC721EnumerableUpgradeable": [
        157090
      ],
      "ERC721Upgradeable": [
        156598
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC1155Receiver": [
        31122
      ],
      "IERC165": [
        31146
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC2981": [
        31290
      ],
      "IERC2981Upgradeable": [
        151718
      ],
      "IERC721EnumerableUpgradeable": [
        157121
      ],
      "IERC721MetadataUpgradeable": [
        157148
      ],
      "IERC721ReceiverUpgradeable": [
        156616
      ],
      "IERC721Upgradeable": [
        156732
      ],
      "IMultiwrap": [
        55301
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IRoyalty": [
        50644
      ],
      "ITokenBundle": [
        51477
      ],
      "Initializable": [
        151869
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "Multiwrap": [
        72253
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "ReentrancyGuardUpgradeable": [
        152055
      ],
      "Royalty": [
        39646
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWStrings": [
        65767
      ],
      "TokenStore": [
        49141
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10352:297",
    "nodes": [
      {
        "id": 71684,
        "nodeType": "PragmaDirective",
        "src": "39:24:297",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 71685,
        "nodeType": "ImportDirective",
        "src": "774:101:297",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 157091,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71686,
        "nodeType": "ImportDirective",
        "src": "877:76:297",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71687,
        "nodeType": "ImportDirective",
        "src": "954:85:297",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 152056,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71688,
        "nodeType": "ImportDirective",
        "src": "1040:80:297",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 151719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71689,
        "nodeType": "ImportDirective",
        "src": "1170:38:297",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IMultiwrap.sol",
        "file": "../interfaces/IMultiwrap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 55302,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71690,
        "nodeType": "ImportDirective",
        "src": "1209:70:297",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71691,
        "nodeType": "ImportDirective",
        "src": "1321:43:297",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71692,
        "nodeType": "ImportDirective",
        "src": "1365:34:297",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71693,
        "nodeType": "ImportDirective",
        "src": "1400:34:297",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71694,
        "nodeType": "ImportDirective",
        "src": "1435:48:297",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 71698,
        "nodeType": "ImportDirective",
        "src": "1484:92:297",
        "nodes": [],
        "absolutePath": "contracts/extension/TokenStore.sol",
        "file": "../extension/TokenStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 72254,
        "sourceUnit": 49142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 71695,
              "name": "TokenStore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49141,
              "src": "1493:10:297",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_TokenStore_$49141_$",
                "typeString": "type(contract TokenStore)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 71696,
              "name": "ERC1155Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 78911,
              "src": "1505:15:297",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC1155Receiver_$78911_$",
                "typeString": "type(contract ERC1155Receiver)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 71697,
              "name": "IERC1155Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31122,
              "src": "1522:16:297",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$31122_$",
                "typeString": "type(contract IERC1155Receiver)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 72253,
        "nodeType": "ContractDefinition",
        "src": "1578:8812:297",
        "nodes": [
          {
            "id": 71726,
            "nodeType": "VariableDeclaration",
            "src": "2037:59:297",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MODULE_TYPE",
            "nameLocation": "2062:11:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 71721,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2037:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d756c746977726170",
                  "id": 71724,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2084:11:297",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_67c7d06bf7013ca1eb81dc0e70a66133cfc4b8467eb03ddc3f3ff371e7012a32",
                    "typeString": "literal_string \"Multiwrap\""
                  },
                  "value": "Multiwrap"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_67c7d06bf7013ca1eb81dc0e70a66133cfc4b8467eb03ddc3f3ff371e7012a32",
                    "typeString": "literal_string \"Multiwrap\""
                  }
                ],
                "id": 71723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2076:7:297",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 71722,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2076:7:297",
                  "typeDescriptions": {}
                }
              },
              "id": 71725,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2076:20:297",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71729,
            "nodeType": "VariableDeclaration",
            "src": "2102:36:297",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "2127:7:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71727,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2102:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 71728,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2137:1:297",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 71735,
            "nodeType": "VariableDeclaration",
            "src": "2248:67:297",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 71730,
              "nodeType": "StructuredDocumentation",
              "src": "2145:98:297",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "2273:13:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 71731,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2248:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 71733,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2299:15:297",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 71732,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2289:9:297",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 71734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2289:26:297",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71741,
            "nodeType": "VariableDeclaration",
            "src": "2405:63:297",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 71736,
              "nodeType": "StructuredDocumentation",
              "src": "2321:79:297",
              "text": "@dev Only MINTER_ROLE holders can wrap tokens, when wrapping is restricted."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2430:11:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 71737,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2405:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 71739,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2454:13:297",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 71738,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2444:9:297",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 71740,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2444:24:297",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71747,
            "nodeType": "VariableDeclaration",
            "src": "2562:63:297",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 71742,
              "nodeType": "StructuredDocumentation",
              "src": "2474:83:297",
              "text": "@dev Only UNWRAP_ROLE holders can unwrap tokens, when unwrapping is restricted."
            },
            "mutability": "constant",
            "name": "UNWRAP_ROLE",
            "nameLocation": "2587:11:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 71743,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2562:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "554e575241505f524f4c45",
                  "id": 71745,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2611:13:297",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  },
                  "value": "UNWRAP_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f0543",
                    "typeString": "literal_string \"UNWRAP_ROLE\""
                  }
                ],
                "id": 71744,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2601:9:297",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 71746,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2601:24:297",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71753,
            "nodeType": "VariableDeclaration",
            "src": "2738:61:297",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 71748,
              "nodeType": "StructuredDocumentation",
              "src": "2631:102:297",
              "text": "@dev Only assets with ASSET_ROLE can be wrapped, when wrapping is restricted to particular assets."
            },
            "mutability": "constant",
            "name": "ASSET_ROLE",
            "nameLocation": "2763:10:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 71749,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2738:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41535345545f524f4c45",
                  "id": 71751,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2786:12:297",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  },
                  "value": "ASSET_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6",
                    "typeString": "literal_string \"ASSET_ROLE\""
                  }
                ],
                "id": 71750,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2776:9:297",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 71752,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2776:23:297",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 71756,
            "nodeType": "VariableDeclaration",
            "src": "2857:32:297",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 71754,
              "nodeType": "StructuredDocumentation",
              "src": "2806:46:297",
              "text": "@dev The next token ID of the NFT to mint."
            },
            "functionSelector": "3b1475a7",
            "mutability": "mutable",
            "name": "nextTokenIdToMint",
            "nameLocation": "2872:17:297",
            "scope": 72253,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2857:7:297",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 71767,
            "nodeType": "FunctionDefinition",
            "src": "3088:87:297",
            "nodes": [],
            "body": {
              "id": 71766,
              "nodeType": "Block",
              "src": "3173:2:297",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 71761,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71758,
                    "src": "3140:19:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 71762,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 71760,
                  "name": "TokenStore",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49141,
                  "src": "3129:10:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "3129:31:297"
              },
              {
                "id": 71764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 71763,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3161:11:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "3161:11:297"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 71759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71758,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "3108:19:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71767,
                  "src": "3100:27:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3099:29:297"
            },
            "returnParameters": {
              "id": 71765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3173:0:297"
            },
            "scope": 72253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71853,
            "nodeType": "FunctionDefinition",
            "src": "3240:1182:297",
            "nodes": [],
            "body": {
              "id": 71852,
              "nodeType": "Block",
              "src": "3523:899:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 71788,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152019,
                      "src": "3608:22:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 71789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:24:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71790,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:24:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71792,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71779,
                        "src": "3664:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 71791,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "3642:21:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 71793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3642:41:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71794,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:41:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71796,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71772,
                        "src": "3707:5:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 71797,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71774,
                        "src": "3714:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 71795,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155771,
                      "src": "3693:13:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 71798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:29:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71799,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:29:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71801,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71781,
                        "src": "3803:17:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71802,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71783,
                        "src": "3822:11:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71800,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "3778:24:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 71803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:56:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71804,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:56:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71806,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71770,
                        "src": "3856:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71805,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "3844:11:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 71807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:26:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71808,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:26:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71810,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71776,
                        "src": "3898:12:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 71809,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "3880:17:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 71811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3880:31:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71812,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:31:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71814,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "3933:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 71815,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71770,
                        "src": "3953:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71813,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3922:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:45:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71817,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:45:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71819,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71741,
                        "src": "3988:11:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 71820,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71770,
                        "src": "4001:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71818,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "3977:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:38:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71822,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:38:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71824,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71735,
                        "src": "4036:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 71825,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71770,
                        "src": "4051:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71823,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "4025:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:40:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71827,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:40:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71829,
                        "name": "TRANSFER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71735,
                        "src": "4160:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 71832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4183:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 71831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4175:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4175:7:297",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4175:10:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71828,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "4149:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:37:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71835,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:37:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71837,
                        "name": "UNWRAP_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71747,
                        "src": "4277:11:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 71840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4298:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 71839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4290:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4290:7:297",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4290:10:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71836,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "4266:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4266:35:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71843,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:35:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71845,
                        "name": "ASSET_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71753,
                        "src": "4392:10:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 71848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4412:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 71847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4404:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71846,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4404:7:297",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4404:10:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71844,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "4381:10:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 71850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:34:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71851,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:34:297"
                }
              ]
            },
            "documentation": {
              "id": 71768,
              "nodeType": "StructuredDocumentation",
              "src": "3181:54:297",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "754b8fe7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 71786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 71785,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3511:11:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "3511:11:297"
              }
            ],
            "name": "initialize",
            "nameLocation": "3249:10:297",
            "parameters": {
              "id": 71784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71770,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "3277:13:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3269:21:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71772,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3314:5:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3300:19:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71774,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3343:7:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3329:21:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71773,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71776,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "3374:12:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3360:26:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71779,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "3413:18:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3396:35:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 71777,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3396:7:297",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 71778,
                    "nodeType": "ArrayTypeName",
                    "src": "3396:9:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71781,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "3449:17:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3441:25:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71783,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "3484:11:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71853,
                  "src": "3476:19:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:242:297"
            },
            "returnParameters": {
              "id": 71787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3523:0:297"
            },
            "scope": 72253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71865,
            "nodeType": "ModifierDefinition",
            "src": "4606:110:297",
            "nodes": [],
            "body": {
              "id": 71864,
              "nodeType": "Block",
              "src": "4648:68:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71858,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71855,
                        "src": "4679:4:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 71859,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "4685:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 71860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4685:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71857,
                      "name": "_checkRoleWithSwitch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38746,
                      "src": "4658:20:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) view"
                      }
                    },
                    "id": 71861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4658:40:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71862,
                  "nodeType": "ExpressionStatement",
                  "src": "4658:40:297"
                },
                {
                  "id": 71863,
                  "nodeType": "PlaceholderStatement",
                  "src": "4708:1:297"
                }
              ]
            },
            "name": "onlyRoleWithSwitch",
            "nameLocation": "4615:18:297",
            "parameters": {
              "id": 71856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71855,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "4642:4:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71865,
                  "src": "4634:12:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71854,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:14:297"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 71874,
            "nodeType": "FunctionDefinition",
            "src": "4956:91:297",
            "nodes": [],
            "body": {
              "id": 71873,
              "nodeType": "Block",
              "src": "5012:35:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 71871,
                    "name": "MODULE_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71726,
                    "src": "5029:11:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 71870,
                  "id": 71872,
                  "nodeType": "Return",
                  "src": "5022:18:297"
                }
              ]
            },
            "documentation": {
              "id": 71866,
              "nodeType": "StructuredDocumentation",
              "src": "4909:42:297",
              "text": "@dev Returns the type of the contract."
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "4965:12:297",
            "parameters": {
              "id": 71867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4977:2:297"
            },
            "returnParameters": {
              "id": 71870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71874,
                  "src": "5003:7:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 71868,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5002:9:297"
            },
            "scope": 72253,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71886,
            "nodeType": "FunctionDefinition",
            "src": "5103:95:297",
            "nodes": [],
            "body": {
              "id": 71885,
              "nodeType": "Block",
              "src": "5160:38:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71882,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71729,
                        "src": "5183:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5177:5:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 71880,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5177:5:297",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 71883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:14:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 71879,
                  "id": 71884,
                  "nodeType": "Return",
                  "src": "5170:21:297"
                }
              ]
            },
            "documentation": {
              "id": 71875,
              "nodeType": "StructuredDocumentation",
              "src": "5053:45:297",
              "text": "@dev Returns the version of the contract."
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "5112:15:297",
            "parameters": {
              "id": 71876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:2:297"
            },
            "returnParameters": {
              "id": 71879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71886,
                  "src": "5153:5:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71877,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:5:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5152:7:297"
            },
            "scope": 72253,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71899,
            "nodeType": "FunctionDefinition",
            "src": "5274:121:297",
            "nodes": [],
            "body": {
              "id": 71898,
              "nodeType": "Block",
              "src": "5301:94:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 71891,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5319:3:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5319:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 71893,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48878,
                          "src": "5333:18:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5319:32:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 71895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5353:34:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 71890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5311:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 71896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5311:77:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71897,
                  "nodeType": "ExpressionStatement",
                  "src": "5311:77:297"
                }
              ]
            },
            "documentation": {
              "id": 71887,
              "nodeType": "StructuredDocumentation",
              "src": "5204:65:297",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 71888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5281:2:297"
            },
            "returnParameters": {
              "id": 71889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5301:0:297"
            },
            "scope": 72253,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71913,
            "nodeType": "FunctionDefinition",
            "src": "5642:129:297",
            "nodes": [],
            "body": {
              "id": 71912,
              "nodeType": "Block",
              "src": "5723:48:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71909,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71902,
                        "src": "5755:8:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71908,
                      "name": "getUriOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48430,
                      "src": "5740:14:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 71910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:24:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 71907,
                  "id": 71911,
                  "nodeType": "Return",
                  "src": "5733:31:297"
                }
              ]
            },
            "baseFunctions": [
              155931
            ],
            "documentation": {
              "id": 71900,
              "nodeType": "StructuredDocumentation",
              "src": "5592:45:297",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5651:8:297",
            "overrides": {
              "id": 71904,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5690:8:297"
            },
            "parameters": {
              "id": 71903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71902,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5668:8:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71913,
                  "src": "5660:16:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5659:18:297"
            },
            "returnParameters": {
              "id": 71907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71913,
                  "src": "5708:13:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71905,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5708:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5707:15:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 71952,
            "nodeType": "FunctionDefinition",
            "src": "5802:462:297",
            "nodes": [],
            "body": {
              "id": 71951,
              "nodeType": "Block",
              "src": "5992:272:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 71949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 71942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 71935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 71927,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71916,
                              "src": "6045:11:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 71925,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "6021:5:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_Multiwrap_$72253_$",
                                "typeString": "type(contract super Multiwrap)"
                              }
                            },
                            "id": 71926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 156797,
                            "src": "6021:23:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 71928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6021:36:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 71934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 71929,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71916,
                            "src": "6073:11:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 71931,
                                  "name": "IERC721Upgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 156732,
                                  "src": "6093:18:297",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$156732_$",
                                    "typeString": "type(contract IERC721Upgradeable)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$156732_$",
                                    "typeString": "type(contract IERC721Upgradeable)"
                                  }
                                ],
                                "id": 71930,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6088:4:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 71932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6088:24:297",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Upgradeable_$156732",
                                "typeString": "type(contract IERC721Upgradeable)"
                              }
                            },
                            "id": 71933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "6088:36:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6073:51:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6021:103:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 71941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71936,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71916,
                          "src": "6140:11:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 71938,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31122,
                                "src": "6160:16:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$31122_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$31122_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              ],
                              "id": 71937,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "6155:4:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 71939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6155:22:297",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$31122",
                              "typeString": "type(contract IERC1155Receiver)"
                            }
                          },
                          "id": 71940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "6155:34:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "6140:49:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6021:168:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 71948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 71943,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71916,
                        "src": "6205:11:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 71945,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151718,
                              "src": "6225:19:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 71944,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6220:4:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 71946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:25:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151718",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 71947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6220:37:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6205:52:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6021:236:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 71924,
                  "id": 71950,
                  "nodeType": "Return",
                  "src": "6002:255:297"
                }
              ]
            },
            "baseFunctions": [
              31145,
              78910,
              156797
            ],
            "documentation": {
              "id": 71914,
              "nodeType": "StructuredDocumentation",
              "src": "5777:20:297",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5811:17:297",
            "overrides": {
              "id": 71921,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71918,
                  "name": "ERC1155Receiver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78911,
                  "src": "5910:15:297"
                },
                {
                  "id": 71919,
                  "name": "ERC721EnumerableUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157090,
                  "src": "5927:27:297"
                },
                {
                  "id": 71920,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "5956:7:297"
                }
              ],
              "src": "5901:63:297"
            },
            "parameters": {
              "id": 71917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71916,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5836:11:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 71952,
                  "src": "5829:18:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 71915,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5829:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5828:20:297"
            },
            "returnParameters": {
              "id": 71924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71952,
                  "src": "5982:4:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71922,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:4:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:6:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 72033,
            "nodeType": "FunctionDefinition",
            "src": "6542:712:297",
            "nodes": [],
            "body": {
              "id": 72032,
              "nodeType": "Block",
              "src": "6763:491:297",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 71978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6777:32:297",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 71972,
                          "name": "ASSET_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71753,
                          "src": "6786:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 71975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6806:1:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 71974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6798:7:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6798:7:297",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 71976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6798:10:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 71971,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38454,
                        "src": "6778:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 71977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6778:31:297",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72002,
                  "nodeType": "IfStatement",
                  "src": "6773:203:297",
                  "trueBody": {
                    "id": 72001,
                    "nodeType": "Block",
                    "src": "6811:165:297",
                    "statements": [
                      {
                        "body": {
                          "id": 71999,
                          "nodeType": "Block",
                          "src": "6879:87:297",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 71992,
                                    "name": "ASSET_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71753,
                                    "src": "6908:10:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 71993,
                                        "name": "_tokensToWrap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 71957,
                                        "src": "6920:13:297",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                                        }
                                      },
                                      "id": 71995,
                                      "indexExpression": {
                                        "id": 71994,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 71980,
                                        "src": "6934:1:297",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6920:16:297",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$51466_calldata_ptr",
                                        "typeString": "struct ITokenBundle.Token calldata"
                                      }
                                    },
                                    "id": 71996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51458,
                                    "src": "6920:30:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 71991,
                                  "name": "_checkRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38703,
                                  "src": "6897:10:297",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address) view"
                                  }
                                },
                                "id": 71997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6897:54:297",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 71998,
                              "nodeType": "ExpressionStatement",
                              "src": "6897:54:297"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 71986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 71983,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71980,
                            "src": "6845:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 71984,
                              "name": "_tokensToWrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71957,
                              "src": "6849:13:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ITokenBundle.Token calldata[] calldata"
                              }
                            },
                            "id": 71985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6849:20:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6845:24:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 72000,
                        "initializationExpression": {
                          "assignments": [
                            71980
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 71980,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6838:1:297",
                              "nodeType": "VariableDeclaration",
                              "scope": 72000,
                              "src": "6830:9:297",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 71979,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6830:7:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 71982,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 71981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6842:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6830:13:297"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 71989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 71987,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71980,
                              "src": "6871:1:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 71988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6876:1:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6871:6:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 71990,
                          "nodeType": "ExpressionStatement",
                          "src": "6871:6:297"
                        },
                        "nodeType": "ForStatement",
                        "src": "6825:141:297"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 72005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72003,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71969,
                      "src": "6986:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72004,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71756,
                      "src": "6996:17:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6986:27:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72006,
                  "nodeType": "ExpressionStatement",
                  "src": "6986:27:297"
                },
                {
                  "expression": {
                    "id": 72009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72007,
                      "name": "nextTokenIdToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71756,
                      "src": "7023:17:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 72008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7044:1:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7023:22:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72010,
                  "nodeType": "ExpressionStatement",
                  "src": "7023:22:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72012,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "7069:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7069:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72014,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71957,
                        "src": "7083:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      },
                      {
                        "id": 72015,
                        "name": "_uriForWrappedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71959,
                        "src": "7098:19:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 72016,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71969,
                        "src": "7119:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72011,
                      "name": "_storeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48922,
                      "src": "7056:12:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,struct ITokenBundle.Token calldata[] calldata,string memory,uint256)"
                      }
                    },
                    "id": 72017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:71:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72018,
                  "nodeType": "ExpressionStatement",
                  "src": "7056:71:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72020,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71961,
                        "src": "7148:10:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72021,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71969,
                        "src": "7160:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72019,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        156208,
                        156237
                      ],
                      "referencedDeclaration": 156208,
                      "src": "7138:9:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7138:30:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72023,
                  "nodeType": "ExpressionStatement",
                  "src": "7138:30:297"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72025,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "7198:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7198:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72027,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71961,
                        "src": "7212:10:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72028,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71969,
                        "src": "7224:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 72029,
                        "name": "_tokensToWrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71957,
                        "src": "7233:13:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ITokenBundle.Token calldata[] calldata"
                        }
                      ],
                      "id": 72024,
                      "name": "TokensWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55269,
                      "src": "7184:13:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct ITokenBundle.Token memory[] memory)"
                      }
                    },
                    "id": 72030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7184:63:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72031,
                  "nodeType": "EmitStatement",
                  "src": "7179:68:297"
                }
              ]
            },
            "baseFunctions": [
              55292
            ],
            "documentation": {
              "id": 71953,
              "nodeType": "StructuredDocumentation",
              "src": "6458:79:297",
              "text": "@dev Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
            },
            "functionSelector": "29e471dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 71964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 71963,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152049,
                  "src": "6692:12:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "6692:12:297"
              },
              {
                "arguments": [
                  {
                    "id": 71966,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71741,
                    "src": "6724:11:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 71967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 71965,
                  "name": "onlyRoleWithSwitch",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71865,
                  "src": "6705:18:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "6705:31:297"
              }
            ],
            "name": "wrap",
            "nameLocation": "6551:4:297",
            "parameters": {
              "id": 71962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71957,
                  "mutability": "mutable",
                  "name": "_tokensToWrap",
                  "nameLocation": "6582:13:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72033,
                  "src": "6565:30:297",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$51466_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 71955,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 71954,
                        "name": "Token",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51466,
                        "src": "6565:5:297"
                      },
                      "referencedDeclaration": 51466,
                      "src": "6565:5:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$51466_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 71956,
                    "nodeType": "ArrayTypeName",
                    "src": "6565:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$51466_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71959,
                  "mutability": "mutable",
                  "name": "_uriForWrappedToken",
                  "nameLocation": "6621:19:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72033,
                  "src": "6605:35:297",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6605:6:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71961,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "6658:10:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72033,
                  "src": "6650:18:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6650:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6555:119:297"
            },
            "returnParameters": {
              "id": 71970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71969,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6754:7:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72033,
                  "src": "6746:15:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6746:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6745:17:297"
            },
            "scope": 72253,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72079,
            "nodeType": "FunctionDefinition",
            "src": "7348:421:297",
            "nodes": [],
            "body": {
              "id": 72078,
              "nodeType": "Block",
              "src": "7456:313:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72047,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72036,
                          "src": "7474:8:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 72048,
                          "name": "nextTokenIdToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71756,
                          "src": "7485:17:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7474:28:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726170706564204e465420444e452e",
                        "id": 72050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7504:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        },
                        "value": "wrapped NFT DNE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63278cc8d1e7a8cbe92637bbe8f5a5c8776603518682606ae75469098682f9e",
                          "typeString": "literal_string \"wrapped NFT DNE.\""
                        }
                      ],
                      "id": 72046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7466:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7466:57:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72052,
                  "nodeType": "ExpressionStatement",
                  "src": "7466:57:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 72055,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                72239
                              ],
                              "referencedDeclaration": 72239,
                              "src": "7560:10:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7560:12:297",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 72057,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72036,
                            "src": "7574:8:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 72054,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156193,
                          "src": "7541:18:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 72058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7541:42:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f7420617070726f76656420666f7220756e7772617070696e672e",
                        "id": 72059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7585:37:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        },
                        "value": "caller not approved for unwrapping."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_998b7b83216583f2e9024eb23ceb06de80033499282badf1ce943b3bbfa2a9b9",
                          "typeString": "literal_string \"caller not approved for unwrapping.\""
                        }
                      ],
                      "id": 72053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7533:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7533:90:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72061,
                  "nodeType": "ExpressionStatement",
                  "src": "7533:90:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72063,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72036,
                        "src": "7640:8:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72062,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156363,
                      "src": "7634:5:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 72064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7634:15:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72065,
                  "nodeType": "ExpressionStatement",
                  "src": "7634:15:297"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72067,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72038,
                        "src": "7674:10:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72068,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72036,
                        "src": "7686:8:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72066,
                      "name": "_releaseTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48984,
                      "src": "7659:14:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7659:36:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72070,
                  "nodeType": "ExpressionStatement",
                  "src": "7659:36:297"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72072,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "7727:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7727:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72074,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72038,
                        "src": "7741:10:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72075,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72036,
                        "src": "7753:8:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72071,
                      "name": "TokensUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55278,
                      "src": "7711:15:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 72076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7711:51:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72077,
                  "nodeType": "EmitStatement",
                  "src": "7706:56:297"
                }
              ]
            },
            "baseFunctions": [
              55300
            ],
            "documentation": {
              "id": 72034,
              "nodeType": "StructuredDocumentation",
              "src": "7260:83:297",
              "text": "@dev Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
            },
            "functionSelector": "7647691d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 72041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72040,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152049,
                  "src": "7411:12:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "7411:12:297"
              },
              {
                "arguments": [
                  {
                    "id": 72043,
                    "name": "UNWRAP_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71747,
                    "src": "7443:11:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 72044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 72042,
                  "name": "onlyRoleWithSwitch",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71865,
                  "src": "7424:18:297"
                },
                "nodeType": "ModifierInvocation",
                "src": "7424:31:297"
              }
            ],
            "name": "unwrap",
            "nameLocation": "7357:6:297",
            "parameters": {
              "id": 72039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72036,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7372:8:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72079,
                  "src": "7364:16:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7364:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72038,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "7390:10:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72079,
                  "src": "7382:18:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7382:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7363:38:297"
            },
            "returnParameters": {
              "id": 72045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7456:0:297"
            },
            "scope": 72253,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72127,
            "nodeType": "FunctionDefinition",
            "src": "8019:314:297",
            "nodes": [],
            "body": {
              "id": 72126,
              "nodeType": "Block",
              "src": "8113:220:297",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    72090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72090,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "8131:5:297",
                      "nodeType": "VariableDeclaration",
                      "scope": 72126,
                      "src": "8123:13:297",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8123:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 72094,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 72092,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72082,
                        "src": "8161:8:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72091,
                      "name": "getTokenCountOfBundle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48397,
                      "src": "8139:21:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 72093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8139:31:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8123:47:297"
                },
                {
                  "expression": {
                    "id": 72102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72095,
                      "name": "contents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72087,
                      "src": "8180:8:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ITokenBundle.Token memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 72100,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72090,
                          "src": "8203:5:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 72099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8191:11:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct ITokenBundle.Token memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 72097,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 72096,
                              "name": "Token",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 51466,
                              "src": "8195:5:297"
                            },
                            "referencedDeclaration": 51466,
                            "src": "8195:5:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$51466_storage_ptr",
                              "typeString": "struct ITokenBundle.Token"
                            }
                          },
                          "id": 72098,
                          "nodeType": "ArrayTypeName",
                          "src": "8195:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Token_$51466_storage_$dyn_storage_ptr",
                            "typeString": "struct ITokenBundle.Token[]"
                          }
                        }
                      },
                      "id": 72101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8191:18:297",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ITokenBundle.Token memory[] memory"
                      }
                    },
                    "src": "8180:29:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ITokenBundle.Token memory[] memory"
                    }
                  },
                  "id": 72103,
                  "nodeType": "ExpressionStatement",
                  "src": "8180:29:297"
                },
                {
                  "body": {
                    "id": 72124,
                    "nodeType": "Block",
                    "src": "8259:68:297",
                    "statements": [
                      {
                        "expression": {
                          "id": 72122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 72115,
                              "name": "contents",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72087,
                              "src": "8273:8:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ITokenBundle.Token memory[] memory"
                              }
                            },
                            "id": 72117,
                            "indexExpression": {
                              "id": 72116,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72105,
                              "src": "8282:1:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8273:11:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$51466_memory_ptr",
                              "typeString": "struct ITokenBundle.Token memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 72119,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72082,
                                "src": "8304:8:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 72120,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72105,
                                "src": "8314:1:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 72118,
                              "name": "getTokenOfBundle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48416,
                              "src": "8287:16:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Token_$51466_memory_ptr_$",
                                "typeString": "function (uint256,uint256) view returns (struct ITokenBundle.Token memory)"
                              }
                            },
                            "id": 72121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8287:29:297",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$51466_memory_ptr",
                              "typeString": "struct ITokenBundle.Token memory"
                            }
                          },
                          "src": "8273:43:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$51466_memory_ptr",
                            "typeString": "struct ITokenBundle.Token memory"
                          }
                        },
                        "id": 72123,
                        "nodeType": "ExpressionStatement",
                        "src": "8273:43:297"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 72108,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72105,
                      "src": "8240:1:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 72109,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72090,
                      "src": "8244:5:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8240:9:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72125,
                  "initializationExpression": {
                    "assignments": [
                      72105
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 72105,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8233:1:297",
                        "nodeType": "VariableDeclaration",
                        "scope": 72125,
                        "src": "8225:9:297",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8225:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 72107,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 72106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8237:1:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8225:13:297"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 72113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 72111,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72105,
                        "src": "8251:1:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 72112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8256:1:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8251:6:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72114,
                    "nodeType": "ExpressionStatement",
                    "src": "8251:6:297"
                  },
                  "nodeType": "ForStatement",
                  "src": "8220:107:297"
                }
              ]
            },
            "documentation": {
              "id": 72080,
              "nodeType": "StructuredDocumentation",
              "src": "7956:58:297",
              "text": "@dev Returns the underlying contents of a wrapped NFT."
            },
            "functionSelector": "d5576d26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWrappedContents",
            "nameLocation": "8028:18:297",
            "parameters": {
              "id": 72083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72082,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8055:8:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72127,
                  "src": "8047:16:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8047:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8046:18:297"
            },
            "returnParameters": {
              "id": 72088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72087,
                  "mutability": "mutable",
                  "name": "contents",
                  "nameLocation": "8103:8:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72127,
                  "src": "8088:23:297",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$51466_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72085,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 72084,
                        "name": "Token",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51466,
                        "src": "8088:5:297"
                      },
                      "referencedDeclaration": 51466,
                      "src": "8088:5:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$51466_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 72086,
                    "nodeType": "ArrayTypeName",
                    "src": "8088:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$51466_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8087:25:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72141,
            "nodeType": "FunctionDefinition",
            "src": "8600:127:297",
            "nodes": [],
            "body": {
              "id": 72140,
              "nodeType": "Block",
              "src": "8662:65:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72135,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "8687:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72136,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "8707:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8707:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72134,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "8679:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8679:41:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72133,
                  "id": 72139,
                  "nodeType": "Return",
                  "src": "8672:48:297"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 72128,
              "nodeType": "StructuredDocumentation",
              "src": "8522:73:297",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "8609:12:297",
            "overrides": {
              "id": 72130,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8638:8:297"
            },
            "parameters": {
              "id": 72129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8621:2:297"
            },
            "returnParameters": {
              "id": 72133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72141,
                  "src": "8656:4:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:4:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8655:6:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72155,
            "nodeType": "FunctionDefinition",
            "src": "8818:133:297",
            "nodes": [],
            "body": {
              "id": 72154,
              "nodeType": "Block",
              "src": "8886:65:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72149,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "8911:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72150,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "8931:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8931:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72148,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "8903:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8903:41:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72147,
                  "id": 72153,
                  "nodeType": "Return",
                  "src": "8896:48:297"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 72142,
              "nodeType": "StructuredDocumentation",
              "src": "8733:80:297",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "8827:18:297",
            "overrides": {
              "id": 72144,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8862:8:297"
            },
            "parameters": {
              "id": 72143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8845:2:297"
            },
            "returnParameters": {
              "id": 72147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72155,
                  "src": "8880:4:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8880:4:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8879:6:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72169,
            "nodeType": "FunctionDefinition",
            "src": "9047:133:297",
            "nodes": [],
            "body": {
              "id": 72168,
              "nodeType": "Block",
              "src": "9115:65:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72163,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "9140:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 72164,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            72239
                          ],
                          "referencedDeclaration": 72239,
                          "src": "9160:10:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 72165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9160:12:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72162,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "9132:7:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 72166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9132:41:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72161,
                  "id": 72167,
                  "nodeType": "Return",
                  "src": "9125:48:297"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 72156,
              "nodeType": "StructuredDocumentation",
              "src": "8957:85:297",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "9056:18:297",
            "overrides": {
              "id": 72158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9091:8:297"
            },
            "parameters": {
              "id": 72157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9074:2:297"
            },
            "returnParameters": {
              "id": 72161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72169,
                  "src": "9109:4:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72159,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9109:4:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9108:6:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 72226,
            "nodeType": "FunctionDefinition",
            "src": "9427:491:297",
            "nodes": [],
            "body": {
              "id": 72225,
              "nodeType": "Block",
              "src": "9556:362:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72183,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72172,
                        "src": "9593:4:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72184,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72174,
                        "src": "9599:2:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 72185,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72176,
                        "src": "9603:7:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 72180,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9566:5:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Multiwrap_$72253_$",
                          "typeString": "type(contract super Multiwrap)"
                        }
                      },
                      "id": 72182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 156923,
                      "src": "9566:26:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 72186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9566:45:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72187,
                  "nodeType": "ExpressionStatement",
                  "src": "9566:45:297"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 72209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 72202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 72195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9723:35:297",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 72189,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71735,
                              "src": "9732:13:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 72192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9755:1:297",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 72191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9747:7:297",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 72190,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9747:7:297",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 72193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9747:10:297",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72188,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "9724:7:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 72194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9724:34:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72196,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72172,
                          "src": "9762:4:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9778:1:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 72198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9770:7:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 72197,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9770:7:297",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 72200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9770:10:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9762:18:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9723:57:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 72208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 72203,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72174,
                        "src": "9784:2:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 72206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9798:1:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 72205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9790:7:297",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9790:7:297",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9790:10:297",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9784:16:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9723:77:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72224,
                  "nodeType": "IfStatement",
                  "src": "9719:193:297",
                  "trueBody": {
                    "id": 72223,
                    "nodeType": "Block",
                    "src": "9802:110:297",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 72219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 72212,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71735,
                                    "src": "9832:13:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 72213,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72172,
                                    "src": "9847:4:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 72211,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "9824:7:297",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 72214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9824:28:297",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 72216,
                                    "name": "TRANSFER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 71735,
                                    "src": "9864:13:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 72217,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72174,
                                    "src": "9879:2:297",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 72215,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "9856:7:297",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 72218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9856:26:297",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9824:58:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "215452414e534645525f524f4c45",
                              "id": 72220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9884:16:297",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9ea1468ca8317e9b6840862ccf0a85b5fb83560bab47947c35ac0dba17fc72ad",
                                "typeString": "literal_string \"!TRANSFER_ROLE\""
                              },
                              "value": "!TRANSFER_ROLE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9ea1468ca8317e9b6840862ccf0a85b5fb83560bab47947c35ac0dba17fc72ad",
                                "typeString": "literal_string \"!TRANSFER_ROLE\""
                              }
                            ],
                            "id": 72210,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9816:7:297",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 72221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9816:85:297",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 72222,
                        "nodeType": "ExpressionStatement",
                        "src": "9816:85:297"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              156923
            ],
            "documentation": {
              "id": 72170,
              "nodeType": "StructuredDocumentation",
              "src": "9364:58:297",
              "text": " @dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9436:20:297",
            "overrides": {
              "id": 72178,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9547:8:297"
            },
            "parameters": {
              "id": 72177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72172,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9474:4:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72226,
                  "src": "9466:12:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9466:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72174,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9496:2:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72226,
                  "src": "9488:10:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9488:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72176,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9516:7:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72226,
                  "src": "9508:15:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9508:7:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9456:73:297"
            },
            "returnParameters": {
              "id": 72179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9556:0:297"
            },
            "scope": 72253,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72239,
            "nodeType": "FunctionDefinition",
            "src": "9924:231:297",
            "nodes": [],
            "body": {
              "id": 72238,
              "nodeType": "Block",
              "src": "10093:62:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 72234,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "10110:25:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 72235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "10110:36:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 72236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10110:38:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 72233,
                  "id": 72237,
                  "nodeType": "Return",
                  "src": "10103:45:297"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "9933:10:297",
            "overrides": {
              "id": 72230,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 72228,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "10009:18:297"
                },
                {
                  "id": 72229,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "10029:25:297"
                }
              ],
              "src": "10000:55:297"
            },
            "parameters": {
              "id": 72227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9943:2:297"
            },
            "returnParameters": {
              "id": 72233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72232,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "10081:6:297",
                  "nodeType": "VariableDeclaration",
                  "scope": 72239,
                  "src": "10073:14:297",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10073:7:297",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10072:16:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 72252,
            "nodeType": "FunctionDefinition",
            "src": "10161:227:297",
            "nodes": [],
            "body": {
              "id": 72251,
              "nodeType": "Block",
              "src": "10328:60:297",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 72247,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "10345:25:297",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 72248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "10345:34:297",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 72249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:36:297",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 72246,
                  "id": 72250,
                  "nodeType": "Return",
                  "src": "10338:43:297"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "10170:8:297",
            "overrides": {
              "id": 72243,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 72241,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "10244:18:297"
                },
                {
                  "id": 72242,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "10264:25:297"
                }
              ],
              "src": "10235:55:297"
            },
            "parameters": {
              "id": 72240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10178:2:297"
            },
            "returnParameters": {
              "id": 72246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72252,
                  "src": "10308:14:297",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 72244,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10308:5:297",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10307:16:297"
            },
            "scope": 72253,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 71699,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1604:13:297"
            },
            "id": 71700,
            "nodeType": "InheritanceSpecifier",
            "src": "1604:13:297"
          },
          {
            "baseName": {
              "id": 71701,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1623:16:297"
            },
            "id": 71702,
            "nodeType": "InheritanceSpecifier",
            "src": "1623:16:297"
          },
          {
            "baseName": {
              "id": 71703,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1645:7:297"
            },
            "id": 71704,
            "nodeType": "InheritanceSpecifier",
            "src": "1645:7:297"
          },
          {
            "baseName": {
              "id": 71705,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1658:7:297"
            },
            "id": 71706,
            "nodeType": "InheritanceSpecifier",
            "src": "1658:7:297"
          },
          {
            "baseName": {
              "id": 71707,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1671:21:297"
            },
            "id": 71708,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:21:297"
          },
          {
            "baseName": {
              "id": 71709,
              "name": "TokenStore",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49141,
              "src": "1698:10:297"
            },
            "id": 71710,
            "nodeType": "InheritanceSpecifier",
            "src": "1698:10:297"
          },
          {
            "baseName": {
              "id": 71711,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152055,
              "src": "1714:26:297"
            },
            "id": 71712,
            "nodeType": "InheritanceSpecifier",
            "src": "1714:26:297"
          },
          {
            "baseName": {
              "id": 71713,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1746:25:297"
            },
            "id": 71714,
            "nodeType": "InheritanceSpecifier",
            "src": "1746:25:297"
          },
          {
            "baseName": {
              "id": 71715,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1777:20:297"
            },
            "id": 71716,
            "nodeType": "InheritanceSpecifier",
            "src": "1777:20:297"
          },
          {
            "baseName": {
              "id": 71717,
              "name": "ERC721EnumerableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157090,
              "src": "1803:27:297"
            },
            "id": 71718,
            "nodeType": "InheritanceSpecifier",
            "src": "1803:27:297"
          },
          {
            "baseName": {
              "id": 71719,
              "name": "IMultiwrap",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55301,
              "src": "1836:10:297"
            },
            "id": 71720,
            "nodeType": "InheritanceSpecifier",
            "src": "1836:10:297"
          }
        ],
        "canonicalName": "Multiwrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          72253,
          55301,
          157090,
          157121,
          156598,
          157148,
          156732,
          158919,
          158931,
          157897,
          75765,
          157714,
          152055,
          49141,
          78877,
          78911,
          31122,
          26795,
          39046,
          38747,
          50516,
          50491,
          38400,
          50418,
          39646,
          50644,
          31290,
          31146,
          78938,
          31557,
          48858,
          51477,
          34723,
          151869,
          49679
        ],
        "name": "Multiwrap",
        "nameLocation": "1587:9:297",
        "scope": 72254,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 297
}