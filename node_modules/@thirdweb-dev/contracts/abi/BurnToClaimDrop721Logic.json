{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "originContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "burnTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "TokensBurnedAndClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "burnAndClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "encryptedData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBurnToClaimInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "getRevealURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchId",
          "type": "uint256"
        }
      ],
      "name": "isEncryptedBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "originContractAddress",
              "type": "address"
            },
            {
              "internalType": "enum IBurnToClaim.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintPriceForNewToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IBurnToClaim.BurnToClaimInfo",
          "name": "_burnToClaimInfo",
          "type": "tuple"
        }
      ],
      "name": "setBurnToClaimInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyBurnToClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2254:14593:385:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "2254:14593:385:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4513:269;;;;;;;;;;-1:-1:-1;4513:269:385;;;;;:::i;:::-;;:::i;:::-;;;661:14:641;;654:22;636:41;;624:2;609:18;4513:269:385;;;;;;;;1135:291:45;;;;;;;;;;-1:-1:-1;1135:291:45;;;;;:::i;:::-;;:::i;:::-;;7554:179:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1001:197:60:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1811:32:641;;;1793:51;;1781:2;1766:18;1001:197:60;1647:203:641;9213:290:42;;;;;;;;;;-1:-1:-1;9213:290:42;;;;;:::i;:::-;;:::i;15164:155:385:-;;;;;;;;;;-1:-1:-1;15164:155:385;;;;;:::i;:::-;;:::i;1657:173:56:-;;;;;;;;;;-1:-1:-1;1657:173:56;;;;;:::i;:::-;;:::i;6536:868:385:-;;;;;;:::i;:::-;;:::i;3042:393:42:-;;;;;;;;;;;;;:::i;:::-;;;3147:25:641;;;3135:2;3120:18;3042:393:42;3001:177:641;2002:269:59;;;;;;;;;;-1:-1:-1;2002:269:59;;;;;:::i;:::-;;:::i;5387:2299:49:-;;;;;;;;;;-1:-1:-1;5387:2299:49;;;;;:::i;:::-;;:::i;15366:211:385:-;;;;;;;;;;-1:-1:-1;15366:211:385;;;;;:::i;:::-;;:::i;1789:315:44:-;;;;;;;;;;-1:-1:-1;1789:315:44;;;;;:::i;:::-;;:::i;1790:347:62:-;;;;;;;;;;-1:-1:-1;1790:347:62;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13817:208:385:-;;;;;;;;;;;;;:::i;937::54:-;;;;;;;;;;-1:-1:-1;937:208:54;;;;;:::i;:::-;;:::i;13408:108:385:-;;;;;;;;;;;;;:::i;7679:353::-;;;;;;;;;;-1:-1:-1;7679:353:385;;;;;:::i;:::-;;:::i;15628:219::-;;;;;;;;;;-1:-1:-1;15628:219:385;;;;;:::i;:::-;;:::i;14081:184::-;;;;;;;;;;-1:-1:-1;14081:184:385;;;;;:::i;:::-;;:::i;4878:228:48:-;;;;;;;;;;-1:-1:-1;4878:228:48;;;;;:::i;:::-;;:::i;2377:473:62:-;;;;;;;;;;-1:-1:-1;2377:473:62;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5509:32:641;;;5491:51;;5590:6;5578:19;;;5573:2;5558:18;;5551:47;5464:18;2377:473:62;5319:285:641;699:232:54;;;;;;;;;;;;;:::i;1293:235:51:-;;;;;;;;;;-1:-1:-1;1293:235:51;;;;;:::i;:::-;;:::i;3634:256:62:-;;;;;;;;;;-1:-1:-1;3634:256:62;;;;;:::i;:::-;;:::i;7369:123:42:-;;;;;;;;;;-1:-1:-1;7369:123:42;;;;;:::i;:::-;;:::i;1381:207:44:-;;;;;;;;;;;;;:::i;1607:228:60:-;;;;;;;;;;-1:-1:-1;1607:228:60;;;;;:::i;:::-;;:::i;8339:249:49:-;;;;;;;;;;-1:-1:-1;8339:249:49;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4298:284:42:-;;;;;;;;;;-1:-1:-1;4298:284:42;;;;;:::i;:::-;;:::i;2418:2872:49:-;;;;;;;;;;-1:-1:-1;2418:2872:49;;;;;:::i;:::-;;:::i;921:208:45:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1091:1264:49:-;;;;;;:::i;:::-;;:::i;1314:167:56:-;;;;;;;;;;;;;:::i;1452:188:46:-;;;;;;;;;;-1:-1:-1;1452:188:46;;;;;:::i;:::-;;:::i;7797:183:42:-;;;;;;;;;;;;;:::i;4915:288:62:-;;;;;;;;;;-1:-1:-1;4915:288:62;;;;;:::i;:::-;;:::i;2200:658:48:-;;;;;;;;;;-1:-1:-1;2200:658:48;;;;;:::i;:::-;;:::i;1111:222::-;;;;;;;;;;-1:-1:-1;1111:222:48;;;;;:::i;:::-;;:::i;14949:174:385:-;;;;;;;;;;-1:-1:-1;14949:174:385;;;;;:::i;:::-;;:::i;13101:225::-;;;;;;;;;;;;;:::i;8670:327:49:-;;;;;;;;;;-1:-1:-1;8670:327:49;;;;;:::i;:::-;;:::i;2960:230:62:-;;;;;;;;;;;;;:::i;15898:252:385:-;;;;;;;;;;-1:-1:-1;15898:252:385;;;;;:::i;:::-;;:::i;1432:970:45:-;;;;;;;;;;-1:-1:-1;1432:970:45;;;;;:::i;:::-;;:::i;7774:500:49:-;;;;;;;;;;;;;:::i;4080:402:385:-;;;;;;;;;;-1:-1:-1;4080:402:385;;;;;:::i;:::-;;:::i;5838:415::-;;;;;;;;;;-1:-1:-1;5838:415:385;;;;;:::i;:::-;;:::i;5156:575::-;;;;;;;;;;-1:-1:-1;5156:575:385;;;;;:::i;:::-;;:::i;1288:245:59:-;;;;;;;;;;;;;:::i;644:219:49:-;;;;;;;;;;;;;:::i;:::-;;;;14937:25:641;;;14993:2;14978:18;;14971:34;;;;14910:18;644:219:49;14763:248:641;3350:1283:48;;;;;;;;;;-1:-1:-1;3350:1283:48;;;;;:::i;:::-;;:::i;2077:219:46:-;;;;;;;;;;;;;:::i;10000:243:42:-;;;;;;;;;;-1:-1:-1;10000:243:42;;;;;:::i;:::-;;:::i;4513:269:385:-;4667:4;4694:36;4718:11;4694:23;:36::i;:::-;:81;;;-1:-1:-1;;;;;;;;;;4734:41:385;;;4694:81;4687:88;4513:269;-1:-1:-1;;4513:269:385:o;1135:291:45:-;1241:20;:18;:20::i;:::-;1233:48;;;;-1:-1:-1;;;1233:48:45;;16244:2:641;1233:48:45;;;16226:21:641;16283:2;16263:18;;;16256:30;-1:-1:-1;;;16302:18:641;;;16295:45;16357:18;;1233:48:45;;;;;;;;;1292:36;1331:39;:37;:39::i;:::-;1292:78;-1:-1:-1;1403:16:45;1292:78;1380:39;1403:16;1292:78;1380:39;:::i;:::-;-1:-1:-1;;;;1135:291:45:o;7554:179:42:-;7608:13;7633:32;7668:31;:29;:31::i;:::-;7633:66;;7716:4;:10;;7709:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7554:179;:::o;1001:197:60:-;1063:7;1082:36;1121:39;:37;:39::i;:::-;1177:14;-1:-1:-1;;;;;1177:14:60;;1001:197;-1:-1:-1;;1001:197:60:o;9213:290:42:-;9289:7;9308:32;9343:31;:29;:31::i;:::-;9308:66;;9390:16;9398:7;9390;:16::i;:::-;9385:64;;9415:34;;-1:-1:-1;;;9415:34:42;;;;;;;;;;;9385:64;9467:29;;;;:20;;:29;;-1:-1:-1;9467:29:42;;;;-1:-1:-1;;;;;9467:29:42;;9213:290::o;15164:155:385:-;15260:8;2386:45:55;2434:57;:55;:57::i;:::-;2611:24;;2386:105;;-1:-1:-1;2611:24:55;;2607:211;;;356:42;2655:45;:49;2651:157;;2724:69;;-1:-1:-1;;;2724:69:55;;356:42;;2724;;:69;;2775:4;;2782:10;;2724:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2651:157;15280:32:385::1;15294:8;15304:7;15280:13;:32::i;1657:173:56:-:0;1727:14;:12;:14::i;:::-;1722:70;;1757:24;;-1:-1:-1;;;1757:24:56;;;;;;;:::i;1722:70::-;1801:22;1813:9;1801:11;:22::i;:::-;1657:173;:::o;6536:868:385:-;6626:28;6644:9;6626:17;:28::i;:::-;6718:19;6740:16;:14;:16::i;:::-;6718:38;;6766:55;6784:11;6797:12;6811:9;6766:17;:55::i;:::-;6831:57;6851:11;6864:12;6878:9;6831:19;:57::i;:::-;6924:36;6963:39;:37;:39::i;:::-;7093:29;;;;7136:41;;;;6924:78;;-1:-1:-1;7012:175:385;;7054:1;;7070:9;;-1:-1:-1;;;;;7093:29:385;;;;7012:20;:175::i;:::-;7222:33;7232:11;7245:9;7222;:33::i;:::-;7316:42;;7293:104;;3147:25:641;;;7373:12:385;;-1:-1:-1;;;;;7293:104:385;;;;7316:42;;;7293:104;;3135:2:641;3120:18;7293:104:385;;;;;;;6616:788;;6536:868;;:::o;3042:393:42:-;3095:7;3114:32;3149:31;:29;:31::i;:::-;3383:17;;;;3362:18;;:38;;3042:393;-1:-1:-1;;3042:393:42:o;2002:269:59:-;2119:24;:22;:24::i;:::-;2114:80;;2159:24;;-1:-1:-1;;;2159:24:59;;;;;;;:::i;2114:80::-;2203:61;2225:21;2248:15;2203:21;:61::i;:::-;2002:269;;:::o;5387:2299:49:-;5626:15;5653:29;5685:25;:23;:25::i;:::-;5720:39;5762:44;;;:30;;;;:44;;;;;;;;5720:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5720:86:49;;;;;;;;;;5653:57;;-1:-1:-1;5720:39:49;;:86;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5720:86:49;;;;-1:-1:-1;;;5837:40:49;;;;5908:31;;;;5973:26;;;;6014:28;;;;5720:86;;-1:-1:-1;5837:40:49;;5908:31;;5973:26;6014:42;6010:515;;6089:425;6125:21;:15;;:21;:::i;:::-;6089:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6164:28:49;;;;;;-1:-1:-1;6283:8:49;;6317:38;;;;;6381:29;;;;;6436:24;;;;;;;;:::i;:::-;6241:241;;-1:-1:-1;;;;;;19477:2:641;19513:15;;;19509:24;;6241:241:49;;;19497:37:641;19550:12;;;19543:28;;;;19587:12;;;19580:28;;;;19642:15;;;19638:24;19624:12;;;19617:46;19679:13;;6241:241:49;;;;;;;;;;;;6210:290;;;;;;6089:18;:425::i;:::-;-1:-1:-1;6072:442:49;-1:-1:-1;6010:515:49;6539:10;6535:534;;;6578:38;;;;:129;;6697:10;6578:129;;;6640:15;:38;;;6578:129;6565:142;;-1:-1:-1;;6734:15:49;:29;;;:50;;:127;;6851:10;6734:127;;;6803:15;:29;;;6734:127;6721:140;;-1:-1:-1;;6891:15:49;:29;;;:50;;:92;;;;-1:-1:-1;6981:1:49;6945:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6945:38:49;;;6891:92;:167;;7045:13;6891:167;;;7002:24;;;;;;;;:::i;:::-;6875:183;;6535:534;7079:29;7111:4;:19;;:41;;:55;7153:12;7111:55;;;;;;;;;;;:65;7167:8;-1:-1:-1;;;;;7111:65:49;-1:-1:-1;;;;;7111:65:49;;;;;;;;;;;;;7079:97;;7204:13;-1:-1:-1;;;;;7191:26:49;:9;-1:-1:-1;;;;;7191:26:49;;;:58;;;;7239:10;7221:14;:28;;7191:58;7187:115;;;7265:26;;-1:-1:-1;;;7265:26:49;;19905:2:641;7265:26:49;;;19887:21:641;19944:2;19924:18;;;19917:30;-1:-1:-1;;;19963:18:641;;;19956:46;20019:18;;7265:26:49;19703:340:641;7187:115:49;7316:14;;;:66;;-1:-1:-1;7371:10:49;7335:33;7347:21;7335:9;:33;:::i;:::-;:46;7316:66;7312:111;;;7398:14;;-1:-1:-1;;;7398:14:49;;;;;;20515:2:641;20497:21;;;20554:1;20534:18;;;20527:29;-1:-1:-1;;;20587:2:641;20572:18;;20565:34;20631:2;20616:18;;20313:327;7312:111:49;7482:17;:36;;;7470:9;7436:17;:31;;;:43;;;;:::i;:::-;:82;7432:133;;;7534:20;;-1:-1:-1;;;7534:20:49;;20847:2:641;7534:20:49;;;20829:21:641;20886:2;20866:18;;;20859:30;-1:-1:-1;;;20905:18:641;;;20898:40;20955:18;;7534:20:49;20645:334:641;7432:133:49;7579:32;;7614:15;-1:-1:-1;7575:105:49;;;7645:24;;-1:-1:-1;;;7645:24:49;;21186:2:641;7645:24:49;;;21168:21:641;21225:2;21205:18;;;21198:30;-1:-1:-1;;;21244:18:641;;;21237:44;21298:18;;7645:24:49;20984:338:641;7575:105:49;5643:2043;;;;;;5387:2299;;;;;;;;:::o;15366:211:385:-;15517:4;1527:45:55;1575:57;:55;:57::i;:::-;1752:24;;1527:105;;-1:-1:-1;1752:24:55;;1748:542;;;356:42;1796:45;:49;1792:488;;-1:-1:-1;;;;;2089:18:55;;2097:10;2089:18;2085:94;;;15533:37:385::1;15552:4;15558:2;15562:7;15533:18;:37::i;:::-;2154:7:55::0;;;2085:94;2196:69;;-1:-1:-1;;;2196:69:55;;356:42;;2196;;:69;;2247:4;;2254:10;;2196:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1792:488;15533:37:385::1;15552:4;15558:2;15562:7;15533:18;:37::i;:::-;1517:790:55::0;15366:211:385;;;;:::o;1789:315:44:-;1853:7;1872:42;1917:51;:49;:51::i;:::-;1872:96;;1993:17;:15;:17::i;:::-;1983:6;:27;1979:81;;2026:23;;-1:-1:-1;;;2026:23:44;;21529:2:641;2026:23:44;;;21511:21:641;21568:2;21548:18;;;21541:30;-1:-1:-1;;;21587:18:641;;;21580:43;21640:18;;2026:23:44;21327:337:641;1979:81:44;2076:4;:13;;2090:6;2076:21;;;;;;;;:::i;:::-;;;;;;;;;2069:28;;;1789:315;;;:::o;1790:347:62:-;1927:16;1945:21;1983:17;2002:11;2017:31;2040:7;2017:22;:31::i;:::-;1982:66;;-1:-1:-1;1982:66:62;;-1:-1:-1;1982:66:62;;;-1:-1:-1;2124:6:62;2105:15;1982:66;2105:9;:15;:::i;:::-;2104:26;;;;:::i;:::-;2088:42;;1972:165;;1790:347;;;;;:::o;13817:208:385:-;13864:7;13883:43;13929:53;:51;:53::i;:::-;13999:19;;13817:208;-1:-1:-1;;13817:208:385:o;937::54:-;1015:28;:26;:28::i;:::-;1007:84;;;;-1:-1:-1;;;1007:84:54;;22433:2:641;1007:84:54;;;22415:21:641;22472:2;22452:18;;;22445:30;22511:34;22491:18;;;22484:62;-1:-1:-1;;;22562:18:641;;;22555:41;22613:19;;1007:84:54;22231:407:641;1007:84:54;1101:37;1125:12;1101:23;:37::i;13408:108:385:-;13460:7;13486:23;:21;:23::i;:::-;13479:30;;13408:108;:::o;7679:353::-;7758:42;2896:4;7787:12;:10;:12::i;:::-;7758:8;:42::i;:::-;7750:65;;;;-1:-1:-1;;;7750:65:385;;22845:2:641;7750:65:385;;;22827:21:641;22884:2;22864:18;;;22857:30;-1:-1:-1;;;22903:18:641;;;22896:40;22953:18;;7750:65:385;22643:334:641;7750:65:385;7826:43;7872:53;:51;:53::i;:::-;7935:37;;;7987:38;;3147:25:641;;;7935:37:385;;-1:-1:-1;7987:38:385;;3135:2:641;3120:18;7987:38:385;;;;;;;;7740:292;7679:353;:::o;15628:219::-;15783:4;1527:45:55;1575:57;:55;:57::i;:::-;1752:24;;1527:105;;-1:-1:-1;1752:24:55;;1748:542;;;356:42;1796:45;:49;1792:488;;-1:-1:-1;;;;;2089:18:55;;2097:10;2089:18;2085:94;;;15799:41:385::1;15822:4;15828:2;15832:7;15799:22;:41::i;2085:94:55:-:0;2196:69;;-1:-1:-1;;;2196:69:55;;356:42;;2196;;:69;;2247:4;;2254:10;;2196:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1792:488;15799:41:385::1;15822:4;15828:2;15832:7;15799:22;:41::i;14081:184::-:0;14238:20;14244:7;14253:4;14238:5;:20::i;4878:228:48:-;4943:4;4959:38;5000:43;:41;:43::i;:::-;5098:1;5060:28;;;;;;;;;;:35;;4959:84;;-1:-1:-1;5098:1:48;;5060:35;;;:::i;:::-;;;:39;5053:46;;;4878:228;;;:::o;2377:473:62:-;2457:7;2466:6;2484:32;2519:31;:29;:31::i;:::-;2561:34;2598;;;:24;;;;:34;;;;;;;;;2561:71;;;;;;;;;;-1:-1:-1;;;;;2561:71:62;;;;;;;;;;;2484:66;;-1:-1:-1;2561:71:62;2662:39;:181;;2788:25;;2822:19;;;;2662:181;;;2721:21;;-1:-1:-1;;;;;2721:21:62;;;-1:-1:-1;;;2751:15:62;;;;2662:181;2643:200;;;;;;2377:473;;;:::o;699:232:54:-;762:4;778:45;826:57;:55;:57::i;:::-;900:24;;;;699:232;-1:-1:-1;;699:232:54:o;1293:235:51:-;-1:-1:-1;;;;;1489:32:51;1369:4;1489:32;;;301:36;1489:32;;;;;;;;;1293:235::o;3634:256:62:-;3746:20;:18;:20::i;:::-;3741:76;;3782:24;;-1:-1:-1;;;3782:24:62;;;;;;;:::i;3741:76::-;3827:56;3852:17;3871:11;3827:24;:56::i;7369:123:42:-;7433:7;7459:21;7472:7;7459:12;:21::i;:::-;:26;;7369:123;-1:-1:-1;;7369:123:42:o;1381:207:44:-;1429:7;1448:42;1493:51;:49;:51::i;1607:228:60:-;1697:29;:27;:29::i;:::-;1692:85;;1742:24;;-1:-1:-1;;;1742:24:60;;;;;;;:::i;1692:85::-;1786:42;1813:14;1786:26;:42::i;8339:249:49:-;8415:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:31:49;8458:29;8490:25;:23;:25::i;:::-;8537:19;:44;;;:30;;;;:44;;;;;;;;;8525:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8525:56:49;;;;;;;;;;8458:57;;-1:-1:-1;8525:56:49;;8537:44;;8525:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8448:140;8339:249;;;:::o;4298:284:42:-;4362:7;4381:32;4416:31;:29;:31::i;:::-;4381:66;-1:-1:-1;;;;;;4461:19:42;;4457:60;;4489:28;;-1:-1:-1;;;4489:28:42;;;;;;;;;;;4457:60;-1:-1:-1;;;;;4542:24:42;;;;;;;:17;;;;:24;;-1:-1:-1;4542:24:42;;;:32;-1:-1:-1;;;;;4542:32:42;;4298:284::o;2418:2872:49:-;2583:24;:22;:24::i;:::-;2578:80;;2623:24;;-1:-1:-1;;;2623:24:49;;;;;;;:::i;2578:80::-;2668:29;2700:25;:23;:25::i;:::-;2764:34;;2837:25;;;;2668:57;;-1:-1:-1;2764:34:49;;3279:108;;;;3337:39;3358:18;3337;:39;:::i;:::-;3321:55;;3279:108;3397:25;;;:46;;;3453:50;;;3397:19;;3559:658;3579:22;;;3559:658;;;3630:6;;;:69;;;3670:11;;3682:1;3670:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3640:59;;3630:69;3622:84;;;;-1:-1:-1;;;3622:84:49;;23522:2:641;3622:84:49;;;23504:21:641;23561:1;23541:18;;;23534:29;-1:-1:-1;;;23579:18:641;;;23572:32;23621:18;;3622:84:49;23320:325:641;3622:84:49;3721:28;3752:30;;;3721:28;3783:17;3799:1;3783:13;:17;:::i;:::-;3752:49;;;;;;;;;;;:63;;;3721:94;;3856:11;;3868:1;3856:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3833:20;:56;3829:123;;;3909:28;;-1:-1:-1;;;3909:28:49;;23852:2:641;3909:28:49;;;23834:21:641;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:641;;;23903:48;23968:18;;3909:28:49;23650:342:641;3829:123:49;4018:11;;4030:1;4018:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3966:30;;;:19;3997:17;4013:1;3997:13;:17;:::i;:::-;3966:49;;;;;;;;;;;:66;;;;;;:::i;:::-;-1:-1:-1;4112:20:49;;-1:-1:-1;4046:30:49;;;:19;4077:17;4093:1;4077:13;:17;:::i;:::-;4046:49;;;;;;;;;;;-1:-1:-1;4046:49:49;:63;;:86;4177:11;;4189:1;4177:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3603:3:49;;-1:-1:-1;3603:3:49;;;:::i;:::-;;;;3559:658;;;;4757:22;4753:456;;;4812:18;4795:134;4836:13;4832:1;:17;4795:134;;;4881:19;:33;;;:30;;;;:33;;;;;4874:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4874:40:49;;;4881:33;4874:40;;;;4881:19;4874:40;:::i;:::-;;;4851:3;;;;;:::i;:::-;;;;4795:134;;;;4753:456;;;4963:39;;;4959:240;;;5039:11;5022:163;5063:18;5059:1;:22;5022:163;;;5117:30;;;:19;5148:17;5164:1;5148:13;:17;:::i;:::-;5117:49;;;;;;;;;;;-1:-1:-1;5117:49:49;;;5110:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5110:56:49;;;5117:49;5110:56;;;;-1:-1:-1;5110:56:49;:::i;:::-;;;5083:3;;;;;:::i;:::-;;;;5022:163;;;;4959:240;5224:59;5247:11;;5260:22;5224:59;;;;;;;;:::i;:::-;;;;;;;;2568:2722;;;;;2418:2872;;;:::o;921:208:45:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:39:45;:37;:39::i;:::-;1095:27;;;;;;;;;;;-1:-1:-1;;;;;1095:27:45;;;;;;-1:-1:-1;1095:27:45;;;;;;;-1:-1:-1;;;1095:27:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1095:27:45;;;;;;;921:208;-1:-1:-1;;921:208:45:o;1091:1264:49:-;1344:85;1357:9;1368;1379;1390:14;1406:15;1423:5;1344:12;:85::i;:::-;1440:25;1468:27;:25;:27::i;:::-;1440:55;;1506:103;1518:17;1537:16;:14;:16::i;:::-;1555:9;1566;1577:14;1593:15;1506:11;:103::i;:::-;;1654:29;1686:25;:23;:25::i;:::-;1721:19;:49;;;:30;;;;:49;;;;;:63;:76;;1654:57;;-1:-1:-1;1788:9:49;;1721:63;;:19;:76;;1788:9;;1721:76;:::i;:::-;;;;-1:-1:-1;;1807:19:49;:60;;;:41;;;:60;;;;;1889:9;;1868:16;:14;:16::i;:::-;-1:-1:-1;;;;;1807:78:49;-1:-1:-1;;;;;1807:78:49;;;;;;;;;;;;;:91;;;;;;;:::i;:::-;;;;-1:-1:-1;1955:70:49;;-1:-1:-1;1984:1:49;1988:9;1999;2010:14;1955:20;:70::i;:::-;2084:20;2107:44;2130:9;2141;2107:22;:44::i;:::-;2084:67;;2218:9;-1:-1:-1;;;;;2167:86:49;2200:16;:14;:16::i;:::-;-1:-1:-1;;;;;2167:86:49;2181:17;2167:86;2229:12;2243:9;2167:86;;;;;;14937:25:641;;;14993:2;14978:18;;14971:34;14925:2;14910:18;;14763:248;2167:86:49;;;;;;;;1334:1021;;;1091:1264;;;;;;:::o;1314:167:56:-;1361:7;1380:32;1415:31;:29;:31::i;1452:188:46:-;1529:20;:18;:20::i;:::-;1524:76;;1565:24;;-1:-1:-1;;;1565:24:46;;;;;;;:::i;1524:76::-;1610:23;1628:4;1610:17;:23::i;7797:183:42:-;7853:13;7878:32;7913:31;:29;:31::i;:::-;7878:66;;7961:4;:12;;7954:19;;;;;:::i;4915:288:62:-;5062:20;:18;:20::i;:::-;5057:76;;5098:24;;-1:-1:-1;;;5098:24:62;;;;;;;:::i;5057:76::-;5143:53;5169:8;5179:10;5191:4;5143:25;:53::i;:::-;4915:288;;;:::o;2200:658:48:-;2282:25;2319:38;2360:43;:41;:43::i;:::-;2414:25;2442:28;;;;;;;;;;2414:56;;2319:84;;-1:-1:-1;2414:25:48;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:12;:19;2507:1;2484:24;2480:82;;;2524:27;;-1:-1:-1;;;2524:27:48;;30404:2:641;2524:27:48;;;30386:21:641;30443:2;30423:18;;;30416:30;-1:-1:-1;;;30462:18:641;;;30455:47;30519:18;;2524:27:48;30202:341:641;2480:82:48;2573:25;2600:22;2637:12;2626:42;;;;;;;;;;;;:::i;:::-;2572:96;;;;2700:34;2715:12;2729:4;;2700:14;:34::i;:::-;2679:56;;2819:14;2781:11;2794:4;;2800:13;2764:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2754:61;;;;;;:79;2746:105;;;;-1:-1:-1;;;2746:105:48;;31988:2:641;2746:105:48;;;31970:21:641;32027:2;32007:18;;;32000:30;-1:-1:-1;;;32046:18:641;;;32039:43;32099:18;;2746:105:48;31786:337:641;2746:105:48;2309:549;;;;2200:658;;;;;:::o;1111:222::-;1173:12;1197:38;1238:43;:41;:43::i;:::-;1298:18;:28;;;;;;;;;;1291:35;;1197:84;;-1:-1:-1;1298:28:48;1291:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1111:222;;;:::o;14949:174:385:-;15053:8;2386:45:55;2434:57;:55;:57::i;:::-;2611:24;;2386:105;;-1:-1:-1;2611:24:55;;2607:211;;;356:42;2655:45;:49;2651:157;;2724:69;;-1:-1:-1;;;2724:69:55;;356:42;;2724;;:69;;2775:4;;2782:10;;2724:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2651:157;15073:43:385::1;15097:8;15107;15073:23;:43::i;13101:225::-:0;13147:7;13166:32;13201:31;:29;:31::i;8670:327:49:-;8789:29;8834;8866:25;:23;:25::i;:::-;8925:19;:55;;;:41;;:55;;;;;;;;-1:-1:-1;;;;;8925:65:49;;;;;;;;-1:-1:-1;;8925:65:49;;;;8670:327::o;2960:230:62:-;3025:7;3034:6;3052:32;3087:31;:29;:31::i;:::-;3136:21;-1:-1:-1;;;;;3136:21:62;;;-1:-1:-1;;;3166:15:62;;;;;;-1:-1:-1;3136:21:62;-1:-1:-1;;2960:230:62:o;15898:252:385:-;16080:4;1527:45:55;1575:57;:55;:57::i;:::-;1752:24;;1527:105;;-1:-1:-1;1752:24:55;;1748:542;;;356:42;1796:45;:49;1792:488;;-1:-1:-1;;;;;2089:18:55;;2097:10;2089:18;2085:94;;;16096:47:385::1;16119:4;16125:2;16129:7;16138:4;16096:22;:47::i;:::-;2154:7:55::0;;;2085:94;2196:69;;-1:-1:-1;;;2196:69:55;;356:42;;2196;;:69;;2247:4;;2254:10;;2196:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1792:488;16096:47:385::1;16119:4;16125:2;16129:7;16138:4;16096:22;:47::i;:::-;1517:790:55::0;15898:252:385;;;;;:::o;1432:970:45:-;1577:39;1619:20;:18;:20::i;:::-;1657:38;;1577:62;;-1:-1:-1;;;;;;1657:52:45;1649:89;;;;-1:-1:-1;;;1649:89:45;;32330:2:641;1649:89:45;;;32312:21:641;32369:2;32349:18;;;32342:30;-1:-1:-1;;;32388:18:641;;;32381:54;32452:18;;1649:89:45;32128:348:641;1649:89:45;1783:29;1753:16;:26;;;:59;;;;;;;;:::i;:::-;;1749:647;;;1836:9;1849:1;1836:14;1828:41;;;;-1:-1:-1;;;1828:41:45;;32683:2:641;1828:41:45;;;32665:21:641;32722:2;32702:18;;;32695:30;-1:-1:-1;;;32741:18:641;;;32734:44;32795:18;;1828:41:45;32481:338:641;1828:41:45;1899:38;;1891:65;;-1:-1:-1;;;1891:65:45;;;;;3147:25:641;;;-1:-1:-1;;;;;1891:80:45;;;;:55;;;;3120:18:641;;1891:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1891:80:45;;1883:99;;;;-1:-1:-1;;;1883:99:45;;33282:2:641;1883:99:45;;;33264:21:641;33321:1;33301:18;;;33294:29;-1:-1:-1;;;33339:18:641;;;33332:36;33385:18;;1883:99:45;33080:329:641;1883:99:45;1749:647;;;2033:30;2003:16;:26;;;:60;;;;;;;;:::i;:::-;;1999:397;;;2110:24;;;;2157:32;;;2149:61;;;;-1:-1:-1;;;2149:61:45;;33616:2:641;2149:61:45;;;33598:21:641;33655:2;33635:18;;;33628:30;-1:-1:-1;;;33674:18:641;;;33667:46;33730:18;;2149:61:45;33414:340:641;2149:61:45;2258:38;;2249:81;;-1:-1:-1;;;2249:81:45;;2334:9;;-1:-1:-1;;;;;2249:58:45;;;;:81;;2308:11;;2321:8;;2249:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;2224:161;;;;-1:-1:-1;;;2224:161:45;;34150:2:641;2224:161:45;;;34132:21:641;34189:1;34169:18;;;34162:29;-1:-1:-1;;;34207:18:641;;;34200:38;34255:18;;2224:161:45;33948:331:641;7774:500:49;7832:7;7851:29;7883:25;:23;:25::i;:::-;7985;;;;7948:34;;7851:57;;-1:-1:-1;7936:9:49;;7948:62;;7985:25;7948:62;:::i;:::-;7936:74;;7918:318;8028:34;;8024:38;;7918:318;;;8127:30;;;:19;8158:5;8162:1;8158;:5;:::i;:::-;8127:37;;;;;;;;;;;:52;;;8108:15;:71;8104:122;;8206:5;8210:1;8206;:5;:::i;:::-;8199:12;;;;7774:500;:::o;8104:122::-;8076:3;;;;:::i;:::-;;;;7918:318;;;-1:-1:-1;8246:21:49;;-1:-1:-1;;;8246:21:49;;34757:2:641;8246:21:49;;;34739::641;34796:2;34776:18;;;34769:30;-1:-1:-1;;;34815:18:641;;;34808:41;34866:18;;8246:21:49;34555:335:641;4080:402:385;4146:13;4172:15;4193:21;4205:8;4193:11;:21::i;:::-;4171:43;;;4224:22;4249:21;4261:8;4249:11;:21::i;:::-;4224:46;;4285:25;4302:7;4285:16;:25::i;:::-;4281:195;;;4357:8;4340:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;4326:46;;;;4080:402;;;:::o;4281:195::-;4434:8;4444:19;:8;:17;:19::i;:::-;4417:47;;;;;;;;;:::i;5838:415::-;5909:25;5954:35;3212:24;5976:12;:10;:12::i;5954:35::-;5946:59;;;;-1:-1:-1;;;5946:59:385;;36016:2:641;5946:59:385;;;35998:21:641;36055:2;36035:18;;;36028:30;-1:-1:-1;;;36074:18:641;;;36067:41;36125:18;;5946:59:385;35814:335:641;5946:59:385;6015:15;6033:25;6051:6;6033:17;:25::i;:::-;6015:43;;6082:27;6095:7;6104:4;;6082:12;:27::i;:::-;6068:41;;6120:30;6138:7;6120:30;;;;;;;;;;;;:17;:30::i;:::-;6160:33;6172:7;6181:11;6160;:33::i;:::-;6226:6;6209:37;6234:11;6209:37;;;;;;:::i;:::-;;;;;;;;5936:317;5838:415;;;;;:::o;5156:575::-;5303:15;5330:14;5347:23;:21;:23::i;:::-;5330:40;-1:-1:-1;5384:16:385;;5380:278;;5417:25;;5470:35;;;;5481:5;5470:35;:::i;:::-;5416:89;;;;5523:12;:19;5546:1;5523:24;;:48;;;;-1:-1:-1;5551:20:385;;;5523:48;5519:129;;;5591:42;5609:16;5618:7;5609:6;:16;:::i;:::-;5627:5;;5591:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5591:17:385;;-1:-1:-1;;;5591:42:385:i;:::-;5402:256;;5380:278;5675:49;5690:7;5699:17;;5718:5;;5675:14;:49::i;:::-;5668:56;5156:575;-1:-1:-1;;;;;;;5156:575:385:o;1288:245:59:-;1348:7;1357:6;1375:36;1414:39;:37;:39::i;644:219:49:-;691:7;700;719:29;751:25;:23;:25::i;:::-;794:34;;830:25;;;;;794:34;;830:25;;-1:-1:-1;644:219:49;-1:-1:-1;;644:219:49:o;3350:1283:48:-;3543:11;;3709:4;3703:11;;3803:19;;;3824:2;3799:28;3786:42;;;3874:22;;;3703:11;3526:14;3970:657;3994:6;3990:1;:10;3970:657;;;4076:12;4118:3;;4123:1;4101:24;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4101:24:48;;;;;;;;;4091:35;;4101:24;4091:35;;;;4314:21;;;;;4308:28;4402:13;4572:23;;;;;4565:38;4002:7;;-1:-1:-1;4328:1:48;4002:7;:::i;:::-;;;3970:657;;;;3464:1169;3350:1283;;;;;:::o;2077:219:46:-;2138:13;2163:41;2207:49;:47;:49::i;:::-;2163:93;;2273:4;:16;;2266:23;;;;;:::i;10000:243:42:-;10097:4;10113:32;10148:31;:29;:31::i;:::-;-1:-1:-1;;;;;10196:30:42;;;;;;;:23;;;;;:30;;;;;;;;:40;;;;;;;;;;-1:-1:-1;;10196:40:42;;;;;10000:243::o;3948:291::-;4041:4;-1:-1:-1;;;;;;4076:40:42;;-1:-1:-1;;;4076:40:42;;:104;;-1:-1:-1;;;;;;;4132:48:42;;-1:-1:-1;;;4132:48:42;4076:104;:156;;;-1:-1:-1;;;;;;;;;;947:40:85;;;4196:36:42;839:155:85;12693:142:385;12763:4;12786:42;12763:4;12815:12;:10;:12::i;642:223:45:-;522:34;;642:223::o;1435:205:42:-;538:29;;1435:205::o;321:222:60:-;229:33;;321:222::o;11407:258:42:-;11464:4;11480:32;11515:31;:29;:31::i;:::-;11480:66;-1:-1:-1;11603:18:42;;11593:28;;11563:95;;;;-1:-1:-1;11626:25:42;;;;:16;;;:25;;;;;:32;-1:-1:-1;;;11626:32:42;;;;11625:33;11563:95;11556:102;11407:258;-1:-1:-1;;;11407:258:42:o;366:259:54:-;257:43;;366:259::o;8749:403:42:-;8829:13;8845:35;8872:7;8845:26;:35::i;:::-;8829:51;;8900:5;-1:-1:-1;;;;;8894:11:42;:2;-1:-1:-1;;;;;8894:11:42;;8890:48;;;8914:24;;-1:-1:-1;;;8914:24:42;;;;;;;;;;;8890:48;8969:5;-1:-1:-1;;;;;8953:21:42;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8953:21:42;;8949:158;;8993:37;9010:5;9017:12;:10;:12::i;8993:37::-;8988:119;;9057:35;;-1:-1:-1;;;9057:35:42;;;;;;;;;;;8988:119;9117:28;9126:2;9130:7;9139:5;9117:8;:28::i;1945:259:56:-;2004:32;2039:31;:29;:31::i;:::-;2102:11;;-1:-1:-1;;;;;2123:23:56;;;-1:-1:-1;;;;;;2123:23:56;;;;;;2162:35;;2004:66;;-1:-1:-1;2102:11:56;;;;;2162:35;;2081:18;;2162:35;1994:210;;1945:259;:::o;8284:580:385:-;8354:47;8404:53;:51;:53::i;:::-;8354:103;;8467:39;8509:31;:29;:31::i;:::-;8577:23;;8634:25;;8467:73;;-1:-1:-1;8577:23:385;8707;:21;:23::i;:::-;8678:25;8694:9;8678:13;:25;:::i;:::-;:52;;8670:72;;;;-1:-1:-1;;;8670:72:385;;37089:2:641;8670:72:385;;;37071:21:641;37128:1;37108:18;;;37101:29;-1:-1:-1;;;37146:18:641;;;37139:37;37193:18;;8670:72:385;36887:330:641;8670:72:385;8760:20;;;:68;;-1:-1:-1;8813:15:385;8784:25;8800:9;8784:13;:25;:::i;:::-;:44;;8760:68;8752:105;;;;-1:-1:-1;;;8752:105:385;;37424:2:641;8752:105:385;;;37406:21:641;37463:2;37443:18;;;37436:30;-1:-1:-1;;;37482:18:641;;;37475:54;37546:18;;8752:105:385;37222:348:641;16374:111:385;16440:7;16466:12;:10;:12::i;2408:573:45:-;2552:39;2594:20;:18;:20::i;:::-;2552:62;-1:-1:-1;2659:29:45;2629:16;:26;;;:59;;;;;;;;:::i;:::-;;2625:350;;;2719:38;;2704:69;;-1:-1:-1;;;2704:69:45;;;;;3147:25:641;;;-1:-1:-1;;;;;2704:59:45;;;;;;3120:18:641;;2704:69:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2625:350;;;2824:30;2794:16;:26;;;:60;;;;;;;;:::i;:::-;;2790:185;;;2886:38;;2870:94;;-1:-1:-1;;;2870:94:45;;-1:-1:-1;;;;;37795:32:641;;;2870:94:45;;;37777:51:641;37844:18;;;37837:34;;;37887:18;;;37880:34;;;2870:60:45;;;;;;37750:18:641;;2870:94:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:439;2408:573;;;:::o;9243:1136:385:-;9443:19;9439:103;;9486:9;:14;9478:33;;;;-1:-1:-1;;;9478:33:385;;38127:2:641;9478:33:385;;;38109:21:641;38166:1;38146:18;;;38139:29;-1:-1:-1;;;38184:18:641;;;38177:36;38230:18;;9478:33:385;37925:329:641;9439:103:385;9553:28;9583:21;9608:20;:18;:20::i;:::-;9552:76;;-1:-1:-1;9552:76:385;-1:-1:-1;9639:21:385;-1:-1:-1;;;;;9663:35:385;;;:84;;9726:21;9663:84;;;9701:22;:20;:22::i;:::-;9639:108;-1:-1:-1;9758:18:385;9779:33;9798:14;9779:16;:33;:::i;:::-;9758:54;-1:-1:-1;9822:20:385;3519:6;9846:27;;;;9758:54;9846:27;:::i;:::-;9845:39;;;;:::i;:::-;9822:62;-1:-1:-1;9895:18:385;-1:-1:-1;;;;;9927:45:385;;397:42:277;9927:45:385;9923:176;;;-1:-1:-1;10004:9:385;:23;;9923:176;;;-1:-1:-1;10074:9:385;:14;9923:176;10116:13;10108:43;;;;-1:-1:-1;;;10108:43:385;;38461:2:641;10108:43:385;;;38443:21:641;38500:2;38480:18;;;38473:30;-1:-1:-1;;;38519:18:641;;;38512:47;38576:18;;10108:43:385;38259:341:641;10108:43:385;10162:97;10199:9;10210:12;:10;:12::i;:::-;10224:20;10246:12;10162:36;:97::i;:::-;10269:103;10306:9;10317:12;:10;:12::i;:::-;10331:13;10346:25;10359:12;10346:10;:25;:::i;:::-;10269:36;:103::i;:::-;9429:950;;;;;;9243:1136;;;;:::o;11744:102:42:-;11812:27;11822:2;11826:8;11812:27;;;;;;;;;;;;:9;:27::i;2354:473:59:-;2460:36;2499:39;:37;:39::i;:::-;2460:78;;2570:6;2552:15;:24;2548:80;;;2592:25;;-1:-1:-1;;;2592:25:59;;;;;;;:::i;2548:80::-;2638:45;;-1:-1:-1;;;;;;2693:49:59;-1:-1:-1;;;2638:45:59;;;;-1:-1:-1;;;;;;2693:49:59;;-1:-1:-1;;;;;2693:49:59;;;;;;;2758:62;;3147:25:641;;;2758:62:59;;3135:2:641;3120:18;2758:62:59;;;;;;;;2450:377;2354:473;;:::o;409:193:49:-;243:25;;409:193::o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;39106:19:641;;;39141:12;;;39134:28;;;39178:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;39106:19:641;;;39141:12;;;39134:28;;;39178:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;10305:164:42:-;10434:28;10444:4;10450:2;10454:7;10434:9;:28::i;495:247:44:-;166:40;;495:247::o;327:253:386:-;170:43;;327:253::o;1151:281:54:-;1222:45;1270:57;:55;:57::i;:::-;1338:39;;-1:-1:-1;;1338:39:54;;;;;;;;;1392:33;;636:41:641;;;1338:39:54;;-1:-1:-1;1392:33:54;;624:2:641;609:18;1392:33:54;496:187:641;1016:194:53;1072:7;1091:33;1127;:31;:33::i;16491:176:385:-;16589:14;16622:38;:36;:38::i;16156:212::-;16225:4;16336:19;;;395:32:57;16336:19:385;;;;;;;;-1:-1:-1;;;;;16336:25:385;;;;;;;;;;;;;;;16156:212::o;10535:179:42:-;10668:39;10685:4;10691:2;10695:7;10668:39;;;;;;;;;;;;:16;:39::i;18329:2457::-;18408:32;18443:31;:29;:31::i;:::-;18408:66;;18485:35;18523:21;18536:7;18523:12;:21::i;:::-;18570:18;;18485:59;;-1:-1:-1;18599:284:42;;;;18632:22;18674:4;-1:-1:-1;;;;;18658:20:42;:12;:10;:12::i;:::-;-1:-1:-1;;;;;18658:20:42;;:76;;;;18698:36;18715:4;18721:12;:10;:12::i;18698:36::-;18658:132;;;;18778:12;:10;:12::i;:::-;-1:-1:-1;;;;;18754:36:42;:20;18766:7;18754:11;:20::i;:::-;-1:-1:-1;;;;;18754:36:42;;18658:132;18632:159;;18811:17;18806:66;;18837:35;;-1:-1:-1;;;18837:35:42;;;;;;;;;;;18806:66;18618:265;18599:284;18893:51;18915:4;18929:1;18933:7;18942:1;18893:21;:51::i;:::-;19006:35;19023:1;19027:7;19036:4;19006:8;:35::i;:::-;-1:-1:-1;;;;;19365:23:42;;;19331:31;19365:23;;;:17;;;:23;;;;;;;;19402:24;;-1:-1:-1;;;;;;;;;;19402:24:42;;;;;;;;;-1:-1:-1;;;;;;19402:24:42;;;;19440:29;;;;;19425:1;19440:29;;;;;;;;-1:-1:-1;;;;;;19440:29:42;;;;;;;;;;19599:25;;;:16;;;:25;;;;;;19638:20;;-1:-1:-1;;;;19705:15:42;19672:49;;;-1:-1:-1;;;19672:49:42;-1:-1:-1;;;;;;19672:49:42;;;;;;;;;;19735:22;-1:-1:-1;;;19735:22:42;;;20023:11;;;20082:29;;;;;20129:13;;19365:23;;20082:29;;20129:13;20125:382;;20336:18;;20321:33;;20317:176;;20378:20;;20446:28;;;;-1:-1:-1;;;;;20420:54:42;-1:-1:-1;;;20420:54:42;-1:-1:-1;;;;;;20420:54:42;;;-1:-1:-1;;;;;20378:20:42;;20420:54;;;;20317:176;-1:-1:-1;;20532:35:42;;20559:7;;-1:-1:-1;20555:1:42;;-1:-1:-1;;;;;;20532:35:42;;;-1:-1:-1;;;;;;;;;;;20532:35:42;20555:1;;20532:35;-1:-1:-1;;20750:17:42;;;;:19;;;;;;;-1:-1:-1;;18329:2457:42:o;437:230:48:-;235:35;;437:230::o;625:205:62:-;216:28;;625:205::o;3977:421::-;4096:6;4082:11;:20;4078:76;;;4118:25;;-1:-1:-1;;;4118:25:62;;;;;;;:::i;4078:76::-;4164:32;4199:31;:29;:31::i;:::-;4241:41;;-1:-1:-1;;;;;4241:41:62;;-1:-1:-1;;;;;;4292:37:62;;;;;-1:-1:-1;;;4292:37:62;;;;;;;4345:46;;3147:25:641;;;4241:41:62;;-1:-1:-1;4241:41:62;4345:46;;3135:2:641;3120:18;4345:46:62;3001:177:641;6046:1266:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6176:31:42;:29;:31::i;:::-;6141:66;-1:-1:-1;6233:7:42;6331:18;;6324:25;;6320:928;;;6373:31;6407:22;;;:16;;;:22;;;;;;;;;6373:56;;;;;;;;;-1:-1:-1;;;;;6373:56:42;;;;-1:-1:-1;;;6373:56:42;;-1:-1:-1;;;;;6373:56:42;;;;;;;;-1:-1:-1;;;6373:56:42;;;;;;;;;;;;;;6451:779;;6504:14;;-1:-1:-1;;;;;6504:28:42;;6500:107;;6571:9;6046:1266;-1:-1:-1;;;;6046:1266:42:o;6500:107::-;-1:-1:-1;;;6967:6:42;7015:22;;;;:16;;;:22;;;;;;;;;7003:34;;;;;;;;;-1:-1:-1;;;;;7003:34:42;;;;;-1:-1:-1;;;7003:34:42;;-1:-1:-1;;;;;7003:34:42;;;;;;;;-1:-1:-1;;;7003:34:42;;;;;;;;;;;;;7071:28;7067:115;;7142:9;6046:1266;-1:-1:-1;;;;6046:1266:42:o;7067:115::-;6924:284;;;6351:897;6320:928;7274:31;;-1:-1:-1;;;7274:31:42;;;;;;;;;;;1917:263:60;1996:36;2035:39;:37;:39::i;:::-;2084:31;;-1:-1:-1;;;;;;2084:31:60;-1:-1:-1;;;;;2084:31:60;;;;;;;2130:43;;2084:31;;-1:-1:-1;2084:31:60;2130:43;;-1:-1:-1;;2130:43:60;1986:194;1917:263;:::o;8924:229:385:-;9118:28;9136:9;9118:17;:28::i;10432:326::-;10559:20;10595:32;10630:31;:29;:31::i;:::-;10686:18;;;-1:-1:-1;10595:66:385;-1:-1:-1;10714:37:385;10724:3;10729:21;10714:9;:37::i;:::-;10585:173;10432:326;;;;:::o;735:205:56:-;579:28;;735:205::o;1722:298:46:-;1788:41;1832:49;:47;:49::i;:::-;1788:93;;1891:21;1915:4;:16;;1891:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1941:23:46;;1891:40;;-1:-1:-1;1941:23:46;;:4;;-1:-1:-1;1941:23:46;;;;-1:-1:-1;1941:23:46;-1:-1:-1;1941:23:46;:::i;:::-;;1980:33;1999:7;2008:4;1980:33;;;;;;;:::i;:::-;;;;;;;;1778:242;;1722:298;:::o;5305:444:62:-;5452:6;5445:4;:13;5441:69;;;5474:25;;-1:-1:-1;;;5474:25:62;;;;;;;:::i;5441:69::-;5520:32;5555:31;:29;:31::i;:::-;5634:49;;;;;;;;-1:-1:-1;;;;;5634:49:62;;;;;;;;;;;;;-1:-1:-1;5597:34:62;;;:24;;;;:34;;;;;;:86;;;;-1:-1:-1;;;;;;5597:86:62;;;;;;;;;;;;;;;;;;5699:43;;3147:25:641;;;5597:24:62;;-1:-1:-1;5634:49:62;5597:34;;5699:43;;3120:18:641;5699:43:62;;;;;;;5431:318;5305:444;;;:::o;9570:364:42:-;9664:32;9699:31;:29;:31::i;:::-;9664:66;;9757:12;:10;:12::i;:::-;-1:-1:-1;;;;;9745:24:42;:8;-1:-1:-1;;;;;9745:24:42;;9741:54;;;9778:17;;-1:-1:-1;;;9778:17:42;;;;;;;;;;;9741:54;9856:8;9806:4;:23;;:37;9830:12;:10;:12::i;:::-;-1:-1:-1;;;;;9806:37:42;;;;;;;;;;;;;;;;;-1:-1:-1;9806:37:42;;;:47;;;;;;;;;;;;:58;;-1:-1:-1;;9806:58:42;;;;;;;;;;;9894:12;:10;:12::i;:::-;-1:-1:-1;;;;;9879:48:42;;9918:8;9879:48;;;;661:14:641;654:22;636:41;;624:2;609:18;;496:187;9879:48:42;;;;;;;;9654:280;9570:364;;:::o;10780:381::-;10941:28;10951:4;10957:2;10961:7;10941:9;:28::i;:::-;10983:15;:2;-1:-1:-1;;;;;10983:13:42;;:15::i;:::-;10979:176;;;11017:56;11048:4;11054:2;11058:7;11067:5;11017:30;:56::i;:::-;11012:143;;11100:40;;-1:-1:-1;;;11100:40:42;;;;;;;;;;;2192:583:44;2254:15;2271:13;2296:42;2341:51;:49;:51::i;:::-;2296:96;;2403:25;2431:17;:15;:17::i;:::-;2458:40;;;;;;;;;;;;;;;;;;;2403:45;;-1:-1:-1;2458:24:44;;:40;2485:4;;2458:40;;2485:4;2458:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:9;2509:224;2533:17;2529:1;:21;2509:224;;;2589:7;2597:1;2589:10;;;;;;;;:::i;:::-;;;;;;;2578:8;:21;2574:149;;;2627:1;2619:9;;2656:7;2664:1;2656:10;;;;;;;;:::i;:::-;;;;;;;2646:20;;2685:23;;;;2192:583;;;:::o;2574:149::-;2552:6;2557:1;2552:6;;:::i;:::-;;;2509:224;;;-1:-1:-1;2743:25:44;;-1:-1:-1;;;2743:25:44;;39791:2:641;2743:25:44;;;39773:21:641;39830:2;39810:18;;;39803:30;-1:-1:-1;;;39849:18:641;;;39842:45;39904:18;;2743:25:44;39589:339:641;2889:507:44;2951:13;2976:42;3021:51;:49;:51::i;:::-;2976:96;;3083:25;3111:17;:15;:17::i;:::-;3138:40;;;;;;;;;;;;;;;;;;;3083:45;;-1:-1:-1;3138:24:44;;:40;3165:4;;3138:40;;3165:4;3138:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3194:9;3189:166;3213:17;3209:1;:21;3189:166;;;3269:7;3277:1;3269:10;;;;;;;;:::i;:::-;;;;;;;3258:8;:21;3254:91;;;3306:4;:12;;:24;3319:7;3327:1;3319:10;;;;;;;;:::i;:::-;;;;;;;3306:24;;;;;;;;;;;3299:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:507;;;:::o;3254:91::-;3232:6;3237:1;3232:6;;:::i;:::-;;;3189:166;;305:703:285;361:13;578:10;574:51;;-1:-1:-1;;604:10:285;;;;;;;;;;;;-1:-1:-1;;;604:10:285;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:285;;-1:-1:-1;750:2:285;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:285;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:285;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:285;;;;;;;;-1:-1:-1;949:11:285;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:285:o;1396:239:48:-;1489:38;1530:43;:41;:43::i;:::-;1583:18;:28;;;;;;;;;;;:45;;1489:84;;-1:-1:-1;1583:45:48;;:28;;:45;;;;:::i;3481:228:44:-;3563:42;3608:51;:49;:51::i;:::-;3669:22;;;;:12;;;:22;;;;;;;;:33;;3563:96;;-1:-1:-1;3669:33:44;;:22;;:33;;;;:::i;1825:681:53:-;1980:15;2012:14;:12;:14::i;:::-;2007:70;;2042:24;;-1:-1:-1;;;2042:24:53;;;;;;;:::i;2007:70::-;2091:12;2087:58;;2119:15;;-1:-1:-1;;;2119:15:53;;40252:2:641;2119:15:53;;;40234:21:641;40291:1;40271:18;;;40264:29;-1:-1:-1;;;40309:18:641;;;40302:35;40354:18;;2119:15:53;40050:328:641;2087:58:53;2155:33;2191;:31;:33::i;:::-;2155:69;;2234:15;2252:4;:26;;;2234:44;;2329:55;2348:7;2357;2366:17;;2329:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2329:18:53;;-1:-1:-1;;;2329:55:53:i;:::-;2289:95;;;;-1:-1:-1;2417:7:53;2400:74;2446:1;2426:17;2436:7;2417;2426:17;:::i;:::-;:21;;;;:::i;:::-;2449:17;;2468:5;;2400:74;;;;;;;;;;:::i;:::-;;;;;;;;2485:14;;1825:681;;;;;;;:::o;542:222:59:-;263:33;;542:222::o;747:242:46:-;594:38;;747:242::o;20897:270:42:-;21007:32;21042:31;:29;:31::i;:::-;21083:29;;;;:20;;;:29;;;;;;:34;;-1:-1:-1;;;;;;21083:34:42;-1:-1:-1;;;;;21083:34:42;;;;;;;;;21132:28;;21083:20;;-1:-1:-1;21083:29:42;;:34;;21132:28;;;;;;21083:29;21132:28;20997:170;20897:270;;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;703:173::-;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;12206:1820:42:-;12324:32;12359:31;:29;:31::i;:::-;12424:18;;12324:66;;-1:-1:-1;;;;;;12456:16:42;;12452:48;;12481:19;;-1:-1:-1;;;12481:19:42;;;;;;;;;;;12452:48;12514:13;12510:44;;12536:18;;-1:-1:-1;;;12536:18:42;;;;;;;;;;;12510:44;12565:61;12595:1;12599:2;12603:12;12617:8;12565:21;:61::i;:::-;-1:-1:-1;;;;;12897:21:42;;;;;;:17;;;:21;;;;;;;;:49;;-1:-1:-1;;;;;;12960:54:42;;-1:-1:-1;;;;;12897:49:42;;;;;;;12960:54;;;-1:-1:-1;;;;;;;;;12897:49:42;;;;;;12960:54;;;;;;;;;;;;;;;;13029:30;;;:16;;;:30;;;;;;:40;;-1:-1:-1;;;;;;13083:71:42;;;-1:-1:-1;;;13138:15:42;13083:71;;;;;;;;;;;;;13029:30;;13232:23;;;;13274:15;;:13;:15::i;:::-;13270:623;;;13309:308;13339:38;;13364:12;;-1:-1:-1;;;;;13339:38:42;;;13356:1;;-1:-1:-1;;;;;;;;;;;13339:38:42;13356:1;;13339:38;13404:69;13443:1;13447:2;13451:14;;;;;;13467:5;13404:30;:69::i;:::-;13399:172;;13508:40;;-1:-1:-1;;;13508:40:42;;;;;;;;;;;13399:172;13612:3;13597:12;:18;13309:308;;13679:18;;:34;;13675:48;;13715:8;;;13675:48;13270:623;;;13762:117;13792:40;;13817:14;;;;;-1:-1:-1;;;;;13792:40:42;;;13809:1;;-1:-1:-1;;;;;;;;;;;13792:40:42;13809:1;;13792:40;13874:3;13859:12;:18;13762:117;;13270:623;-1:-1:-1;13906:33:42;;13959:60;15164:155:385;15768:2184:42;15878:32;15913:31;:29;:31::i;:::-;15878:66;;15955:35;15993:21;16006:7;15993:12;:21::i;:::-;15955:59;;16051:4;-1:-1:-1;;;;;16029:26:42;:13;:18;;;-1:-1:-1;;;;;16029:26:42;;16025:67;;16064:28;;-1:-1:-1;;;16064:28:42;;;;;;;;;;;16025:67;16103:22;16145:4;-1:-1:-1;;;;;16129:20:42;:12;:10;:12::i;:::-;-1:-1:-1;;;;;16129:20:42;;:72;;;;16165:36;16182:4;16188:12;:10;:12::i;16165:36::-;16129:124;;;;16241:12;:10;:12::i;:::-;-1:-1:-1;;;;;16217:36:42;:20;16229:7;16217:11;:20::i;:::-;-1:-1:-1;;;;;16217:36:42;;16129:124;16103:151;;16270:17;16265:66;;16296:35;;-1:-1:-1;;;16296:35:42;;;;;;;;;;;16265:66;-1:-1:-1;;;;;16345:16:42;;16341:52;;16370:23;;-1:-1:-1;;;16370:23:42;;;;;;;;;;;16341:52;16404:43;16426:4;16432:2;16436:7;16445:1;16404:21;:43::i;:::-;16509:35;16526:1;16530:7;16539:4;16509:8;:35::i;:::-;-1:-1:-1;;;;;16834:23:42;;;;;;;:17;;;:23;;;;;;;;:36;;-1:-1:-1;;;;;;16834:36:42;;;-1:-1:-1;;;;;16834:36:42;;;-1:-1:-1;;16834:36:42;;;;;;;16884:21;;;;;;;;;:34;;;;;;;;-1:-1:-1;16884:34:42;;;;;;;;;;;16967:25;;;:16;;;:25;;;;;;17006:18;;-1:-1:-1;;;;;;17038:49:42;;;;-1:-1:-1;;;17071:15:42;17038:49;;;;;;;;;;17357:11;;17416:29;;;;;17463:13;;16967:25;;17416:29;;17463:13;17459:382;;17670:18;;17655:33;;17651:176;;17712:20;;17780:28;;;;-1:-1:-1;;;;;17754:54:42;-1:-1:-1;;;17754:54:42;-1:-1:-1;;;;;;17754:54:42;;;-1:-1:-1;;;;;17712:20:42;;17754:54;;;;17651:176;16810:1041;;;17885:7;17881:2;-1:-1:-1;;;;;17866:27:42;17875:4;-1:-1:-1;;;;;17866:27:42;-1:-1:-1;;;;;;;;;;;17866:27:42;;;;;;;;;17903:42;15164:155:385;435:210:53;254:30;;435:210::o;1534:384:51:-;1587:14;1617:30;1636:10;1617:18;:30::i;:::-;1613:299;;;-1:-1:-1;;;1819:14:51;1815:23;1802:37;1798:2;1794:46;1534:384;:::o;1613:299::-;-1:-1:-1;1891:10:51;;1534:384::o;14319:579:385:-;14664:35;-1:-1:-1;;;;;;;;;;;14696:1:385;14664:8;:35::i;:::-;14663:36;:58;;;;-1:-1:-1;;;;;;14703:18:385;;;;14663:58;:78;;;;-1:-1:-1;;;;;;14725:16:385;;;;14663:78;14659:233;;;14762:29;-1:-1:-1;;;;;;;;;;;14786:4:385;14762:8;:29::i;:::-;14761:30;:62;;;;;14796:27;-1:-1:-1;;;;;;;;;;;14820:2:385;14796:8;:27::i;:::-;14795:28;14761:62;14757:125;;;14843:24;;-1:-1:-1;;;14843:24:385;;41096:2:641;14843:24:385;;;41078:21:641;41135:2;41115:18;;;41108:30;-1:-1:-1;;;41154:18:641;;;41147:44;41208:18;;14843:24:385;40894:338:641;1137:320:281;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;21648:650:42:-;21806:4;21842:2;-1:-1:-1;;;;;21826:36:42;;21863:12;:10;:12::i;:::-;21877:4;21883:7;21892:5;21826:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21826:72:42;;;;;;;;-1:-1:-1;;21826:72:42;;;;;;;;;;;;:::i;:::-;;;21822:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22057:13:42;;22053:229;;22102:40;;-1:-1:-1;;;22102:40:42;;;;;;;;;;;22053:229;22242:6;22236:13;22227:6;22223:2;22219:15;22212:38;21822:470;-1:-1:-1;;;;;;21944:55:42;-1:-1:-1;;;21944:55:42;;-1:-1:-1;21648:650:42;;;;;;:::o;12223:129:385:-;12287:4;12310:35;3212:24;12332:12;:10;:12::i;3804:478:44:-;3954:25;;4018:24;4029:13;4018:8;:24;:::i;:::-;4008:34;;4072:7;4052:27;;4090:42;4135:51;:49;:51::i;:::-;4197:27;;;;;;;;:13;:27;;;;;;;;;;;;;4234:21;;;:12;;;:21;;;;;:41;;4090:96;;-1:-1:-1;4234:41:44;;:21;;:41;;;;:::i;:::-;;3998:284;3804:478;;;;;;:::o;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;42397:2:641;2758:48:277;;;42379:21:641;42436:2;42416:18;;;42409:30;-1:-1:-1;;;42455:18:641;;;42448:58;42523:18;;2758:48:277;42195:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;42810:15:641;;;1105:68:321;;;42792:34:641;42862:15;;42842:18;;;42835:43;42894:18;;;42887:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;42727:18:641;;1105:68:321;42552:375:641;3235:706:321;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;43134:2:641;3839:85:321;;;43116:21:641;43173:2;43153:18;;;43146:30;43212:34;43192:18;;;43185:62;-1:-1:-1;;;43263:18:641;;;43256:40;43313:19;;3839:85:321;42932:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;43952:2:641;5194:60:281;;;43934:21:641;43991:2;43971:18;;;43964:30;44030:31;44010:18;;;44003:59;44079:18;;5194:60:281;43750:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;7675;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;;88:32:641;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;688:203::-;783:6;836:3;824:9;815:7;811:23;807:33;804:53;;;853:1;850;843:12;804:53;-1:-1:-1;876:9:641;688:203;-1:-1:-1;688:203:641:o;896:258::-;968:1;978:113;992:6;989:1;986:13;978:113;;;1068:11;;;1062:18;1049:11;;;1042:39;1014:2;1007:10;978:113;;;1109:6;1106:1;1103:13;1100:48;;;-1:-1:-1;;1144:1:641;1126:16;;1119:27;896:258::o;1159:::-;1201:3;1239:5;1233:12;1266:6;1261:3;1254:19;1282:63;1338:6;1331:4;1326:3;1322:14;1315:4;1308:5;1304:16;1282:63;:::i;:::-;1399:2;1378:15;-1:-1:-1;;1374:29:641;1365:39;;;;1406:4;1361:50;;1159:258;-1:-1:-1;;1159:258:641:o;1422:220::-;1571:2;1560:9;1553:21;1534:4;1591:45;1632:2;1621:9;1617:18;1609:6;1591:45;:::i;1855:180::-;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;-1:-1:-1;2006:23:641;;1855:180;-1:-1:-1;1855:180:641:o;2040:131::-;-1:-1:-1;;;;;2115:31:641;;2105:42;;2095:70;;2161:1;2158;2151:12;2176:315;2244:6;2252;2305:2;2293:9;2284:7;2280:23;2276:32;2273:52;;;2321:1;2318;2311:12;2273:52;2360:9;2347:23;2379:31;2404:5;2379:31;:::i;:::-;2429:5;2481:2;2466:18;;;;2453:32;;-1:-1:-1;;;2176:315:641:o;2496:247::-;2555:6;2608:2;2596:9;2587:7;2583:23;2579:32;2576:52;;;2624:1;2621;2614:12;2576:52;2663:9;2650:23;2682:31;2707:5;2682:31;:::i;2748:248::-;2816:6;2824;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;-1:-1:-1;;2916:23:641;;;2986:2;2971:18;;;2958:32;;-1:-1:-1;2748:248:641:o;3183:163::-;3250:5;3295:3;3286:6;3281:3;3277:16;3273:26;3270:46;;;3312:1;3309;3302:12;3351:854;3490:6;3498;3506;3514;3522;3530;3583:3;3571:9;3562:7;3558:23;3554:33;3551:53;;;3600:1;3597;3590:12;3551:53;3636:9;3623:23;3613:33;;3696:2;3685:9;3681:18;3668:32;3709:31;3734:5;3709:31;:::i;:::-;3759:5;-1:-1:-1;3811:2:641;3796:18;;3783:32;;-1:-1:-1;3867:2:641;3852:18;;3839:32;3880:33;3839:32;3880:33;:::i;:::-;3932:7;-1:-1:-1;3986:3:641;3971:19;;3958:33;;-1:-1:-1;4042:3:641;4027:19;;4014:33;-1:-1:-1;;;;;4059:30:641;;4056:50;;;4102:1;4099;4092:12;4056:50;4125:74;4191:7;4182:6;4171:9;4167:22;4125:74;:::i;:::-;4115:84;;;3351:854;;;;;;;;:::o;4210:456::-;4287:6;4295;4303;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4411:9;4398:23;4430:31;4455:5;4430:31;:::i;:::-;4480:5;-1:-1:-1;4537:2:641;4522:18;;4509:32;4550:33;4509:32;4550:33;:::i;:::-;4210:456;;4602:7;;-1:-1:-1;;;4656:2:641;4641:18;;;;4628:32;;4210:456::o;4671:274::-;-1:-1:-1;;;;;4863:32:641;;;;4845:51;;4927:2;4912:18;;4905:34;4833:2;4818:18;;4671:274::o;4950:118::-;5036:5;5029:13;5022:21;5015:5;5012:32;5002:60;;5058:1;5055;5048:12;5073:241;5129:6;5182:2;5170:9;5161:7;5157:23;5153:32;5150:52;;;5198:1;5195;5188:12;5150:52;5237:9;5224:23;5256:28;5278:5;5256:28;:::i;5609:826::-;5804:2;5793:9;5786:21;5849:6;5843:13;5838:2;5827:9;5823:18;5816:41;5911:2;5903:6;5899:15;5893:22;5888:2;5877:9;5873:18;5866:50;5970:2;5962:6;5958:15;5952:22;5947:2;5936:9;5932:18;5925:50;6030:2;6022:6;6018:15;6012:22;6006:3;5995:9;5991:19;5984:51;6090:3;6082:6;6078:16;6072:23;6066:3;6055:9;6051:19;6044:52;6151:3;6143:6;6139:16;6133:23;6127:3;6116:9;6112:19;6105:52;6240:1;6236;6231:3;6227:11;6223:19;6216:3;6208:6;6204:16;6198:23;6194:49;6188:3;6177:9;6173:19;6166:78;5767:4;6291:3;6283:6;6279:16;6273:23;6315:6;6357:2;6352;6341:9;6337:18;6330:30;;6377:52;6424:3;6413:9;6409:19;6395:12;6377:52;:::i;6440:785::-;6567:6;6575;6583;6636:2;6624:9;6615:7;6611:23;6607:32;6604:52;;;6652:1;6649;6642:12;6604:52;6692:9;6679:23;-1:-1:-1;;;;;6762:2:641;6754:6;6751:14;6748:34;;;6778:1;6775;6768:12;6748:34;6816:6;6805:9;6801:22;6791:32;;6861:7;6854:4;6850:2;6846:13;6842:27;6832:55;;6883:1;6880;6873:12;6832:55;6923:2;6910:16;6949:2;6941:6;6938:14;6935:34;;;6965:1;6962;6955:12;6935:34;7020:7;7013:4;7003:6;7000:1;6996:14;6992:2;6988:23;6984:34;6981:47;6978:67;;;7041:1;7038;7031:12;6978:67;7072:4;7064:13;;;;-1:-1:-1;7096:6:641;-1:-1:-1;;7137:20:641;;7124:34;7167:28;7124:34;7167:28;:::i;:::-;7214:5;7204:15;;;6440:785;;;;;:::o;7230:127::-;7291:10;7286:3;7282:20;7279:1;7272:31;7322:4;7319:1;7312:15;7346:4;7343:1;7336:15;7362:761;7637:13;;-1:-1:-1;;;;;7633:22:641;;;7615:41;;7703:4;7691:17;;7685:24;7564:3;7549:19;;;7587;7745:1;7728:19;;7718:150;;7790:10;7785:3;7781:20;7778:1;7771:31;7825:4;7822:1;7815:15;7853:4;7850:1;7843:15;7718:150;7906:12;7899:4;7888:9;7884:20;7877:42;;7975:4;7967:6;7963:17;7957:24;7950:4;7939:9;7935:20;7928:54;8038:4;8030:6;8026:17;8020:24;8013:4;8002:9;7998:20;7991:54;8113:2;8105:4;8097:6;8093:17;8087:24;8083:33;8076:4;8065:9;8061:20;8054:63;;7362:761;;;;:::o;8128:127::-;8189:10;8184:3;8180:20;8177:1;8170:31;8220:4;8217:1;8210:15;8244:4;8241:1;8234:15;8260:275;8331:2;8325:9;8396:2;8377:13;;-1:-1:-1;;8373:27:641;8361:40;;-1:-1:-1;;;;;8416:34:641;;8452:22;;;8413:62;8410:88;;;8478:18;;:::i;:::-;8514:2;8507:22;8260:275;;-1:-1:-1;8260:275:641:o;8540:186::-;8588:4;-1:-1:-1;;;;;8613:6:641;8610:30;8607:56;;;8643:18;;:::i;:::-;-1:-1:-1;8709:2:641;8688:15;-1:-1:-1;;8684:29:641;8715:4;8680:40;;8540:186::o;8731:336::-;8795:5;8824:52;8840:35;8868:6;8840:35;:::i;:::-;8824:52;:::i;:::-;8815:61;;8899:6;8892:5;8885:21;8939:3;8930:6;8925:3;8921:16;8918:25;8915:45;;;8956:1;8953;8946:12;8915:45;9005:6;9000:3;8993:4;8986:5;8982:16;8969:43;9059:1;9052:4;9043:6;9036:5;9032:18;9028:29;9021:40;8731:336;;;;;:::o;9072:220::-;9114:5;9167:3;9160:4;9152:6;9148:17;9144:27;9134:55;;9185:1;9182;9175:12;9134:55;9207:79;9282:3;9273:6;9260:20;9253:4;9245:6;9241:17;9207:79;:::i;9297:1005::-;9445:6;9453;9461;9469;9477;9485;9538:3;9526:9;9517:7;9513:23;9509:33;9506:53;;;9555:1;9552;9545:12;9506:53;9594:9;9581:23;9613:31;9638:5;9613:31;:::i;:::-;9663:5;-1:-1:-1;9715:2:641;9700:18;;9687:32;;-1:-1:-1;9771:2:641;9756:18;;9743:32;9784:33;9743:32;9784:33;:::i;:::-;9836:7;-1:-1:-1;9890:2:641;9875:18;;9862:32;;-1:-1:-1;9945:3:641;9930:19;;9917:33;-1:-1:-1;;;;;9999:14:641;;;9996:34;;;10026:1;10023;10016:12;9996:34;10049:74;10115:7;10106:6;10095:9;10091:22;10049:74;:::i;:::-;10039:84;;10176:3;10165:9;10161:19;10148:33;10132:49;;10206:2;10196:8;10193:16;10190:36;;;10222:1;10219;10212:12;10190:36;;10245:51;10288:7;10277:8;10266:9;10262:24;10245:51;:::i;10307:450::-;10376:6;10429:2;10417:9;10408:7;10404:23;10400:32;10397:52;;;10445:1;10442;10435:12;10397:52;10485:9;10472:23;-1:-1:-1;;;;;10510:6:641;10507:30;10504:50;;;10550:1;10547;10540:12;10504:50;10573:22;;10626:4;10618:13;;10614:27;-1:-1:-1;10604:55:641;;10655:1;10652;10645:12;10604:55;10678:73;10743:7;10738:2;10725:16;10720:2;10716;10712:11;10678:73;:::i;10762:383::-;10839:6;10847;10855;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;10960:9;10947:23;10937:33;;11020:2;11009:9;11005:18;10992:32;11033:31;11058:5;11033:31;:::i;11150:347::-;11201:8;11211:6;11265:3;11258:4;11250:6;11246:17;11242:27;11232:55;;11283:1;11280;11273:12;11232:55;-1:-1:-1;11306:20:641;;-1:-1:-1;;;;;11338:30:641;;11335:50;;;11381:1;11378;11371:12;11335:50;11418:4;11410:6;11406:17;11394:29;;11470:3;11463:4;11454:6;11446;11442:19;11438:30;11435:39;11432:59;;;11487:1;11484;11477:12;11432:59;11150:347;;;;;:::o;11502:477::-;11581:6;11589;11597;11650:2;11638:9;11629:7;11625:23;11621:32;11618:52;;;11666:1;11663;11656:12;11618:52;11702:9;11689:23;11679:33;;11763:2;11752:9;11748:18;11735:32;-1:-1:-1;;;;;11782:6:641;11779:30;11776:50;;;11822:1;11819;11812:12;11776:50;11861:58;11911:7;11902:6;11891:9;11887:22;11861:58;:::i;:::-;11502:477;;11938:8;;-1:-1:-1;11835:84:641;;-1:-1:-1;;;;11502:477:641:o;12207:382::-;12272:6;12280;12333:2;12321:9;12312:7;12308:23;12304:32;12301:52;;;12349:1;12346;12339:12;12301:52;12388:9;12375:23;12407:31;12432:5;12407:31;:::i;:::-;12457:5;-1:-1:-1;12514:2:641;12499:18;;12486:32;12527:30;12486:32;12527:30;:::i;:::-;12576:7;12566:17;;;12207:382;;;;;:::o;12594:315::-;12662:6;12670;12723:2;12711:9;12702:7;12698:23;12694:32;12691:52;;;12739:1;12736;12729:12;12691:52;12775:9;12762:23;12752:33;;12835:2;12824:9;12820:18;12807:32;12848:31;12873:5;12848:31;:::i;12914:665::-;13009:6;13017;13025;13033;13086:3;13074:9;13065:7;13061:23;13057:33;13054:53;;;13103:1;13100;13093:12;13054:53;13142:9;13129:23;13161:31;13186:5;13161:31;:::i;:::-;13211:5;-1:-1:-1;13268:2:641;13253:18;;13240:32;13281:33;13240:32;13281:33;:::i;:::-;13333:7;-1:-1:-1;13387:2:641;13372:18;;13359:32;;-1:-1:-1;13442:2:641;13427:18;;13414:32;-1:-1:-1;;;;;13458:30:641;;13455:50;;;13501:1;13498;13491:12;13455:50;13524:49;13565:7;13556:6;13545:9;13541:22;13524:49;:::i;:::-;13514:59;;;12914:665;;;;;;;:::o;13584:383::-;13661:6;13669;13677;13730:2;13718:9;13709:7;13705:23;13701:32;13698:52;;;13746:1;13743;13736:12;13698:52;13785:9;13772:23;13804:31;13829:5;13804:31;:::i;:::-;13854:5;13906:2;13891:18;;13878:32;;-1:-1:-1;13957:2:641;13942:18;;;13929:32;;13584:383;-1:-1:-1;;;13584:383:641:o;13972:786::-;14072:6;14080;14088;14096;14104;14157:2;14145:9;14136:7;14132:23;14128:32;14125:52;;;14173:1;14170;14163:12;14125:52;14209:9;14196:23;14186:33;;14270:2;14259:9;14255:18;14242:32;-1:-1:-1;;;;;14334:2:641;14326:6;14323:14;14320:34;;;14350:1;14347;14340:12;14320:34;14389:58;14439:7;14430:6;14419:9;14415:22;14389:58;:::i;:::-;14466:8;;-1:-1:-1;14363:84:641;-1:-1:-1;14554:2:641;14539:18;;14526:32;;-1:-1:-1;14570:16:641;;;14567:36;;;14599:1;14596;14589:12;14567:36;;14638:60;14690:7;14679:8;14668:9;14664:24;14638:60;:::i;:::-;13972:786;;;;-1:-1:-1;13972:786:641;;-1:-1:-1;14717:8:641;;14612:86;13972:786;-1:-1:-1;;;13972:786:641:o;15016:628::-;15104:6;15112;15120;15173:2;15161:9;15152:7;15148:23;15144:32;15141:52;;;15189:1;15186;15179:12;15141:52;15229:9;15216:23;-1:-1:-1;;;;;15299:2:641;15291:6;15288:14;15285:34;;;15315:1;15312;15305:12;15285:34;15338:49;15379:7;15370:6;15359:9;15355:22;15338:49;:::i;:::-;15328:59;;15440:2;15429:9;15425:18;15412:32;15396:48;;15469:2;15459:8;15456:16;15453:36;;;15485:1;15482;15475:12;15453:36;;15524:60;15576:7;15565:8;15554:9;15550:24;15524:60;:::i;15649:388::-;15717:6;15725;15778:2;15766:9;15757:7;15753:23;15749:32;15746:52;;;15794:1;15791;15784:12;15746:52;15833:9;15820:23;15852:31;15877:5;15852:31;:::i;:::-;15902:5;-1:-1:-1;15959:2:641;15944:18;;15931:32;15972:33;15931:32;15972:33;:::i;16386:183::-;16490:11;;-1:-1:-1;;;;;;16486:42:641;-1:-1:-1;;;;;16530:31:641;;;;16483:79;;;;16470:93;;16386:183::o;16574:826::-;16757:5;16744:19;16772:33;16797:7;16772:33;:::i;:::-;16814:62;16868:7;16862:4;16814:62;:::i;:::-;;16924:2;16917:5;16913:14;16900:28;16959:1;16950:7;16947:14;16937:42;;16975:1;16972;16965:12;16937:42;16998:11;;-1:-1:-1;;;;17034:27:641;17090:3;17067:17;;;;-1:-1:-1;;;17063:37:641;17031:70;17018:84;;17156:2;17145:14;;17132:28;-1:-1:-1;17118:12:641;;17111:50;17215:2;17204:14;;17191:28;17187:1;17177:12;;17170:50;17268:3;17257:15;;17244:29;17282:33;17244:29;17282:33;:::i;:::-;17324:70;17386:7;17382:1;17376:4;17372:12;17324:70;:::i;17405:380::-;17484:1;17480:12;;;;17527;;;17548:61;;17602:4;17594:6;17590:17;17580:27;;17548:61;17655:2;17647:6;17644:14;17624:18;17621:38;17618:161;;;17701:10;17696:3;17692:20;17689:1;17682:31;17736:4;17733:1;17726:15;17764:4;17761:1;17754:15;17790:304;-1:-1:-1;;;;;18020:15:641;;;18002:34;;18072:15;;18067:2;18052:18;;18045:43;17952:2;17937:18;;17790:304::o;18099:245::-;18166:6;18219:2;18207:9;18198:7;18194:23;18190:32;18187:52;;;18235:1;18232;18225:12;18187:52;18267:9;18261:16;18286:28;18308:5;18286:28;:::i;18349:338::-;18551:2;18533:21;;;18590:2;18570:18;;;18563:30;-1:-1:-1;;;18624:2:641;18609:18;;18602:44;18678:2;18663:18;;18349:338::o;18692:545::-;18785:4;18791:6;18851:11;18838:25;18945:2;18941:7;18930:8;18914:14;18910:29;18906:43;18886:18;18882:68;18872:96;;18964:1;18961;18954:12;18872:96;18991:33;;19043:20;;;-1:-1:-1;;;;;;19075:30:641;;19072:50;;;19118:1;19115;19108:12;19072:50;19151:4;19139:17;;-1:-1:-1;19202:1:641;19198:14;;;19182;19178:35;19168:46;;19165:66;;;19227:1;19224;19217:12;20048:127;20109:10;20104:3;20100:20;20097:1;20090:31;20140:4;20137:1;20130:15;20164:4;20161:1;20154:15;20180:128;20220:3;20251:1;20247:6;20244:1;20241:13;20238:39;;;20257:18;;:::i;:::-;-1:-1:-1;20293:9:641;;20180:128::o;21669:127::-;21730:10;21725:3;21721:20;21718:1;21711:31;21761:4;21758:1;21751:15;21785:4;21782:1;21775:15;21801:168;21841:7;21907:1;21903;21899:6;21895:14;21892:1;21889:21;21884:1;21877:9;21870:17;21866:45;21863:71;;;21914:18;;:::i;:::-;-1:-1:-1;21954:9:641;;21801:168::o;21974:127::-;22035:10;22030:3;22026:20;22023:1;22016:31;22066:4;22063:1;22056:15;22090:4;22087:1;22080:15;22106:120;22146:1;22172;22162:35;;22177:18;;:::i;:::-;-1:-1:-1;22211:9:641;;22106:120::o;22982:333::-;23083:4;23141:11;23128:25;23235:3;23231:8;23220;23204:14;23200:29;23196:44;23176:18;23172:69;23162:97;;23255:1;23252;23245:12;23162:97;23276:33;;;;;22982:333;-1:-1:-1;;22982:333:641:o;24123:545::-;24225:2;24220:3;24217:11;24214:448;;;24261:1;24286:5;24282:2;24275:17;24331:4;24327:2;24317:19;24401:2;24389:10;24385:19;24382:1;24378:27;24372:4;24368:38;24437:4;24425:10;24422:20;24419:47;;;-1:-1:-1;24460:4:641;24419:47;24515:2;24510:3;24506:12;24503:1;24499:20;24493:4;24489:31;24479:41;;24570:82;24588:2;24581:5;24578:13;24570:82;;;24633:17;;;24614:1;24603:13;24570:82;;24844:1190;-1:-1:-1;;;;;24947:3:641;24944:27;24941:53;;;24974:18;;:::i;:::-;25003:94;25093:3;25053:38;25085:4;25079:11;25053:38;:::i;:::-;25047:4;25003:94;:::i;:::-;25123:1;25148:2;25143:3;25140:11;25165:1;25160:616;;;;25820:1;25837:3;25834:93;;;-1:-1:-1;25893:19:641;;;25880:33;25834:93;-1:-1:-1;;24801:1:641;24797:11;;;24793:24;24789:29;24779:40;24825:1;24821:11;;;24776:57;25940:78;;25133:895;;25160:616;24070:1;24063:14;;;24107:4;24094:18;;-1:-1:-1;;25196:17:641;;;25297:9;25319:229;25333:7;25330:1;25327:14;25319:229;;;25422:19;;;25409:33;25394:49;;25529:4;25514:20;;;;25482:1;25470:14;;;;25349:12;25319:229;;;25323:3;25576;25567:7;25564:16;25561:159;;;25700:1;25696:6;25690:3;25684;25681:1;25677:11;25673:21;25669:34;25665:39;25652:9;25647:3;25643:19;25630:33;25626:79;25618:6;25611:95;25561:159;;;25763:1;25757:3;25754:1;25750:11;25746:19;25740:4;25733:33;25133:895;;24844:1190;;;:::o;26039:1181::-;26218:5;26205:19;26199:4;26192:33;26279:2;26272:5;26268:14;26255:28;26251:1;26245:4;26241:12;26234:50;26338:2;26331:5;26327:14;26314:28;26310:1;26304:4;26300:12;26293:50;26397:2;26390:5;26386:14;26373:28;26369:1;26363:4;26359:12;26352:50;26456:3;26449:5;26445:15;26432:29;26428:1;26422:4;26418:12;26411:51;26516:3;26509:5;26505:15;26492:29;26488:1;26482:4;26478:12;26471:51;26570:3;26563:5;26559:15;26546:29;26584:33;26609:7;26584:33;:::i;:::-;26626:70;26688:7;26684:1;26678:4;26674:12;26626:70;:::i;:::-;;26755:3;26748:5;26744:15;26731:29;26839:2;26835:7;26827:5;26811:14;26807:26;26803:40;26783:18;26779:65;26769:93;;26858:1;26855;26848:12;26769:93;26883:30;;26936:18;;-1:-1:-1;;;;;26966:30:641;;26963:50;;;27009:1;27006;26999:12;26963:50;27046:2;27040:4;27036:13;27022:27;;27093:6;27077:14;27073:27;27065:6;27061:40;27058:60;;;27114:1;27111;27104:12;27058:60;27127:87;27207:6;27199;27195:1;27189:4;27185:12;27127:87;:::i;27225:135::-;27264:3;-1:-1:-1;;27285:17:641;;27282:43;;;27305:18;;:::i;:::-;-1:-1:-1;27352:1:641;27341:13;;27225:135::o;27365:504::-;27424:5;27431:6;27491:3;27478:17;27577:2;27573:7;27562:8;27546:14;27542:29;27538:43;27518:18;27514:68;27504:96;;27596:1;27593;27586:12;27504:96;27624:33;;27728:4;27715:18;;;-1:-1:-1;27676:21:641;;-1:-1:-1;;;;;;27745:30:641;;27742:50;;;27788:1;27785;27778:12;27742:50;27838:6;27822:14;27818:27;27808:8;27804:42;27801:62;;;27859:1;27856;27849:12;27874:267;27963:6;27958:3;27951:19;28015:6;28008:5;28001:4;27996:3;27992:14;27979:43;-1:-1:-1;28067:1:641;28042:16;;;28060:4;28038:27;;;28031:38;;;;28123:2;28102:15;;;-1:-1:-1;;28098:29:641;28089:39;;;28085:50;;27874:267::o;28146:2051::-;28417:2;28469:21;;;28442:18;;;28525:22;;;28388:4;;28566:2;28584:18;;;28648:1;28644:14;;;28629:30;;28625:39;;28687:6;28388:4;;28742:1372;28758:6;28753:3;28750:15;28742:1372;;;28827:22;;;-1:-1:-1;;28823:36:641;28811:49;;28899:20;;28974:14;28970:27;;;-1:-1:-1;;28966:42:641;28942:67;;28932:95;;29023:1;29020;29013:12;28932:95;29053:31;;29141:19;;29126:35;;29184:4;29238:14;;;29225:28;29208:15;;;29201:53;29304:14;;;29291:28;29274:15;;;29267:53;29370:14;;;29357:28;29340:15;;;29333:53;29409:4;29463:14;;;29450:28;29433:15;;;29426:53;29502:4;29556:14;;;29543:28;29526:15;;;29519:53;29107:6;;29595:4;29640:14;;;29627:28;29668:33;29627:28;29668:33;:::i;:::-;-1:-1:-1;;;;;29738:33:641;29721:15;;;29714:58;29795:4;29846:54;29885:14;;;29889:5;29846:54;:::i;:::-;29812:88;;29937:2;29932;29924:6;29920:15;29913:27;29963:71;30030:2;30022:6;30018:15;30004:12;29990;29963:71;:::i;:::-;30092:12;;;;29953:81;-1:-1:-1;;;30057:15:641;;;;;-1:-1:-1;;28784:1:641;28775:11;28742:1372;;;-1:-1:-1;;;470:13:641;;463:21;30185:4;30170:20;;451:34;30131:6;-1:-1:-1;30146:45:641;;-1:-1:-1;;;400:91:641;30548:703;30636:6;30644;30697:2;30685:9;30676:7;30672:23;30668:32;30665:52;;;30713:1;30710;30703:12;30665:52;30746:9;30740:16;-1:-1:-1;;;;;30771:6:641;30768:30;30765:50;;;30811:1;30808;30801:12;30765:50;30834:22;;30887:4;30879:13;;30875:27;-1:-1:-1;30865:55:641;;30916:1;30913;30906:12;30865:55;30945:2;30939:9;30970:48;30986:31;31014:2;30986:31;:::i;30970:48::-;31041:2;31034:5;31027:17;31083:7;31076:4;31071:2;31067;31063:11;31059:22;31056:35;31053:55;;;31104:1;31101;31094:12;31053:55;31117:58;31172:2;31165:4;31158:5;31154:16;31147:4;31143:2;31139:13;31117:58;:::i;:::-;31239:4;31224:20;;;;31218:27;31194:5;;31218:27;;-1:-1:-1;;;;;30548:703:641:o;31256:525::-;31471:3;31509:6;31503:13;31525:53;31571:6;31566:3;31559:4;31551:6;31547:17;31525:53;:::i;:::-;31600:16;;31653:6;31645;31600:16;31625:35;31679:18;;;31728;;;-1:-1:-1;31770:4:641;31762:13;;31256:525;-1:-1:-1;;;31256:525:641:o;32824:251::-;32894:6;32947:2;32935:9;32926:7;32922:23;32918:32;32915:52;;;32963:1;32960;32953:12;32915:52;32995:9;32989:16;33014:31;33039:5;33014:31;:::i;33759:184::-;33829:6;33882:2;33870:9;33861:7;33857:23;33853:32;33850:52;;;33898:1;33895;33888:12;33850:52;-1:-1:-1;33921:16:641;;33759:184;-1:-1:-1;33759:184:641:o;34284:125::-;34324:4;34352:1;34349;34346:8;34343:34;;;34357:18;;:::i;:::-;-1:-1:-1;34394:9:641;;34284:125::o;34414:136::-;34453:3;34481:5;34471:39;;34490:18;;:::i;:::-;-1:-1:-1;;;34526:18:641;;34414:136::o;34895:439::-;35127:3;35165:6;35159:13;35181:53;35227:6;35222:3;35215:4;35207:6;35203:17;35181:53;:::i;:::-;-1:-1:-1;;;35256:16:641;;35281:18;;;-1:-1:-1;35326:1:641;35315:13;;34895:439;-1:-1:-1;34895:439:641:o;35339:470::-;35518:3;35556:6;35550:13;35572:53;35618:6;35613:3;35606:4;35598:6;35594:17;35572:53;:::i;:::-;35688:13;;35647:16;;;;35710:57;35688:13;35647:16;35744:4;35732:17;;35710:57;:::i;:::-;35783:20;;35339:470;-1:-1:-1;;;;35339:470:641:o;36154:388::-;36231:6;36239;36292:2;36280:9;36271:7;36267:23;36263:32;36260:52;;;36308:1;36305;36298:12;36260:52;36348:9;36335:23;-1:-1:-1;;;;;36373:6:641;36370:30;36367:50;;;36413:1;36410;36403:12;36367:50;36436:49;36477:7;36468:6;36457:9;36453:22;36436:49;:::i;:::-;36426:59;36532:2;36517:18;;;;36504:32;;-1:-1:-1;;;;36154:388:641:o;36547:335::-;36758:6;36750;36745:3;36732:33;36784:16;;;36831:18;;;36873:2;36865:11;;36547:335;-1:-1:-1;36547:335:641:o;38605:339::-;38807:2;38789:21;;;38846:2;38826:18;;;38819:30;-1:-1:-1;;;38880:2:641;38865:18;;38858:45;38935:2;38920:18;;38605:339::o;39201:383::-;39398:2;39387:9;39380:21;39361:4;39424:45;39465:2;39454:9;39450:18;39442:6;39424:45;:::i;:::-;39517:9;39509:6;39505:22;39500:2;39489:9;39485:18;39478:50;39545:33;39571:6;39563;39545:33;:::i;:::-;39537:41;39201:383;-1:-1:-1;;;;;39201:383:641:o;39933:112::-;39965:1;39991;39981:35;;39996:18;;:::i;:::-;-1:-1:-1;40030:9:641;;39933:112::o;40383:506::-;40626:6;40615:9;40608:25;40669:2;40664;40653:9;40649:18;40642:30;40589:4;40695:62;40753:2;40742:9;40738:18;40730:6;40722;40695:62;:::i;:::-;40805:9;40797:6;40793:22;40788:2;40777:9;40773:18;40766:50;40833;40876:6;40868;40860;40833:50;:::i;:::-;40825:58;40383:506;-1:-1:-1;;;;;;;;40383:506:641:o;41237:489::-;-1:-1:-1;;;;;41506:15:641;;;41488:34;;41558:15;;41553:2;41538:18;;41531:43;41605:2;41590:18;;41583:34;;;41653:3;41648:2;41633:18;;41626:31;;;41431:4;;41674:46;;41700:19;;41692:6;41674:46;:::i;:::-;41666:54;41237:489;-1:-1:-1;;;;;;41237:489:641:o;41731:249::-;41800:6;41853:2;41841:9;41832:7;41828:23;41824:32;41821:52;;;41869:1;41866;41859:12;41821:52;41901:9;41895:16;41920:30;41944:5;41920:30;:::i;44108:274::-;44237:3;44275:6;44269:13;44291:53;44337:6;44332:3;44325:4;44317:6;44313:17;44291:53;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnAndClaim(uint256,uint256)": "1567313b",
    "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
    "claimCondition()": "d637ed59",
    "contractURI()": "e8a3d485",
    "encryptDecrypt(bytes,bytes)": "e7150322",
    "encryptedData(uint256)": "a05112fc",
    "getActiveClaimConditionId()": "c68907de",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getBurnToClaimInfo()": "778a4c0e",
    "getClaimConditionById(uint256)": "6f8934f4",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getPlatformFeeInfo()": "d45573f6",
    "getRevealURI(uint256,bytes)": "9fc4d68f",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isEncryptedBatch(uint256)": "492e224b",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply()": "2ab4d052",
    "name()": "06fdde03",
    "nextTokenIdToClaim()": "acd083f8",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "primarySaleRecipient()": "079fe40e",
    "reveal(uint256,bytes)": "ce805642",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBurnToClaimInfo((address,uint8,uint256,uint256,address))": "0689b284",
    "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setMaxTotalSupply(uint256)": "3f3e4c11",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalMinted()": "a2309ff8",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "verifyBurnToClaim(address,uint256,uint256)": "bb408851",
    "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"TokensBurnedAndClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"burnAndClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"encryptedData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnToClaimInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"getRevealURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isEncryptedBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"originContractAddress\",\"type\":\"address\"},{\"internalType\":\"enum IBurnToClaim.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintPriceForNewToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IBurnToClaim.BurnToClaimInfo\",\"name\":\"_burnToClaimInfo\",\"type\":\"tuple\"}],\"name\":\"setBurnToClaimInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyBurnToClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}.\"},\"burnAndClaim(uint256,uint256)\":{\"details\":\"Claim lazy minted after burning required tokens from origin contract.\"},\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"encryptDecrypt(bytes,bytes)\":{\"details\":\"Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain\",\"params\":{\"data\":\"Bytes of data to encrypt/decrypt.\",\"key\":\"Secure key used by caller for encryption/decryption.\"},\"returns\":{\"result\":\" Output after encryption/decryption of given data.\"}},\"encryptedData(uint256)\":{\"details\":\"Mapping from tokenId of a batch of tokens => to delayed reveal data.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getRevealURI(uint256,bytes)\":{\"details\":\"Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.\",\"params\":{\"_batchId\":\"ID of the batch for which URI is being revealed.\",\"_key\":\"Secure key used by caller/admin for encryption of baseURI.\"},\"returns\":{\"revealedURI\":\"Decrypted base URI.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEncryptedBatch(uint256)\":{\"details\":\"Returns `true` if `_batchId`'s base URI is encrypted.\",\"params\":{\"_batchId\":\"ID of a batch of NFTs.\"}},\"lazyMint(uint256,string,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"maxTotalSupply()\":{\"details\":\"Global max total supply of NFTs.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nextTokenIdToClaim()\":{\"details\":\"The next token ID of the NFT that can be claimed.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"reveal(uint256,bytes)\":{\"details\":\"Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256)\":{\"details\":\"Lets a contract admin set the global maximum supply for collection's NFTs.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given tokenId.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"MINTER_ROLE\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"OPERATOR_ROLE\":{\"details\":\"Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted.\"},\"TRANSFER_ROLE\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Encrypt/decrypt data on chain.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRevealURI(uint256,bytes)\":{\"notice\":\"Returns revealed URI for a batch of NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isEncryptedBatch(uint256)\":{\"notice\":\"Returns whether the relvant batch of NFTs is subject to a delayed reveal.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":\"BurnToClaimDrop721Logic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/dynamic-contracts/eip/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x7f5e5eb42a8ed508551f0603ccc99c6b830086a05591a17ff8d48d2c5b47ffef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2bb52a1b2dc97b7e3ccdf9b8af5bc9121c2d5c474ca97613c8a7cb11f78e99\",\"dweb:/ipfs/QmU7dYe9MFzhKKYqfNHet3rnTSxgn2S9KpJmfPruaGvqDw\"]},\"contracts/dynamic-contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x6c7000dfcf8875c4416962d69c299729c6197171f4d94e5d461b444cdf3cbad3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85f630b78bc12c085e603a3aa8aeb39b9a58e0023f0ecdd5d968a378a3294f06\",\"dweb:/ipfs/QmYk9EaaENCFf3vpcQCfmDrREfsTXuVCeHBegDLivCteCH\"]},\"contracts/dynamic-contracts/extension/BurnToClaim.sol\":{\"keccak256\":\"0xce29905fdf38198635aaa88320c0ff63dd766d49ec1c8b1d431d36bb4980d299\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54237f345d78755cdf63be666d9cb0771454f4759dba64f8e8fd63f371f8141b\",\"dweb:/ipfs/QmammbUKPngFBy1PX5dkncqpah5TJz4YFzsB7SqQCm9P1U\"]},\"contracts/dynamic-contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a\",\"dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM\"]},\"contracts/dynamic-contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8\",\"dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ\"]},\"contracts/dynamic-contracts/extension/DelayedReveal.sol\":{\"keccak256\":\"0x344acbd5a422ba2a73c8dea98b655726e3cd2aed37e46c0f48f00323e9e9f900\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://187a4a436c0948d025450c434d9a5d6d52344b64ad9645026aa11f3d47cc8542\",\"dweb:/ipfs/QmckjNF983G3qFddBw46g8mXzXY12SnDrXWg8sgW3dJTuk\"]},\"contracts/dynamic-contracts/extension/Drop.sol\":{\"keccak256\":\"0x72f291fc21287c2efbed6b3d208ebde10d6e165900f0cd110aa76c775be7892a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ab7b94ec434725c7ee44114682fd3bdb826c233647e5808f9c62938e539aeb\",\"dweb:/ipfs/Qmf8KZ9JkauCRN53HavAcXyjWvnLhSeTfQqNAVQBUzb34s\"]},\"contracts/dynamic-contracts/extension/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x1afd5fab6d4eeecde6159f5714b2a68ec94b0f78da1448c86eda64e6fc031e8d\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://bf26103513fad3927733a3972edb7c2189b2505a31175dd614d80134d66b0a27\",\"dweb:/ipfs/QmWxyainTSzsc9UXKxBfGPK9VaPo6G37n4Yugy8FmYDVQX\"]},\"contracts/dynamic-contracts/extension/Initializable.sol\":{\"keccak256\":\"0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d\",\"dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d\"]},\"contracts/dynamic-contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xd7c82f03a3122fd673f6f20a57e9584c71043a1d4d4bca61c39e8f579077c52f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e32d867f49bcc44b275ece596ffb4a69e44cda9873f53b167adbf309af4e46b\",\"dweb:/ipfs/QmUqYmHMk6FqnAcixy8FZEgHSKgxgo6Hn2LqnH8Hdfec7o\"]},\"contracts/dynamic-contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x2c4e85d50306be46f776968cc42ac86a9b8e38eafa80d636857afb3f16dac783\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2241a1b4cf9978c82f5ecfddbfa51fbd6ed8a0e246e9820814e6a5360f221cb5\",\"dweb:/ipfs/QmPxcrYRKoShKSTiG7vbvgW5N5ZerkP4S4zKgYXK8ey4CU\"]},\"contracts/dynamic-contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x89cc38a3cac73593a68bc7518831b64b2c9497cd22efce5ee51031f78c7db8c7\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a6fd3ba6c2029a397b82dc47a7b67e55cabb72205017f5f13ceba1aadc42ab14\",\"dweb:/ipfs/QmWsRcTubi7dt3kFzDVdM7um86ryC9PKrkuXWxq3c2PUne\"]},\"contracts/dynamic-contracts/extension/Ownable.sol\":{\"keccak256\":\"0x9dd9d16f471fb56f58e0e69c69761ad5144fb5fb772cf2555ef5eb8f5dbee1dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://afb30da15566f64b1f0d2e6f68da37b19343f9413dde26543a538e487f0abcc1\",\"dweb:/ipfs/QmSxE28CxKywwUuxUgmDPvkQC5M7B9jKx23nnKpwoceL7s\"]},\"contracts/dynamic-contracts/extension/Permissions.sol\":{\"keccak256\":\"0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb\",\"dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW\"]},\"contracts/dynamic-contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0xd05918893e4c8ab62e27908581440ed2faaeb174525df1d5a8266e966b7b92f1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a0169167cdbbc643eed8028bc4e4efa2dc1d2fb02d80dbbf9a5562c6e71059bb\",\"dweb:/ipfs/QmaSmQ8fmAwLeFwWsHJnPQeHXuYr4UYPL7fBv3G71jvX9d\"]},\"contracts/dynamic-contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x294861a705a951f1dc9b41e697e9d858541281e8d4ebb1fae95e80744af840ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab65343d80d8bf80d4804d7479feb1262dc40eeda3e19d16030bd4115bdc29f6\",\"dweb:/ipfs/QmWJuBuKS2KHLN3afrsU27dQmqfuHMywkZyhGnFkB9eCMR\"]},\"contracts/dynamic-contracts/extension/Royalty.sol\":{\"keccak256\":\"0x2f0d1dbd1ee62268db275bdc7ead8836453b0a31f2b1887c120c8eb5bed6f071\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4ba6ed7eb78cac8d71ec6b283cabf07412707c308e20993b5badf8d8f71c1f2\",\"dweb:/ipfs/QmU65RcWH4toCDuDhyGH5jHaLc2TdkSmRo3LRm3Tb2hpm3\"]},\"contracts/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/eip/interface/IERC721.sol\":{\"keccak256\":\"0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676\",\"dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT\"]},\"contracts/eip/interface/IERC721A.sol\":{\"keccak256\":\"0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8\",\"dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5\"]},\"contracts/eip/interface/IERC721Metadata.sol\":{\"keccak256\":\"0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e\",\"dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4\"]},\"contracts/eip/interface/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"contracts/extension/interface/IBurnToClaim.sol\":{\"keccak256\":\"0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603\",\"dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138\",\"dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093\",\"dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo\"]},\"contracts/extension/interface/IERC2771Context.sol\":{\"keccak256\":\"0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41\",\"dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol\":{\"keccak256\":\"0xd55a99f3256d732cdfe6e279b77032090d0da30b8e4edb9a68208c54608541e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37ffe194499a6595671196f50ed8a42c2e8df4f323d54292648efc4c5f23b94c\",\"dweb:/ipfs/Qmf672mVrGRSaNGv2M5BZmb7J4q2R4KayiCuvZekobmUeY\"]},\"contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol\":{\"keccak256\":\"0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb\",\"dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1\",\"dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e\",\"dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIRevealed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "burnTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensBurnedAndClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_burnTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "burnAndClaim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "encryptDecrypt",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encryptedData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBurnToClaimInfo",
          "outputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRevealURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_batchId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEncryptedBatch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_key",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reveal",
          "outputs": [
            {
              "internalType": "string",
              "name": "revealedURI",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "struct IBurnToClaim.BurnToClaimInfo",
              "name": "_burnToClaimInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "originContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IBurnToClaim.TokenType",
                  "name": "tokenType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mintPriceForNewToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBurnToClaimInfo"
        },
        {
          "inputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMinted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyBurnToClaim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}."
          },
          "burnAndClaim(uint256,uint256)": {
            "details": "Claim lazy minted after burning required tokens from origin contract."
          },
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "encryptDecrypt(bytes,bytes)": {
            "details": "Encrypt/decrypt given `data` with `key`. Uses inline assembly.                  See: https://ethereum.stackexchange.com/questions/69825/decrypt-message-on-chain",
            "params": {
              "data": "Bytes of data to encrypt/decrypt.",
              "key": "Secure key used by caller for encryption/decryption."
            },
            "returns": {
              "result": " Output after encryption/decryption of given data."
            }
          },
          "encryptedData(uint256)": {
            "details": "Mapping from tokenId of a batch of tokens => to delayed reveal data."
          },
          "getActiveClaimConditionId()": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getRevealURI(uint256,bytes)": {
            "details": "Reveal encrypted base URI for `_batchId` with caller/admin's `_key` used for encryption.                      Reverts if there's no encrypted URI for `_batchId`.                      See {encryptDecrypt}.",
            "params": {
              "_batchId": "ID of the batch for which URI is being revealed.",
              "_key": "Secure key used by caller/admin for encryption of baseURI."
            },
            "returns": {
              "revealedURI": "Decrypted base URI."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isEncryptedBatch(uint256)": {
            "details": "Returns `true` if `_batchId`'s base URI is encrypted.",
            "params": {
              "_batchId": "ID of a batch of NFTs."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
          },
          "maxTotalSupply()": {
            "details": "Global max total supply of NFTs."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "nextTokenIdToClaim()": {
            "details": "The next token ID of the NFT that can be claimed."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "reveal(uint256,bytes)": {
            "details": "Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256)": {
            "details": "Lets a contract admin set the global maximum supply for collection's NFTs."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Returns the URI for a given tokenId."
          },
          "totalSupply()": {
            "details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "encryptDecrypt(bytes,bytes)": {
            "notice": "Encrypt/decrypt data on chain."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRevealURI(uint256,bytes)": {
            "notice": "Returns revealed URI for a batch of NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isEncryptedBatch(uint256)": {
            "notice": "Returns whether the relvant batch of NFTs is subject to a delayed reveal."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "totalMinted()": {
            "notice": "Returns the total amount of tokens minted in the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": "BurnToClaimDrop721Logic"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dynamic-contracts/eip/ERC721AUpgradeable.sol": {
        "keccak256": "0x7f5e5eb42a8ed508551f0603ccc99c6b830086a05591a17ff8d48d2c5b47ffef",
        "urls": [
          "bzz-raw://cb2bb52a1b2dc97b7e3ccdf9b8af5bc9121c2d5c474ca97613c8a7cb11f78e99",
          "dweb:/ipfs/QmU7dYe9MFzhKKYqfNHet3rnTSxgn2S9KpJmfPruaGvqDw"
        ],
        "license": "MIT"
      },
      "contracts/dynamic-contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0x6c7000dfcf8875c4416962d69c299729c6197171f4d94e5d461b444cdf3cbad3",
        "urls": [
          "bzz-raw://85f630b78bc12c085e603a3aa8aeb39b9a58e0023f0ecdd5d968a378a3294f06",
          "dweb:/ipfs/QmYk9EaaENCFf3vpcQCfmDrREfsTXuVCeHBegDLivCteCH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/BurnToClaim.sol": {
        "keccak256": "0xce29905fdf38198635aaa88320c0ff63dd766d49ec1c8b1d431d36bb4980d299",
        "urls": [
          "bzz-raw://54237f345d78755cdf63be666d9cb0771454f4759dba64f8e8fd63f371f8141b",
          "dweb:/ipfs/QmammbUKPngFBy1PX5dkncqpah5TJz4YFzsB7SqQCm9P1U"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/ContractMetadata.sol": {
        "keccak256": "0x0b4a5fc3d809eccb23851684b04ce20a0b8a7f8a1fd11988660268c02ff11a33",
        "urls": [
          "bzz-raw://fee0d7f6894883b0c107bd35bf61f863b3fa3c19770f310b8ac4169d13101d5a",
          "dweb:/ipfs/Qmcmobv1iAzjefBCJ71yZWpdfCVMnA42YNJtacwJQprxQM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0x62d82883047991b642ca56b5f01ac39b6b5ea64e26b23ad1efaecc02e1d88701",
        "urls": [
          "bzz-raw://693cd425f20f33302dc9fce35defde61b04435d54b911fa0024992792093f3d8",
          "dweb:/ipfs/QmejQhQnRbb2XQjuh2x4PREXgT43hJtqkCfdka9GtHHxeQ"
        ],
        "license": "Apache 2.0"
      },
      "contracts/dynamic-contracts/extension/DelayedReveal.sol": {
        "keccak256": "0x344acbd5a422ba2a73c8dea98b655726e3cd2aed37e46c0f48f00323e9e9f900",
        "urls": [
          "bzz-raw://187a4a436c0948d025450c434d9a5d6d52344b64ad9645026aa11f3d47cc8542",
          "dweb:/ipfs/QmckjNF983G3qFddBw46g8mXzXY12SnDrXWg8sgW3dJTuk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Drop.sol": {
        "keccak256": "0x72f291fc21287c2efbed6b3d208ebde10d6e165900f0cd110aa76c775be7892a",
        "urls": [
          "bzz-raw://52ab7b94ec434725c7ee44114682fd3bdb826c233647e5808f9c62938e539aeb",
          "dweb:/ipfs/Qmf8KZ9JkauCRN53HavAcXyjWvnLhSeTfQqNAVQBUzb34s"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x1afd5fab6d4eeecde6159f5714b2a68ec94b0f78da1448c86eda64e6fc031e8d",
        "urls": [
          "bzz-raw://bf26103513fad3927733a3972edb7c2189b2505a31175dd614d80134d66b0a27",
          "dweb:/ipfs/QmWxyainTSzsc9UXKxBfGPK9VaPo6G37n4Yugy8FmYDVQX"
        ],
        "license": "Apache 2.0"
      },
      "contracts/dynamic-contracts/extension/Initializable.sol": {
        "keccak256": "0x1679b562e7e9d9b5fa34abf9671cd4ada7bbc7f0f40bcf18fb8e05bf88962685",
        "urls": [
          "bzz-raw://d97aac4f1dd707f1c3440c1614bc9aea4b0ef138bcb236d99632585341fcfd0d",
          "dweb:/ipfs/QmNyQ5giiw4sUUCxoNR23D6BQuGL3qpvThWsErZpTnLD1d"
        ],
        "license": "Apache 2.0"
      },
      "contracts/dynamic-contracts/extension/LazyMint.sol": {
        "keccak256": "0xd7c82f03a3122fd673f6f20a57e9584c71043a1d4d4bca61c39e8f579077c52f",
        "urls": [
          "bzz-raw://9e32d867f49bcc44b275ece596ffb4a69e44cda9873f53b167adbf309af4e46b",
          "dweb:/ipfs/QmUqYmHMk6FqnAcixy8FZEgHSKgxgo6Hn2LqnH8Hdfec7o"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x2c4e85d50306be46f776968cc42ac86a9b8e38eafa80d636857afb3f16dac783",
        "urls": [
          "bzz-raw://2241a1b4cf9978c82f5ecfddbfa51fbd6ed8a0e246e9820814e6a5360f221cb5",
          "dweb:/ipfs/QmPxcrYRKoShKSTiG7vbvgW5N5ZerkP4S4zKgYXK8ey4CU"
        ],
        "license": "Apache 2.0"
      },
      "contracts/dynamic-contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0x89cc38a3cac73593a68bc7518831b64b2c9497cd22efce5ee51031f78c7db8c7",
        "urls": [
          "bzz-raw://a6fd3ba6c2029a397b82dc47a7b67e55cabb72205017f5f13ceba1aadc42ab14",
          "dweb:/ipfs/QmWsRcTubi7dt3kFzDVdM7um86ryC9PKrkuXWxq3c2PUne"
        ],
        "license": "Apache 2.0"
      },
      "contracts/dynamic-contracts/extension/Ownable.sol": {
        "keccak256": "0x9dd9d16f471fb56f58e0e69c69761ad5144fb5fb772cf2555ef5eb8f5dbee1dd",
        "urls": [
          "bzz-raw://afb30da15566f64b1f0d2e6f68da37b19343f9413dde26543a538e487f0abcc1",
          "dweb:/ipfs/QmSxE28CxKywwUuxUgmDPvkQC5M7B9jKx23nnKpwoceL7s"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Permissions.sol": {
        "keccak256": "0x761c4dcec4077941143434d2c5e2f575429b86431e14158db3c465099283bd4a",
        "urls": [
          "bzz-raw://b29c452886297e857c93980e1684d29603f9570d183fafa8ce82eaaf17508beb",
          "dweb:/ipfs/QmQ6nXUzG9U575rj2CupA3BzD4uWLKi53VtAyRa26qkruW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/PlatformFee.sol": {
        "keccak256": "0xd05918893e4c8ab62e27908581440ed2faaeb174525df1d5a8266e966b7b92f1",
        "urls": [
          "bzz-raw://a0169167cdbbc643eed8028bc4e4efa2dc1d2fb02d80dbbf9a5562c6e71059bb",
          "dweb:/ipfs/QmaSmQ8fmAwLeFwWsHJnPQeHXuYr4UYPL7fBv3G71jvX9d"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/PrimarySale.sol": {
        "keccak256": "0x294861a705a951f1dc9b41e697e9d858541281e8d4ebb1fae95e80744af840ff",
        "urls": [
          "bzz-raw://ab65343d80d8bf80d4804d7479feb1262dc40eeda3e19d16030bd4115bdc29f6",
          "dweb:/ipfs/QmWJuBuKS2KHLN3afrsU27dQmqfuHMywkZyhGnFkB9eCMR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/dynamic-contracts/extension/Royalty.sol": {
        "keccak256": "0x2f0d1dbd1ee62268db275bdc7ead8836453b0a31f2b1887c120c8eb5bed6f071",
        "urls": [
          "bzz-raw://d4ba6ed7eb78cac8d71ec6b283cabf07412707c308e20993b5badf8d8f71c1f2",
          "dweb:/ipfs/QmU65RcWH4toCDuDhyGH5jHaLc2TdkSmRo3LRm3Tb2hpm3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/eip/interface/IERC721.sol": {
        "keccak256": "0xbd9f2dd131e8f1e4e50b1b116eae917510ab9bf5d4356de37c5daf4cffdfa049",
        "urls": [
          "bzz-raw://8ac3530b317083464271b100de1976ed9179b9e7d5a4fc3d992c61c80676a676",
          "dweb:/ipfs/QmUq1AVzymvp7Y8H1eypGEGU4icjzn5vDSvKMNpXnoaeMT"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721A.sol": {
        "keccak256": "0xba8dd210c2a35a4e82cfc1e6586a3033fe337e40c23798793d7c8cd31694e0cd",
        "urls": [
          "bzz-raw://368eedd471b0aa41e83c2233aba9939ce25daae28de6b5ab427399ac91140eb8",
          "dweb:/ipfs/QmeMQTGpAGN4YZV8GPjrZr4zUtQ9Macsaset3FFY5CBVP5"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC721Metadata.sol": {
        "keccak256": "0x7f80ade420dd9bf39c4dbca10484b625e2096ee332c22a00e658148f170ee5fb",
        "urls": [
          "bzz-raw://7bcac290ef069b09e887e6c80af6a77c23e935bc271622585f61339779ac485e",
          "dweb:/ipfs/QmbqzDQ2pCtKrJcD7LJcBDUX6nfmx2YtcTDAhi3noX5rc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IBurnToClaim.sol": {
        "keccak256": "0xb32af29a3f6b880bb33ff48e776a8c4853a8ae80a780895c65699d3cf208cee6",
        "urls": [
          "bzz-raw://2dc8839ca321abccde27dab049355e56daf5b90a164190262dfe1a4f624d3603",
          "dweb:/ipfs/Qmc969VggsLkDNZaKbvLwhKEi5XwZekv7UVYDyYDQ8mxKg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDelayedReveal.sol": {
        "keccak256": "0xbbe98263ebce49f81cb42f8bf1e7e631afd81cda73be79b907e81a2f54fd2123",
        "urls": [
          "bzz-raw://76913c2086e309c97ac0d5be72bbe23e66fe35e231c75318993c14e6aa4c0138",
          "dweb:/ipfs/QmXwr49U275Cam8x9mYcNdcCmZHUYuBge3CtFPkBkEMzL4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop.sol": {
        "keccak256": "0xa8fa4a9fde50a512383c1608295dab741357852822bf089b64dfc8e89041bbad",
        "urls": [
          "bzz-raw://67e26a8f07f05daeebae7a4a652bfe90d4b62d057b737e00a9d3c1782f5bb093",
          "dweb:/ipfs/QmR9b1N5BAuRibaK1iJkyUD7kXE7F3GocjM985oT9wPdZo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IERC2771Context.sol": {
        "keccak256": "0x47c68c2b49d42008eb5fe42cf7cde539c380c37fc58927ca65711f846da28ca1",
        "urls": [
          "bzz-raw://e8a91fd4dd913f5d26dd9594c8159324efe2a3530e92d8d27753e61db5b1dc41",
          "dweb:/ipfs/QmZUgkaF894U6EK1wnNiLnGmEa7fJoVkhagAiAkxwRdAnp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol": {
        "keccak256": "0xd55a99f3256d732cdfe6e279b77032090d0da30b8e4edb9a68208c54608541e2",
        "urls": [
          "bzz-raw://37ffe194499a6595671196f50ed8a42c2e8df4f323d54292648efc4c5f23b94c",
          "dweb:/ipfs/Qmf672mVrGRSaNGv2M5BZmb7J4q2R4KayiCuvZekobmUeY"
        ],
        "license": "Apache-2.0"
      },
      "contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol": {
        "keccak256": "0xee77b4e6f444c477bf11bd627193353278d5c34ca7550574733267a489686388",
        "urls": [
          "bzz-raw://61f0cbe668f02daa0c0d9a0d33bc4dc97d707f187227877a66a067245cb031eb",
          "dweb:/ipfs/QmfB7gK45GLVeTGerhgZhwFGz5CkKg2mE9odSaBsSRapdG"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9",
        "urls": [
          "bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d",
          "dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
        "keccak256": "0xb11d1ade7146ac3da122e1f387ea82b0bd385d50823946c3f967dbffef3e9f4f",
        "urls": [
          "bzz-raw://0a5fc67f024fd2d261543c52a33a2a90b96d2ea1867829e8e12fe6b89b53aee1",
          "dweb:/ipfs/QmPc3ryH7Yv4FoY14CGbaXuQVQ7iu2yrxVAtmbGrN7bscf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0xfa6873a010382f62e9ffe4592b305ef6e60f55502c95ed0ffa51eb10b5200d45",
        "urls": [
          "bzz-raw://f86000c6885fb5a0a8bd5cd2595d302f0b4038411d66b85b07fa10590f844c2e",
          "dweb:/ipfs/QmeZuXaxdr7NH2wUAprx3BcLTke9RtcptAZgRKfQVHops5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Logic.sol",
    "id": 101655,
    "exportedSymbols": {
      "BurnToClaim": [
        20209
      ],
      "BurnToClaimDrop721Logic": [
        101654
      ],
      "BurnToClaimDrop721Storage": [
        101678
      ],
      "BurnToClaimStorage": [
        20015
      ],
      "Context": [
        78641
      ],
      "ContractMetadata": [
        20317
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFiltererUpgradeable": [
        20341
      ],
      "DelayedReveal": [
        20573
      ],
      "Drop": [
        21343
      ],
      "ERC2771ContextUpgradeable": [
        21634
      ],
      "ERC721AStorage": [
        17279
      ],
      "ERC721AUpgradeable": [
        18879
      ],
      "IERC165": [
        31146
      ],
      "IERC20": [
        31216
      ],
      "IERC2771Context": [
        50027
      ],
      "IERC2981": [
        31290
      ],
      "IWETH": [
        55699
      ],
      "LazyMint": [
        22011
      ],
      "Ownable": [
        22407
      ],
      "PermissionsStorage": [
        22443
      ],
      "PlatformFee": [
        23394
      ],
      "PrimarySale": [
        23495
      ],
      "Royalty": [
        23883
      ],
      "SafeERC20": [
        78527
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:16809:385",
    "nodes": [
      {
        "id": 100596,
        "nodeType": "PragmaDirective",
        "src": "39:24:385",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 100598,
        "nodeType": "ImportDirective",
        "src": "727:76:385",
        "nodes": [],
        "absolutePath": "contracts/unaudited/burn-to-claim-drop/extension/BurnToClaimDrop721Storage.sol",
        "file": "./BurnToClaimDrop721Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 101679,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100597,
              "name": "BurnToClaimDrop721Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 101678,
              "src": "736:25:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$101678_$",
                "typeString": "type(library BurnToClaimDrop721Storage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100599,
        "nodeType": "ImportDirective",
        "src": "805:36:385",
        "nodes": [],
        "absolutePath": "contracts/lib/TWStrings.sol",
        "file": "../../../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 65768,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100600,
        "nodeType": "ImportDirective",
        "src": "842:46:385",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../../../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 100602,
        "nodeType": "ImportDirective",
        "src": "890:63:385",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC2981.sol",
        "file": "../../../eip/interface/IERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 31291,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100601,
              "name": "IERC2981",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31290,
              "src": "899:8:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                "typeString": "type(contract IERC2981)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100606,
        "nodeType": "ImportDirective",
        "src": "954:116:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/eip/ERC721AUpgradeable.sol",
        "file": "../../../dynamic-contracts/eip/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 18880,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100603,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 78641,
              "src": "963:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Context_$78641_$",
                "typeString": "type(contract Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 100604,
              "name": "ERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18879,
              "src": "972:18:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AUpgradeable_$18879_$",
                "typeString": "type(contract ERC721AUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 100605,
              "name": "ERC721AStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17279,
              "src": "992:14:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$17279_$",
                "typeString": "type(library ERC721AStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100608,
        "nodeType": "ImportDirective",
        "src": "1072:83:385",
        "nodes": [],
        "absolutePath": "contracts/extension/interface/IERC2771Context.sol",
        "file": "../../../extension/interface/IERC2771Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 50028,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100607,
              "name": "IERC2771Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50027,
              "src": "1081:15:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC2771Context_$50027_$",
                "typeString": "type(contract IERC2771Context)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100610,
        "nodeType": "ImportDirective",
        "src": "1157:111:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/ERC2771ContextUpgradeable.sol",
        "file": "../../../dynamic-contracts/extension/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 21635,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100609,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21634,
              "src": "1166:25:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$21634_$",
                "typeString": "type(contract ERC2771ContextUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100612,
        "nodeType": "ImportDirective",
        "src": "1269:87:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/DelayedReveal.sol",
        "file": "../../../dynamic-contracts/extension/DelayedReveal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 20574,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100611,
              "name": "DelayedReveal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20573,
              "src": "1278:13:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DelayedReveal_$20573_$",
                "typeString": "type(contract DelayedReveal)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100614,
        "nodeType": "ImportDirective",
        "src": "1357:83:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/PrimarySale.sol",
        "file": "../../../dynamic-contracts/extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 23496,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100613,
              "name": "PrimarySale",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23495,
              "src": "1366:11:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PrimarySale_$23495_$",
                "typeString": "type(contract PrimarySale)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100616,
        "nodeType": "ImportDirective",
        "src": "1441:83:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/PlatformFee.sol",
        "file": "../../../dynamic-contracts/extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 23395,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100615,
              "name": "PlatformFee",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23394,
              "src": "1450:11:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PlatformFee_$23394_$",
                "typeString": "type(contract PlatformFee)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100619,
        "nodeType": "ImportDirective",
        "src": "1525:84:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Royalty.sol",
        "file": "../../../dynamic-contracts/extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 23884,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100617,
              "name": "Royalty",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23883,
              "src": "1534:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Royalty_$23883_$",
                "typeString": "type(contract Royalty)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 100618,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31146,
              "src": "1543:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC165_$31146_$",
                "typeString": "type(contract IERC165)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100621,
        "nodeType": "ImportDirective",
        "src": "1610:77:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/LazyMint.sol",
        "file": "../../../dynamic-contracts/extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 22012,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100620,
              "name": "LazyMint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22011,
              "src": "1619:8:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_LazyMint_$22011_$",
                "typeString": "type(contract LazyMint)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100623,
        "nodeType": "ImportDirective",
        "src": "1688:69:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Drop.sol",
        "file": "../../../dynamic-contracts/extension/Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 21344,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100622,
              "name": "Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21343,
              "src": "1697:4:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Drop_$21343_$",
                "typeString": "type(contract Drop)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100625,
        "nodeType": "ImportDirective",
        "src": "1758:93:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/ContractMetadata.sol",
        "file": "../../../dynamic-contracts/extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 20318,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100624,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20317,
              "src": "1767:16:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_ContractMetadata_$20317_$",
                "typeString": "type(contract ContractMetadata)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100627,
        "nodeType": "ImportDirective",
        "src": "1852:75:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Ownable.sol",
        "file": "../../../dynamic-contracts/extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 22408,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100626,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22407,
              "src": "1861:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Ownable_$22407_$",
                "typeString": "type(contract Ownable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100629,
        "nodeType": "ImportDirective",
        "src": "1928:129:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../../../dynamic-contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 20342,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100628,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20341,
              "src": "1937:34:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_DefaultOperatorFiltererUpgradeable_$20341_$",
                "typeString": "type(contract DefaultOperatorFiltererUpgradeable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100631,
        "nodeType": "ImportDirective",
        "src": "2058:90:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/Permissions.sol",
        "file": "../../../dynamic-contracts/extension/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 22887,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100630,
              "name": "PermissionsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22443,
              "src": "2067:18:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$22443_$",
                "typeString": "type(library PermissionsStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100634,
        "nodeType": "ImportDirective",
        "src": "2149:103:385",
        "nodes": [],
        "absolutePath": "contracts/dynamic-contracts/extension/BurnToClaim.sol",
        "file": "../../../dynamic-contracts/extension/BurnToClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101655,
        "sourceUnit": 20210,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100632,
              "name": "BurnToClaim",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20209,
              "src": "2158:11:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaim_$20209_$",
                "typeString": "type(contract BurnToClaim)"
              }
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 100633,
              "name": "BurnToClaimStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20015,
              "src": "2171:18:385",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$20015_$",
                "typeString": "type(library BurnToClaimStorage)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 101654,
        "nodeType": "ContractDefinition",
        "src": "2254:14593:385",
        "nodes": [
          {
            "id": 100661,
            "nodeType": "UsingForDirective",
            "src": "2532:28:385",
            "nodes": [],
            "libraryName": {
              "id": 100659,
              "name": "TWStrings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65767,
              "src": "2538:9:385"
            },
            "typeName": {
              "id": 100660,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2552:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 100665,
            "nodeType": "VariableDeclaration",
            "src": "2850:50:385",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100662,
              "nodeType": "StructuredDocumentation",
              "src": "2744:101:385",
              "text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
            },
            "mutability": "constant",
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "2875:18:385",
            "scope": 101654,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100663,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2850:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 100664,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2896:4:385",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "private"
          },
          {
            "id": 100671,
            "nodeType": "VariableDeclaration",
            "src": "3009:67:385",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100666,
              "nodeType": "StructuredDocumentation",
              "src": "2906:98:385",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "constant",
            "name": "TRANSFER_ROLE",
            "nameLocation": "3034:13:385",
            "scope": 101654,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100667,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3009:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452414e534645525f524f4c45",
                  "id": 100669,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3060:15:385",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  },
                  "value": "TRANSFER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                    "typeString": "literal_string \"TRANSFER_ROLE\""
                  }
                ],
                "id": 100668,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3050:9:385",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 100670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3050:26:385",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100677,
            "nodeType": "VariableDeclaration",
            "src": "3173:63:385",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100672,
              "nodeType": "StructuredDocumentation",
              "src": "3082:86:385",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "3198:11:385",
            "scope": 101654,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100673,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3173:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 100675,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3222:13:385",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 100674,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3212:9:385",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 100676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3212:24:385",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100683,
            "nodeType": "VariableDeclaration",
            "src": "3365:67:385",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100678,
              "nodeType": "StructuredDocumentation",
              "src": "3242:118:385",
              "text": "@dev Only transfers initiated by operator role hodlers are valid, when operator-initated transfers are restricted."
            },
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "3390:13:385",
            "scope": 101654,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 100679,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3365:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 100681,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3416:15:385",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 100680,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3406:9:385",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 100682,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3406:26:385",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100687,
            "nodeType": "VariableDeclaration",
            "src": "3484:41:385",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 100684,
              "nodeType": "StructuredDocumentation",
              "src": "3439:40:385",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "3509:7:385",
            "scope": 101654,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100685,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3484:7:385",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 100686,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3519:6:385",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 100692,
            "nodeType": "EventDefinition",
            "src": "3781:52:385",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 100688,
              "nodeType": "StructuredDocumentation",
              "src": "3711:65:385",
              "text": "@dev Emitted when the global max supply of tokens is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3787:21:385",
            "parameters": {
              "id": 100691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100690,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3817:14:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100692,
                  "src": "3809:22:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3808:24:385"
            }
          },
          {
            "id": 100740,
            "nodeType": "FunctionDefinition",
            "src": "4080:402:385",
            "nodes": [],
            "body": {
              "id": 100739,
              "nodeType": "Block",
              "src": "4161:321:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100702,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100702,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "4180:7:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100739,
                      "src": "4172:15:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4172:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 100706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100704,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100695,
                        "src": "4205:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100703,
                      "name": "_getBatchId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19845,
                      "src": "4193:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 100705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:21:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4171:43:385"
                },
                {
                  "assignments": [
                    100708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100708,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "4238:8:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100739,
                      "src": "4224:22:385",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 100707,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4224:6:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100712,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100710,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100695,
                        "src": "4261:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100709,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19907,
                      "src": "4249:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 100711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:21:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4224:46:385"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 100714,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100702,
                        "src": "4302:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100713,
                      "name": "isEncryptedBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20572,
                      "src": "4285:16:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 100715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4285:25:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100737,
                    "nodeType": "Block",
                    "src": "4389:87:385",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 100730,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100708,
                                  "src": "4434:8:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 100731,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 100695,
                                      "src": "4444:8:385",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 100732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65649,
                                    "src": "4444:17:385",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 100733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4444:19:385",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 100728,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4417:3:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 100729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4417:16:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 100734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4417:47:385",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 100727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4410:6:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 100726,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4410:6:385",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4410:55:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 100700,
                        "id": 100736,
                        "nodeType": "Return",
                        "src": "4403:62:385"
                      }
                    ]
                  },
                  "id": 100738,
                  "nodeType": "IfStatement",
                  "src": "4281:195:385",
                  "trueBody": {
                    "id": 100725,
                    "nodeType": "Block",
                    "src": "4312:71:385",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 100720,
                                  "name": "batchUri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100708,
                                  "src": "4357:8:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 100721,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4367:3:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                    "typeString": "literal_string \"0\""
                                  }
                                ],
                                "expression": {
                                  "id": 100718,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4340:3:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 100719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4340:16:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 100722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4340:31:385",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 100717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4333:6:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 100716,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4333:6:385",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4333:39:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 100700,
                        "id": 100724,
                        "nodeType": "Return",
                        "src": "4326:46:385"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              17763
            ],
            "documentation": {
              "id": 100693,
              "nodeType": "StructuredDocumentation",
              "src": "4030:45:385",
              "text": "@dev Returns the URI for a given tokenId."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4089:8:385",
            "overrides": {
              "id": 100697,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4128:8:385"
            },
            "parameters": {
              "id": 100696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100695,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4106:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100740,
                  "src": "4098:16:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4097:18:385"
            },
            "returnParameters": {
              "id": 100700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100740,
                  "src": "4146:13:385",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100698,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4146:6:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4145:15:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100764,
            "nodeType": "FunctionDefinition",
            "src": "4513:269:385",
            "nodes": [],
            "body": {
              "id": 100763,
              "nodeType": "Block",
              "src": "4677:105:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 100761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 100753,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100743,
                          "src": "4718:11:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 100751,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4694:5:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                            "typeString": "type(contract super BurnToClaimDrop721Logic)"
                          }
                        },
                        "id": 100752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17436,
                        "src": "4694:23:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 100754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4694:36:385",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 100760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 100756,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31290,
                              "src": "4739:8:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$31290_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 100755,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4734:4:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 100757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4734:14:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$31290",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 100758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4734:26:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 100759,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100743,
                        "src": "4764:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "4734:41:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4694:81:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 100750,
                  "id": 100762,
                  "nodeType": "Return",
                  "src": "4687:88:385"
                }
              ]
            },
            "baseFunctions": [
              17436,
              31145
            ],
            "documentation": {
              "id": 100741,
              "nodeType": "StructuredDocumentation",
              "src": "4488:20:385",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4522:17:385",
            "overrides": {
              "id": 100747,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 100745,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18879,
                  "src": "4621:18:385"
                },
                {
                  "id": 100746,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "4641:7:385"
                }
              ],
              "src": "4612:37:385"
            },
            "parameters": {
              "id": 100744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100743,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4547:11:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100764,
                  "src": "4540:18:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 100742,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:6:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4539:20:385"
            },
            "returnParameters": {
              "id": 100750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100764,
                  "src": "4667:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100748,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 100827,
            "nodeType": "FunctionDefinition",
            "src": "5156:575:385",
            "nodes": [],
            "body": {
              "id": 100826,
              "nodeType": "Block",
              "src": "5320:411:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100778,
                      "mutability": "mutable",
                      "name": "nextId",
                      "nameLocation": "5338:6:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100826,
                      "src": "5330:14:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100777,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5330:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100781,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100779,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21933,
                      "src": "5347:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5347:23:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5330:40:385"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 100782,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100771,
                        "src": "5384:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 100783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5384:12:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5399:1:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5384:16:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100818,
                  "nodeType": "IfStatement",
                  "src": "5380:278:385",
                  "trueBody": {
                    "id": 100817,
                    "nodeType": "Block",
                    "src": "5402:256:385",
                    "statements": [
                      {
                        "assignments": [
                          100787,
                          100789
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 100787,
                            "mutability": "mutable",
                            "name": "encryptedURI",
                            "nameLocation": "5430:12:385",
                            "nodeType": "VariableDeclaration",
                            "scope": 100817,
                            "src": "5417:25:385",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 100786,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5417:5:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 100789,
                            "mutability": "mutable",
                            "name": "provenanceHash",
                            "nameLocation": "5452:14:385",
                            "nodeType": "VariableDeclaration",
                            "scope": 100817,
                            "src": "5444:22:385",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 100788,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5444:7:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100799,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 100792,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100771,
                              "src": "5481:5:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 100794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5489:5:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 100793,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5489:5:385",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 100796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5496:7:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 100795,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5496:7:385",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 100797,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5488:16:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(bytes storage pointer),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 100790,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5470:3:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 100791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5470:10:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 100798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5470:35:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5416:89:385"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 100807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100800,
                                "name": "encryptedURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100787,
                                "src": "5523:12:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 100801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5523:19:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 100802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5546:1:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5523:24:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 100806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 100804,
                              "name": "provenanceHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100789,
                              "src": "5551:14:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "",
                              "id": 100805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5569:2:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            "src": "5551:20:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5523:48:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100816,
                        "nodeType": "IfStatement",
                        "src": "5519:129:385",
                        "trueBody": {
                          "id": 100815,
                          "nodeType": "Block",
                          "src": "5573:75:385",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 100811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 100809,
                                      "name": "nextId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 100778,
                                      "src": "5609:6:385",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 100810,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 100767,
                                      "src": "5618:7:385",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5609:16:385",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 100812,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100771,
                                    "src": "5627:5:385",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 100808,
                                  "name": "_setEncryptedData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20420,
                                  "src": "5591:17:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes memory)"
                                  }
                                },
                                "id": 100813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:42:385",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 100814,
                              "nodeType": "ExpressionStatement",
                              "src": "5591:42:385"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100821,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100767,
                        "src": "5690:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100822,
                        "name": "_baseURIForTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100769,
                        "src": "5699:17:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 100823,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100771,
                        "src": "5718:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 100819,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5675:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 100820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lazyMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22004,
                      "src": "5675:14:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,string calldata,bytes calldata) returns (uint256)"
                      }
                    },
                    "id": 100824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5675:49:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100776,
                  "id": 100825,
                  "nodeType": "Return",
                  "src": "5668:56:385"
                }
              ]
            },
            "baseFunctions": [
              22004
            ],
            "documentation": {
              "id": 100765,
              "nodeType": "StructuredDocumentation",
              "src": "4984:167:385",
              "text": "  @dev Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n       The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."
            },
            "functionSelector": "d37c353b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "5165:8:385",
            "overrides": {
              "id": 100773,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5285:8:385"
            },
            "parameters": {
              "id": 100772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100767,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5191:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100827,
                  "src": "5183:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100769,
                  "mutability": "mutable",
                  "name": "_baseURIForTokens",
                  "nameLocation": "5224:17:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100827,
                  "src": "5208:33:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5208:6:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100771,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5266:5:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100827,
                  "src": "5251:20:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100770,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:5:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5173:104:385"
            },
            "returnParameters": {
              "id": 100776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100775,
                  "mutability": "mutable",
                  "name": "batchId",
                  "nameLocation": "5311:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100827,
                  "src": "5303:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5302:17:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100875,
            "nodeType": "FunctionDefinition",
            "src": "5838:415:385",
            "nodes": [],
            "body": {
              "id": 100874,
              "nodeType": "Block",
              "src": "5936:317:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100839,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100677,
                            "src": "5963:11:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100840,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                101640
                              ],
                              "referencedDeclaration": 101640,
                              "src": "5976:10:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 100841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5976:12:385",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100838,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101617,
                          "src": "5954:8:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 100842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5954:35:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d696e7465722e",
                        "id": 100843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5991:13:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        },
                        "value": "not minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3ba029e0c0ab4a73c06188e1050a612d65341c83aa83d5839a5156e5f7b497",
                          "typeString": "literal_string \"not minter.\""
                        }
                      ],
                      "id": 100837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5946:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:59:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100845,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:59:385"
                },
                {
                  "assignments": [
                    100847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100847,
                      "mutability": "mutable",
                      "name": "batchId",
                      "nameLocation": "6023:7:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100874,
                      "src": "6015:15:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6015:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100849,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6051:6:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100848,
                      "name": "getBatchIdAtIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19774,
                      "src": "6033:17:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 100850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6033:25:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6015:43:385"
                },
                {
                  "expression": {
                    "id": 100857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100852,
                      "name": "revealedURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100835,
                      "src": "6068:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100854,
                          "name": "batchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100847,
                          "src": "6095:7:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 100855,
                          "name": "_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100832,
                          "src": "6104:4:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 100853,
                        "name": "getRevealURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20496,
                        "src": "6082:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (uint256,bytes calldata) view returns (string memory)"
                        }
                      },
                      "id": 100856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6082:27:385",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6068:41:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 100858,
                  "nodeType": "ExpressionStatement",
                  "src": "6068:41:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100860,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100847,
                        "src": "6138:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 100861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6147:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 100859,
                      "name": "_setEncryptedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20420,
                      "src": "6120:17:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 100862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:30:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100863,
                  "nodeType": "ExpressionStatement",
                  "src": "6120:30:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100865,
                        "name": "batchId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100847,
                        "src": "6172:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100866,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100835,
                        "src": "6181:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 100864,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19933,
                      "src": "6160:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 100867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:33:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100868,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:33:385"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 100870,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6226:6:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100871,
                        "name": "revealedURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100835,
                        "src": "6234:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 100869,
                      "name": "TokenURIRevealed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49689,
                      "src": "6209:16:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 100872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6209:37:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100873,
                  "nodeType": "EmitStatement",
                  "src": "6204:42:385"
                }
              ]
            },
            "baseFunctions": [
              49699
            ],
            "documentation": {
              "id": 100828,
              "nodeType": "StructuredDocumentation",
              "src": "5737:96:385",
              "text": "@dev Lets an account with `MINTER_ROLE` reveal the URI for a batch of 'delayed-reveal' NFTs."
            },
            "functionSelector": "ce805642",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reveal",
            "nameLocation": "5847:6:385",
            "parameters": {
              "id": 100833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100830,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "5862:6:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100875,
                  "src": "5854:14:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5854:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100832,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "5885:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100875,
                  "src": "5870:19:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100831,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5870:5:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5853:37:385"
            },
            "returnParameters": {
              "id": 100836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100835,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "5923:11:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100875,
                  "src": "5909:25:385",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5909:6:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5908:27:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100942,
            "nodeType": "FunctionDefinition",
            "src": "6536:868:385",
            "nodes": [],
            "body": {
              "id": 100941,
              "nodeType": "Block",
              "src": "6616:788:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100884,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "6644:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100883,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101035,
                      "src": "6626:17:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 100885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6626:28:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100886,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:28:385"
                },
                {
                  "assignments": [
                    100888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100888,
                      "mutability": "mutable",
                      "name": "_tokenOwner",
                      "nameLocation": "6726:11:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100941,
                      "src": "6718:19:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100887,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6718:7:385",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100891,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100889,
                      "name": "_dropMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101627
                      ],
                      "referencedDeclaration": 101627,
                      "src": "6740:14:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 100890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6740:16:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6718:38:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100893,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100888,
                        "src": "6784:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100894,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100878,
                        "src": "6797:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100895,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "6811:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100892,
                      "name": "verifyBurnToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20153,
                      "src": "6766:17:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 100896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6766:55:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100897,
                  "nodeType": "ExpressionStatement",
                  "src": "6766:55:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100899,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100888,
                        "src": "6851:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100900,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100878,
                        "src": "6864:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100901,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "6878:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100898,
                      "name": "_burnTokensOnOrigin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20203,
                      "src": "6831:19:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 100902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6831:57:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100903,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:57:385"
                },
                {
                  "assignments": [
                    100908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100908,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6956:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100941,
                      "src": "6924:36:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                        "typeString": "struct BurnToClaimStorage.Data"
                      },
                      "typeName": {
                        "id": 100907,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100906,
                          "name": "BurnToClaimStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20002,
                          "src": "6924:23:385"
                        },
                        "referencedDeclaration": 20002,
                        "src": "6924:23:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                          "typeString": "struct BurnToClaimStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100912,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100909,
                        "name": "BurnToClaimStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20015,
                        "src": "6963:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimStorage_$20015_$",
                          "typeString": "type(library BurnToClaimStorage)"
                        }
                      },
                      "id": 100910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20014,
                      "src": "6963:37:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$20002_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimStorage.Data storage pointer)"
                      }
                    },
                    "id": 100911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6963:39:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                      "typeString": "struct BurnToClaimStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6924:78:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 100916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7054:1:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 100915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7046:7:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7046:7:385",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7046:10:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100918,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "7070:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 100919,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100908,
                            "src": "7093:4:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 100920,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20001,
                          "src": "7093:20:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$49434_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 100921,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49433,
                        "src": "7093:29:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 100922,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100908,
                            "src": "7136:4:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 100923,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20001,
                          "src": "7136:20:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$49434_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 100924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPriceForNewToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49431,
                        "src": "7136:41:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100913,
                      "name": "_collectPriceOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101172
                      ],
                      "referencedDeclaration": 101172,
                      "src": "7012:20:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 100925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7012:175:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100926,
                  "nodeType": "ExpressionStatement",
                  "src": "7012:175:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100928,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100888,
                        "src": "7232:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100929,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "7245:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100927,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18046,
                        18230
                      ],
                      "referencedDeclaration": 18046,
                      "src": "7222:9:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 100930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:33:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100931,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:33:385"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 100933,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100908,
                            "src": "7316:4:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$20002_storage_ptr",
                              "typeString": "struct BurnToClaimStorage.Data storage pointer"
                            }
                          },
                          "id": 100934,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnToClaimInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20001,
                          "src": "7316:20:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BurnToClaimInfo_$49434_storage",
                            "typeString": "struct IBurnToClaim.BurnToClaimInfo storage ref"
                          }
                        },
                        "id": 100935,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "originContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49424,
                        "src": "7316:42:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100936,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100888,
                        "src": "7360:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100937,
                        "name": "_burnTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100878,
                        "src": "7373:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100938,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100880,
                        "src": "7387:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100932,
                      "name": "TokensBurnedAndClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49445,
                      "src": "7293:22:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 100939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:104:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100940,
                  "nodeType": "EmitStatement",
                  "src": "7288:109:385"
                }
              ]
            },
            "documentation": {
              "id": 100876,
              "nodeType": "StructuredDocumentation",
              "src": "6453:78:385",
              "text": "@dev Claim lazy minted after burning required tokens from origin contract."
            },
            "functionSelector": "1567313b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnAndClaim",
            "nameLocation": "6545:12:385",
            "parameters": {
              "id": 100881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100878,
                  "mutability": "mutable",
                  "name": "_burnTokenId",
                  "nameLocation": "6566:12:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100942,
                  "src": "6558:20:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100880,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "6588:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100942,
                  "src": "6580:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6580:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6557:41:385"
            },
            "returnParameters": {
              "id": 100882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6616:0:385"
            },
            "scope": 101654,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 100977,
            "nodeType": "FunctionDefinition",
            "src": "7679:353:385",
            "nodes": [],
            "body": {
              "id": 100976,
              "nodeType": "Block",
              "src": "7740:292:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100950,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100665,
                            "src": "7767:18:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 100951,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                101640
                              ],
                              "referencedDeclaration": 101640,
                              "src": "7787:10:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 100952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7787:12:385",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100949,
                          "name": "_hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101617,
                          "src": "7758:8:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 100953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7758:42:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742061646d696e2e",
                        "id": 100954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7802:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        },
                        "value": "not admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e53bf2a2bcdd43c564217a5a8749411547168b3f2765ac09377195dccc999427",
                          "typeString": "literal_string \"not admin.\""
                        }
                      ],
                      "id": 100948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7750:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7750:65:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100956,
                  "nodeType": "ExpressionStatement",
                  "src": "7750:65:385"
                },
                {
                  "assignments": [
                    100961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100961,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7865:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 100976,
                      "src": "7826:43:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 100960,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100959,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 101665,
                          "src": "7826:30:385"
                        },
                        "referencedDeclaration": 101665,
                        "src": "7826:30:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100965,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100962,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101678,
                        "src": "7872:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$101678_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 100963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101677,
                      "src": "7872:51:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$101665_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 100964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7872:53:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7826:99:385"
                },
                {
                  "expression": {
                    "id": 100970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 100966,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100961,
                        "src": "7935:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                        }
                      },
                      "id": 100968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTotalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101664,
                      "src": "7935:19:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100969,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100945,
                      "src": "7957:15:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7935:37:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100971,
                  "nodeType": "ExpressionStatement",
                  "src": "7935:37:385"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 100973,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100945,
                        "src": "8009:15:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100972,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100692,
                      "src": "7987:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 100974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7987:38:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100975,
                  "nodeType": "EmitStatement",
                  "src": "7982:43:385"
                }
              ]
            },
            "documentation": {
              "id": 100943,
              "nodeType": "StructuredDocumentation",
              "src": "7591:83:385",
              "text": "@dev Lets a contract admin set the global maximum supply for collection's NFTs."
            },
            "functionSelector": "3f3e4c11",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxTotalSupply",
            "nameLocation": "7688:17:385",
            "parameters": {
              "id": 100946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100945,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "7714:15:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 100977,
                  "src": "7706:23:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7706:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7705:25:385"
            },
            "returnParameters": {
              "id": 100947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7740:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101035,
            "nodeType": "FunctionDefinition",
            "src": "8284:580:385",
            "nodes": [],
            "body": {
              "id": 101034,
              "nodeType": "Block",
              "src": "8344:520:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100987,
                      "mutability": "mutable",
                      "name": "dropData",
                      "nameLocation": "8393:8:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101034,
                      "src": "8354:47:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 100986,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100985,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 101665,
                          "src": "8354:30:385"
                        },
                        "referencedDeclaration": 101665,
                        "src": "8354:30:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100991,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100988,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101678,
                        "src": "8404:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$101678_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 100989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101677,
                      "src": "8404:51:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$101665_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 100990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8404:53:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8354:103:385"
                },
                {
                  "assignments": [
                    100996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100996,
                      "mutability": "mutable",
                      "name": "erc721AData",
                      "nameLocation": "8495:11:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101034,
                      "src": "8467:39:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 100995,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100994,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17266,
                          "src": "8467:19:385"
                        },
                        "referencedDeclaration": 17266,
                        "src": "8467:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101000,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100997,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17279,
                        "src": "8509:14:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$17279_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 100998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17278,
                      "src": "8509:29:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17266_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 100999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8509:31:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8467:73:385"
                },
                {
                  "assignments": [
                    101002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101002,
                      "mutability": "mutable",
                      "name": "_maxTotalSupply",
                      "nameLocation": "8559:15:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101034,
                      "src": "8551:23:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101001,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8551:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101005,
                  "initialValue": {
                    "expression": {
                      "id": 101003,
                      "name": "dropData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100987,
                      "src": "8577:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 101004,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101664,
                    "src": "8577:23:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8551:49:385"
                },
                {
                  "assignments": [
                    101007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101007,
                      "mutability": "mutable",
                      "name": "currentIndex_",
                      "nameLocation": "8618:13:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101034,
                      "src": "8610:21:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101006,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8610:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101010,
                  "initialValue": {
                    "expression": {
                      "id": 101008,
                      "name": "erc721AData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100996,
                      "src": "8634:11:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 101009,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17239,
                    "src": "8634:25:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8610:49:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101012,
                            "name": "currentIndex_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101007,
                            "src": "8678:13:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 101013,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100980,
                            "src": "8694:9:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8678:25:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 101015,
                            "name": "nextTokenIdToLazyMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21933,
                            "src": "8707:21:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 101016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8707:23:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8678:52:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21546f6b656e73",
                        "id": 101018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8732:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        },
                        "value": "!Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c48d16b147323aabba55b2c5e21a0b7a88b05e59180ad9d2d4b243d721a30dd",
                          "typeString": "literal_string \"!Tokens\""
                        }
                      ],
                      "id": 101011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8670:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8670:72:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101020,
                  "nodeType": "ExpressionStatement",
                  "src": "8670:72:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 101030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101022,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101002,
                            "src": "8760:15:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 101023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8779:1:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8760:20:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 101025,
                              "name": "currentIndex_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101007,
                              "src": "8784:13:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 101026,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100980,
                              "src": "8800:9:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8784:25:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 101028,
                            "name": "_maxTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101002,
                            "src": "8813:15:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8784:44:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8760:68:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c792e",
                        "id": 101031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8830:26:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        },
                        "value": "exceed max total supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4e319661650d6a0137f2c1e35ddbe3cec4727f8902befce5907bf3aef5c69d8",
                          "typeString": "literal_string \"exceed max total supply.\""
                        }
                      ],
                      "id": 101021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8752:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8752:105:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101033,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:105:385"
                }
              ]
            },
            "documentation": {
              "id": 100978,
              "nodeType": "StructuredDocumentation",
              "src": "8221:58:385",
              "text": "@dev Check if given quantity is available for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkTokenSupply",
            "nameLocation": "8293:17:385",
            "parameters": {
              "id": 100981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100980,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8319:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101035,
                  "src": "8311:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8311:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8310:19:385"
            },
            "returnParameters": {
              "id": 100982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8344:0:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101058,
            "nodeType": "FunctionDefinition",
            "src": "8924:229:385",
            "nodes": [],
            "body": {
              "id": 101057,
              "nodeType": "Block",
              "src": "9108:45:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101054,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101040,
                        "src": "9136:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101053,
                      "name": "_checkTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101035,
                      "src": "9118:17:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 101055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9118:28:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101056,
                  "nodeType": "ExpressionStatement",
                  "src": "9118:28:385"
                }
              ]
            },
            "baseFunctions": [
              21296
            ],
            "documentation": {
              "id": 101036,
              "nodeType": "StructuredDocumentation",
              "src": "8870:49:385",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "8933:12:385",
            "overrides": {
              "id": 101051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9099:8:385"
            },
            "parameters": {
              "id": 101050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "8955:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8955:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101040,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8980:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "8972:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8972:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "8999:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8999:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "9016:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9016:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "9033:23:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$49765_calldata_ptr",
                    "typeString": "struct IDrop.AllowlistProof"
                  },
                  "typeName": {
                    "id": 101046,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 101045,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49765,
                      "src": "9033:14:385"
                    },
                    "referencedDeclaration": 49765,
                    "src": "9033:14:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$49765_storage_ptr",
                      "typeString": "struct IDrop.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101058,
                  "src": "9066:12:385",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 101048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9066:5:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8945:139:385"
            },
            "returnParameters": {
              "id": 101052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9108:0:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101172,
            "nodeType": "FunctionDefinition",
            "src": "9243:1136:385",
            "nodes": [],
            "body": {
              "id": 101171,
              "nodeType": "Block",
              "src": "9429:950:385",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101071,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101067,
                      "src": "9443:14:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 101072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9461:1:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9443:19:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101084,
                  "nodeType": "IfStatement",
                  "src": "9439:103:385",
                  "trueBody": {
                    "id": 101083,
                    "nodeType": "Block",
                    "src": "9464:78:385",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 101078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 101075,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9486:3:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 101076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "9486:9:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 101077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9499:1:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9486:14:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156616c7565",
                              "id": 101079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9502:8:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              },
                              "value": "!Value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208006903b0d1b8c530b3b2de29e1f765aa4311b3f136f1a342e9de039eda1b1",
                                "typeString": "literal_string \"!Value\""
                              }
                            ],
                            "id": 101074,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9478:7:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 101080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9478:33:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101081,
                        "nodeType": "ExpressionStatement",
                        "src": "9478:33:385"
                      },
                      {
                        "functionReturnParameters": 101070,
                        "id": 101082,
                        "nodeType": "Return",
                        "src": "9525:7:385"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    101086,
                    101088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101086,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "9561:20:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9553:28:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9553:7:385",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 101088,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "9590:14:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9583:21:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 101087,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9583:6:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101091,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101089,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23316,
                      "src": "9608:18:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 101090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9608:20:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9552:76:385"
                },
                {
                  "assignments": [
                    101093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101093,
                      "mutability": "mutable",
                      "name": "saleRecipient",
                      "nameLocation": "9647:13:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9639:21:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9639:7:385",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101104,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 101099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101094,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101061,
                        "src": "9663:21:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 101097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9696:1:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 101096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9688:7:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9688:7:385",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9688:10:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9663:35:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 101102,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101061,
                      "src": "9726:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 101103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9663:84:385",
                    "trueExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101100,
                        "name": "primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23441,
                        "src": "9701:20:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 101101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9701:22:385",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9639:108:385"
                },
                {
                  "assignments": [
                    101106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101106,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9766:10:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9758:18:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9758:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101110,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101107,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101063,
                      "src": "9779:16:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 101108,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101067,
                      "src": "9798:14:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9779:33:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9758:54:385"
                },
                {
                  "assignments": [
                    101112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101112,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "9830:12:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9822:20:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9822:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101119,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101113,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101106,
                            "src": "9846:10:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 101114,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101088,
                            "src": "9859:14:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "9846:27:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 101116,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9845:29:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 101117,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100687,
                      "src": "9877:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9845:39:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9822:62:385"
                },
                {
                  "assignments": [
                    101121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101121,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "9900:13:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101171,
                      "src": "9895:18:385",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 101120,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9895:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101122,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9895:18:385"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 101126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 101123,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101065,
                      "src": "9927:9:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 101124,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9940:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 101125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "9940:32:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9927:45:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 101142,
                    "nodeType": "Block",
                    "src": "10044:55:385",
                    "statements": [
                      {
                        "expression": {
                          "id": 101140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101135,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101121,
                            "src": "10058:13:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10074:3:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10074:9:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 101138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10087:1:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10074:14:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10058:30:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101141,
                        "nodeType": "ExpressionStatement",
                        "src": "10058:30:385"
                      }
                    ]
                  },
                  "id": 101143,
                  "nodeType": "IfStatement",
                  "src": "9923:176:385",
                  "trueBody": {
                    "id": 101134,
                    "nodeType": "Block",
                    "src": "9974:64:385",
                    "statements": [
                      {
                        "expression": {
                          "id": 101132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101127,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101121,
                            "src": "9988:13:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101128,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10004:3:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10004:9:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 101130,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101106,
                              "src": "10017:10:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10004:23:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9988:39:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101133,
                        "nodeType": "ExpressionStatement",
                        "src": "9988:39:385"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101145,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101121,
                        "src": "10116:13:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d73672076616c7565",
                        "id": 101146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10131:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        },
                        "value": "Invalid msg value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0d8376eff7771bcc57765656c140a92c651b9eeb4df686f809560770e7fe49",
                          "typeString": "literal_string \"Invalid msg value\""
                        }
                      ],
                      "id": 101144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10108:7:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10108:43:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101148,
                  "nodeType": "ExpressionStatement",
                  "src": "10108:43:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101152,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101065,
                        "src": "10199:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101153,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "10210:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10210:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101155,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101086,
                        "src": "10224:20:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101156,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101112,
                        "src": "10246:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101149,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "10162:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 101151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "10162:36:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 101157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10162:97:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101158,
                  "nodeType": "ExpressionStatement",
                  "src": "10162:97:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101162,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101065,
                        "src": "10306:9:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101163,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "10317:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10317:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101165,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101093,
                        "src": "10331:13:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101166,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101106,
                          "src": "10346:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 101167,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101112,
                          "src": "10359:12:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10346:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101159,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "10269:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 101161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "10269:36:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 101169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10269:103:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101170,
                  "nodeType": "ExpressionStatement",
                  "src": "10269:103:385"
                }
              ]
            },
            "baseFunctions": [
              21326
            ],
            "documentation": {
              "id": 101059,
              "nodeType": "StructuredDocumentation",
              "src": "9159:79:385",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collectPriceOnClaim",
            "nameLocation": "9252:20:385",
            "overrides": {
              "id": 101069,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9420:8:385"
            },
            "parameters": {
              "id": 101068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101061,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "9290:21:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101172,
                  "src": "9282:29:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9282:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101063,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "9329:16:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101172,
                  "src": "9321:24:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9321:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101065,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "9363:9:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101172,
                  "src": "9355:17:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9355:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101067,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "9390:14:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101172,
                  "src": "9382:22:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9382:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9272:138:385"
            },
            "returnParameters": {
              "id": 101070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9429:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101203,
            "nodeType": "FunctionDefinition",
            "src": "10432:326:385",
            "nodes": [],
            "body": {
              "id": 101202,
              "nodeType": "Block",
              "src": "10585:173:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101187,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "10623:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101202,
                      "src": "10595:32:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 101186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101185,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17266,
                          "src": "10595:19:385"
                        },
                        "referencedDeclaration": 17266,
                        "src": "10595:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101191,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101188,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17279,
                        "src": "10630:14:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$17279_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 101189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17278,
                      "src": "10630:29:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17266_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 101190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10630:31:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10595:66:385"
                },
                {
                  "expression": {
                    "id": 101195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101192,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101181,
                      "src": "10671:12:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 101193,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101187,
                        "src": "10686:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data storage pointer"
                        }
                      },
                      "id": 101194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17239,
                      "src": "10686:18:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10671:33:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101196,
                  "nodeType": "ExpressionStatement",
                  "src": "10671:33:385"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101198,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101175,
                        "src": "10724:3:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101199,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101177,
                        "src": "10729:21:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101197,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18046,
                        18230
                      ],
                      "referencedDeclaration": 18046,
                      "src": "10714:9:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10714:37:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101201,
                  "nodeType": "ExpressionStatement",
                  "src": "10714:37:385"
                }
              ]
            },
            "baseFunctions": [
              21336
            ],
            "documentation": {
              "id": 101173,
              "nodeType": "StructuredDocumentation",
              "src": "10385:42:385",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10441:22:385",
            "overrides": {
              "id": 101179,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10533:8:385"
            },
            "parameters": {
              "id": 101178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101175,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10472:3:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101203,
                  "src": "10464:11:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10464:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101177,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "10485:21:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101203,
                  "src": "10477:29:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10477:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10463:44:385"
            },
            "returnParameters": {
              "id": 101182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101181,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "10567:12:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101203,
                  "src": "10559:20:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10559:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10558:22:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101217,
            "nodeType": "FunctionDefinition",
            "src": "10853:138:385",
            "nodes": [],
            "body": {
              "id": 101216,
              "nodeType": "Block",
              "src": "10925:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101211,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "10951:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101212,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "10971:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10971:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101210,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "10942:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101209,
                  "id": 101215,
                  "nodeType": "Return",
                  "src": "10935:49:385"
                }
              ]
            },
            "baseFunctions": [
              23393
            ],
            "documentation": {
              "id": 101204,
              "nodeType": "StructuredDocumentation",
              "src": "10764:84:385",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "10862:22:385",
            "overrides": {
              "id": 101206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10901:8:385"
            },
            "parameters": {
              "id": 101205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10884:2:385"
            },
            "returnParameters": {
              "id": 101209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101217,
                  "src": "10919:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101207,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10919:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10918:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101231,
            "nodeType": "FunctionDefinition",
            "src": "11091:143:385",
            "nodes": [],
            "body": {
              "id": 101230,
              "nodeType": "Block",
              "src": "11168:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101225,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "11194:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101226,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "11214:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11214:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101224,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "11185:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11185:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101223,
                  "id": 101229,
                  "nodeType": "Return",
                  "src": "11178:49:385"
                }
              ]
            },
            "baseFunctions": [
              23494
            ],
            "documentation": {
              "id": 101218,
              "nodeType": "StructuredDocumentation",
              "src": "10997:89:385",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "11100:27:385",
            "overrides": {
              "id": 101220,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11144:8:385"
            },
            "parameters": {
              "id": 101219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11127:2:385"
            },
            "returnParameters": {
              "id": 101223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101231,
                  "src": "11162:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101221,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11162:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11161:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101245,
            "nodeType": "FunctionDefinition",
            "src": "11317:128:385",
            "nodes": [],
            "body": {
              "id": 101244,
              "nodeType": "Block",
              "src": "11379:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101239,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "11405:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101240,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "11425:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11425:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101238,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "11396:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11396:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101237,
                  "id": 101243,
                  "nodeType": "Return",
                  "src": "11389:49:385"
                }
              ]
            },
            "baseFunctions": [
              22406
            ],
            "documentation": {
              "id": 101232,
              "nodeType": "StructuredDocumentation",
              "src": "11240:72:385",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "11326:12:385",
            "overrides": {
              "id": 101234,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11355:8:385"
            },
            "parameters": {
              "id": 101233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11338:2:385"
            },
            "returnParameters": {
              "id": 101237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101245,
                  "src": "11373:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101235,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11373:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11372:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101259,
            "nodeType": "FunctionDefinition",
            "src": "11535:134:385",
            "nodes": [],
            "body": {
              "id": 101258,
              "nodeType": "Block",
              "src": "11603:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101253,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "11629:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101254,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "11649:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11649:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101252,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "11620:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11620:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101251,
                  "id": 101257,
                  "nodeType": "Return",
                  "src": "11613:49:385"
                }
              ]
            },
            "baseFunctions": [
              23882
            ],
            "documentation": {
              "id": 101246,
              "nodeType": "StructuredDocumentation",
              "src": "11451:79:385",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "11544:18:385",
            "overrides": {
              "id": 101248,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11579:8:385"
            },
            "parameters": {
              "id": 101247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11562:2:385"
            },
            "returnParameters": {
              "id": 101251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101259,
                  "src": "11597:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11597:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11596:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101273,
            "nodeType": "FunctionDefinition",
            "src": "11764:134:385",
            "nodes": [],
            "body": {
              "id": 101272,
              "nodeType": "Block",
              "src": "11832:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101267,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "11858:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101268,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "11878:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11878:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101266,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "11849:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11849:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101265,
                  "id": 101271,
                  "nodeType": "Return",
                  "src": "11842:49:385"
                }
              ]
            },
            "baseFunctions": [
              20316
            ],
            "documentation": {
              "id": 101260,
              "nodeType": "StructuredDocumentation",
              "src": "11675:84:385",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "11773:18:385",
            "overrides": {
              "id": 101262,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11808:8:385"
            },
            "parameters": {
              "id": 101261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11791:2:385"
            },
            "returnParameters": {
              "id": 101265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101273,
                  "src": "11826:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11826:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11825:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101287,
            "nodeType": "FunctionDefinition",
            "src": "11993:138:385",
            "nodes": [],
            "body": {
              "id": 101286,
              "nodeType": "Block",
              "src": "12065:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101281,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "12091:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101282,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "12111:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12111:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101280,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "12082:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12082:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101279,
                  "id": 101285,
                  "nodeType": "Return",
                  "src": "12075:49:385"
                }
              ]
            },
            "baseFunctions": [
              21342
            ],
            "documentation": {
              "id": 101274,
              "nodeType": "StructuredDocumentation",
              "src": "11904:84:385",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "12002:22:385",
            "overrides": {
              "id": 101276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12041:8:385"
            },
            "parameters": {
              "id": 101275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12024:2:385"
            },
            "returnParameters": {
              "id": 101279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101287,
                  "src": "12059:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12059:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12058:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101301,
            "nodeType": "FunctionDefinition",
            "src": "12223:129:385",
            "nodes": [],
            "body": {
              "id": 101300,
              "nodeType": "Block",
              "src": "12293:59:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101295,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100677,
                        "src": "12319:11:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101296,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "12332:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12332:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101294,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "12310:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12310:35:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101293,
                  "id": 101299,
                  "nodeType": "Return",
                  "src": "12303:42:385"
                }
              ]
            },
            "baseFunctions": [
              22010
            ],
            "documentation": {
              "id": 101288,
              "nodeType": "StructuredDocumentation",
              "src": "12137:81:385",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "12232:12:385",
            "overrides": {
              "id": 101290,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12269:8:385"
            },
            "parameters": {
              "id": 101289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12244:2:385"
            },
            "returnParameters": {
              "id": 101293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101301,
                  "src": "12287:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12287:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12286:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101315,
            "nodeType": "FunctionDefinition",
            "src": "12451:145:385",
            "nodes": [],
            "body": {
              "id": 101314,
              "nodeType": "Block",
              "src": "12530:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101309,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "12556:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101310,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "12576:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12576:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101308,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "12547:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101307,
                  "id": 101313,
                  "nodeType": "Return",
                  "src": "12540:49:385"
                }
              ]
            },
            "baseFunctions": [
              22102
            ],
            "documentation": {
              "id": 101302,
              "nodeType": "StructuredDocumentation",
              "src": "12358:88:385",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "12460:26:385",
            "overrides": {
              "id": 101304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12506:8:385"
            },
            "parameters": {
              "id": 101303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12486:2:385"
            },
            "returnParameters": {
              "id": 101307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101315,
                  "src": "12524:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101305,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12524:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12523:6:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101329,
            "nodeType": "FunctionDefinition",
            "src": "12693:142:385",
            "nodes": [],
            "body": {
              "id": 101328,
              "nodeType": "Block",
              "src": "12769:66:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101323,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100665,
                        "src": "12795:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 101324,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            101640
                          ],
                          "referencedDeclaration": 101640,
                          "src": "12815:10:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 101325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12815:12:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101322,
                      "name": "_hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101617,
                      "src": "12786:8:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 101326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:42:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101321,
                  "id": 101327,
                  "nodeType": "Return",
                  "src": "12779:49:385"
                }
              ]
            },
            "baseFunctions": [
              20208
            ],
            "documentation": {
              "id": 101316,
              "nodeType": "StructuredDocumentation",
              "src": "12602:86:385",
              "text": "@dev Returns whether burn-to-claim info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetBurnToClaim",
            "nameLocation": "12702:18:385",
            "overrides": {
              "id": 101318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12745:8:385"
            },
            "parameters": {
              "id": 101317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12720:2:385"
            },
            "returnParameters": {
              "id": 101321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101329,
                  "src": "12763:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12763:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12762:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101352,
            "nodeType": "FunctionDefinition",
            "src": "13101:225:385",
            "nodes": [],
            "body": {
              "id": 101351,
              "nodeType": "Block",
              "src": "13156:170:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101339,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13194:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101351,
                      "src": "13166:32:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 101338,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101337,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17266,
                          "src": "13166:19:385"
                        },
                        "referencedDeclaration": 17266,
                        "src": "13166:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101343,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101340,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17279,
                        "src": "13201:14:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$17279_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 101341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17278,
                      "src": "13201:29:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17266_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 101342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13201:31:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13166:66:385"
                },
                {
                  "id": 101350,
                  "nodeType": "UncheckedBlock",
                  "src": "13242:78:385",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101344,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101339,
                            "src": "13273:4:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                              "typeString": "struct ERC721AStorage.Data storage pointer"
                            }
                          },
                          "id": 101345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_currentIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17239,
                          "src": "13273:18:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 101346,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17356,
                            "src": "13294:13:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 101347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13294:15:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13273:36:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 101334,
                      "id": 101349,
                      "nodeType": "Return",
                      "src": "13266:43:385"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 101330,
              "nodeType": "StructuredDocumentation",
              "src": "13019:77:385",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "functionSelector": "a2309ff8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMinted",
            "nameLocation": "13110:11:385",
            "parameters": {
              "id": 101331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13121:2:385"
            },
            "returnParameters": {
              "id": 101334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101352,
                  "src": "13147:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13147:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13146:9:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101362,
            "nodeType": "FunctionDefinition",
            "src": "13408:108:385",
            "nodes": [],
            "body": {
              "id": 101361,
              "nodeType": "Block",
              "src": "13469:47:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101358,
                      "name": "nextTokenIdToLazyMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21933,
                      "src": "13486:21:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 101359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13486:23:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101357,
                  "id": 101360,
                  "nodeType": "Return",
                  "src": "13479:30:385"
                }
              ]
            },
            "documentation": {
              "id": 101353,
              "nodeType": "StructuredDocumentation",
              "src": "13332:71:385",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "13417:17:385",
            "parameters": {
              "id": 101354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13434:2:385"
            },
            "returnParameters": {
              "id": 101357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101362,
                  "src": "13460:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13460:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13459:9:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101381,
            "nodeType": "FunctionDefinition",
            "src": "13585:180:385",
            "nodes": [],
            "body": {
              "id": 101380,
              "nodeType": "Block",
              "src": "13647:118:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101372,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13685:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101380,
                      "src": "13657:32:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data"
                      },
                      "typeName": {
                        "id": 101371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101370,
                          "name": "ERC721AStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17266,
                          "src": "13657:19:385"
                        },
                        "referencedDeclaration": 17266,
                        "src": "13657:19:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                          "typeString": "struct ERC721AStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101376,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101373,
                        "name": "ERC721AStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17279,
                        "src": "13692:14:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721AStorage_$17279_$",
                          "typeString": "type(library ERC721AStorage)"
                        }
                      },
                      "id": 101374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721AStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17278,
                      "src": "13692:29:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$17266_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC721AStorage.Data storage pointer)"
                      }
                    },
                    "id": 101375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13692:31:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                      "typeString": "struct ERC721AStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13657:66:385"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 101377,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101372,
                      "src": "13740:4:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$17266_storage_ptr",
                        "typeString": "struct ERC721AStorage.Data storage pointer"
                      }
                    },
                    "id": 101378,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17239,
                    "src": "13740:18:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101367,
                  "id": 101379,
                  "nodeType": "Return",
                  "src": "13733:25:385"
                }
              ]
            },
            "documentation": {
              "id": 101363,
              "nodeType": "StructuredDocumentation",
              "src": "13522:58:385",
              "text": "@dev The next token ID of the NFT that can be claimed."
            },
            "functionSelector": "acd083f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToClaim",
            "nameLocation": "13594:18:385",
            "parameters": {
              "id": 101364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13612:2:385"
            },
            "returnParameters": {
              "id": 101367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101381,
                  "src": "13638:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13638:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13637:9:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 101400,
            "nodeType": "FunctionDefinition",
            "src": "13817:208:385",
            "nodes": [],
            "body": {
              "id": 101399,
              "nodeType": "Block",
              "src": "13873:152:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101391,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13922:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101399,
                      "src": "13883:43:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data"
                      },
                      "typeName": {
                        "id": 101390,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101389,
                          "name": "BurnToClaimDrop721Storage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 101665,
                          "src": "13883:30:385"
                        },
                        "referencedDeclaration": 101665,
                        "src": "13883:30:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                          "typeString": "struct BurnToClaimDrop721Storage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101395,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101392,
                        "name": "BurnToClaimDrop721Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101678,
                        "src": "13929:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnToClaimDrop721Storage_$101678_$",
                          "typeString": "type(library BurnToClaimDrop721Storage)"
                        }
                      },
                      "id": 101393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnToClaimDrop721Storage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101677,
                      "src": "13929:51:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$101665_storage_ptr_$",
                        "typeString": "function () pure returns (struct BurnToClaimDrop721Storage.Data storage pointer)"
                      }
                    },
                    "id": 101394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13929:53:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                      "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13883:99:385"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 101396,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101391,
                      "src": "13999:4:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$101665_storage_ptr",
                        "typeString": "struct BurnToClaimDrop721Storage.Data storage pointer"
                      }
                    },
                    "id": 101397,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "maxTotalSupply",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 101664,
                    "src": "13999:19:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101386,
                  "id": 101398,
                  "nodeType": "Return",
                  "src": "13992:26:385"
                }
              ]
            },
            "documentation": {
              "id": 101382,
              "nodeType": "StructuredDocumentation",
              "src": "13771:41:385",
              "text": "@dev Global max total supply of NFTs."
            },
            "functionSelector": "2ab4d052",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxTotalSupply",
            "nameLocation": "13826:14:385",
            "parameters": {
              "id": 101383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13840:2:385"
            },
            "returnParameters": {
              "id": 101386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101385,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101400,
                  "src": "13864:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13864:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13863:9:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101412,
            "nodeType": "FunctionDefinition",
            "src": "14081:184:385",
            "nodes": [],
            "body": {
              "id": 101411,
              "nodeType": "Block",
              "src": "14129:136:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101407,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101403,
                        "src": "14244:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 101408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14253:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101406,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18566,
                        18763
                      ],
                      "referencedDeclaration": 18763,
                      "src": "14238:5:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 101409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14238:20:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101410,
                  "nodeType": "ExpressionStatement",
                  "src": "14238:20:385"
                }
              ]
            },
            "documentation": {
              "id": 101401,
              "nodeType": "StructuredDocumentation",
              "src": "14031:45:385",
              "text": "@dev Burns `tokenId`. See {ERC721-_burn}."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "14090:4:385",
            "parameters": {
              "id": 101404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101403,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14103:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101412,
                  "src": "14095:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14095:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14094:17:385"
            },
            "returnParameters": {
              "id": 101405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14129:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 101476,
            "nodeType": "FunctionDefinition",
            "src": "14319:579:385",
            "nodes": [],
            "body": {
              "id": 101475,
              "nodeType": "Block",
              "src": "14480:418:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101428,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101415,
                        "src": "14518:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101429,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101417,
                        "src": "14524:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101430,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101419,
                        "src": "14528:12:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101431,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101421,
                        "src": "14542:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101425,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14490:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18865,
                      "src": "14490:27:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 101432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14490:61:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101433,
                  "nodeType": "ExpressionStatement",
                  "src": "14490:61:385"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 101455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 101448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14663:36:385",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 101435,
                              "name": "TRANSFER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100671,
                              "src": "14673:13:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 101438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14696:1:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 101437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14688:7:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 101436,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14688:7:385",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 101439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14688:10:385",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101434,
                            "name": "_hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101617,
                            "src": "14664:8:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 101440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14664:35:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101442,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101415,
                          "src": "14703:4:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 101445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14719:1:385",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 101444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14711:7:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 101443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14711:7:385",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 101446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14711:10:385",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14703:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14663:58:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 101454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 101449,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101417,
                        "src": "14725:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 101452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14739:1:385",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 101451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14731:7:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14731:7:385",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14731:10:385",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14725:16:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14663:78:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101474,
                  "nodeType": "IfStatement",
                  "src": "14659:233:385",
                  "trueBody": {
                    "id": 101473,
                    "nodeType": "Block",
                    "src": "14743:149:385",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 101466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14761:30:385",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 101457,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100671,
                                  "src": "14771:13:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 101458,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101415,
                                  "src": "14786:4:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 101456,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101617,
                                "src": "14762:8:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 101459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14762:29:385",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 101465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "14795:28:385",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 101462,
                                  "name": "TRANSFER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100671,
                                  "src": "14805:13:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 101463,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101417,
                                  "src": "14820:2:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 101461,
                                "name": "_hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101617,
                                "src": "14796:8:385",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 101464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14796:27:385",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14761:62:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 101472,
                        "nodeType": "IfStatement",
                        "src": "14757:125:385",
                        "trueBody": {
                          "id": 101471,
                          "nodeType": "Block",
                          "src": "14825:57:385",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "215472616e736665722d526f6c65",
                                    "id": 101468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14850:16:385",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    },
                                    "value": "!Transfer-Role"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_580e0c4592c88fed8ee4d517df979aadb8488f3871dc6e505bc9673b5984355e",
                                      "typeString": "literal_string \"!Transfer-Role\""
                                    }
                                  ],
                                  "id": 101467,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14843:6:385",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 101469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14843:24:385",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 101470,
                              "nodeType": "ExpressionStatement",
                              "src": "14843:24:385"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              18865
            ],
            "documentation": {
              "id": 101413,
              "nodeType": "StructuredDocumentation",
              "src": "14271:43:385",
              "text": "@dev See {ERC721-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "14328:21:385",
            "overrides": {
              "id": 101423,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14471:8:385"
            },
            "parameters": {
              "id": 101422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101415,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14367:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101476,
                  "src": "14359:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14359:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101417,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14389:2:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101476,
                  "src": "14381:10:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14381:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101419,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "14409:12:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101476,
                  "src": "14401:20:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14401:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101421,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "14439:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101476,
                  "src": "14431:16:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14431:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14349:104:385"
            },
            "returnParameters": {
              "id": 101424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14480:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101496,
            "nodeType": "FunctionDefinition",
            "src": "14949:174:385",
            "nodes": [],
            "body": {
              "id": 101495,
              "nodeType": "Block",
              "src": "15063:60:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101491,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101479,
                        "src": "15097:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101492,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101481,
                        "src": "15107:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101488,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15073:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17895,
                      "src": "15073:23:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 101493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15073:43:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101494,
                  "nodeType": "ExpressionStatement",
                  "src": "15073:43:385"
                }
              ]
            },
            "baseFunctions": [
              17895
            ],
            "documentation": {
              "id": 101477,
              "nodeType": "StructuredDocumentation",
              "src": "14904:40:385",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101485,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101479,
                    "src": "15053:8:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101486,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101484,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22273,
                  "src": "15025:27:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "15025:37:385"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "14958:17:385",
            "overrides": {
              "id": 101483,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15016:8:385"
            },
            "parameters": {
              "id": 101482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101479,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14984:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101496,
                  "src": "14976:16:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14976:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101481,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "14999:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101496,
                  "src": "14994:13:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14994:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14975:33:385"
            },
            "returnParameters": {
              "id": 101487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15063:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101516,
            "nodeType": "FunctionDefinition",
            "src": "15164:155:385",
            "nodes": [],
            "body": {
              "id": 101515,
              "nodeType": "Block",
              "src": "15270:49:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101511,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101499,
                        "src": "15294:8:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101512,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101501,
                        "src": "15304:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101508,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15280:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17818,
                      "src": "15280:13:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 101513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15280:32:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101514,
                  "nodeType": "ExpressionStatement",
                  "src": "15280:32:385"
                }
              ]
            },
            "baseFunctions": [
              17818
            ],
            "documentation": {
              "id": 101497,
              "nodeType": "StructuredDocumentation",
              "src": "15129:30:385",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101505,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101499,
                    "src": "15260:8:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101504,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22273,
                  "src": "15232:27:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "15232:37:385"
              }
            ],
            "name": "approve",
            "nameLocation": "15173:7:385",
            "overrides": {
              "id": 101503,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15223:8:385"
            },
            "parameters": {
              "id": 101502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101499,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15189:8:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101516,
                  "src": "15181:16:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15181:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101501,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15207:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101516,
                  "src": "15199:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15199:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15180:35:385"
            },
            "returnParameters": {
              "id": 101507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15270:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101540,
            "nodeType": "FunctionDefinition",
            "src": "15366:211:385",
            "nodes": [],
            "body": {
              "id": 101539,
              "nodeType": "Block",
              "src": "15523:54:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101534,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101519,
                        "src": "15552:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101535,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101521,
                        "src": "15558:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101536,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101523,
                        "src": "15562:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101531,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15533:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17941,
                      "src": "15533:18:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15533:37:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101538,
                  "nodeType": "ExpressionStatement",
                  "src": "15533:37:385"
                }
              ]
            },
            "baseFunctions": [
              17941
            ],
            "documentation": {
              "id": 101517,
              "nodeType": "StructuredDocumentation",
              "src": "15325:36:385",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101528,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101519,
                    "src": "15517:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101529,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101527,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22233,
                  "src": "15497:19:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "15497:25:385"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "15375:12:385",
            "overrides": {
              "id": 101526,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101525,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18879,
                  "src": "15477:18:385"
                }
              ],
              "src": "15468:28:385"
            },
            "parameters": {
              "id": 101524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101519,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15405:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101540,
                  "src": "15397:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15397:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101521,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15427:2:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101540,
                  "src": "15419:10:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15419:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101523,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15447:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101540,
                  "src": "15439:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15439:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15387:73:385"
            },
            "returnParameters": {
              "id": 101530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15523:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101564,
            "nodeType": "FunctionDefinition",
            "src": "15628:219:385",
            "nodes": [],
            "body": {
              "id": 101563,
              "nodeType": "Block",
              "src": "15789:58:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101558,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101543,
                        "src": "15822:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101559,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101545,
                        "src": "15828:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101560,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101547,
                        "src": "15832:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101555,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15799:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17960,
                      "src": "15799:22:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15799:41:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101562,
                  "nodeType": "ExpressionStatement",
                  "src": "15799:41:385"
                }
              ]
            },
            "baseFunctions": [
              17960
            ],
            "documentation": {
              "id": 101541,
              "nodeType": "StructuredDocumentation",
              "src": "15583:40:385",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101552,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101543,
                    "src": "15783:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101553,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101551,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22233,
                  "src": "15763:19:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "15763:25:385"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15637:16:385",
            "overrides": {
              "id": 101550,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101549,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18879,
                  "src": "15743:18:385"
                }
              ],
              "src": "15734:28:385"
            },
            "parameters": {
              "id": 101548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101543,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15671:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101564,
                  "src": "15663:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15663:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101545,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15693:2:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101564,
                  "src": "15685:10:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15685:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101547,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15713:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101564,
                  "src": "15705:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15705:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15653:73:385"
            },
            "returnParameters": {
              "id": 101554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15789:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101591,
            "nodeType": "FunctionDefinition",
            "src": "15898:252:385",
            "nodes": [],
            "body": {
              "id": 101590,
              "nodeType": "Block",
              "src": "16086:64:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101584,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101567,
                        "src": "16119:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101585,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101569,
                        "src": "16125:2:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101586,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101571,
                        "src": "16129:7:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101587,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101573,
                        "src": "16138:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101581,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "16096:5:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BurnToClaimDrop721Logic_$101654_$",
                          "typeString": "type(contract super BurnToClaimDrop721Logic)"
                        }
                      },
                      "id": 101583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17996,
                      "src": "16096:22:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 101588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16096:47:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101589,
                  "nodeType": "ExpressionStatement",
                  "src": "16096:47:385"
                }
              ]
            },
            "baseFunctions": [
              17996
            ],
            "documentation": {
              "id": 101565,
              "nodeType": "StructuredDocumentation",
              "src": "15853:40:385",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101578,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101567,
                    "src": "16080:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 101579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101577,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22233,
                  "src": "16060:19:385"
                },
                "nodeType": "ModifierInvocation",
                "src": "16060:25:385"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "15907:16:385",
            "overrides": {
              "id": 101576,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101575,
                  "name": "ERC721AUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18879,
                  "src": "16040:18:385"
                }
              ],
              "src": "16031:28:385"
            },
            "parameters": {
              "id": 101574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101567,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15941:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101591,
                  "src": "15933:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15933:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101569,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15963:2:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101591,
                  "src": "15955:10:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15955:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101571,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15983:7:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101591,
                  "src": "15975:15:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15975:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101573,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "16013:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101591,
                  "src": "16000:17:385",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 101572,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16000:5:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15923:100:385"
            },
            "returnParameters": {
              "id": 101580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16086:0:385"
            },
            "scope": 101654,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101617,
            "nodeType": "FunctionDefinition",
            "src": "16156:212:385",
            "nodes": [],
            "body": {
              "id": 101616,
              "nodeType": "Block",
              "src": "16231:137:385",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101604,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "16273:4:385",
                      "nodeType": "VariableDeclaration",
                      "scope": 101616,
                      "src": "16241:36:385",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                        "typeString": "struct PermissionsStorage.Data"
                      },
                      "typeName": {
                        "id": 101603,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101602,
                          "name": "PermissionsStorage.Data",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22430,
                          "src": "16241:23:385"
                        },
                        "referencedDeclaration": 22430,
                        "src": "16241:23:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                          "typeString": "struct PermissionsStorage.Data"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101608,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101605,
                        "name": "PermissionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22443,
                        "src": "16280:18:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PermissionsStorage_$22443_$",
                          "typeString": "type(library PermissionsStorage)"
                        }
                      },
                      "id": 101606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permissionsStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22442,
                      "src": "16280:37:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Data_$22430_storage_ptr_$",
                        "typeString": "function () pure returns (struct PermissionsStorage.Data storage pointer)"
                      }
                    },
                    "id": 101607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16280:39:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                      "typeString": "struct PermissionsStorage.Data storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16241:78:385"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 101609,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101604,
                          "src": "16336:4:385",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$22430_storage_ptr",
                            "typeString": "struct PermissionsStorage.Data storage pointer"
                          }
                        },
                        "id": 101610,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22424,
                        "src": "16336:13:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(bytes32 => mapping(address => bool))"
                        }
                      },
                      "id": 101612,
                      "indexExpression": {
                        "id": 101611,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101593,
                        "src": "16350:4:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16336:19:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 101614,
                    "indexExpression": {
                      "id": 101613,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101595,
                      "src": "16356:4:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16336:25:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 101599,
                  "id": 101615,
                  "nodeType": "Return",
                  "src": "16329:32:385"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "16165:8:385",
            "parameters": {
              "id": 101596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101593,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "16182:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101617,
                  "src": "16174:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 101592,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16174:7:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101595,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "16196:4:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101617,
                  "src": "16188:12:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16188:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16173:28:385"
            },
            "returnParameters": {
              "id": 101599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101617,
                  "src": "16225:4:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101597,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16225:4:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16224:6:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 101627,
            "nodeType": "FunctionDefinition",
            "src": "16374:111:385",
            "nodes": [],
            "body": {
              "id": 101626,
              "nodeType": "Block",
              "src": "16449:36:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101623,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101640
                      ],
                      "referencedDeclaration": 101640,
                      "src": "16466:10:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16466:12:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 101622,
                  "id": 101625,
                  "nodeType": "Return",
                  "src": "16459:19:385"
                }
              ]
            },
            "baseFunctions": [
              21278
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "16383:14:385",
            "overrides": {
              "id": 101619,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16422:8:385"
            },
            "parameters": {
              "id": 101618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16397:2:385"
            },
            "returnParameters": {
              "id": 101622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101627,
                  "src": "16440:7:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16440:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16439:9:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101640,
            "nodeType": "FunctionDefinition",
            "src": "16491:176:385",
            "nodes": [],
            "body": {
              "id": 101639,
              "nodeType": "Block",
              "src": "16605:62:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101635,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21634,
                        "src": "16622:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$21634_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 101636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21604,
                      "src": "16622:36:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 101637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16622:38:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 101634,
                  "id": 101638,
                  "nodeType": "Return",
                  "src": "16615:45:385"
                }
              ]
            },
            "baseFunctions": [
              21604,
              78631
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "16500:10:385",
            "overrides": {
              "id": 101631,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101629,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78641,
                  "src": "16544:7:385"
                },
                {
                  "id": 101630,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21634,
                  "src": "16553:25:385"
                }
              ],
              "src": "16535:44:385"
            },
            "parameters": {
              "id": 101628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16510:2:385"
            },
            "returnParameters": {
              "id": 101634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101633,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "16597:6:385",
                  "nodeType": "VariableDeclaration",
                  "scope": 101640,
                  "src": "16589:14:385",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16589:7:385",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16588:16:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 101653,
            "nodeType": "FunctionDefinition",
            "src": "16673:172:385",
            "nodes": [],
            "body": {
              "id": 101652,
              "nodeType": "Block",
              "src": "16785:60:385",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101648,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21634,
                        "src": "16802:25:385",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$21634_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 101649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21629,
                      "src": "16802:34:385",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 101650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16802:36:385",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 101647,
                  "id": 101651,
                  "nodeType": "Return",
                  "src": "16795:43:385"
                }
              ]
            },
            "baseFunctions": [
              21629,
              78640
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "16682:8:385",
            "overrides": {
              "id": 101644,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 101642,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78641,
                  "src": "16724:7:385"
                },
                {
                  "id": 101643,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21634,
                  "src": "16733:25:385"
                }
              ],
              "src": "16715:44:385"
            },
            "parameters": {
              "id": 101641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16690:2:385"
            },
            "returnParameters": {
              "id": 101647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101646,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101653,
                  "src": "16769:14:385",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 101645,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16769:5:385",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16768:16:385"
            },
            "scope": 101654,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100635,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20317,
              "src": "2294:16:385"
            },
            "id": 100636,
            "nodeType": "InheritanceSpecifier",
            "src": "2294:16:385"
          },
          {
            "baseName": {
              "id": 100637,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23394,
              "src": "2316:11:385"
            },
            "id": 100638,
            "nodeType": "InheritanceSpecifier",
            "src": "2316:11:385"
          },
          {
            "baseName": {
              "id": 100639,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23883,
              "src": "2333:7:385"
            },
            "id": 100640,
            "nodeType": "InheritanceSpecifier",
            "src": "2333:7:385"
          },
          {
            "baseName": {
              "id": 100641,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23495,
              "src": "2346:11:385"
            },
            "id": 100642,
            "nodeType": "InheritanceSpecifier",
            "src": "2346:11:385"
          },
          {
            "baseName": {
              "id": 100643,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22407,
              "src": "2363:7:385"
            },
            "id": 100644,
            "nodeType": "InheritanceSpecifier",
            "src": "2363:7:385"
          },
          {
            "baseName": {
              "id": 100645,
              "name": "BurnToClaim",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20209,
              "src": "2376:11:385"
            },
            "id": 100646,
            "nodeType": "InheritanceSpecifier",
            "src": "2376:11:385"
          },
          {
            "baseName": {
              "id": 100647,
              "name": "DelayedReveal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20573,
              "src": "2393:13:385"
            },
            "id": 100648,
            "nodeType": "InheritanceSpecifier",
            "src": "2393:13:385"
          },
          {
            "baseName": {
              "id": 100649,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22011,
              "src": "2412:8:385"
            },
            "id": 100650,
            "nodeType": "InheritanceSpecifier",
            "src": "2412:8:385"
          },
          {
            "baseName": {
              "id": 100651,
              "name": "Drop",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21343,
              "src": "2426:4:385"
            },
            "id": 100652,
            "nodeType": "InheritanceSpecifier",
            "src": "2426:4:385"
          },
          {
            "baseName": {
              "id": 100653,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21634,
              "src": "2436:25:385"
            },
            "id": 100654,
            "nodeType": "InheritanceSpecifier",
            "src": "2436:25:385"
          },
          {
            "baseName": {
              "id": 100655,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20341,
              "src": "2467:34:385"
            },
            "id": 100656,
            "nodeType": "InheritanceSpecifier",
            "src": "2467:34:385"
          },
          {
            "baseName": {
              "id": 100657,
              "name": "ERC721AUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18879,
              "src": "2507:18:385"
            },
            "id": 100658,
            "nodeType": "InheritanceSpecifier",
            "src": "2507:18:385"
          }
        ],
        "canonicalName": "BurnToClaimDrop721Logic",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          101654,
          18879,
          31493,
          31539,
          31422,
          26795,
          20341,
          22274,
          22103,
          50395,
          21634,
          21343,
          49815,
          49550,
          49527,
          22011,
          19984,
          50054,
          20573,
          49710,
          20209,
          49452,
          22407,
          50418,
          23495,
          50580,
          23883,
          50644,
          31290,
          31146,
          78641,
          21884,
          23394,
          50559,
          20317,
          49679
        ],
        "name": "BurnToClaimDrop721Logic",
        "nameLocation": "2263:23:385",
        "scope": 101655,
        "usedErrors": [
          31434,
          31437,
          31440,
          31443,
          31446,
          31449,
          31452,
          31455,
          31458,
          31461,
          31464,
          31467,
          31470
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 385
}