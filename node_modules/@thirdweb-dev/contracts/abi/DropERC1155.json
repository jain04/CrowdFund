{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "claimConditions",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "resetEligibility",
          "type": "bool"
        }
      ],
      "name": "ClaimConditionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flatFee",
          "type": "uint256"
        }
      ],
      "name": "FlatPlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "MaxTotalSupplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "platformFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "feeType",
          "type": "uint8"
        }
      ],
      "name": "PlatformFeeTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimarySaleRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "saleRecipient",
          "type": "address"
        }
      ],
      "name": "SaleRecipientForTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimConditionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claimCondition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStartId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveClaimConditionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        }
      ],
      "name": "getClaimConditionById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition",
          "name": "condition",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlatPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlatformFeeType",
      "outputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        }
      ],
      "name": "getSupplyClaimedByWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supplyClaimedByWallet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractURI",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_trustedForwarders",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_platformFeeBps",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primarySaleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "saleRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxClaimableSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct IClaimCondition.ClaimCondition[]",
          "name": "_conditions",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "_resetClaimEligibility",
          "type": "bool"
        }
      ],
      "name": "setClaimConditions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_flatFee",
          "type": "uint256"
        }
      ],
      "name": "setFlatPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFeeBps",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPlatformFee.PlatformFeeType",
          "name": "_feeType",
          "type": "uint8"
        }
      ],
      "name": "setPlatformFeeType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setPrimarySaleRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_saleRecipient",
          "type": "address"
        }
      ],
      "name": "setSaleRecipientForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subscription",
          "type": "address"
        }
      ],
      "name": "subscribeToRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_conditionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "quantityLimitPerWallet",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "internalType": "struct IDrop1155.AllowlistProof",
          "name": "_allowlistProof",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOverride",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620028331760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b615fe0806200015c6000396000f3fe6080604052600436106102c15760003560e01c80637e54523c116101775780637e54523c1461070b57806387198cf21461072b5780638da5cb5b1461074b5780639010d07c1461076957806391d1485414610789578063938e3d7b146107a957806395d89b41146107c95780639bcf7a15146107de578063a0a8e460146107fe578063a217fddf1461081a578063a22cb4651461082f578063a32fa5b31461084f578063ac9650d81461086f578063b24f2d391461089c578063b6f10c79146108cb578063bd85b039146108eb578063c7337d6b14610919578063ca15c87314610950578063cb2ef6f714610970578063d37c353b14610991578063d45573f6146109b1578063d45b28d7146109c6578063d547741f146109f3578063e159163414610a13578063e57553da14610a33578063e8a3d48514610a57578063e9703d2514610a6c578063e985e9c514610ab5578063ea1def9c14610afe578063f242432a14610b1e578063f28083c314610b3e57600080fd5b8062fdd58e146102c657806301ffc9a7146102f957806306fdde0314610329578063079fe40e1461034b5780630e89341c1461036d57806313af40351461038d578063183718d1146103af5780631e7ac488146103cf5780632419f51b146103ef578063248a9ca31461040f57806324aaffaa1461043c57806329c49b9b1461046a5780632a55205a1461048a5780632eb2c2d6146104b85780632f2ff15d146104d857806332f0cd64146104f857806336568abe146105185780633b1475a7146105385780634cc157df1461054d5780634e1273f41461058f578063504c6e01146105bc578063572b6c05146105d657806357bc3d78146105f657806357fd8455146106095780635811ddab146106295780635ab063e814610676578063600dd5ea1461069657806363b45e2d146106b65780636b20c454146106cb5780636f4f2837146106eb575b600080fd5b3480156102d257600080fd5b506102e66102e1366004614a38565b610b5e565b6040519081526020015b60405180910390f35b34801561030557600080fd5b50610319610314366004614a7a565b610bf9565b60405190151581526020016102f0565b34801561033557600080fd5b5061033e610c21565b6040516102f09190614aef565b34801561035757600080fd5b50610360610cb0565b6040516102f09190614b02565b34801561037957600080fd5b5061033e610388366004614b16565b610cbf565b34801561039957600080fd5b506103ad6103a8366004614b2f565b610d00565b005b3480156103bb57600080fd5b506103ad6103ca366004614ba5565b610d30565b3480156103db57600080fd5b506103ad6103ea366004614a38565b611090565b3480156103fb57600080fd5b506102e661040a366004614b16565b6110c2565b34801561041b57600080fd5b506102e661042a366004614b16565b6000908152600c602052604090205490565b34801561044857600080fd5b506102e6610457366004614b16565b61010f6020526000908152604090205481565b34801561047657600080fd5b506103ad610485366004614c03565b611130565b34801561049657600080fd5b506104aa6104a5366004614c33565b6111a3565b6040516102f0929190614c55565b3480156104c457600080fd5b506103ad6104d3366004614db7565b6111e0565b3480156104e457600080fd5b506103ad6104f3366004614c03565b6112cd565b34801561050457600080fd5b506103ad610513366004614e64565b611363565b34801561052457600080fd5b506103ad610533366004614c03565b6113d4565b34801561054457600080fd5b50600a546102e6565b34801561055957600080fd5b5061056d610568366004614b16565b611433565b604080516001600160a01b03909316835261ffff9091166020830152016102f0565b34801561059b57600080fd5b506105af6105aa366004614ef0565b6114a2565b6040516102f09190614f8e565b3480156105c857600080fd5b5060a5546103199060ff1681565b3480156105e257600080fd5b506103196105f1366004614b2f565b6115cb565b6103ad610604366004614fb3565b6115e9565b34801561061557600080fd5b506103ad610624366004614b2f565b61172c565b34801561063557600080fd5b506102e6610644366004615058565b6000928352600e60209081526040808520938552600390930181528284206001600160a01b0390921684525290205490565b34801561068257600080fd5b506102e6610691366004614b16565b61179c565b3480156106a257600080fd5b506103ad6106b1366004614a38565b61184d565b3480156106c257600080fd5b506008546102e6565b3480156106d757600080fd5b506103ad6106e6366004615091565b61187b565b3480156106f757600080fd5b506103ad610706366004614b2f565b611918565b34801561071757600080fd5b506103ad610726366004614a38565b611945565b34801561073757600080fd5b506103ad610746366004614c33565b611973565b34801561075757600080fd5b506007546001600160a01b0316610360565b34801561077557600080fd5b50610360610784366004614c33565b6119d0565b34801561079557600080fd5b506103196107a4366004614c03565b611abf565b3480156107b557600080fd5b506103ad6107c4366004615106565b611aea565b3480156107d557600080fd5b5061033e611b17565b3480156107ea57600080fd5b506103ad6107f936600461513a565b611b25565b34801561080a57600080fd5b50604051600481526020016102f0565b34801561082657600080fd5b506102e6600081565b34801561083b57600080fd5b506103ad61084a366004615172565b611b54565b34801561085b57600080fd5b5061031961086a366004614c03565b611c13565b34801561087b57600080fd5b5061088f61088a3660046151a0565b611c69565b6040516102f091906151e1565b3480156108a857600080fd5b5060045461010081046001600160a01b031690600160a81b900461ffff1661056d565b3480156108d757600080fd5b506103ad6108e6366004615243565b611d5d565b3480156108f757600080fd5b506102e6610906366004614b16565b61010e6020526000908152604090205481565b34801561092557600080fd5b50610360610934366004614b16565b610110602052600090815260409020546001600160a01b031681565b34801561095c57600080fd5b506102e661096b366004614b16565b611dde565b34801561097c57600080fd5b506a44726f704552433131353560a81b6102e6565b34801561099d57600080fd5b506102e66109ac3660046152a5565b611e67565b3480156109bd57600080fd5b5061056d611f71565b3480156109d257600080fd5b506109e66109e1366004614c33565b611f8e565b6040516102f0919061531e565b3480156109ff57600080fd5b506103ad610a0e366004614c03565b6120f5565b348015610a1f57600080fd5b506103ad610a2e3660046153a2565b61210e565b348015610a3f57600080fd5b506104aa6002546003546001600160a01b0390911691565b348015610a6357600080fd5b5061033e612340565b348015610a7857600080fd5b50610aa0610a87366004614b16565b600e602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b348015610ac157600080fd5b50610319610ad03660046154b4565b6001600160a01b03918216600090815260d96020908152604080832093909416825291909152205460ff1690565b348015610b0a57600080fd5b50610319610b193660046154e2565b61234d565b348015610b2a57600080fd5b506103ad610b3936600461555b565b612753565b348015610b4a57600080fd5b5060045460ff166040516102f091906155d9565b60006001600160a01b038316610bce5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260d8602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610c0482612842565b80610bf35750506001600160e01b03191663152a902d60e11b1490565b61010a8054610c2f90615601565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5b90615601565b8015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b505050505081565b6006546001600160a01b031690565b60606000610ccc83612892565b905080610cd884612a2e565b604051602001610ce9929190615636565b604051602081830303815290604052915050919050565b610d08612b2b565b610d245760405162461bcd60e51b8152600401610bc590615665565b610d2d81612b3e565b50565b610d38612b2b565b610d545760405162461bcd60e51b8152600401610bc590615665565b6000848152600e6020526040902080546001820154818415610d7d57610d7a82846156a3565b90505b600184018690558084556000805b87811015610f3657801580610dc35750888882818110610dad57610dad6156bb565b9050602002810190610dbf91906156d1565b3582105b610df45760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610bc5565b60006002870181610e0584876156a3565b8152602001908152602001600020600201549050898983818110610e2b57610e2b6156bb565b9050602002810190610e3d91906156d1565b60200135811115610e855760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610bc5565b898983818110610e9757610e976156bb565b9050602002810190610ea991906156d1565b600288016000610eb985886156a3565b81526020019081526020016000208181610ed3919061583c565b50819050600288016000610ee785886156a3565b8152602081019190915260400160002060020155898983818110610f0d57610f0d6156bb565b9050602002810190610f1f91906156d1565b359250819050610f2e816158ba565b915050610d8b565b508515610fb857835b82811015610fb2576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590610f9d6007830182614940565b50508080610faa906158ba565b915050610f3f565b50611049565b8683111561104957865b8381101561104757600286016000610fda83866156a3565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906110326007830182614940565b5050808061103f906158ba565b915050610fc2565b505b887f066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a89898960405161107d93929190615943565b60405180910390a2505050505050505050565b611098612b2b565b6110b45760405162461bcd60e51b8152600401610bc590615665565b6110be8282612b90565b5050565b60006110cd60085490565b821061110b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610bc5565b6008828154811061111e5761111e6156bb565b90600052602060002001549050919050565b600061113c8133612c1e565b600083815261011060205260409081902080546001600160a01b0319166001600160a01b0385161790555183907f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b01690611196908590614b02565b60405180910390a2505050565b6000806000806111b286611433565b90945084925061ffff1690506127106111cb8287615a2b565b6111d59190615a60565b925050509250929050565b60a554859060ff16156112b8576daaeb6d7670e522a718067333cd4e3b156112b8576001600160a01b038116331415611225576112208686868686612c9e565b6112c5565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906112589030903390600401615a74565b602060405180830381865afa158015611275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112999190615a8e565b6112b85733604051633b79c77360e21b8152600401610bc59190614b02565b6112c58686868686612c9e565b505050505050565b6000828152600c60205260409020546112e69033612c1e565b6000828152600b602090815260408083206001600160a01b038516845290915290205460ff16156113595760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bc5565b6110be8282612cfc565b61136b612b2b565b6113cb5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610bc5565b610d2d81612d10565b336001600160a01b038216146114295760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bc5565b6110be8282612d51565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561147a5780516020820151611498565b60045461010081046001600160a01b031690600160a81b900461ffff165b9250925050915091565b606081518351146115075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610bc5565b600083516001600160401b0381111561152257611522614c6e565b60405190808252806020026020018201604052801561154b578160200160208202803683370190505b50905060005b84518110156115c35761159685828151811061156f5761156f6156bb565b6020026020010151858381518110611589576115896156bb565b6020026020010151610b5e565b8282815181106115a8576115a86156bb565b60209081029190910101526115bc816158ba565b9050611551565b509392505050565b6001600160a01b031660009081526041602052604090205460ff1690565b6115f886888787878787612da8565b60006116038761179c565b905061161b81611611612e39565b898989898961234d565b506000878152600e602090815260408083208484526002908101909252822001805488929061164b9084906156a3565b90915550506000878152600e6020908152604080832084845260030190915281208791611676612e39565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546116a591906156a3565b909155506116b99050876000888888612e43565b6116c4888888612f85565b876001600160a01b03166116d6612e39565b6001600160a01b0316827ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e8a8a60405161171a929190918252602082015260400190565b60405180910390a45050505050505050565b611734612b2b565b6117915760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610bc5565b610d2d816001612fa0565b6000818152600e602052604081206001810154815483916117bc916156a3565b90505b8154811115611816576002820160006117d9600184615aab565b8152602001908152602001600020600001544210611804576117fc600182615aab565b949350505050565b8061180e81615ac2565b9150506117bf565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610bc5565b611855612b2b565b6118715760405162461bcd60e51b8152600401610bc590615665565b6110be8282613090565b61188361311c565b6001600160a01b0316836001600160a01b031614806118a957506118a983610ad061311c565b6119085760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610bc5565b611913838383613126565b505050565b611920612b2b565b61193c5760405162461bcd60e51b8152600401610bc590615665565b610d2d81613346565b61194d612b2b565b6119695760405162461bcd60e51b8152600401610bc590615665565b6110be8282613390565b600061197f8133612c1e565b600083815261010f602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd910160405180910390a1505050565b6000828152600d602052604081205481805b82811015611ab6576000868152600d602090815260408083208484526001019091529020546001600160a01b031615611a5f5784821415611a4d576000868152600d602090815260408083209383526001909301905220546001600160a01b03169250610bf3915050565b611a586001836156a3565b9150611aa4565b611a6a866000611abf565b8015611a9157506000868152600d6020908152604080832083805260020190915290205481145b15611aa457611aa16001836156a3565b91505b611aaf6001826156a3565b90506119e2565b50505092915050565b6000918252600b602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611af2612b2b565b611b0e5760405162461bcd60e51b8152600401610bc590615665565b610d2d816133ee565b61010b8054610c2f90615601565b611b2d612b2b565b611b495760405162461bcd60e51b8152600401610bc590615665565b6119138383836134c4565b60a554829060ff1615611c09576daaeb6d7670e522a718067333cd4e3b15611c0957604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611ba99030908590600401615a74565b602060405180830381865afa158015611bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bea9190615a8e565b611c095780604051633b79c77360e21b8152600401610bc59190614b02565b611913838361356c565b6000828152600b6020908152604080832083805290915281205460ff16611c6057506000828152600b602090815260408083206001600160a01b038516845290915290205460ff16610bf3565b50600192915050565b6060816001600160401b03811115611c8357611c83614c6e565b604051908082528060200260200182016040528015611cb657816020015b6060815260200190600190039081611ca15790505b50905060005b82811015611d5657611d2630858584818110611cda57611cda6156bb565b9050602002810190611cec91906156f1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061357e92505050565b828281518110611d3857611d386156bb565b60200260200101819052508080611d4e906158ba565b915050611cbc565b5092915050565b611d65612b2b565b611d815760405162461bcd60e51b8152600401610bc590615665565b6004805482919060ff191660018381811115611d9f57611d9f6155c3565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611dd391906155d9565b60405180910390a150565b6000818152600d6020526040812054815b81811015611e42576000848152600d602090815260408083208484526001019091529020546001600160a01b031615611e3057611e2d6001846156a3565b92505b611e3b6001826156a3565b9050611def565b50611e4e836000611abf565b15611e6157611e5e6001836156a3565b91505b50919050565b6000611e71613670565b611e8d5760405162461bcd60e51b8152600401610bc590615665565b85611ec25760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610bc5565b6000600a549050611f0a818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061368192505050565b600a919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001611f408a846156a3565b611f4a9190615aab565b88888888604051611f5f959493929190615ad9565b60405180910390a25095945050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b611fe260405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000838152600e6020908152604080832085845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061206b90615601565b80601f016020809104026020016040519081016040528092919081815260200182805461209790615601565b80156120e45780601f106120b9576101008083540402835291602001916120e4565b820191906000526020600020905b8154815290600101906020018083116120c757829003601f168201915b505050505081525050905092915050565b6000828152600c60205260409020546114299033612c1e565b600054610100900460ff161580801561212e5750600054600160ff909116105b8061214f575061213d30612833565b15801561214f575060005460ff166001145b6121b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bc5565b6000805460ff1916600117905580156121d5576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612220896136ee565b61223860405180602001604052806000815250613726565b612240613756565b6122498a6133ee565b6122528d612b3e565b61225c6001612d10565b61226760008e612cfc565b612271818e612cfc565b61227b828e612cfc565b612286826000612cfc565b61229984866001600160801b0316612b90565b6122ac87876001600160801b0316613090565b6122b588613346565b61010c82905561010d8190558b516122d59061010a9060208f019061497a565b508a516122ea9061010b9060208e019061497a565b5050508015612333576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60018054610c2f90615601565b6000858152600e602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e08401916123d890615601565b80601f016020809104026020016040519081016040528092919081815260200182805461240490615601565b80156124515780601f1061242657610100808354040283529160200191612451565b820191906000526020600020905b81548152906001019060200180831161243457829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156125315761252d6124898780615b12565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208b01359060408c0135906124de908d0160608e01614b2f565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613777565b5094505b84156125b6576020860135612546578261254c565b85602001355b9250600019866040013514156125625781612568565b85604001355b91506000198660400135141580156125995750600061258d6080880160608901614b2f565b6001600160a01b031614155b6125a357806125b3565b6125b36080870160608801614b2f565b90505b6000600e60008c815260200190815260200160002060030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b03161415806126265750828814155b156126665760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610bc5565b89158061267b575083612679828c6156a3565b115b156126b15760405162461bcd60e51b8152600401610bc5906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516126c691906156a3565b11156127015760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610bc5565b84514210156127435760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610bc5565b5050505050979650505050505050565b60a554859060ff1615612826576daaeb6d7670e522a718067333cd4e3b15612826576001600160a01b038116331415612793576112208686868686613845565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906127c69030903390600401615a74565b602060405180830381865afa1580156127e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128079190615a8e565b6128265733604051633b79c77360e21b8152600401610bc59190614b02565b6112c58686868686613845565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b148061287357506001600160e01b031982166303a24d0760e21b145b80610bf357506301ffc9a760e01b6001600160e01b0319831614610bf3565b6060600061289f60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156128ef57602002820191906000526020600020905b8154815260200190600101908083116128db575b5050505050905060005b828110156129f357818181518110612913576129136156bb565b60200260200101518510156129e15760096000838381518110612938576129386156bb565b60200260200101518152602001908152602001600020805461295990615601565b80601f016020809104026020016040519081016040528092919081815260200182805461298590615601565b80156129d25780601f106129a7576101008083540402835291602001916129d2565b820191906000526020600020905b8154815290600101906020018083116129b557829003601f168201915b50505050509350505050919050565b6129ec6001826156a3565b90506128f9565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610bc5565b606081612a525750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612a7c5780612a66816158ba565b9150612a759050600a83615a60565b9150612a56565b6000816001600160401b03811115612a9657612a96614c6e565b6040519080825280601f01601f191660200182016040528015612ac0576020820181803683370190505b5090505b84156117fc57612ad5600183615aab565b9150612ae2600a86615b5b565b612aed9060306156a3565b60f81b818381518110612b0257612b026156bb565b60200101906001600160f81b031916908160001a905350612b24600a86615a60565b9450612ac4565b6000612b39816107a461311c565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115612bb25760405162461bcd60e51b8152600401610bc590615b6f565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000828152600b602090815260408083206001600160a01b038516845290915290205460ff166110be57612c5c816001600160a01b0316601461389c565b612c6783602061389c565b604051602001612c78929190615b98565b60408051601f198184030181529082905262461bcd60e51b8252610bc591600401614aef565b612ca661311c565b6001600160a01b0316856001600160a01b03161480612ccc5750612ccc85610ad061311c565b612ce85760405162461bcd60e51b8152600401610bc590615c05565b612cf58585858585613a3e565b5050505050565b612d068282613bee565b6110be8282613c49565b60a5805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba7809690602001611dd3565b612d5b8282613cb6565b6000828152600d602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600087815261010f60205260409020541580612dea5750600087815261010f602090815260408083205461010e90925290912054612de79087906156a3565b11155b612e305760405162461bcd60e51b8152602060048201526017602482015276657863656564206d617820746f74616c20737570706c7960481b6044820152606401610bc5565b50505050505050565b6000612b3961311c565b80612e6b573415612e665760405162461bcd60e51b8152600401610bc590615c54565b612cf5565b600080612e76611f71565b909250905060006001600160a01b03871615612e925786612ed6565b600088815261011060205260409020546001600160a01b031615612ece57600088815261011060205260409020546001600160a01b0316612ed6565b612ed6610cb0565b90506000612ee48588615a2b565b90506000612710612ef961ffff861684615a2b565b612f039190615a60565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f355750348214612f39565b5034155b80612f565760405162461bcd60e51b8152600401610bc590615c54565b612f6988612f6261311c565b8885613d18565b61233388612f7561311c565b86612f808688615aab565b613d18565b61191383838360405180602001604052806000815250613d62565b6daaeb6d7670e522a718067333cd4e3b156110be576001600160a01b0382163b1561305f57801561302c57604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90612ffe9030908690600401615a74565b600060405180830381600087803b15801561301857600080fd5b505af11580156112c5573d6000803e3d6000fd5b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390612ffe9030908690600401615a74565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690612ffe903090600401614b02565b6127108111156130b25760405162461bcd60e51b8152600401610bc590615b6f565b60048054610100600160b81b0319166101006001600160a01b03851690810261ffff60a81b191691909117600160a81b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612c12565b6000612b39613e89565b6001600160a01b0383166131885760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610bc5565b80518251146131a95760405162461bcd60e51b8152600401610bc590615c70565b60006131b361311c565b90506131d381856000868660405180602001604052806000815250613eae565b60005b83518110156132d75760008482815181106131f3576131f36156bb565b602002602001015190506000848381518110613211576132116156bb565b602090810291909101810151600084815260d8835260408082206001600160a01b038c16835290935291909120549091508181101561329e5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610bc5565b600092835260d8602090815260408085206001600160a01b038b16865290915290922091039055806132cf816158ba565b9150506131d6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051613328929190615cb8565b60405180910390a46040805160208101909152600090525b50505050565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906133e29084908490614c55565b60405180910390a15050565b6000600180546133fd90615601565b80601f016020809104026020016040519081016040528092919081815260200182805461342990615601565b80156134765780601f1061344b57610100808354040283529160200191613476565b820191906000526020600020905b81548152906001019060200180831161345957829003601f168201915b505085519394506134929360019350602087019250905061497a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516133e2929190615cdd565b6127108111156134e65760405162461bcd60e51b8152600401610bc590615b6f565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b6110be61357761311c565b8383614070565b606061358983612833565b6135e45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bc5565b600080846001600160a01b0316846040516135ff9190615d02565b600060405180830381855af49150503d806000811461363a576040519150601f19603f3d011682016040523d82523d6000602084013e61363f565b606091505b50915091506136678282604051806060016040528060278152602001615f8460279139614149565b95945050505050565b6000612b3961010d546107a461311c565b60008061368e84866156a3565b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301819055600081815260096020908152604090912085519294508493506136e592909186019061497a565b50935093915050565b600054610100900460ff166137155760405162461bcd60e51b8152600401610bc590615d14565b61371d614182565b610d2d816141a9565b600054610100900460ff1661374d5760405162461bcd60e51b8152600401610bc590615d14565b610d2d81614238565b613775733cc6cdda760b79bafa08df41ecfa224f810dceb6600161424b565b565b6000808281805b875181101561383957613792600283615a2b565b915060008882815181106137a8576137a86156bb565b602002602001015190508084116137ea576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613826565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361382391906156a3565b92505b5080613831816158ba565b91505061377e565b50941495939450505050565b61384d61311c565b6001600160a01b0316856001600160a01b03161480613873575061387385610ad061311c565b61388f5760405162461bcd60e51b8152600401610bc590615c05565b612cf58585858585614255565b606060006138ab836002615a2b565b6138b69060026156a3565b6001600160401b038111156138cd576138cd614c6e565b6040519080825280601f01601f1916602001820160405280156138f7576020820181803683370190505b509050600360fc1b81600081518110613912576139126156bb565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613941576139416156bb565b60200101906001600160f81b031916908160001a9053506000613965846002615a2b565b6139709060016156a3565b90505b60018111156139e8576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106139a4576139a46156bb565b1a60f81b8282815181106139ba576139ba6156bb565b60200101906001600160f81b031916908160001a90535060049490941c936139e181615ac2565b9050613973565b508315613a375760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bc5565b9392505050565b8151835114613a5f5760405162461bcd60e51b8152600401610bc590615c70565b6001600160a01b038416613a855760405162461bcd60e51b8152600401610bc590615d5f565b6000613a8f61311c565b9050613a9f818787878787613eae565b60005b8451811015613b88576000858281518110613abf57613abf6156bb565b602002602001015190506000858381518110613add57613add6156bb565b602090810291909101810151600084815260d8835260408082206001600160a01b038e168352909352919091205490915081811015613b2e5760405162461bcd60e51b8152600401610bc590615da4565b600083815260d8602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290613b6d9084906156a3565b9250508190555050505080613b81906158ba565b9050613aa2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051613bd8929190615cb8565b60405180910390a46112c581878787878761439c565b6000828152600b602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600d6020526040812080549160019190613c6883856156a3565b90915550506000928352600d6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613cc08282612c1e565b6000828152600b602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80613d2257613340565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613d5657613d5182826144ff565b613340565b613340848484846145a1565b6001600160a01b038416613dc25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bc5565b6000613dcc61311c565b90506000613dd9856145fa565b90506000613de6856145fa565b9050613df783600089858589613eae565b600086815260d8602090815260408083206001600160a01b038b16845290915281208054879290613e299084906156a3565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612e3083600089898989614645565b6000613e94336115cb565b15613ea6575060131936013560601c90565b503390565b90565b613ebc61010c546000611abf565b158015613ed157506001600160a01b03851615155b8015613ee557506001600160a01b03841615155b15613f6257613ef761010c5486611abf565b80613f0a5750613f0a61010c5485611abf565b613f625760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610bc5565b6001600160a01b038516613fea5760005b8351811015613fe857828181518110613f8e57613f8e6156bb565b602002602001015161010e6000868481518110613fad57613fad6156bb565b602002602001015181526020019081526020016000206000828254613fd291906156a3565b90915550613fe19050816158ba565b9050613f73565b505b6001600160a01b0384166112c55760005b8351811015612e3057828181518110614016576140166156bb565b602002602001015161010e6000868481518110614035576140356156bb565b60200260200101518152602001908152602001600020600082825461405a9190615aab565b909155506140699050816158ba565b9050613ffb565b816001600160a01b0316836001600160a01b031614156140e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610bc5565b6001600160a01b03838116600081815260d96020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910161355f565b60608315614158575081613a37565b8251156141685782518084602001fd5b8160405162461bcd60e51b8152600401610bc59190614aef565b600054610100900460ff166137755760405162461bcd60e51b8152600401610bc590615d14565b600054610100900460ff166141d05760405162461bcd60e51b8152600401610bc590615d14565b60005b81518110156110be576001604160008484815181106141f4576141f46156bb565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580614230816158ba565b9150506141d3565b80516110be9060da90602084019061497a565b6110be8282612fa0565b6001600160a01b03841661427b5760405162461bcd60e51b8152600401610bc590615d5f565b600061428561311c565b90506000614292856145fa565b9050600061429f856145fa565b90506142af838989858589613eae565b600086815260d8602090815260408083206001600160a01b038c168452909152902054858110156142f25760405162461bcd60e51b8152600401610bc590615da4565b600087815260d8602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906143319084906156a3565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4614391848a8a8a8a8a614645565b505050505050505050565b6143ae846001600160a01b0316612833565b156112c55760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906143e79089908990889088908890600401615dee565b6020604051808303816000875af1925050508015614422575060408051601f3d908101601f1916820190925261441f91810190615e40565b60015b6144cf5761442e615e5d565b806308c379a014156144685750614443615e78565b8061444e575061446a565b8060405162461bcd60e51b8152600401610bc59190614aef565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610bc5565b6001600160e01b0319811663bc197c8160e01b14612e305760405162461bcd60e51b8152600401610bc590615f01565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461454c576040519150601f19603f3d011682016040523d82523d6000602084013e614551565b606091505b50509050806119135760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bc5565b816001600160a01b0316836001600160a01b031614156145c057613340565b6001600160a01b0383163014156145e557613d516001600160a01b0385168383614707565b6133406001600160a01b03851684848461475d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110614634576146346156bb565b602090810291909101015292915050565b614657846001600160a01b0316612833565b156112c55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906146909089908990889088908890600401615f49565b6020604051808303816000875af19250505080156146cb575060408051601f3d908101601f191682019092526146c891810190615e40565b60015b6146d75761442e615e5d565b6001600160e01b0319811663f23a6e6160e01b14612e305760405162461bcd60e51b8152600401610bc590615f01565b6119138363a9059cbb60e01b8484604051602401614726929190614c55565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614795565b6040516001600160a01b03808516602483015283166044820152606481018290526133409085906323b872dd60e01b90608401614726565b60006147ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148679092919063ffffffff16565b80519091501561191357808060200190518101906148089190615a8e565b6119135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bc5565b60606117fc84846000858561487b85612833565b6148c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bc5565b600080866001600160a01b031685876040516148e39190615d02565b60006040518083038185875af1925050503d8060008114614920576040519150601f19603f3d011682016040523d82523d6000602084013e614925565b606091505b5091509150614935828286614149565b979650505050505050565b50805461494c90615601565b6000825580601f1061495c575050565b601f016020900490600052602060002090810190610d2d91906149fe565b82805461498690615601565b90600052602060002090601f0160209004810192826149a857600085556149ee565b82601f106149c157805160ff19168380011785556149ee565b828001600101855582156149ee579182015b828111156149ee5782518255916020019190600101906149d3565b506149fa9291506149fe565b5090565b5b808211156149fa57600081556001016149ff565b6001600160a01b0381168114610d2d57600080fd5b8035614a3381614a13565b919050565b60008060408385031215614a4b57600080fd5b8235614a5681614a13565b946020939093013593505050565b6001600160e01b031981168114610d2d57600080fd5b600060208284031215614a8c57600080fd5b8135613a3781614a64565b60005b83811015614ab2578181015183820152602001614a9a565b838111156133405750506000910152565b60008151808452614adb816020860160208601614a97565b601f01601f19169290920160200192915050565b602081526000613a376020830184614ac3565b6001600160a01b0391909116815260200190565b600060208284031215614b2857600080fd5b5035919050565b600060208284031215614b4157600080fd5b8135613a3781614a13565b60008083601f840112614b5e57600080fd5b5081356001600160401b03811115614b7557600080fd5b6020830191508360208260051b8501011115614b9057600080fd5b9250929050565b8015158114610d2d57600080fd5b60008060008060608587031215614bbb57600080fd5b8435935060208501356001600160401b03811115614bd857600080fd5b614be487828801614b4c565b9094509250506040850135614bf881614b97565b939692955090935050565b60008060408385031215614c1657600080fd5b823591506020830135614c2881614a13565b809150509250929050565b60008060408385031215614c4657600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715614ca957614ca9614c6e565b6040525050565b60006001600160401b03821115614cc957614cc9614c6e565b5060051b60200190565b600082601f830112614ce457600080fd5b81356020614cf182614cb0565b604051614cfe8282614c84565b83815260059390931b8501820192828101915086841115614d1e57600080fd5b8286015b84811015614d395780358352918301918301614d22565b509695505050505050565b600082601f830112614d5557600080fd5b81356001600160401b03811115614d6e57614d6e614c6e565b604051614d85601f8301601f191660200182614c84565b818152846020838601011115614d9a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614dcf57600080fd5b8535614dda81614a13565b94506020860135614dea81614a13565b935060408601356001600160401b0380821115614e0657600080fd5b614e1289838a01614cd3565b94506060880135915080821115614e2857600080fd5b614e3489838a01614cd3565b93506080880135915080821115614e4a57600080fd5b50614e5788828901614d44565b9150509295509295909350565b600060208284031215614e7657600080fd5b8135613a3781614b97565b600082601f830112614e9257600080fd5b81356020614e9f82614cb0565b604051614eac8282614c84565b83815260059390931b8501820192828101915086841115614ecc57600080fd5b8286015b84811015614d39578035614ee381614a13565b8352918301918301614ed0565b60008060408385031215614f0357600080fd5b82356001600160401b0380821115614f1a57600080fd5b614f2686838701614e81565b93506020850135915080821115614f3c57600080fd5b50614f4985828601614cd3565b9150509250929050565b600081518084526020808501945080840160005b83811015614f8357815187529582019590820190600101614f67565b509495945050505050565b602081526000613a376020830184614f53565b600060808284031215611e6157600080fd5b600080600080600080600060e0888a031215614fce57600080fd5b8735614fd981614a13565b965060208801359550604088013594506060880135614ff781614a13565b93506080880135925060a08801356001600160401b038082111561501a57600080fd5b6150268b838c01614fa1565b935060c08a013591508082111561503c57600080fd5b506150498a828b01614d44565b91505092959891949750929550565b60008060006060848603121561506d57600080fd5b8335925060208401359150604084013561508681614a13565b809150509250925092565b6000806000606084860312156150a657600080fd5b83356150b181614a13565b925060208401356001600160401b03808211156150cd57600080fd5b6150d987838801614cd3565b935060408601359150808211156150ef57600080fd5b506150fc86828701614cd3565b9150509250925092565b60006020828403121561511857600080fd5b81356001600160401b0381111561512e57600080fd5b6117fc84828501614d44565b60008060006060848603121561514f57600080fd5b83359250602084013561516181614a13565b929592945050506040919091013590565b6000806040838503121561518557600080fd5b823561519081614a13565b91506020830135614c2881614b97565b600080602083850312156151b357600080fd5b82356001600160401b038111156151c957600080fd5b6151d585828601614b4c565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561523657603f19888603018452615224858351614ac3565b94509285019290850190600101615208565b5092979650505050505050565b60006020828403121561525557600080fd5b813560028110613a3757600080fd5b60008083601f84011261527657600080fd5b5081356001600160401b0381111561528d57600080fd5b602083019150836020828501011115614b9057600080fd5b6000806000806000606086880312156152bd57600080fd5b8535945060208601356001600160401b03808211156152db57600080fd5b6152e789838a01615264565b9096509450604088013591508082111561530057600080fd5b5061530d88828901615264565b969995985093965092949392505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506117fc610120840182614ac3565b80356001600160801b0381168114614a3357600080fd5b6000806000806000806000806000806101408b8d0312156153c257600080fd5b6153cb8b614a28565b995060208b01356001600160401b03808211156153e757600080fd5b6153f38e838f01614d44565b9a5060408d013591508082111561540957600080fd5b6154158e838f01614d44565b995060608d013591508082111561542b57600080fd5b6154378e838f01614d44565b985060808d013591508082111561544d57600080fd5b5061545a8d828e01614e81565b96505061546960a08c01614a28565b945061547760c08c01614a28565b935061548560e08c0161538b565b92506154946101008c0161538b565b91506154a36101208c01614a28565b90509295989b9194979a5092959850565b600080604083850312156154c757600080fd5b82356154d281614a13565b91506020830135614c2881614a13565b600080600080600080600060e0888a0312156154fd57600080fd5b87359650602088013561550f81614a13565b95506040880135945060608801359350608088013561552d81614a13565b925060a0880135915060c08801356001600160401b0381111561554f57600080fd5b6150498a828b01614fa1565b600080600080600060a0868803121561557357600080fd5b853561557e81614a13565b9450602086013561558e81614a13565b9350604086013592506060860135915060808601356001600160401b038111156155b757600080fd5b614e5788828901614d44565b634e487b7160e01b600052602160045260246000fd5b60208101600283106155fb57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061561557607f821691505b60208210811415611e6157634e487b7160e01b600052602260045260246000fd5b60008351615648818460208801614a97565b83519083019061565c818360208801614a97565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156156b6576156b661568d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe198336030181126156e757600080fd5b9190910192915050565b6000808335601e1984360301811261570857600080fd5b8301803591506001600160401b0382111561572257600080fd5b602001915036819003821315614b9057600080fd5b601f82111561191357600081815260208120601f850160051c8101602086101561575e5750805b601f850160051c820191505b818110156112c55782815560010161576a565b6001600160401b0383111561579457615794614c6e565b6157a8836157a28354615601565b83615737565b6000601f8411600181146157dc57600085156157c45750838201355b600019600387901b1c1916600186901b178355612cf5565b600083815260209020601f19861690835b8281101561580d57868501358255602094850194600190920191016157ed565b508682101561582a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c083013561588481614a13565b81546001600160a01b0319166001600160a01b03919091161790556158ac60e08301836156f1565b61334081836007860161577d565b60006000198214156158ce576158ce61568d565b5060010190565b6000808335601e198436030181126158ec57600080fd5b83016020810192503590506001600160401b0381111561590b57600080fd5b803603831315614b9057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015615a1557888403605f190185528235368d900360fe19018112615988578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c0808401356159cf81614a13565b6001600160a01b03169088015260e06159ea848201856158d5565b945083828a01526159fe848a01868361591a565b998301999850505094909401935050600101615963565b505050861515602087015293506117fc92505050565b6000816000190483118215151615615a4557615a4561568d565b500290565b634e487b7160e01b600052601260045260246000fd5b600082615a6f57615a6f615a4a565b500490565b6001600160a01b0392831681529116602082015260400190565b600060208284031215615aa057600080fd5b8151613a3781614b97565b600082821015615abd57615abd61568d565b500390565b600081615ad157615ad161568d565b506000190190565b858152606060208201526000615af360608301868861591a565b8281036040840152615b0681858761591a565b98975050505050505050565b6000808335601e19843603018112615b2957600080fd5b8301803591506001600160401b03821115615b4357600080fd5b6020019150600581901b3603821315614b9057600080fd5b600082615b6a57615b6a615a4a565b500690565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bc8816015850160208801614a97565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bf9816026840160208801614a97565b01602601949350505050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b60208082526002908201526110ab60f11b604082015260600190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b604081526000615ccb6040830185614f53565b82810360208401526136678185614f53565b604081526000615cf06040830185614ac3565b82810360208401526136678185614ac3565b600082516156e7818460208701614a97565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615e1a90830186614f53565b8281036060840152615e2c8186614f53565b90508281036080840152615b068185614ac3565b600060208284031215615e5257600080fd5b8151613a3781614a64565b600060033d1115613eab5760046000803e5060005160e01c90565b600060443d1015615e865790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615eb557505050505090565b8285019150815181811115615ecd5750505050505090565b843d8701016020828501011115615ee75750505050505090565b615ef660208286010187614c84565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061493590830184614ac356fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c6a24150e32098342804ab5cf5670a288ac8579c291b9b34734e08113402c33664736f6c634300080c0033",
    "sourceMap": "1698:13143:37:-:0;;;3983:28;;;;;;;;;-1:-1:-1;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;216:2:641;3157:201:436;;;198:21:641;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:641;;;338:44;399:19;;3157:201:436;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;3483:14;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;581:36:641;;3553:14:436;;569:2:641;554:18;3553:14:436;;;;;;;3479:99;3101:483;1698:13143:37;;1186:320:462;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;429:194:641:-;1698:13143:37;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102c15760003560e01c80637e54523c116101775780637e54523c1461070b57806387198cf21461072b5780638da5cb5b1461074b5780639010d07c1461076957806391d1485414610789578063938e3d7b146107a957806395d89b41146107c95780639bcf7a15146107de578063a0a8e460146107fe578063a217fddf1461081a578063a22cb4651461082f578063a32fa5b31461084f578063ac9650d81461086f578063b24f2d391461089c578063b6f10c79146108cb578063bd85b039146108eb578063c7337d6b14610919578063ca15c87314610950578063cb2ef6f714610970578063d37c353b14610991578063d45573f6146109b1578063d45b28d7146109c6578063d547741f146109f3578063e159163414610a13578063e57553da14610a33578063e8a3d48514610a57578063e9703d2514610a6c578063e985e9c514610ab5578063ea1def9c14610afe578063f242432a14610b1e578063f28083c314610b3e57600080fd5b8062fdd58e146102c657806301ffc9a7146102f957806306fdde0314610329578063079fe40e1461034b5780630e89341c1461036d57806313af40351461038d578063183718d1146103af5780631e7ac488146103cf5780632419f51b146103ef578063248a9ca31461040f57806324aaffaa1461043c57806329c49b9b1461046a5780632a55205a1461048a5780632eb2c2d6146104b85780632f2ff15d146104d857806332f0cd64146104f857806336568abe146105185780633b1475a7146105385780634cc157df1461054d5780634e1273f41461058f578063504c6e01146105bc578063572b6c05146105d657806357bc3d78146105f657806357fd8455146106095780635811ddab146106295780635ab063e814610676578063600dd5ea1461069657806363b45e2d146106b65780636b20c454146106cb5780636f4f2837146106eb575b600080fd5b3480156102d257600080fd5b506102e66102e1366004614a38565b610b5e565b6040519081526020015b60405180910390f35b34801561030557600080fd5b50610319610314366004614a7a565b610bf9565b60405190151581526020016102f0565b34801561033557600080fd5b5061033e610c21565b6040516102f09190614aef565b34801561035757600080fd5b50610360610cb0565b6040516102f09190614b02565b34801561037957600080fd5b5061033e610388366004614b16565b610cbf565b34801561039957600080fd5b506103ad6103a8366004614b2f565b610d00565b005b3480156103bb57600080fd5b506103ad6103ca366004614ba5565b610d30565b3480156103db57600080fd5b506103ad6103ea366004614a38565b611090565b3480156103fb57600080fd5b506102e661040a366004614b16565b6110c2565b34801561041b57600080fd5b506102e661042a366004614b16565b6000908152600c602052604090205490565b34801561044857600080fd5b506102e6610457366004614b16565b61010f6020526000908152604090205481565b34801561047657600080fd5b506103ad610485366004614c03565b611130565b34801561049657600080fd5b506104aa6104a5366004614c33565b6111a3565b6040516102f0929190614c55565b3480156104c457600080fd5b506103ad6104d3366004614db7565b6111e0565b3480156104e457600080fd5b506103ad6104f3366004614c03565b6112cd565b34801561050457600080fd5b506103ad610513366004614e64565b611363565b34801561052457600080fd5b506103ad610533366004614c03565b6113d4565b34801561054457600080fd5b50600a546102e6565b34801561055957600080fd5b5061056d610568366004614b16565b611433565b604080516001600160a01b03909316835261ffff9091166020830152016102f0565b34801561059b57600080fd5b506105af6105aa366004614ef0565b6114a2565b6040516102f09190614f8e565b3480156105c857600080fd5b5060a5546103199060ff1681565b3480156105e257600080fd5b506103196105f1366004614b2f565b6115cb565b6103ad610604366004614fb3565b6115e9565b34801561061557600080fd5b506103ad610624366004614b2f565b61172c565b34801561063557600080fd5b506102e6610644366004615058565b6000928352600e60209081526040808520938552600390930181528284206001600160a01b0390921684525290205490565b34801561068257600080fd5b506102e6610691366004614b16565b61179c565b3480156106a257600080fd5b506103ad6106b1366004614a38565b61184d565b3480156106c257600080fd5b506008546102e6565b3480156106d757600080fd5b506103ad6106e6366004615091565b61187b565b3480156106f757600080fd5b506103ad610706366004614b2f565b611918565b34801561071757600080fd5b506103ad610726366004614a38565b611945565b34801561073757600080fd5b506103ad610746366004614c33565b611973565b34801561075757600080fd5b506007546001600160a01b0316610360565b34801561077557600080fd5b50610360610784366004614c33565b6119d0565b34801561079557600080fd5b506103196107a4366004614c03565b611abf565b3480156107b557600080fd5b506103ad6107c4366004615106565b611aea565b3480156107d557600080fd5b5061033e611b17565b3480156107ea57600080fd5b506103ad6107f936600461513a565b611b25565b34801561080a57600080fd5b50604051600481526020016102f0565b34801561082657600080fd5b506102e6600081565b34801561083b57600080fd5b506103ad61084a366004615172565b611b54565b34801561085b57600080fd5b5061031961086a366004614c03565b611c13565b34801561087b57600080fd5b5061088f61088a3660046151a0565b611c69565b6040516102f091906151e1565b3480156108a857600080fd5b5060045461010081046001600160a01b031690600160a81b900461ffff1661056d565b3480156108d757600080fd5b506103ad6108e6366004615243565b611d5d565b3480156108f757600080fd5b506102e6610906366004614b16565b61010e6020526000908152604090205481565b34801561092557600080fd5b50610360610934366004614b16565b610110602052600090815260409020546001600160a01b031681565b34801561095c57600080fd5b506102e661096b366004614b16565b611dde565b34801561097c57600080fd5b506a44726f704552433131353560a81b6102e6565b34801561099d57600080fd5b506102e66109ac3660046152a5565b611e67565b3480156109bd57600080fd5b5061056d611f71565b3480156109d257600080fd5b506109e66109e1366004614c33565b611f8e565b6040516102f0919061531e565b3480156109ff57600080fd5b506103ad610a0e366004614c03565b6120f5565b348015610a1f57600080fd5b506103ad610a2e3660046153a2565b61210e565b348015610a3f57600080fd5b506104aa6002546003546001600160a01b0390911691565b348015610a6357600080fd5b5061033e612340565b348015610a7857600080fd5b50610aa0610a87366004614b16565b600e602052600090815260409020805460019091015482565b604080519283526020830191909152016102f0565b348015610ac157600080fd5b50610319610ad03660046154b4565b6001600160a01b03918216600090815260d96020908152604080832093909416825291909152205460ff1690565b348015610b0a57600080fd5b50610319610b193660046154e2565b61234d565b348015610b2a57600080fd5b506103ad610b3936600461555b565b612753565b348015610b4a57600080fd5b5060045460ff166040516102f091906155d9565b60006001600160a01b038316610bce5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260d8602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610c0482612842565b80610bf35750506001600160e01b03191663152a902d60e11b1490565b61010a8054610c2f90615601565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5b90615601565b8015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b505050505081565b6006546001600160a01b031690565b60606000610ccc83612892565b905080610cd884612a2e565b604051602001610ce9929190615636565b604051602081830303815290604052915050919050565b610d08612b2b565b610d245760405162461bcd60e51b8152600401610bc590615665565b610d2d81612b3e565b50565b610d38612b2b565b610d545760405162461bcd60e51b8152600401610bc590615665565b6000848152600e6020526040902080546001820154818415610d7d57610d7a82846156a3565b90505b600184018690558084556000805b87811015610f3657801580610dc35750888882818110610dad57610dad6156bb565b9050602002810190610dbf91906156d1565b3582105b610df45760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610bc5565b60006002870181610e0584876156a3565b8152602001908152602001600020600201549050898983818110610e2b57610e2b6156bb565b9050602002810190610e3d91906156d1565b60200135811115610e855760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b6044820152606401610bc5565b898983818110610e9757610e976156bb565b9050602002810190610ea991906156d1565b600288016000610eb985886156a3565b81526020019081526020016000208181610ed3919061583c565b50819050600288016000610ee785886156a3565b8152602081019190915260400160002060020155898983818110610f0d57610f0d6156bb565b9050602002810190610f1f91906156d1565b359250819050610f2e816158ba565b915050610d8b565b508515610fb857835b82811015610fb2576000818152600280880160205260408220828155600181018390559081018290556003810182905560048101829055600581018290556006810180546001600160a01b031916905590610f9d6007830182614940565b50508080610faa906158ba565b915050610f3f565b50611049565b8683111561104957865b8381101561104757600286016000610fda83866156a3565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b0319169055906110326007830182614940565b5050808061103f906158ba565b915050610fc2565b505b887f066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a89898960405161107d93929190615943565b60405180910390a2505050505050505050565b611098612b2b565b6110b45760405162461bcd60e51b8152600401610bc590615665565b6110be8282612b90565b5050565b60006110cd60085490565b821061110b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610bc5565b6008828154811061111e5761111e6156bb565b90600052602060002001549050919050565b600061113c8133612c1e565b600083815261011060205260409081902080546001600160a01b0319166001600160a01b0385161790555183907f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b01690611196908590614b02565b60405180910390a2505050565b6000806000806111b286611433565b90945084925061ffff1690506127106111cb8287615a2b565b6111d59190615a60565b925050509250929050565b60a554859060ff16156112b8576daaeb6d7670e522a718067333cd4e3b156112b8576001600160a01b038116331415611225576112208686868686612c9e565b6112c5565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906112589030903390600401615a74565b602060405180830381865afa158015611275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112999190615a8e565b6112b85733604051633b79c77360e21b8152600401610bc59190614b02565b6112c58686868686612c9e565b505050505050565b6000828152600c60205260409020546112e69033612c1e565b6000828152600b602090815260408083206001600160a01b038516845290915290205460ff16156113595760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610bc5565b6110be8282612cfc565b61136b612b2b565b6113cb5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b6064820152608401610bc5565b610d2d81612d10565b336001600160a01b038216146114295760405162461bcd60e51b815260206004820152601a60248201527921b0b71037b7363c903932b737bab731b2903337b91039b2b63360311b6044820152606401610bc5565b6110be8282612d51565b6000818152600560209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561147a5780516020820151611498565b60045461010081046001600160a01b031690600160a81b900461ffff165b9250925050915091565b606081518351146115075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610bc5565b600083516001600160401b0381111561152257611522614c6e565b60405190808252806020026020018201604052801561154b578160200160208202803683370190505b50905060005b84518110156115c35761159685828151811061156f5761156f6156bb565b6020026020010151858381518110611589576115896156bb565b6020026020010151610b5e565b8282815181106115a8576115a86156bb565b60209081029190910101526115bc816158ba565b9050611551565b509392505050565b6001600160a01b031660009081526041602052604090205460ff1690565b6115f886888787878787612da8565b60006116038761179c565b905061161b81611611612e39565b898989898961234d565b506000878152600e602090815260408083208484526002908101909252822001805488929061164b9084906156a3565b90915550506000878152600e6020908152604080832084845260030190915281208791611676612e39565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546116a591906156a3565b909155506116b99050876000888888612e43565b6116c4888888612f85565b876001600160a01b03166116d6612e39565b6001600160a01b0316827ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e8a8a60405161171a929190918252602082015260400190565b60405180910390a45050505050505050565b611734612b2b565b6117915760405162461bcd60e51b815260206004820152602860248201527f4e6f7420617574686f72697a656420746f2073756273637269626520746f207260448201526732b3b4b9ba393c9760c11b6064820152608401610bc5565b610d2d816001612fa0565b6000818152600e602052604081206001810154815483916117bc916156a3565b90505b8154811115611816576002820160006117d9600184615aab565b8152602001908152602001600020600001544210611804576117fc600182615aab565b949350505050565b8061180e81615ac2565b9150506117bf565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610bc5565b611855612b2b565b6118715760405162461bcd60e51b8152600401610bc590615665565b6110be8282613090565b61188361311c565b6001600160a01b0316836001600160a01b031614806118a957506118a983610ad061311c565b6119085760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610bc5565b611913838383613126565b505050565b611920612b2b565b61193c5760405162461bcd60e51b8152600401610bc590615665565b610d2d81613346565b61194d612b2b565b6119695760405162461bcd60e51b8152600401610bc590615665565b6110be8282613390565b600061197f8133612c1e565b600083815261010f602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd910160405180910390a1505050565b6000828152600d602052604081205481805b82811015611ab6576000868152600d602090815260408083208484526001019091529020546001600160a01b031615611a5f5784821415611a4d576000868152600d602090815260408083209383526001909301905220546001600160a01b03169250610bf3915050565b611a586001836156a3565b9150611aa4565b611a6a866000611abf565b8015611a9157506000868152600d6020908152604080832083805260020190915290205481145b15611aa457611aa16001836156a3565b91505b611aaf6001826156a3565b90506119e2565b50505092915050565b6000918252600b602090815260408084206001600160a01b0393909316845291905290205460ff1690565b611af2612b2b565b611b0e5760405162461bcd60e51b8152600401610bc590615665565b610d2d816133ee565b61010b8054610c2f90615601565b611b2d612b2b565b611b495760405162461bcd60e51b8152600401610bc590615665565b6119138383836134c4565b60a554829060ff1615611c09576daaeb6d7670e522a718067333cd4e3b15611c0957604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c617113490611ba99030908590600401615a74565b602060405180830381865afa158015611bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bea9190615a8e565b611c095780604051633b79c77360e21b8152600401610bc59190614b02565b611913838361356c565b6000828152600b6020908152604080832083805290915281205460ff16611c6057506000828152600b602090815260408083206001600160a01b038516845290915290205460ff16610bf3565b50600192915050565b6060816001600160401b03811115611c8357611c83614c6e565b604051908082528060200260200182016040528015611cb657816020015b6060815260200190600190039081611ca15790505b50905060005b82811015611d5657611d2630858584818110611cda57611cda6156bb565b9050602002810190611cec91906156f1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061357e92505050565b828281518110611d3857611d386156bb565b60200260200101819052508080611d4e906158ba565b915050611cbc565b5092915050565b611d65612b2b565b611d815760405162461bcd60e51b8152600401610bc590615665565b6004805482919060ff191660018381811115611d9f57611d9f6155c3565b02179055507fd246da9440709ce0dd3f4fd669abc85ada012ab9774b8ecdcc5059ba1486b9c181604051611dd391906155d9565b60405180910390a150565b6000818152600d6020526040812054815b81811015611e42576000848152600d602090815260408083208484526001019091529020546001600160a01b031615611e3057611e2d6001846156a3565b92505b611e3b6001826156a3565b9050611def565b50611e4e836000611abf565b15611e6157611e5e6001836156a3565b91505b50919050565b6000611e71613670565b611e8d5760405162461bcd60e51b8152600401610bc590615665565b85611ec25760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610bc5565b6000600a549050611f0a818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061368192505050565b600a919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001611f408a846156a3565b611f4a9190615aab565b88888888604051611f5f959493929190615ad9565b60405180910390a25095945050505050565b6002546001600160a01b03811691600160a01b90910461ffff1690565b611fe260405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6000838152600e6020908152604080832085845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061206b90615601565b80601f016020809104026020016040519081016040528092919081815260200182805461209790615601565b80156120e45780601f106120b9576101008083540402835291602001916120e4565b820191906000526020600020905b8154815290600101906020018083116120c757829003601f168201915b505050505081525050905092915050565b6000828152600c60205260409020546114299033612c1e565b600054610100900460ff161580801561212e5750600054600160ff909116105b8061214f575061213d30612833565b15801561214f575060005460ff166001145b6121b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bc5565b6000805460ff1916600117905580156121d5576000805461ff0019166101001790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612220896136ee565b61223860405180602001604052806000815250613726565b612240613756565b6122498a6133ee565b6122528d612b3e565b61225c6001612d10565b61226760008e612cfc565b612271818e612cfc565b61227b828e612cfc565b612286826000612cfc565b61229984866001600160801b0316612b90565b6122ac87876001600160801b0316613090565b6122b588613346565b61010c82905561010d8190558b516122d59061010a9060208f019061497a565b508a516122ea9061010b9060208e019061497a565b5050508015612333576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60018054610c2f90615601565b6000858152600e602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a083015260068101546001600160a01b031660c08301526007810180548493929160e08401916123d890615601565b80601f016020809104026020016040519081016040528092919081815260200182805461240490615601565b80156124515780601f1061242657610100808354040283529160200191612451565b820191906000526020600020905b81548152906001019060200180831161243457829003601f168201915b50505091909252505050606081015160a082015160c083015160808401519394509192909190156125315761252d6124898780615b12565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505060808088015191508e9060208b01359060408c0135906124de908d0160608e01614b2f565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120613777565b5094505b84156125b6576020860135612546578261254c565b85602001355b9250600019866040013514156125625781612568565b85604001355b91506000198660400135141580156125995750600061258d6080880160608901614b2f565b6001600160a01b031614155b6125a357806125b3565b6125b36080870160608801614b2f565b90505b6000600e60008c815260200190815260200160002060030160008e815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b03161415806126265750828814155b156126665760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b6044820152606401610bc5565b89158061267b575083612679828c6156a3565b115b156126b15760405162461bcd60e51b8152600401610bc5906020808252600490820152632151747960e01b604082015260600190565b84602001518a86604001516126c691906156a3565b11156127015760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b6044820152606401610bc5565b84514210156127435760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610bc5565b5050505050979650505050505050565b60a554859060ff1615612826576daaeb6d7670e522a718067333cd4e3b15612826576001600160a01b038116331415612793576112208686868686613845565b604051633185c44d60e21b81526daaeb6d7670e522a718067333cd4e9063c6171134906127c69030903390600401615a74565b602060405180830381865afa1580156127e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128079190615a8e565b6128265733604051633b79c77360e21b8152600401610bc59190614b02565b6112c58686868686613845565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b148061287357506001600160e01b031982166303a24d0760e21b145b80610bf357506301ffc9a760e01b6001600160e01b0319831614610bf3565b6060600061289f60085490565b9050600060088054806020026020016040519081016040528092919081815260200182805480156128ef57602002820191906000526020600020905b8154815260200190600101908083116128db575b5050505050905060005b828110156129f357818181518110612913576129136156bb565b60200260200101518510156129e15760096000838381518110612938576129386156bb565b60200260200101518152602001908152602001600020805461295990615601565b80601f016020809104026020016040519081016040528092919081815260200182805461298590615601565b80156129d25780601f106129a7576101008083540402835291602001916129d2565b820191906000526020600020905b8154815290600101906020018083116129b557829003601f168201915b50505050509350505050919050565b6129ec6001826156a3565b90506128f9565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610bc5565b606081612a525750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612a7c5780612a66816158ba565b9150612a759050600a83615a60565b9150612a56565b6000816001600160401b03811115612a9657612a96614c6e565b6040519080825280601f01601f191660200182016040528015612ac0576020820181803683370190505b5090505b84156117fc57612ad5600183615aab565b9150612ae2600a86615b5b565b612aed9060306156a3565b60f81b818381518110612b0257612b026156bb565b60200101906001600160f81b031916908160001a905350612b24600a86615a60565b9450612ac4565b6000612b39816107a461311c565b905090565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115612bb25760405162461bcd60e51b8152600401610bc590615b6f565b600280546001600160b01b031916600160a01b61ffff8416026001600160a01b031916176001600160a01b0384169081179091556040518281527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a25050565b6000828152600b602090815260408083206001600160a01b038516845290915290205460ff166110be57612c5c816001600160a01b0316601461389c565b612c6783602061389c565b604051602001612c78929190615b98565b60408051601f198184030181529082905262461bcd60e51b8252610bc591600401614aef565b612ca661311c565b6001600160a01b0316856001600160a01b03161480612ccc5750612ccc85610ad061311c565b612ce85760405162461bcd60e51b8152600401610bc590615c05565b612cf58585858585613a3e565b5050505050565b612d068282613bee565b6110be8282613c49565b60a5805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba7809690602001611dd3565b612d5b8282613cb6565b6000828152600d602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b600087815261010f60205260409020541580612dea5750600087815261010f602090815260408083205461010e90925290912054612de79087906156a3565b11155b612e305760405162461bcd60e51b8152602060048201526017602482015276657863656564206d617820746f74616c20737570706c7960481b6044820152606401610bc5565b50505050505050565b6000612b3961311c565b80612e6b573415612e665760405162461bcd60e51b8152600401610bc590615c54565b612cf5565b600080612e76611f71565b909250905060006001600160a01b03871615612e925786612ed6565b600088815261011060205260409020546001600160a01b031615612ece57600088815261011060205260409020546001600160a01b0316612ed6565b612ed6610cb0565b90506000612ee48588615a2b565b90506000612710612ef961ffff861684615a2b565b612f039190615a60565b905060006001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f355750348214612f39565b5034155b80612f565760405162461bcd60e51b8152600401610bc590615c54565b612f6988612f6261311c565b8885613d18565b61233388612f7561311c565b86612f808688615aab565b613d18565b61191383838360405180602001604052806000815250613d62565b6daaeb6d7670e522a718067333cd4e3b156110be576001600160a01b0382163b1561305f57801561302c57604051633e9f1edf60e11b81526daaeb6d7670e522a718067333cd4e90637d3e3dbe90612ffe9030908690600401615a74565b600060405180830381600087803b15801561301857600080fd5b505af11580156112c5573d6000803e3d6000fd5b60405163a0af290360e01b81526daaeb6d7670e522a718067333cd4e9063a0af290390612ffe9030908690600401615a74565b604051632210724360e11b81526daaeb6d7670e522a718067333cd4e90634420e48690612ffe903090600401614b02565b6127108111156130b25760405162461bcd60e51b8152600401610bc590615b6f565b60048054610100600160b81b0319166101006001600160a01b03851690810261ffff60a81b191691909117600160a81b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001612c12565b6000612b39613e89565b6001600160a01b0383166131885760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610bc5565b80518251146131a95760405162461bcd60e51b8152600401610bc590615c70565b60006131b361311c565b90506131d381856000868660405180602001604052806000815250613eae565b60005b83518110156132d75760008482815181106131f3576131f36156bb565b602002602001015190506000848381518110613211576132116156bb565b602090810291909101810151600084815260d8835260408082206001600160a01b038c16835290935291909120549091508181101561329e5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610bc5565b600092835260d8602090815260408085206001600160a01b038b16865290915290922091039055806132cf816158ba565b9150506131d6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051613328929190615cb8565b60405180910390a46040805160208101909152600090525b50505050565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6003819055600280546001600160a01b0319166001600160a01b0384161790556040517ff8086cee80709bd44c82f89dbca54115ebd05e840a88ab81df9cf5be9754eb63906133e29084908490614c55565b60405180910390a15050565b6000600180546133fd90615601565b80601f016020809104026020016040519081016040528092919081815260200182805461342990615601565b80156134765780601f1061344b57610100808354040283529160200191613476565b820191906000526020600020905b81548152906001019060200180831161345957829003601f168201915b505085519394506134929360019350602087019250905061497a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516133e2929190615cdd565b6127108111156134e65760405162461bcd60e51b8152600401610bc590615b6f565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b6110be61357761311c565b8383614070565b606061358983612833565b6135e45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bc5565b600080846001600160a01b0316846040516135ff9190615d02565b600060405180830381855af49150503d806000811461363a576040519150601f19603f3d011682016040523d82523d6000602084013e61363f565b606091505b50915091506136678282604051806060016040528060278152602001615f8460279139614149565b95945050505050565b6000612b3961010d546107a461311c565b60008061368e84866156a3565b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301819055600081815260096020908152604090912085519294508493506136e592909186019061497a565b50935093915050565b600054610100900460ff166137155760405162461bcd60e51b8152600401610bc590615d14565b61371d614182565b610d2d816141a9565b600054610100900460ff1661374d5760405162461bcd60e51b8152600401610bc590615d14565b610d2d81614238565b613775733cc6cdda760b79bafa08df41ecfa224f810dceb6600161424b565b565b6000808281805b875181101561383957613792600283615a2b565b915060008882815181106137a8576137a86156bb565b602002602001015190508084116137ea576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350613826565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361382391906156a3565b92505b5080613831816158ba565b91505061377e565b50941495939450505050565b61384d61311c565b6001600160a01b0316856001600160a01b03161480613873575061387385610ad061311c565b61388f5760405162461bcd60e51b8152600401610bc590615c05565b612cf58585858585614255565b606060006138ab836002615a2b565b6138b69060026156a3565b6001600160401b038111156138cd576138cd614c6e565b6040519080825280601f01601f1916602001820160405280156138f7576020820181803683370190505b509050600360fc1b81600081518110613912576139126156bb565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613941576139416156bb565b60200101906001600160f81b031916908160001a9053506000613965846002615a2b565b6139709060016156a3565b90505b60018111156139e8576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106139a4576139a46156bb565b1a60f81b8282815181106139ba576139ba6156bb565b60200101906001600160f81b031916908160001a90535060049490941c936139e181615ac2565b9050613973565b508315613a375760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bc5565b9392505050565b8151835114613a5f5760405162461bcd60e51b8152600401610bc590615c70565b6001600160a01b038416613a855760405162461bcd60e51b8152600401610bc590615d5f565b6000613a8f61311c565b9050613a9f818787878787613eae565b60005b8451811015613b88576000858281518110613abf57613abf6156bb565b602002602001015190506000858381518110613add57613add6156bb565b602090810291909101810151600084815260d8835260408082206001600160a01b038e168352909352919091205490915081811015613b2e5760405162461bcd60e51b8152600401610bc590615da4565b600083815260d8602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290613b6d9084906156a3565b9250508190555050505080613b81906158ba565b9050613aa2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051613bd8929190615cb8565b60405180910390a46112c581878787878761439c565b6000828152600b602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600d6020526040812080549160019190613c6883856156a3565b90915550506000928352600d6020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b613cc08282612c1e565b6000828152600b602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80613d2257613340565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613d5657613d5182826144ff565b613340565b613340848484846145a1565b6001600160a01b038416613dc25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bc5565b6000613dcc61311c565b90506000613dd9856145fa565b90506000613de6856145fa565b9050613df783600089858589613eae565b600086815260d8602090815260408083206001600160a01b038b16845290915281208054879290613e299084906156a3565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612e3083600089898989614645565b6000613e94336115cb565b15613ea6575060131936013560601c90565b503390565b90565b613ebc61010c546000611abf565b158015613ed157506001600160a01b03851615155b8015613ee557506001600160a01b03841615155b15613f6257613ef761010c5486611abf565b80613f0a5750613f0a61010c5485611abf565b613f625760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610bc5565b6001600160a01b038516613fea5760005b8351811015613fe857828181518110613f8e57613f8e6156bb565b602002602001015161010e6000868481518110613fad57613fad6156bb565b602002602001015181526020019081526020016000206000828254613fd291906156a3565b90915550613fe19050816158ba565b9050613f73565b505b6001600160a01b0384166112c55760005b8351811015612e3057828181518110614016576140166156bb565b602002602001015161010e6000868481518110614035576140356156bb565b60200260200101518152602001908152602001600020600082825461405a9190615aab565b909155506140699050816158ba565b9050613ffb565b816001600160a01b0316836001600160a01b031614156140e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610bc5565b6001600160a01b03838116600081815260d96020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910161355f565b60608315614158575081613a37565b8251156141685782518084602001fd5b8160405162461bcd60e51b8152600401610bc59190614aef565b600054610100900460ff166137755760405162461bcd60e51b8152600401610bc590615d14565b600054610100900460ff166141d05760405162461bcd60e51b8152600401610bc590615d14565b60005b81518110156110be576001604160008484815181106141f4576141f46156bb565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580614230816158ba565b9150506141d3565b80516110be9060da90602084019061497a565b6110be8282612fa0565b6001600160a01b03841661427b5760405162461bcd60e51b8152600401610bc590615d5f565b600061428561311c565b90506000614292856145fa565b9050600061429f856145fa565b90506142af838989858589613eae565b600086815260d8602090815260408083206001600160a01b038c168452909152902054858110156142f25760405162461bcd60e51b8152600401610bc590615da4565b600087815260d8602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906143319084906156a3565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4614391848a8a8a8a8a614645565b505050505050505050565b6143ae846001600160a01b0316612833565b156112c55760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906143e79089908990889088908890600401615dee565b6020604051808303816000875af1925050508015614422575060408051601f3d908101601f1916820190925261441f91810190615e40565b60015b6144cf5761442e615e5d565b806308c379a014156144685750614443615e78565b8061444e575061446a565b8060405162461bcd60e51b8152600401610bc59190614aef565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610bc5565b6001600160e01b0319811663bc197c8160e01b14612e305760405162461bcd60e51b8152600401610bc590615f01565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461454c576040519150601f19603f3d011682016040523d82523d6000602084013e614551565b606091505b50509050806119135760405162461bcd60e51b815260206004820152601c60248201527b1b985d1a5d99481d1bdad95b881d1c985b9cd9995c8819985a5b195960221b6044820152606401610bc5565b816001600160a01b0316836001600160a01b031614156145c057613340565b6001600160a01b0383163014156145e557613d516001600160a01b0385168383614707565b6133406001600160a01b03851684848461475d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110614634576146346156bb565b602090810291909101015292915050565b614657846001600160a01b0316612833565b156112c55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906146909089908990889088908890600401615f49565b6020604051808303816000875af19250505080156146cb575060408051601f3d908101601f191682019092526146c891810190615e40565b60015b6146d75761442e615e5d565b6001600160e01b0319811663f23a6e6160e01b14612e305760405162461bcd60e51b8152600401610bc590615f01565b6119138363a9059cbb60e01b8484604051602401614726929190614c55565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614795565b6040516001600160a01b03808516602483015283166044820152606481018290526133409085906323b872dd60e01b90608401614726565b60006147ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148679092919063ffffffff16565b80519091501561191357808060200190518101906148089190615a8e565b6119135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bc5565b60606117fc84846000858561487b85612833565b6148c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bc5565b600080866001600160a01b031685876040516148e39190615d02565b60006040518083038185875af1925050503d8060008114614920576040519150601f19603f3d011682016040523d82523d6000602084013e614925565b606091505b5091509150614935828286614149565b979650505050505050565b50805461494c90615601565b6000825580601f1061495c575050565b601f016020900490600052602060002090810190610d2d91906149fe565b82805461498690615601565b90600052602060002090601f0160209004810192826149a857600085556149ee565b82601f106149c157805160ff19168380011785556149ee565b828001600101855582156149ee579182015b828111156149ee5782518255916020019190600101906149d3565b506149fa9291506149fe565b5090565b5b808211156149fa57600081556001016149ff565b6001600160a01b0381168114610d2d57600080fd5b8035614a3381614a13565b919050565b60008060408385031215614a4b57600080fd5b8235614a5681614a13565b946020939093013593505050565b6001600160e01b031981168114610d2d57600080fd5b600060208284031215614a8c57600080fd5b8135613a3781614a64565b60005b83811015614ab2578181015183820152602001614a9a565b838111156133405750506000910152565b60008151808452614adb816020860160208601614a97565b601f01601f19169290920160200192915050565b602081526000613a376020830184614ac3565b6001600160a01b0391909116815260200190565b600060208284031215614b2857600080fd5b5035919050565b600060208284031215614b4157600080fd5b8135613a3781614a13565b60008083601f840112614b5e57600080fd5b5081356001600160401b03811115614b7557600080fd5b6020830191508360208260051b8501011115614b9057600080fd5b9250929050565b8015158114610d2d57600080fd5b60008060008060608587031215614bbb57600080fd5b8435935060208501356001600160401b03811115614bd857600080fd5b614be487828801614b4c565b9094509250506040850135614bf881614b97565b939692955090935050565b60008060408385031215614c1657600080fd5b823591506020830135614c2881614a13565b809150509250929050565b60008060408385031215614c4657600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715614ca957614ca9614c6e565b6040525050565b60006001600160401b03821115614cc957614cc9614c6e565b5060051b60200190565b600082601f830112614ce457600080fd5b81356020614cf182614cb0565b604051614cfe8282614c84565b83815260059390931b8501820192828101915086841115614d1e57600080fd5b8286015b84811015614d395780358352918301918301614d22565b509695505050505050565b600082601f830112614d5557600080fd5b81356001600160401b03811115614d6e57614d6e614c6e565b604051614d85601f8301601f191660200182614c84565b818152846020838601011115614d9a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614dcf57600080fd5b8535614dda81614a13565b94506020860135614dea81614a13565b935060408601356001600160401b0380821115614e0657600080fd5b614e1289838a01614cd3565b94506060880135915080821115614e2857600080fd5b614e3489838a01614cd3565b93506080880135915080821115614e4a57600080fd5b50614e5788828901614d44565b9150509295509295909350565b600060208284031215614e7657600080fd5b8135613a3781614b97565b600082601f830112614e9257600080fd5b81356020614e9f82614cb0565b604051614eac8282614c84565b83815260059390931b8501820192828101915086841115614ecc57600080fd5b8286015b84811015614d39578035614ee381614a13565b8352918301918301614ed0565b60008060408385031215614f0357600080fd5b82356001600160401b0380821115614f1a57600080fd5b614f2686838701614e81565b93506020850135915080821115614f3c57600080fd5b50614f4985828601614cd3565b9150509250929050565b600081518084526020808501945080840160005b83811015614f8357815187529582019590820190600101614f67565b509495945050505050565b602081526000613a376020830184614f53565b600060808284031215611e6157600080fd5b600080600080600080600060e0888a031215614fce57600080fd5b8735614fd981614a13565b965060208801359550604088013594506060880135614ff781614a13565b93506080880135925060a08801356001600160401b038082111561501a57600080fd5b6150268b838c01614fa1565b935060c08a013591508082111561503c57600080fd5b506150498a828b01614d44565b91505092959891949750929550565b60008060006060848603121561506d57600080fd5b8335925060208401359150604084013561508681614a13565b809150509250925092565b6000806000606084860312156150a657600080fd5b83356150b181614a13565b925060208401356001600160401b03808211156150cd57600080fd5b6150d987838801614cd3565b935060408601359150808211156150ef57600080fd5b506150fc86828701614cd3565b9150509250925092565b60006020828403121561511857600080fd5b81356001600160401b0381111561512e57600080fd5b6117fc84828501614d44565b60008060006060848603121561514f57600080fd5b83359250602084013561516181614a13565b929592945050506040919091013590565b6000806040838503121561518557600080fd5b823561519081614a13565b91506020830135614c2881614b97565b600080602083850312156151b357600080fd5b82356001600160401b038111156151c957600080fd5b6151d585828601614b4c565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561523657603f19888603018452615224858351614ac3565b94509285019290850190600101615208565b5092979650505050505050565b60006020828403121561525557600080fd5b813560028110613a3757600080fd5b60008083601f84011261527657600080fd5b5081356001600160401b0381111561528d57600080fd5b602083019150836020828501011115614b9057600080fd5b6000806000806000606086880312156152bd57600080fd5b8535945060208601356001600160401b03808211156152db57600080fd5b6152e789838a01615264565b9096509450604088013591508082111561530057600080fd5b5061530d88828901615264565b969995985093965092949392505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506117fc610120840182614ac3565b80356001600160801b0381168114614a3357600080fd5b6000806000806000806000806000806101408b8d0312156153c257600080fd5b6153cb8b614a28565b995060208b01356001600160401b03808211156153e757600080fd5b6153f38e838f01614d44565b9a5060408d013591508082111561540957600080fd5b6154158e838f01614d44565b995060608d013591508082111561542b57600080fd5b6154378e838f01614d44565b985060808d013591508082111561544d57600080fd5b5061545a8d828e01614e81565b96505061546960a08c01614a28565b945061547760c08c01614a28565b935061548560e08c0161538b565b92506154946101008c0161538b565b91506154a36101208c01614a28565b90509295989b9194979a5092959850565b600080604083850312156154c757600080fd5b82356154d281614a13565b91506020830135614c2881614a13565b600080600080600080600060e0888a0312156154fd57600080fd5b87359650602088013561550f81614a13565b95506040880135945060608801359350608088013561552d81614a13565b925060a0880135915060c08801356001600160401b0381111561554f57600080fd5b6150498a828b01614fa1565b600080600080600060a0868803121561557357600080fd5b853561557e81614a13565b9450602086013561558e81614a13565b9350604086013592506060860135915060808601356001600160401b038111156155b757600080fd5b614e5788828901614d44565b634e487b7160e01b600052602160045260246000fd5b60208101600283106155fb57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061561557607f821691505b60208210811415611e6157634e487b7160e01b600052602260045260246000fd5b60008351615648818460208801614a97565b83519083019061565c818360208801614a97565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156156b6576156b661568d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000823560fe198336030181126156e757600080fd5b9190910192915050565b6000808335601e1984360301811261570857600080fd5b8301803591506001600160401b0382111561572257600080fd5b602001915036819003821315614b9057600080fd5b601f82111561191357600081815260208120601f850160051c8101602086101561575e5750805b601f850160051c820191505b818110156112c55782815560010161576a565b6001600160401b0383111561579457615794614c6e565b6157a8836157a28354615601565b83615737565b6000601f8411600181146157dc57600085156157c45750838201355b600019600387901b1c1916600186901b178355612cf5565b600083815260209020601f19861690835b8281101561580d57868501358255602094850194600190920191016157ed565b508682101561582a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c083013561588481614a13565b81546001600160a01b0319166001600160a01b03919091161790556158ac60e08301836156f1565b61334081836007860161577d565b60006000198214156158ce576158ce61568d565b5060010190565b6000808335601e198436030181126158ec57600080fd5b83016020810192503590506001600160401b0381111561590b57600080fd5b803603831315614b9057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015615a1557888403605f190185528235368d900360fe19018112615988578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c0808401356159cf81614a13565b6001600160a01b03169088015260e06159ea848201856158d5565b945083828a01526159fe848a01868361591a565b998301999850505094909401935050600101615963565b505050861515602087015293506117fc92505050565b6000816000190483118215151615615a4557615a4561568d565b500290565b634e487b7160e01b600052601260045260246000fd5b600082615a6f57615a6f615a4a565b500490565b6001600160a01b0392831681529116602082015260400190565b600060208284031215615aa057600080fd5b8151613a3781614b97565b600082821015615abd57615abd61568d565b500390565b600081615ad157615ad161568d565b506000190190565b858152606060208201526000615af360608301868861591a565b8281036040840152615b0681858761591a565b98975050505050505050565b6000808335601e19843603018112615b2957600080fd5b8301803591506001600160401b03821115615b4357600080fd5b6020019150600581901b3603821315614b9057600080fd5b600082615b6a57615b6a615a4a565b500690565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b815260008351615bc8816015850160208801614a97565b7001034b99036b4b9b9b4b733903937b6329607d1b6015918401918201528351615bf9816026840160208801614a97565b01602601949350505050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b60208082526002908201526110ab60f11b604082015260600190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b604081526000615ccb6040830185614f53565b82810360208401526136678185614f53565b604081526000615cf06040830185614ac3565b82810360208401526136678185614ac3565b600082516156e7818460208701614a97565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615e1a90830186614f53565b8281036060840152615e2c8186614f53565b90508281036080840152615b068185614ac3565b600060208284031215615e5257600080fd5b8151613a3781614a64565b600060033d1115613eab5760046000803e5060005160e01c90565b600060443d1015615e865790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615eb557505050505090565b8285019150815181811115615ecd5750505050505090565b843d8701016020828501011115615ee75750505050505090565b615ef660208286010187614c84565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061493590830184614ac356fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c6a24150e32098342804ab5cf5670a288ac8579c291b9b34734e08113402c33664736f6c634300080c0033",
    "sourceMap": "1698:13143:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2593:227:439;;;;;;;;;;-1:-1:-1;2593:227:439;;;;;:::i;:::-;;:::i;:::-;;;755:25:641;;;743:2;728:18;2593:227:439;;;;;;;;5957:280:37;;;;;;;;;;-1:-1:-1;5957:280:37;;;;;:::i;:::-;;:::i;:::-;;;1438:14:641;;1431:22;1413:41;;1401:2;1386:18;5957:280:37;1273:187:641;2249:18:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;676:104:136:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5715:211:37:-;;;;;;;;;;-1:-1:-1;5715:211:37;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;:::-;;2212:2857:121;;;;;;;;;;-1:-1:-1;2212:2857:121;;;;;:::i;:::-;;:::i;2043:269:135:-;;;;;;;;;;-1:-1:-1;2043:269:135;;;;;:::i;:::-;;:::i;1277:203:114:-;;;;;;;;;;-1:-1:-1;1277:203:114;;;;;:::i;:::-;;:::i;2740:120:133:-;;;;;;;;;;-1:-1:-1;2740:120:133;;;;;:::i;:::-;2808:7;2834:19;;;:13;:19;;;;;;;2740:120;3100:49:37;;;;;;;;;;-1:-1:-1;3100:49:37;;;;;:::i;:::-;;;;;;;;;;;;;;7191:240;;;;;;;;;;-1:-1:-1;7191:240:37;;;;;:::i;:::-;;:::i;1421:347:139:-;;;;;;;;;;-1:-1:-1;1421:347:139;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13946:306:37:-;;;;;;;;;;-1:-1:-1;13946:306:37;;;;;:::i;:::-;;:::i;3255:271:133:-;;;;;;;;;;-1:-1:-1;3255:271:133;;;;;:::i;:::-;;:::i;243:208:129:-;;;;;;;;;;-1:-1:-1;243:208:129;;;;;:::i;:::-;;:::i;4466:217:133:-;;;;;;;;;;-1:-1:-1;4466:217:133;;;;;:::i;:::-;;:::i;11738:106:37:-;;;;;;;;;;-1:-1:-1;11816:21:37;;11738:106;;2008:381:139;;;;;;;;;;-1:-1:-1;2008:381:139;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;8990:32:641;;;8972:51;;9071:6;9059:19;;;9054:2;9039:18;;9032:47;8945:18;2008:381:139;8800:285:641;2977:508:439;;;;;;;;;;-1:-1:-1;2977:508:439;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;205:31:129:-;;;;;;;;;;-1:-1:-1;205:31:129;;;;;;;;918:134:304;;;;;;;;;;-1:-1:-1;918:134:304;;;;;:::i;:::-;;:::i;795:1354:121:-;;;;;;:::i;:::-;;:::i;509:199:118:-;;;;;;;;;;-1:-1:-1;509:199:118;;;;;:::i;:::-;;:::i;8359:285:121:-;;;;;;;;;;-1:-1:-1;8359:285:121;;;;;:::i;:::-;8502:29;8567:24;;;:14;:24;;;;;;;;:60;;;:46;;;;:60;;;;;-1:-1:-1;;;;;8567:70:121;;;;;;;;;;8359:285;7523:456;;;;;;;;;;-1:-1:-1;7523:456:121;;;;;:::i;:::-;;:::i;3087:256:139:-;;;;;;;;;;-1:-1:-1;3087:256:139;;;;;:::i;:::-;;:::i;980:96:114:-;;;;;;;;;;-1:-1:-1;1054:8:114;:15;980:96;;11944:343:37;;;;;;;;;;-1:-1:-1;11944:343:37;;;;;:::i;:::-;;:::i;1189:228:136:-;;;;;;;;;;-1:-1:-1;1189:228:136;;;;;:::i;:::-;;:::i;2821:255:135:-;;;;;;;;;;-1:-1:-1;2821:255:135;;;;;:::i;:::-;;:::i;6879:230:37:-;;;;;;;;;;-1:-1:-1;6879:230:37;;;;;:::i;:::-;;:::i;871:86:132:-;;;;;;;;;;-1:-1:-1;944:6:132;;-1:-1:-1;;;;;944:6:132;871:86;;1643:633:134;;;;;;;;;;-1:-1:-1;1643:633:134;;;;;:::i;:::-;;:::i;1324:131:133:-;;;;;;;;;;-1:-1:-1;1324:131:133;;;;;:::i;:::-;;:::i;1003:188:116:-;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;2294:20:37:-;;;;;;;;;;;;;:::i;4281:288:139:-;;;;;;;;;;-1:-1:-1;4281:288:139;;;;;:::i;:::-;;:::i;6536:89:37:-;;;;;;;;;;-1:-1:-1;6536:89:37;;6616:1;14679:36:641;;14667:2;14652:18;6536:89:37;14537:184:641;742:49:133;;;;;;;;;;-1:-1:-1;742:49:133;787:4;742:49;;13359:174:37;;;;;;;;;;-1:-1:-1;13359:174:37;;;;;:::i;:::-;;:::i;2206:211:133:-;;;;;;;;;;-1:-1:-1;2206:211:133;;;;;:::i;:::-;;:::i;632:301:466:-;;;;;;;;;;-1:-1:-1;632:301:466;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:139:-;;;;;;;;;;-1:-1:-1;2599:16:139;;;;;-1:-1:-1;;;;;2599:16:139;;-1:-1:-1;;;2624:10:139;;;;2499:144;;3455:243:135;;;;;;;;;;-1:-1:-1;3455:243:135;;;;;:::i;:::-;;:::i;2943:46:37:-;;;;;;;;;;-1:-1:-1;2943:46:37;;;;;:::i;:::-;;;;;;;;;;;;;;3241:48;;;;;;;;;;-1:-1:-1;3241:48:37;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3241:48:37;;;2683:398:134;;;;;;;;;;-1:-1:-1;2683:398:134;;;;;:::i;:::-;;:::i;6428:102:37:-;;;;;;;;;;-1:-1:-1;;;;6428:102:37;;1254:592:125;;;;;;;;;;-1:-1:-1;1254:592:125;;;;;:::i;:::-;;:::i;1058:147:135:-;;;;;;;;;;;;;:::i;8044:233:121:-;;;;;;;;;;-1:-1:-1;8044:233:121;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3897:171:133:-;;;;;;;;;;-1:-1:-1;3897:171:133;;;;;:::i;:::-;;:::i;4076:1391:37:-;;;;;;;;;;-1:-1:-1;4076:1391:37;;;;;:::i;:::-;;:::i;1268:136:135:-;;;;;;;;;;;;1359:20;;1381:15;;-1:-1:-1;;;;;1359:20:135;;;;1268:136;565:34:116;;;;;;;;;;;;;:::i;506:60:121:-;;;;;;;;;;-1:-1:-1;506:60:121;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20428:25:641;;;20484:2;20469:18;;20462:34;;;;20401:18;506:60:121;20254:248:641;3773:166:439;;;;;;;;;;-1:-1:-1;3773:166:439;;;;;:::i;:::-;-1:-1:-1;;;;;3895:27:439;;;3872:4;3895:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3773:166;5166:2269:121;;;;;;;;;;-1:-1:-1;5166:2269:121;;;;;:::i;:::-;;:::i;13600:274:37:-;;;;;;;;;;-1:-1:-1;13600:274:37;;;;;:::i;:::-;;:::i;1467:107:135:-;;;;;;;;;;-1:-1:-1;1552:15:135;;;;1467:107;;;;;;:::i;2593:227:439:-;2679:7;-1:-1:-1;;;;;2706:21:439;;2698:76;;;;-1:-1:-1;;;2698:76:439;;23255:2:641;2698:76:439;;;23237:21:641;23294:2;23274:18;;;23267:30;23333:34;23313:18;;;23306:62;-1:-1:-1;;;23384:18:641;;;23377:40;23434:19;;2698:76:439;;;;;;;;;-1:-1:-1;2791:13:439;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2791:22:439;;;;;;;;;;2593:227;;;;;:::o;5957:280:37:-;6111:4;6138:36;6162:11;6138:23;:36::i;:::-;:92;;;-1:-1:-1;;;;;;;;6178:52:37;-1:-1:-1;;;6178:52:37;;5957:280::o;2249:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:104:136:-;764:9;;-1:-1:-1;;;;;764:9:136;;676:104::o;5715:211:37:-;5776:13;5801:22;5826:21;5838:8;5826:11;:21::i;:::-;5801:46;;5888:8;5898:19;:8;:17;:19::i;:::-;5871:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5857:62;;;5715:211;;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2212:2857:121:-;2397:24;:22;:24::i;:::-;2392:80;;2437:24;;-1:-1:-1;;;2437:24:121;;;;;;;:::i;2392:80::-;2481:40;2524:24;;;:14;:24;;;;;2587:28;;2654:19;;;;2587:28;3090:108;;;;3148:39;3169:18;3148;:39;:::i;:::-;3132:55;;3090:108;3208:19;;;:40;;;3258:44;;;:28;;3358:640;3378:22;;;3358:640;;;3429:6;;;:69;;;3469:11;;3481:1;3469:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;3439:59;;3429:69;3421:84;;;;-1:-1:-1;;;3421:84:121;;25604:2:641;3421:84:121;;;25586:21:641;25643:1;25623:18;;;25616:29;-1:-1:-1;;;25661:18:641;;;25654:32;25703:18;;3421:84:121;25402:325:641;3421:84:121;3520:28;3551:24;;;3520:28;3576:17;3592:1;3576:13;:17;:::i;:::-;3551:43;;;;;;;;;;;:57;;;3520:88;;3649:11;;3661:1;3649:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;3626:20;:56;3622:123;;;3702:28;;-1:-1:-1;;;3702:28:121;;25934:2:641;3702:28:121;;;25916:21:641;25973:2;25953:18;;;25946:30;-1:-1:-1;;;25992:18:641;;;25985:48;26050:18;;3702:28:121;25732:342:641;3622:123:121;3805:11;;3817:1;3805:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3759:24;;;:43;3784:17;3800:1;3784:13;:17;:::i;:::-;3759:43;;;;;;;;;;;:60;;;;;;:::i;:::-;-1:-1:-1;3893:20:121;;-1:-1:-1;3833:24:121;;;:43;3858:17;3874:1;3858:13;:17;:::i;:::-;3833:43;;;;;;;;;;;-1:-1:-1;3833:43:121;:57;;:80;3958:11;;3970:1;3958:14;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;3402:3:121;;-1:-1:-1;3402:3:121;;;:::i;:::-;;;;3358:640;;;;4538:22;4534:444;;;4593:18;4576:128;4617:13;4613:1;:17;4576:128;;;4662:27;;;;:24;;;;:27;;;;;4655:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4655:34:121;;;4662:27;4655:34;;;;4662:27;4655:34;:::i;:::-;;;4632:3;;;;;:::i;:::-;;;;4576:128;;;;4534:444;;;4738:39;;;4734:234;;;4814:11;4797:157;4838:18;4834:1;:22;4797:157;;;4892:24;;;:43;4917:17;4933:1;4917:13;:17;:::i;:::-;4892:43;;;;;;;;;;;-1:-1:-1;4892:43:121;;;4885:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4885:50:121;;;4892:43;4885:50;;;;-1:-1:-1;4885:50:121;:::i;:::-;;;4858:3;;;;;:::i;:::-;;;;4797:157;;;;4734:234;5016:8;4993:69;5026:11;;5039:22;4993:69;;;;;;;;:::i;:::-;;;;;;;;2382:2687;;;;;2212:2857;;;;:::o;2043:269:135:-;2160:24;:22;:24::i;:::-;2155:80;;2200:24;;-1:-1:-1;;;2200:24:135;;;;;;;:::i;2155:80::-;2244:61;2266:21;2289:15;2244:21;:61::i;:::-;2043:269;;:::o;1277:203:114:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:114;;32776:2:641;1407:23:114;;;32758:21:641;32815:2;32795:18;;;32788:30;-1:-1:-1;;;32834:18:641;;;32827:43;32887:18;;1407:23:114;32574:337:641;1360:81:114;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;7191:240:37:-;787:4:133;931:28;787:4;948:10;931;:28::i;:::-;7315:23:37::1;::::0;;;:13:::1;:23;::::0;;;;;;:40;;-1:-1:-1;;;;;;7315:40:37::1;-1:-1:-1::0;;;;;7315:40:37;::::1;;::::0;;7370:54;7315:23;;7370:54:::1;::::0;::::1;::::0;7315:40;;7370:54:::1;:::i;:::-;;;;;;;;7191:240:::0;;;:::o;1421:347:139:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:139;;-1:-1:-1;1613:66:139;;;-1:-1:-1;1755:6:139;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;13946:306:37:-;1064:19:131;;14172:4:37;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;14188:57:37::1;14216:4;14222:2;14226:3;14231:7;14240:4;14188:27;:57::i;:::-;1461:7:131::0;;1392:94;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;14188:57:37::1;14216:4;14222:2;14226:3;14231:7;14240:4;14188:27;:57::i;:::-;13946:306:::0;;;;;;:::o;3255:271:133:-;3350:19;;;;:13;:19;;;;;;3339:43;;3371:10;3339;:43::i;:::-;3396:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3396:23:133;;;;;;;;;;;;3392:93;;;3435:39;;-1:-1:-1;;;3435:39:133;;34107:2:641;3435:39:133;;;34089:21:641;34146:2;34126:18;;;34119:30;34185:31;34165:18;;;34158:59;34234:18;;3435:39:133;33905:353:641;3392:93:133;3494:25;3505:4;3511:7;3494:10;:25::i;243:208:129:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:129;;34465:2:641;313:84:129;;;34447:21:641;34504:2;34484:18;;;34477:30;34543:34;34523:18;;;34516:62;-1:-1:-1;;;34594:18:641;;;34587:41;34645:19;;313:84:129;34263:407:641;313:84:129;407:37;431:12;407:23;:37::i;4466:217:133:-;4557:10;-1:-1:-1;;;;;4557:21:133;;;4553:88;;4594:36;;-1:-1:-1;;;4594:36:133;;34877:2:641;4594:36:133;;;34859:21:641;34916:2;34896:18;;;34889:30;-1:-1:-1;;;34935:18:641;;;34928:56;35001:18;;4594:36:133;34675:350:641;4553:88:133;4650:26;4662:4;4668:7;4650:11;:26::i;2008:381:139:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:139;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;;;;-1:-1:-1;;;;;2270:16:139;;-1:-1:-1;;;2295:10:139;;;;2211:171;2192:190;;;;;2008:381;;;:::o;2977:508:439:-;3128:16;3187:3;:10;3168:8;:15;:29;3160:83;;;;-1:-1:-1;;;3160:83:439;;35232:2:641;3160:83:439;;;35214:21:641;35271:2;35251:18;;;35244:30;35310:34;35290:18;;;35283:62;-1:-1:-1;;;35361:18:641;;;35354:39;35410:19;;3160:83:439;35030:405:641;3160:83:439;3254:30;3301:8;:15;-1:-1:-1;;;;;3287:30:439;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3287:30:439;;3254:63;;3333:9;3328:120;3352:8;:15;3348:1;:19;3328:120;;;3407:30;3417:8;3426:1;3417:11;;;;;;;;:::i;:::-;;;;;;;3430:3;3434:1;3430:6;;;;;;;;:::i;:::-;;;;;;;3407:9;:30::i;:::-;3388:13;3402:1;3388:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3369:3;;;:::i;:::-;;;3328:120;;;-1:-1:-1;3465:13:439;2977:508;-1:-1:-1;;;2977:508:439:o;918:134:304:-;-1:-1:-1;;;;;1017:28:304;994:4;1017:28;;;:17;:28;;;;;;;;;918:134::o;795:1354:121:-;1074:95;1087:8;1097:9;1108;1119;1130:14;1146:15;1163:5;1074:12;:95::i;:::-;1180:25;1208:35;1234:8;1208:25;:35::i;:::-;1180:63;;1254:207;1279:17;1310:16;:14;:16::i;:::-;1340:8;1362:9;1385;1408:14;1436:15;1254:11;:207::i;:::-;-1:-1:-1;1506:24:121;;;;:14;:24;;;;;;;;:54;;;:35;;;;:54;;;;;:68;:81;;1578:9;;1506:24;:81;;1578:9;;1506:81;:::i;:::-;;;;-1:-1:-1;;1597:24:121;;;;:14;:24;;;;;;;;:65;;;:46;;:65;;;;;1684:9;;1663:16;:14;:16::i;:::-;-1:-1:-1;;;;;1597:83:121;-1:-1:-1;;;;;1597:83:121;;;;;;;;;;;;;:96;;;;;;;:::i;:::-;;;;-1:-1:-1;1750:79:121;;-1:-1:-1;1770:8:121;1788:1;1792:9;1803;1814:14;1750:19;:79::i;:::-;1886:53;1908:9;1919:8;1929:9;1886:21;:53::i;:::-;2006:9;-1:-1:-1;;;;;1955:82:121;1988:16;:14;:16::i;:::-;-1:-1:-1;;;;;1955:82:121;1969:17;1955:82;2017:8;2027:9;1955:82;;;;;;20428:25:641;;;20484:2;20469:18;;20462:34;20416:2;20401:18;;20254:248;1955:82:121;;;;;;;;1064:1085;795:1354;;;;;;;:::o;509:199:118:-;588:28;:26;:28::i;:::-;580:81;;;;-1:-1:-1;;;580:81:118;;35642:2:641;580:81:118;;;35624:21:641;35681:2;35661:18;;;35654:30;35720:34;35700:18;;;35693:62;-1:-1:-1;;;35771:18:641;;;35764:38;35819:19;;580:81:118;35440:404:641;580:81:118;671:30;681:13;696:4;671:9;:30::i;7523:456:121:-;7597:7;7659:24;;;:14;:24;;;;;7741:19;;;;7710:28;;7597:7;;7710:50;;;:::i;:::-;7698:62;;7693:248;7766:28;;7762:32;;7693:248;;;7838:24;;;:31;7863:5;7867:1;7863;:5;:::i;:::-;7838:31;;;;;;;;;;;:46;;;7819:15;:65;7815:116;;7911:5;7915:1;7911;:5;:::i;:::-;7904:12;7523:456;-1:-1:-1;;;;7523:456:121:o;7815:116::-;7796:3;;;;:::i;:::-;;;;7693:248;;;-1:-1:-1;7951:21:121;;-1:-1:-1;;;7951:21:121;;36322:2:641;7951:21:121;;;36304::641;36361:2;36341:18;;;36334:30;-1:-1:-1;;;36380:18:641;;;36373:41;36431:18;;7951:21:121;36120:335:641;3087:256:139;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:139;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;11944:343:37:-;12114:12;:10;:12::i;:::-;-1:-1:-1;;;;;12103:23:37;:7;-1:-1:-1;;;;;12103:23:37;;:66;;;;12130:39;12147:7;12156:12;:10;:12::i;12130:39::-;12082:155;;;;-1:-1:-1;;;12082:155:37;;36662:2:641;12082:155:37;;;36644:21:641;36701:2;36681:18;;;36674:30;36740:34;36720:18;;;36713:62;-1:-1:-1;;;36791:18:641;;;36784:40;36841:19;;12082:155:37;36460:406:641;12082:155:37;12248:32;12259:7;12268:3;12273:6;12248:10;:32::i;:::-;11944:343;;;:::o;1189:228:136:-;1279:29;:27;:29::i;:::-;1274:85;;1324:24;;-1:-1:-1;;;1324:24:136;;;;;;;:::i;1274:85::-;1368:42;1395:14;1368:26;:42::i;2821:255:135:-;2926:24;:22;:24::i;:::-;2921:80;;2966:24;;-1:-1:-1;;;2966:24:135;;;;;;;:::i;2921:80::-;3011:58;3037:21;3060:8;3011:25;:58::i;6879:230:37:-;787:4:133;931:28;787:4;948:10;931;:28::i;:::-;6997:24:37::1;::::0;;;:14:::1;:24;::::0;;;;;;;;:42;;;7054:48;;20428:25:641;;;20469:18;;;20462:34;;;7054:48:37::1;::::0;20401:18:641;7054:48:37::1;;;;;;;6879:230:::0;;;:::o;1643:633:134:-;1727:14;1776:17;;;:11;:17;;;;;:23;1727:14;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;1897:28:134;:42;1893:367;;1972:5;1963;:14;1959:133;;;2010:17;;;;:11;:17;;;;;;;;:28;;;:25;;;;:28;;;;-1:-1:-1;;;;;2010:28:134;;-1:-1:-1;2060:13:134;;-1:-1:-1;;2060:13:134;1959:133;2109:10;2118:1;2109:10;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;-1:-1:-1;2178:17:134;;;;:11;:17;;;;;;;;:37;;;:25;;:37;;;;;;2173:42;;2144:71;2140:120;;;2235:10;2244:1;2235:10;;:::i;:::-;;;2140:120;1871:6;1876:1;1871:6;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;:::o;1324:131:133:-;1402:4;1425:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;1425:23:133;;;;;;;;;;;;;;;1324:131::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;2294:20:37:-;;;;;;;:::i;4281:288:139:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:139;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;13359:174:37:-;1886:19:131;;13463:8:37;;1886:19:131;;1882:286;;;391:42;1925:45;:49;1921:237;;1999:67;;-1:-1:-1;;;1999:67:131;;391:42;;1999;;:67;;2050:4;;2057:8;;1999:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1994:150;;2116:8;2097:28;;-1:-1:-1;;;2097:28:131;;;;;;;;:::i;1994:150::-;13483:43:37::1;13507:8;13517;13483:23;:43::i;2206:211:133:-:0;2285:4;2306:14;;;:8;:14;;;;;;;;:26;;;;;;;;;;;2301:88;;-1:-1:-1;2355:14:133;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;2355:23:133;;;;;;;;;;;;2348:30;;2301:88;-1:-1:-1;2406:4:133;2206:211;;;;:::o;632:301:466:-;700:22;756:4;-1:-1:-1;;;;;744:24:466;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:34;;783:9;778:125;798:15;;;778:125;;;847:45;877:4;884;;889:1;884:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;847:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;847:21:466;;-1:-1:-1;;;847:45:466:i;:::-;834:7;842:1;834:10;;;;;;;;:::i;:::-;;;;;;:58;;;;815:3;;;;;:::i;:::-;;;;778:125;;;;632:301;;;;:::o;3455:243:135:-;3533:24;:22;:24::i;:::-;3528:80;;3573:24;;-1:-1:-1;;;3573:24:135;;;;;;;:::i;3528:80::-;3617:15;:26;;3635:8;;3617:15;-1:-1:-1;;3617:26:135;;3635:8;3617:26;;;;;;;;:::i;:::-;;;;;;3659:32;3682:8;3659:32;;;;;;:::i;:::-;;;;;;;;3455:243;:::o;2683:398:134:-;2757:13;2805:17;;;:11;:17;;;;;:23;2757:13;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:17;;;:11;:17;;;;;;;;:28;;;:25;;:28;;;;;;-1:-1:-1;;;;;2903:28:134;:42;2899:91;;2965:10;2974:1;2965:10;;:::i;:::-;;;2899:91;2877:6;2882:1;2877:6;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3054:10;3063:1;3054:10;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;1254:592:125:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:125;;;;;;;:::i;1436:70::-;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:125;;37599:2:641;1548:15:125;;;37581:21:641;37638:1;37618:18;;;37611:29;-1:-1:-1;;;37656:18:641;;;37649:35;37701:18;;1548:15:125;37397:328:641;1516:58:125;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:125;;-1:-1:-1;;;1669:55:125:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:125;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;1058:147:135:-;1153:20;;-1:-1:-1;;;;;1153:20:135;;;-1:-1:-1;;;1182:14:135;;;;;;1058:147::o;8044:233:121:-;8162:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8162:31:121;8221:24;;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;;8209:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8209:61:121;;;;;;;;;;;;8221:49;8209:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8044:233;;;;:::o;3897:171:133:-;3993:19;;;;:13;:19;;;;;;3982:43;;4014:10;3982;:43::i;4076:1391:37:-;3111:19:436;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:436;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;:44::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:436;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:436;;38443:2:641;3157:201:436;;;38425:21:641;38482:2;38462:18;;;38455:30;38521:34;38501:18;;;38494:62;-1:-1:-1;;;38572:18:641;;;38565:44;38626:19;;3157:201:436;38241:410:641;3157:201:436;3368:12;:16;;-1:-1:-1;;3368:16:436;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:436;;;;;3394:65;4497:26:37::1;4555:24;4665:41;4687:18:::0;4665:21:::1;:41::i;:::-;4716:28;;;;;;;;;;;;::::0;:24:::1;:28::i;:::-;4754:32;:30;:32::i;:::-;4842:31;4860:12;4842:17;:31::i;:::-;4883:26;4895:13;4883:11;:26::i;:::-;4919:29;4943:4;4919:23;:29::i;:::-;4959:45;787:4:133;4990:13:37::0;4959:10:::1;:45::i;:::-;5014:38;5025:11;5038:13;5014:10;:38::i;:::-;5062:40;5073:13;5088;5062:10;:40::i;:::-;5112:37;5123:13;5146:1;5112:10;:37::i;:::-;5160:61;5182:21;5205:15;-1:-1:-1::0;;;;;5160:61:37::1;:21;:61::i;:::-;5231:56;5256:17;5275:11;-1:-1:-1::0;;;;;5231:56:37::1;:24;:56::i;:::-;5297:42;5324:14;5297:26;:42::i;:::-;5350:12;:28:::0;;;5388:10:::1;:24:::0;;;5422:12;;::::1;::::0;:4:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5444:16:37;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4463:1004;;3483:14:436::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:436;;;3553:14;;-1:-1:-1;14679:36:641;;3553:14:436;;14667:2:641;14652:18;3553:14:436;;;;;;;3479:99;3101:483;4076:1391:37;;;;;;;;;;:::o;565:34:116:-;;;;;;;:::i;5166:2269:121:-;5431:15;5500:24;;;:14;:24;;;;;;;;:49;;;:35;;;;:49;;;;;5458:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5458:91:121;;;;;;;;;;5431:15;;5458:91;5500:49;5458:91;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5458:91:121;;;;-1:-1:-1;;;5580:40:121;;;;5651:31;;;;5716:26;;;;5757:28;;;;5458:91;;-1:-1:-1;5580:40:121;;5651:31;;5716:26;5757:42;5753:515;;5832:425;5868:21;:15;;:21;:::i;:::-;5832:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5907:28:121;;;;;;-1:-1:-1;6026:8:121;;6060:38;;;;;6124:29;;;;;6179:24;;;;;;;;:::i;:::-;5984:241;;-1:-1:-1;;;;;;39640:2:641;39676:15;;;39672:24;;5984:241:121;;;39660:37:641;39713:12;;;39706:28;;;;39750:12;;;39743:28;;;;39805:15;;;39801:24;39787:12;;;39780:46;39842:13;;5984:241:121;;;;;;;;;;;;5953:290;;;;;;5832:18;:425::i;:::-;-1:-1:-1;5815:442:121;-1:-1:-1;5753:515:121;6282:10;6278:534;;;6321:38;;;;:129;;6440:10;6321:129;;;6383:15;:38;;;6321:129;6308:142;;-1:-1:-1;;6477:15:121;:29;;;:50;;:127;;6594:10;6477:127;;;6546:15;:29;;;6477:127;6464:140;;-1:-1:-1;;6634:15:121;:29;;;:50;;:92;;;;-1:-1:-1;6724:1:121;6688:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6688:38:121;;;6634:92;:167;;6788:13;6634:167;;;6745:24;;;;;;;;:::i;:::-;6618:183;;6278:534;6822:29;6854:14;:24;6869:8;6854:24;;;;;;;;;;;:46;;:60;6901:12;6854:60;;;;;;;;;;;:70;6915:8;-1:-1:-1;;;;;6854:70:121;-1:-1:-1;;;;;6854:70:121;;;;;;;;;;;;;6822:102;;6952:13;-1:-1:-1;;;;;6939:26:121;:9;-1:-1:-1;;;;;6939:26:121;;;:58;;;;6987:10;6969:14;:28;;6939:58;6935:115;;;7013:26;;-1:-1:-1;;;7013:26:121;;40068:2:641;7013:26:121;;;40050:21:641;40107:2;40087:18;;;40080:30;-1:-1:-1;;;40126:18:641;;;40119:46;40182:18;;7013:26:121;39866:340:641;6935:115:121;7064:14;;;:66;;-1:-1:-1;7119:10:121;7083:33;7095:21;7083:9;:33;:::i;:::-;:46;7064:66;7060:111;;;7146:14;;-1:-1:-1;;;7146:14:121;;;;;;40413:2:641;40395:21;;;40452:1;40432:18;;;40425:29;-1:-1:-1;;;40485:2:641;40470:18;;40463:34;40529:2;40514:18;;40211:327;7060:111:121;7231:17;:36;;;7219:9;7185:17;:31;;;:43;;;;:::i;:::-;:82;7181:133;;;7283:20;;-1:-1:-1;;;7283:20:121;;40745:2:641;7283:20:121;;;40727:21:641;40784:2;40764:18;;;40757:30;-1:-1:-1;;;40803:18:641;;;40796:40;40853:18;;7283:20:121;40543:334:641;7181:133:121;7328:32;;7363:15;-1:-1:-1;7324:105:121;;;7394:24;;-1:-1:-1;;;7394:24:121;;41084:2:641;7394:24:121;;;41066:21:641;41123:2;41103:18;;;41096:30;-1:-1:-1;;;41142:18:641;;;41135:44;41196:18;;7394:24:121;40882:338:641;7324:105:121;5448:1987;;;;;5166:2269;;;;;;;;;:::o;13600:274:37:-;1064:19:131;;13801:4:37;;1064:19:131;;1060:621;;;391:42;1103:45;:49;1099:572;;-1:-1:-1;;;;;1396:18:131;;1404:10;1396:18;1392:94;;;13817:50:37::1;13840:4;13846:2;13850;13854:6;13862:4;13817:22;:50::i;1392:94:131:-:0;1508:69;;-1:-1:-1;;;1508:69:131;;391:42;;1508;;:69;;1559:4;;1566:10;;1508:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1503:154;;1627:10;1608:30;;-1:-1:-1;;;1608:30:131;;;;;;;;:::i;1503:154::-;13817:50:37::1;13840:4;13846:2;13850;13854:6;13862:4;13817:22;:50::i;1186:320:462:-:0;-1:-1:-1;;;;;1476:19:462;;:23;;;1186:320::o;1600:349:439:-;1724:4;-1:-1:-1;;;;;;1759:52:439;;-1:-1:-1;;;1759:52:439;;:131;;-1:-1:-1;;;;;;;1827:63:439;;-1:-1:-1;;;1827:63:439;1759:131;:183;;;-1:-1:-1;;;;;;;;;;1168:51:471;;;1906:36:439;1060:166:471;2153:390:114;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:114;;-1:-1:-1;;;2511:25:114;;41427:2:641;2511:25:114;;;41409:21:641;41466:2;41446:18;;;41439:30;-1:-1:-1;;;41485:18:641;;;41478:45;41540:18;;2511:25:114;41225:339:641;403:703:467;459:13;676:10;672:51;;-1:-1:-1;;702:10:467;;;;;;;;;;;;-1:-1:-1;;;702:10:467;;;;;403:703::o;672:51::-;747:5;732:12;786:75;793:9;;786:75;;818:8;;;;:::i;:::-;;-1:-1:-1;840:10:467;;-1:-1:-1;848:2:467;840:10;;:::i;:::-;;;786:75;;;870:19;902:6;-1:-1:-1;;;;;892:17:467;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:17:467;;870:39;;919:150;926:10;;919:150;;952:11;962:1;952:11;;:::i;:::-;;-1:-1:-1;1020:10:467;1028:2;1020:5;:10;:::i;:::-;1007:24;;:2;:24;:::i;:::-;994:39;;977:6;984;977:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;977:56:467;;;;;;;;-1:-1:-1;1047:11:467;1056:2;1047:11;;:::i;:::-;;;919:150;;10206:127:37;10262:4;10285:41;10262:4;10313:12;:10;:12::i;10285:41::-;10278:48;;10206:127;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;2371:375:135:-;2499:6;2481:15;:24;2477:80;;;2521:25;;-1:-1:-1;;;2521:25:135;;;;;;;:::i;2477:80::-;2567:14;:40;;-1:-1:-1;;;;;;2617:44:135;-1:-1:-1;;;2567:40:135;;;;-1:-1:-1;;;;;;2617:44:135;;-1:-1:-1;;;;;2617:44:135;;;;;;;;2677:62;;755:25:641;;;2677:62:135;;743:2:641;728:18;2677:62:135;;;;;;;;2371:375;;:::o;5557:495:133:-;5645:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5645:23:133;;;;;;;;;;;;5640:406;;5827:43;5857:7;-1:-1:-1;;;;;5827:43:133;5867:2;5827:21;:43::i;:::-;5941:40;5971:4;5978:2;5941:21;:40::i;:::-;5736:267;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5736:267:133;;;;;;;;;;-1:-1:-1;;;5684:351:133;;;;;;;:::i;4473:427:439:-;4706:12;:10;:12::i;:::-;-1:-1:-1;;;;;4698:20:439;:4;-1:-1:-1;;;;;4698:20:439;;:60;;;;4722:36;4739:4;4745:12;:10;:12::i;4722:36::-;4677:154;;;;-1:-1:-1;;;4677:154:439;;;;;;;:::i;:::-;4841:52;4864:4;4870:2;4874:3;4879:7;4888:4;4841:22;:52::i;:::-;4473:427;;;;;:::o;3475:152:134:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;457:160:129:-;528:19;:34;;-1:-1:-1;;528:34:129;;;;;;;;;;577:33;;1413:41:641;;;577:33:129;;1401:2:641;1386:18;577:33:129;1273:187:641;3205:157:134;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;4084:11;4098:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4098:34:134;;;;;:25;;;:34;;;;;;;;4150:30;;:25;;;;:30;;;;;4143:37;;-1:-1:-1;;;;;;4143:37:134;;;4197:34;;;;4190:41;2043:269:135;;:::o;7674:391:37:-;7915:24;;;;:14;:24;;;;;;:29;;:94;;-1:-1:-1;7985:24:37;;;;:14;:24;;;;;;;;;7948:11;:21;;;;;;;:33;;7972:9;;7948:33;:::i;:::-;:61;;7915:94;7894:164;;;;-1:-1:-1;;;7894:164:37;;43437:2:641;7894:164:37;;;43419:21:641;43476:2;43456:18;;;43449:30;-1:-1:-1;;;43495:18:641;;;43488:53;43558:18;;7894:164:37;43235:347:641;7894:164:37;7674:391;;;;;;;:::o;14258:111::-;14324:7;14350:12;:10;:12::i;8155:1236::-;8380:19;8376:99;;8423:9;:14;8415:29;;;;-1:-1:-1;;;8415:29:37;;;;;;;:::i;:::-;8458:7;;8376:99;8486:28;8516:21;8541:20;:18;:20::i;:::-;8485:76;;-1:-1:-1;8485:76:37;-1:-1:-1;8572:22:37;-1:-1:-1;;;;;8597:35:37;;;:176;;8752:21;8597:176;;;8683:1;8648:23;;;:13;:23;;;;;;-1:-1:-1;;;;;8648:23:37;:37;:88;;8713:23;;;;:13;:23;;;;;;-1:-1:-1;;;;;8713:23:37;8648:88;;;8688:22;:20;:22::i;:::-;8572:201;-1:-1:-1;8784:18:37;8805:33;8824:14;8805:16;:33;:::i;:::-;8784:54;-1:-1:-1;8848:20:37;2662:6;8872:27;;;;8784:54;8872:27;:::i;:::-;8871:39;;;;:::i;:::-;8848:62;-1:-1:-1;8921:18:37;-1:-1:-1;;;;;8953:45:37;;397:42:277;8953:45:37;8949:176;;;-1:-1:-1;9030:9:37;:23;;8949:176;;;-1:-1:-1;9100:9:37;:14;8949:176;9142:13;9134:28;;;;-1:-1:-1;;;9134:28:37;;;;;;;:::i;:::-;9173:97;9210:9;9221:12;:10;:12::i;:::-;9235:20;9257:12;9173:36;:97::i;:::-;9280:104;9317:9;9328:12;:10;:12::i;:::-;9342:14;9358:25;9371:12;9358:10;:25;:::i;:::-;9280:36;:104::i;9444:205::-;9595:47;9601:3;9606:8;9616:21;9595:47;;;;;;;;;;;;:5;:47::i;2191:783:131:-;391:42;2326:45;:49;2322:646;;-1:-1:-1;;;;;2449:51:131;;;:55;2445:513;;2572:9;2568:289;;;2605:92;;-1:-1:-1;;;2605:92:131;;391:42;;2605:45;;:92;;2659:4;;2666:30;;2605:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:289;2744:94;;-1:-1:-1;;;2744:94:131;;391:42;;2744:47;;:94;;2800:4;;2807:30;;2744:94;;;:::i;2445:513::-;2895:48;;-1:-1:-1;;;2895:48:131;;391:42;;2895:33;;:48;;2937:4;;2895:48;;;:::i;3430:334:139:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:139;;;;;;;:::i;3531:76::-;3617:16;:36;;-1:-1:-1;;;;;;3663:32:139;3617:36;-1:-1:-1;;;;;3617:36:139;;;;;-1:-1:-1;;;;3663:32:139;;;;;-1:-1:-1;;;3663:32:139;;;;;;;;3711:46;;755:25:641;;;3711:46:139;;743:2:641;728:18;3711:46:139;609:177:641;14375:231:37;14524:14;14561:38;:36;:38::i;12241:943:439:-;-1:-1:-1;;;;;12388:18:439;;12380:66;;;;-1:-1:-1;;;12380:66:439;;44119:2:641;12380:66:439;;;44101:21:641;44158:2;44138:18;;;44131:30;44197:34;44177:18;;;44170:62;-1:-1:-1;;;44248:18:641;;;44241:33;44291:19;;12380:66:439;43917:399:641;12380:66:439;12478:7;:14;12464:3;:10;:28;12456:81;;;;-1:-1:-1;;;12456:81:439;;;;;;;:::i;:::-;12548:16;12567:12;:10;:12::i;:::-;12548:31;;12590:66;12611:8;12621:4;12635:1;12639:3;12644:7;12590:66;;;;;;;;;;;;:20;:66::i;:::-;12672:9;12667:364;12691:3;:10;12687:1;:14;12667:364;;;12722:10;12735:3;12739:1;12735:6;;;;;;;;:::i;:::-;;;;;;;12722:19;;12755:14;12772:7;12780:1;12772:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12797:19;12819:13;;;:9;:13;;;;;;-1:-1:-1;;;;;12819:19:439;;;;;;;;;;;;12772:10;;-1:-1:-1;12860:21:439;;;;12852:70;;;;-1:-1:-1;;;12852:70:439;;44932:2:641;12852:70:439;;;44914:21:641;44971:2;44951:18;;;44944:30;45010:34;44990:18;;;44983:62;-1:-1:-1;;;45061:18:641;;;45054:34;45105:19;;12852:70:439;44730:400:641;12852:70:439;12964:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12964:19:439;;;;;;;;;;12986:20;;12964:42;;12703:3;;;;:::i;:::-;;;;12667:364;;;;13084:1;-1:-1:-1;;;;;13046:55:439;13070:4;-1:-1:-1;;;;;13046:55:439;13060:8;-1:-1:-1;;;;;13046:55:439;;13088:3;13093:7;13046:55;;;;;;;:::i;:::-;;;;;;;;13112:65;;;;;;;;;13156:1;13112:65;;;12370:814;12241:943;;;:::o;1499:170:136:-;1578:9;:26;;-1:-1:-1;;;;;;1578:26:136;-1:-1:-1;;;;;1578:26:136;;;;;;;;1619:43;;;;-1:-1:-1;;1619:43:136;1499:170;:::o;3129:261:135:-;3232:15;:26;;;3268:20;:44;;-1:-1:-1;;;;;;3268:44:135;-1:-1:-1;;;;;3268:44:135;;;;;3328:55;;;;;;3268:44;;3232:26;;3328:55;:::i;:::-;;;;;;;;3129:261;;:::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;4671:362:139:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:139;;;;;;;:::i;4807:69::-;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:139;;;;;;;;;;;;;-1:-1:-1;4886:29:139;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:139;;;;;;;;;;;-1:-1:-1;4886:81:139;;;;;;;4983:43;;755:25:641;;;4918:49:139;;4886:29;;4983:43;;728:18:641;4983:43:139;;;;;;;;4671:362;;;:::o;3553:153:439:-;3647:52;3666:12;:10;:12::i;:::-;3680:8;3690;3647:18;:52::i;1119:455:466:-;1202:12;1234:37;1264:6;1234:29;:37::i;:::-;1226:88;;;;-1:-1:-1;;;1226:88:466;;46195:2:641;1226:88:466;;;46177:21:641;46234:2;46214:18;;;46207:30;46273:34;46253:18;;;46246:62;-1:-1:-1;;;46324:18:641;;;46317:36;46370:19;;1226:88:466;45993:402:641;1226:88:466;1385:12;1399:23;1426:6;-1:-1:-1;;;;;1426:19:466;1446:4;1426:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:67;;;;1468:99;1504:7;1513:10;1468:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;1461:106;1119:455;-1:-1:-1;;;;;1119:455:466:o;11108:127:37:-;11172:4;11195:33;11203:10;;11215:12;:10;:12::i;2840:362:114:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:114;;;:7;3126:22;3159:16;;;;;;;:36;;3044:34;;-1:-1:-1;3044:34:114;;-1:-1:-1;3159:36:114;;:16;;:36;;;;:::i;:::-;;2840:362;;;;;;:::o;470:194:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;572:26:304::1;:24;:26::i;:::-;608:49;640:16;608:31;:49::i;1423:110:439:-:0;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;1513:13:439::1;1521:4;1513:7;:13::i;356:147:118:-:0;417:79;306:42;491:4;417:51;:79::i;:::-;356:147::o;898:906:279:-;1019:4;;1067;1019;;1109:567;1133:5;:12;1129:1;:16;1109:567;;;1166:10;1175:1;1166:10;;:::i;:::-;;;1190:20;1213:5;1219:1;1213:8;;;;;;;;:::i;:::-;;;;;;;1190:31;;1256:12;1240;:28;1236:430;;1391:44;;;;;;47248:19:641;;;47283:12;;;47276:28;;;47320:12;;1391:44:279;;;;;;;;;;;;1381:55;;;;;;1366:70;;1236:430;;;1578:44;;;;;;47248:19:641;;;47283:12;;;47276:28;;;47320:12;;1578:44:279;;;;;;;;;;;;1568:55;;;;;;1553:70;;1650:1;1641:10;;;;;:::i;:::-;;;1236:430;-1:-1:-1;1147:3:279;;;;:::i;:::-;;;;1109:567;;;-1:-1:-1;1769:20:279;;;;;-1:-1:-1;;;;898:906:279:o;4006:395:439:-;4214:12;:10;:12::i;:::-;-1:-1:-1;;;;;4206:20:439;:4;-1:-1:-1;;;;;4206:20:439;;:60;;;;4230:36;4247:4;4253:12;:10;:12::i;4230:36::-;4185:154;;;;-1:-1:-1;;;4185:154:439;;;;;;;:::i;:::-;4349:45;4367:4;4373:2;4377;4381:6;4389:4;4349:17;:45::i;1565:441:285:-;1640:13;1665:19;1697:10;1701:6;1697:1;:10;:::i;:::-;:14;;1710:1;1697:14;:::i;:::-;-1:-1:-1;;;;;1687:25:285;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1687:25:285;;1665:47;;-1:-1:-1;;;1722:6:285;1729:1;1722:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1722:15:285;;;;;;;;;-1:-1:-1;;;1747:6:285;1754:1;1747:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1747:15:285;;;;;;;;-1:-1:-1;1777:9:285;1789:10;1793:6;1789:1;:10;:::i;:::-;:14;;1802:1;1789:14;:::i;:::-;1777:26;;1772:132;1809:1;1805;:5;1772:132;;;-1:-1:-1;;;1856:5:285;1864:3;1856:11;1843:25;;;;;;;:::i;:::-;;;;1831:6;1838:1;1831:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1831:37:285;;;;;;;;-1:-1:-1;1892:1:285;1882:11;;;;;1812:3;;;:::i;:::-;;;1772:132;;;-1:-1:-1;1921:10:285;;1913:55;;;;-1:-1:-1;;;1913:55:285;;47545:2:641;1913:55:285;;;47527:21:641;;;47564:18;;;47557:30;47623:34;47603:18;;;47596:62;47675:18;;1913:55:285;47343:356:641;1913:55:285;1992:6;1565:441;-1:-1:-1;;;1565:441:285:o;6643:1115:439:-;6863:7;:14;6849:3;:10;:28;6841:81;;;;-1:-1:-1;;;6841:81:439;;;;;;;:::i;:::-;-1:-1:-1;;;;;6940:16:439;;6932:66;;;;-1:-1:-1;;;6932:66:439;;;;;;;:::i;:::-;7009:16;7028:12;:10;:12::i;:::-;7009:31;;7051:60;7072:8;7082:4;7088:2;7092:3;7097:7;7106:4;7051:20;:60::i;:::-;7127:9;7122:411;7146:3;:10;7142:1;:14;7122:411;;;7177:10;7190:3;7194:1;7190:6;;;;;;;;:::i;:::-;;;;;;;7177:19;;7210:14;7227:7;7235:1;7227:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7252:19;7274:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7274:19:439;;;;;;;;;;;;7227:10;;-1:-1:-1;7315:21:439;;;;7307:76;;;;-1:-1:-1;;;7307:76:439;;;;;;;:::i;:::-;7425:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7425:19:439;;;;;;;;;;7447:20;;;7425:42;;7495:17;;;;;;;:27;;7447:20;;7425:13;7495:27;;7447:20;;7495:27;:::i;:::-;;;;;;;;7163:370;;;7158:3;;;;:::i;:::-;;;7122:411;;;;7578:2;-1:-1:-1;;;;;7548:47:439;7572:4;-1:-1:-1;;;;;7548:47:439;7562:8;-1:-1:-1;;;;;7548:47:439;;7582:3;7587:7;7548:47;;;;;;;:::i;:::-;;;;;;;;7676:75;7712:8;7722:4;7728:2;7732:3;7737:7;7746:4;7676:35;:75::i;5036:168:133:-;5114:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5114:23:133;;;;;;;;;;:30;;-1:-1:-1;;5114:30:133;5140:4;5114:30;;;5159:38;5186:10;;5123:4;;5159:38;;5114:14;5159:38;5036:168;;:::o;3690:253:134:-;3760:11;3774:17;;;:11;:17;;;;;:23;;;3834:1;;3774:17;3807:28;3834:1;3774:23;3807:28;:::i;:::-;;;;-1:-1:-1;;3846:17:134;;;;:11;:17;;;;;;;;:30;;;:25;;;:30;;;;;:40;;-1:-1:-1;;;;;3846:40:134;;;-1:-1:-1;;;;;;3846:40:134;;;;;;;3896:34;;;:25;;;;:34;;;;:40;3690:253::o;5253:204:133:-;5332:25;5343:4;5349:7;5332:10;:25::i;:::-;5374:14;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;5374:23:133;;;;;;;;;;5367:30;;-1:-1:-1;;5367:30:133;;;5412:38;5439:10;;5383:4;;5412:38;;5374:14;5412:38;5253:204;;:::o;497:385:277:-;648:12;644:49;;676:7;;644:49;-1:-1:-1;;;;;707:25:277;;397:42;707:25;703:173;;;748:37;772:3;777:7;748:23;:37::i;:::-;703:173;;;816:49;834:9;845:5;852:3;857:7;816:17;:49::i;9040:709:439:-;-1:-1:-1;;;;;9187:16:439;;9179:62;;;;-1:-1:-1;;;9179:62:439;;48723:2:641;9179:62:439;;;48705:21:641;48762:2;48742:18;;;48735:30;48801:34;48781:18;;;48774:62;-1:-1:-1;;;48852:18:641;;;48845:31;48893:19;;9179:62:439;48521:397:641;9179:62:439;9252:16;9271:12;:10;:12::i;:::-;9252:31;;9293:20;9316:21;9334:2;9316:17;:21::i;:::-;9293:44;;9347:24;9374:25;9392:6;9374:17;:25::i;:::-;9347:52;;9410:66;9431:8;9449:1;9453:2;9457:3;9462:7;9471:4;9410:20;:66::i;:::-;9487:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9487:17:439;;;;;;;;;:27;;9508:6;;9487:13;:27;;9508:6;;9487:27;:::i;:::-;;;;-1:-1:-1;;9529:52:439;;;20428:25:641;;;20484:2;20469:18;;20462:34;;;-1:-1:-1;;;;;9529:52:439;;;;9562:1;;9529:52;;;;;;20401:18:641;9529:52:439;;;;;;;9668:74;9699:8;9717:1;9721:2;9725;9729:6;9737:4;9668:30;:74::i;1058:401:304:-;1120:14;1150:30;1169:10;1150:18;:30::i;:::-;1146:307;;;-1:-1:-1;;;1352:14:304;1348:23;1335:37;1331:2;1327:46;1058:401;:::o;1146:307::-;-1:-1:-1;929:10:464;;10206:127:37:o;1146:307:304:-;1058:401;:::o;12357:951:37:-;12767:33;12775:12;;12797:1;12767:7;:33::i;:::-;12766:34;:56;;;;-1:-1:-1;;;;;;12804:18:37;;;;12766:56;:76;;;;-1:-1:-1;;;;;;12826:16:37;;;;12766:76;12762:212;;;12866:27;12874:12;;12888:4;12866:7;:27::i;:::-;:56;;;;12897:25;12905:12;;12919:2;12897:7;:25::i;:::-;12858:105;;;;-1:-1:-1;;;12858:105:37;;49125:2:641;12858:105:37;;;49107:21:641;49164:2;49144:18;;;49137:30;49203:34;49183:18;;;49176:62;-1:-1:-1;;;49254:18:641;;;49247:34;49298:19;;12858:105:37;48923:400:641;12858:105:37;-1:-1:-1;;;;;12988:18:37;;12984:155;;13027:9;13022:107;13046:3;:10;13042:1;:14;13022:107;;;13104:7;13112:1;13104:10;;;;;;;;:::i;:::-;;;;;;;13081:11;:19;13093:3;13097:1;13093:6;;;;;;;;:::i;:::-;;;;;;;13081:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;13058:3:37;;-1:-1:-1;13058:3:37;;:::i;:::-;;;13022:107;;;;12984:155;-1:-1:-1;;;;;13153:16:37;;13149:153;;13190:9;13185:107;13209:3;:10;13205:1;:14;13185:107;;;13267:7;13275:1;13267:10;;;;;;;;:::i;:::-;;;;;;;13244:11;:19;13256:3;13260:1;13256:6;;;;;;;;:::i;:::-;;;;;;;13244:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;13221:3:37;;-1:-1:-1;13221:3:37;;:::i;:::-;;;13185:107;;13320:323:439;13470:8;-1:-1:-1;;;;;13461:17:439;:5;-1:-1:-1;;;;;13461:17:439;;;13453:71;;;;-1:-1:-1;;;13453:71:439;;49530:2:641;13453:71:439;;;49512:21:641;49569:2;49549:18;;;49542:30;49608:34;49588:18;;;49581:62;-1:-1:-1;;;49659:18:641;;;49652:39;49708:19;;13453:71:439;49328:405:641;13453:71:439;-1:-1:-1;;;;;13534:25:439;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13534:46:439;;;;;;;;;;13595:41;;1413::641;;;13595::439;;1386:18:641;13595:41:439;1273:187:641;6622:742:462;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:462;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;6933:415;7320:12;7313:20;;-1:-1:-1;;;7313:20:462;;;;;;;;:::i;776:69:464:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;670:242:304:-;4910:13:436;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:436;;;;;;;:::i;:::-;787:9:304::1;782:124;806:16;:23;802:1;:27;782:124;;;891:4;850:17;:38;868:16;885:1;868:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;850:38:304::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;850:38:304;:45;;-1:-1:-1;;850:45:304::1;::::0;::::1;;::::0;;;::::1;::::0;;831:3;::::1;::::0;::::1;:::i;:::-;;;;782:124;;8581:86:439::0;8647:13;;;;:4;;:13;;;;;:::i;441:447:131:-;829:52;839:30;871:9;829;:52::i;5350:947:439:-;-1:-1:-1;;;;;5531:16:439;;5523:66;;;;-1:-1:-1;;;5523:66:439;;;;;;;:::i;:::-;5600:16;5619:12;:10;:12::i;:::-;5600:31;;5641:20;5664:21;5682:2;5664:17;:21::i;:::-;5641:44;;5695:24;5722:25;5740:6;5722:17;:25::i;:::-;5695:52;;5758:60;5779:8;5789:4;5795:2;5799:3;5804:7;5813:4;5758:20;:60::i;:::-;5829:19;5851:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5851:19:439;;;;;;;;;;5888:21;;;;5880:76;;;;-1:-1:-1;;;5880:76:439;;;;;;;:::i;:::-;5990:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5990:19:439;;;;;;;;;;6012:20;;;5990:42;;6052:17;;;;;;;:27;;6012:20;;5990:13;6052:27;;6012:20;;6052:27;:::i;:::-;;;;-1:-1:-1;;6095:46:439;;;20428:25:641;;;20484:2;20469:18;;20462:34;;;-1:-1:-1;;;;;6095:46:439;;;;;;;;;;;;;;20401:18:641;6095:46:439;;;;;;;6222:68;6253:8;6263:4;6269:2;6273;6277:6;6285:4;6222:30;:68::i;:::-;5513:784;;;;5350:947;;;;;:::o;16698:814::-;16930:15;:2;-1:-1:-1;;;;;16930:13:439;;:15::i;:::-;16926:580;;;16965:90;;-1:-1:-1;;;16965:90:439;;-1:-1:-1;;;;;16965:54:439;;;;;:90;;17020:8;;17030:4;;17036:3;;17041:7;;17050:4;;16965:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16965:90:439;;;;;;;;-1:-1:-1;;16965:90:439;;;;;;;;;;;;:::i;:::-;;;16961:535;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17372:6;17365:14;;-1:-1:-1;;;17365:14:439;;;;;;;;:::i;16961:535::-;;;17419:62;;-1:-1:-1;;;17419:62:439;;51886:2:641;17419:62:439;;;51868:21:641;51925:2;51905:18;;;51898:30;51964:34;51944:18;;;51937:62;-1:-1:-1;;;52015:18:641;;;52008:50;52075:19;;17419:62:439;51684:416:641;16961:535:439;-1:-1:-1;;;;;;17134:71:439;;-1:-1:-1;;;17134:71:439;17130:168;;17229:50;;-1:-1:-1;;;17229:50:439;;;;;;;:::i;2521:292:277:-;2703:12;2721:2;-1:-1:-1;;;;;2721:7:277;2737:5;2721:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;2766:7;2758:48;;;;-1:-1:-1;;;2758:48:277;;52926:2:641;2758:48:277;;;52908:21:641;52965:2;52945:18;;;52938:30;-1:-1:-1;;;52984:18:641;;;52977:58;53052:18;;2758:48:277;52724:352:641;2062:396:277;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;2269:183::-;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;17518:193:439:-;17637:16;;;17651:1;17637:16;;;;;;;;;17584;;17612:22;;17637:16;;;;;;;;;;;;-1:-1:-1;17637:16:439;17612:41;;17674:7;17663:5;17669:1;17663:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17699:5;17518:193;-1:-1:-1;;17518:193:439:o;15945:747::-;16152:15;:2;-1:-1:-1;;;;;16152:13:439;;:15::i;:::-;16148:538;;;16187:83;;-1:-1:-1;;;16187:83:439;;-1:-1:-1;;;;;16187:49:439;;;;;:83;;16237:8;;16247:4;;16253:2;;16257:6;;16265:4;;16187:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16187:83:439;;;;;;;;-1:-1:-1;;16187:83:439;;;;;;;;;;;;:::i;:::-;;;16183:493;;;;:::i;:::-;-1:-1:-1;;;;;;16319:66:439;;-1:-1:-1;;;16319:66:439;16315:163;;16409:50;;-1:-1:-1;;;16409:50:439;;;;;;;:::i;729:205:321:-;841:86;861:5;891:23;;;916:2;920:5;868:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;940:241::-;1105:68;;-1:-1:-1;;;;;53905:15:641;;;1105:68:321;;;53887:34:641;53957:15;;53937:18;;;53930:43;53989:18;;;53982:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;53822:18:641;;1105:68:321;53647:375:641;3235:706:321;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;54229:2:641;3839:85:321;;;54211:21:641;54268:2;54248:18;;;54241:30;54307:34;54287:18;;;54280:62;-1:-1:-1;;;54358:18:641;;;54351:40;54408:19;;3839:85:321;54027:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3960;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;55047:2:641;5194:60:281;;;55029:21:641;55086:2;55066:18;;;55059:30;55125:31;55105:18;;;55098:59;55174:18;;5194:60:281;54845:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:641;-1:-1:-1;;;;;89:31:641;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:641:o;791:131::-;-1:-1:-1;;;;;;865:32:641;;855:43;;845:71;;912:1;909;902:12;927:245;985:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:52;;;1054:1;1051;1044:12;1006:52;1093:9;1080:23;1112:30;1136:5;1112:30;:::i;1465:258::-;1537:1;1547:113;1561:6;1558:1;1555:13;1547:113;;;1637:11;;;1631:18;1618:11;;;1611:39;1583:2;1576:10;1547:113;;;1678:6;1675:1;1672:13;1669:48;;;-1:-1:-1;;1713:1:641;1695:16;;1688:27;1465:258::o;1728:::-;1770:3;1808:5;1802:12;1835:6;1830:3;1823:19;1851:63;1907:6;1900:4;1895:3;1891:14;1884:4;1877:5;1873:16;1851:63;:::i;:::-;1968:2;1947:15;-1:-1:-1;;1943:29:641;1934:39;;;;1975:4;1930:50;;1728:258;-1:-1:-1;;1728:258:641:o;1991:220::-;2140:2;2129:9;2122:21;2103:4;2160:45;2201:2;2190:9;2186:18;2178:6;2160:45;:::i;2216:203::-;-1:-1:-1;;;;;2380:32:641;;;;2362:51;;2350:2;2335:18;;2216:203::o;2424:180::-;2483:6;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;-1:-1:-1;2575:23:641;;2424:180;-1:-1:-1;2424:180:641:o;2609:247::-;2668:6;2721:2;2709:9;2700:7;2696:23;2692:32;2689:52;;;2737:1;2734;2727:12;2689:52;2776:9;2763:23;2795:31;2820:5;2795:31;:::i;2861:390::-;2947:8;2957:6;3011:3;3004:4;2996:6;2992:17;2988:27;2978:55;;3029:1;3026;3019:12;2978:55;-1:-1:-1;3052:20:641;;-1:-1:-1;;;;;3084:30:641;;3081:50;;;3127:1;3124;3117:12;3081:50;3164:4;3156:6;3152:17;3140:29;;3224:3;3217:4;3207:6;3204:1;3200:14;3192:6;3188:27;3184:38;3181:47;3178:67;;;3241:1;3238;3231:12;3178:67;2861:390;;;;;:::o;3256:118::-;3342:5;3335:13;3328:21;3321:5;3318:32;3308:60;;3364:1;3361;3354:12;3379:692;3515:6;3523;3531;3539;3592:2;3580:9;3571:7;3567:23;3563:32;3560:52;;;3608:1;3605;3598:12;3560:52;3644:9;3631:23;3621:33;;3705:2;3694:9;3690:18;3677:32;-1:-1:-1;;;;;3724:6:641;3721:30;3718:50;;;3764:1;3761;3754:12;3718:50;3803:93;3888:7;3879:6;3868:9;3864:22;3803:93;:::i;:::-;3915:8;;-1:-1:-1;3777:119:641;-1:-1:-1;;4000:2:641;3985:18;;3972:32;4013:28;3972:32;4013:28;:::i;:::-;3379:692;;;;-1:-1:-1;3379:692:641;;-1:-1:-1;;3379:692:641:o;4443:315::-;4511:6;4519;4572:2;4560:9;4551:7;4547:23;4543:32;4540:52;;;4588:1;4585;4578:12;4540:52;4624:9;4611:23;4601:33;;4684:2;4673:9;4669:18;4656:32;4697:31;4722:5;4697:31;:::i;:::-;4747:5;4737:15;;;4443:315;;;;;:::o;4763:248::-;4831:6;4839;4892:2;4880:9;4871:7;4867:23;4863:32;4860:52;;;4908:1;4905;4898:12;4860:52;-1:-1:-1;;4931:23:641;;;5001:2;4986:18;;;4973:32;;-1:-1:-1;4763:248:641:o;5016:274::-;-1:-1:-1;;;;;5208:32:641;;;;5190:51;;5272:2;5257:18;;5250:34;5178:2;5163:18;;5016:274::o;5295:127::-;5356:10;5351:3;5347:20;5344:1;5337:31;5387:4;5384:1;5377:15;5411:4;5408:1;5401:15;5427:249;5537:2;5518:13;;-1:-1:-1;;5514:27:641;5502:40;;-1:-1:-1;;;;;5557:34:641;;5593:22;;;5554:62;5551:88;;;5619:18;;:::i;:::-;5655:2;5648:22;-1:-1:-1;;5427:249:641:o;5681:183::-;5741:4;-1:-1:-1;;;;;5766:6:641;5763:30;5760:56;;;5796:18;;:::i;:::-;-1:-1:-1;5841:1:641;5837:14;5853:4;5833:25;;5681:183::o;5869:724::-;5923:5;5976:3;5969:4;5961:6;5957:17;5953:27;5943:55;;5994:1;5991;5984:12;5943:55;6030:6;6017:20;6056:4;6079:43;6119:2;6079:43;:::i;:::-;6151:2;6145:9;6163:31;6191:2;6183:6;6163:31;:::i;:::-;6229:18;;;6321:1;6317:10;;;;6305:23;;6301:32;;;6263:15;;;;-1:-1:-1;6345:15:641;;;6342:35;;;6373:1;6370;6363:12;6342:35;6409:2;6401:6;6397:15;6421:142;6437:6;6432:3;6429:15;6421:142;;;6503:17;;6491:30;;6541:12;;;;6454;;6421:142;;;-1:-1:-1;6581:6:641;5869:724;-1:-1:-1;;;;;;5869:724:641:o;6598:555::-;6640:5;6693:3;6686:4;6678:6;6674:17;6670:27;6660:55;;6711:1;6708;6701:12;6660:55;6747:6;6734:20;-1:-1:-1;;;;;6769:2:641;6766:26;6763:52;;;6795:18;;:::i;:::-;6844:2;6838:9;6856:67;6911:2;6892:13;;-1:-1:-1;;6888:27:641;6917:4;6884:38;6838:9;6856:67;:::i;:::-;6947:2;6939:6;6932:18;6993:3;6986:4;6981:2;6973:6;6969:15;6965:26;6962:35;6959:55;;;7010:1;7007;7000:12;6959:55;7074:2;7067:4;7059:6;7055:17;7048:4;7040:6;7036:17;7023:54;7121:1;7097:15;;;7114:4;7093:26;7086:37;;;;7101:6;6598:555;-1:-1:-1;;;6598:555:641:o;7158:1071::-;7312:6;7320;7328;7336;7344;7397:3;7385:9;7376:7;7372:23;7368:33;7365:53;;;7414:1;7411;7404:12;7365:53;7453:9;7440:23;7472:31;7497:5;7472:31;:::i;:::-;7522:5;-1:-1:-1;7579:2:641;7564:18;;7551:32;7592:33;7551:32;7592:33;:::i;:::-;7644:7;-1:-1:-1;7702:2:641;7687:18;;7674:32;-1:-1:-1;;;;;7755:14:641;;;7752:34;;;7782:1;7779;7772:12;7752:34;7805:61;7858:7;7849:6;7838:9;7834:22;7805:61;:::i;:::-;7795:71;;7919:2;7908:9;7904:18;7891:32;7875:48;;7948:2;7938:8;7935:16;7932:36;;;7964:1;7961;7954:12;7932:36;7987:63;8042:7;8031:8;8020:9;8016:24;7987:63;:::i;:::-;7977:73;;8103:3;8092:9;8088:19;8075:33;8059:49;;8133:2;8123:8;8120:16;8117:36;;;8149:1;8146;8139:12;8117:36;;8172:51;8215:7;8204:8;8193:9;8189:24;8172:51;:::i;:::-;8162:61;;;7158:1071;;;;;;;;:::o;8554:241::-;8610:6;8663:2;8651:9;8642:7;8638:23;8634:32;8631:52;;;8679:1;8676;8669:12;8631:52;8718:9;8705:23;8737:28;8759:5;8737:28;:::i;9090:799::-;9144:5;9197:3;9190:4;9182:6;9178:17;9174:27;9164:55;;9215:1;9212;9205:12;9164:55;9251:6;9238:20;9277:4;9300:43;9340:2;9300:43;:::i;:::-;9372:2;9366:9;9384:31;9412:2;9404:6;9384:31;:::i;:::-;9450:18;;;9542:1;9538:10;;;;9526:23;;9522:32;;;9484:15;;;;-1:-1:-1;9566:15:641;;;9563:35;;;9594:1;9591;9584:12;9563:35;9630:2;9622:6;9618:15;9642:217;9658:6;9653:3;9650:15;9642:217;;;9738:3;9725:17;9755:31;9780:5;9755:31;:::i;:::-;9799:18;;9837:12;;;;9675;;9642:217;;9894:595;10012:6;10020;10073:2;10061:9;10052:7;10048:23;10044:32;10041:52;;;10089:1;10086;10079:12;10041:52;10129:9;10116:23;-1:-1:-1;;;;;10199:2:641;10191:6;10188:14;10185:34;;;10215:1;10212;10205:12;10185:34;10238:61;10291:7;10282:6;10271:9;10267:22;10238:61;:::i;:::-;10228:71;;10352:2;10341:9;10337:18;10324:32;10308:48;;10381:2;10371:8;10368:16;10365:36;;;10397:1;10394;10387:12;10365:36;;10420:63;10475:7;10464:8;10453:9;10449:24;10420:63;:::i;:::-;10410:73;;;9894:595;;;;;:::o;10494:435::-;10547:3;10585:5;10579:12;10612:6;10607:3;10600:19;10638:4;10667:2;10662:3;10658:12;10651:19;;10704:2;10697:5;10693:14;10725:1;10735:169;10749:6;10746:1;10743:13;10735:169;;;10810:13;;10798:26;;10844:12;;;;10879:15;;;;10771:1;10764:9;10735:169;;;-1:-1:-1;10920:3:641;;10494:435;-1:-1:-1;;;;;10494:435:641:o;10934:261::-;11113:2;11102:9;11095:21;11076:4;11133:56;11185:2;11174:9;11170:18;11162:6;11133:56;:::i;11200:163::-;11267:5;11312:3;11303:6;11298:3;11294:16;11290:26;11287:46;;;11329:1;11326;11319:12;11368:1074;11525:6;11533;11541;11549;11557;11565;11573;11626:3;11614:9;11605:7;11601:23;11597:33;11594:53;;;11643:1;11640;11633:12;11594:53;11682:9;11669:23;11701:31;11726:5;11701:31;:::i;:::-;11751:5;-1:-1:-1;11803:2:641;11788:18;;11775:32;;-1:-1:-1;11854:2:641;11839:18;;11826:32;;-1:-1:-1;11910:2:641;11895:18;;11882:32;11923:33;11882:32;11923:33;:::i;:::-;11975:7;-1:-1:-1;12029:3:641;12014:19;;12001:33;;-1:-1:-1;12085:3:641;12070:19;;12057:33;-1:-1:-1;;;;;12139:14:641;;;12136:34;;;12166:1;12163;12156:12;12136:34;12189:74;12255:7;12246:6;12235:9;12231:22;12189:74;:::i;:::-;12179:84;;12316:3;12305:9;12301:19;12288:33;12272:49;;12346:2;12336:8;12333:16;12330:36;;;12362:1;12359;12352:12;12330:36;;12385:51;12428:7;12417:8;12406:9;12402:24;12385:51;:::i;:::-;12375:61;;;11368:1074;;;;;;;;;;:::o;12447:383::-;12524:6;12532;12540;12593:2;12581:9;12572:7;12568:23;12564:32;12561:52;;;12609:1;12606;12599:12;12561:52;12645:9;12632:23;12622:33;;12702:2;12691:9;12687:18;12674:32;12664:42;;12756:2;12745:9;12741:18;12728:32;12769:31;12794:5;12769:31;:::i;:::-;12819:5;12809:15;;;12447:383;;;;;:::o;12835:730::-;12962:6;12970;12978;13031:2;13019:9;13010:7;13006:23;13002:32;12999:52;;;13047:1;13044;13037:12;12999:52;13086:9;13073:23;13105:31;13130:5;13105:31;:::i;:::-;13155:5;-1:-1:-1;13211:2:641;13196:18;;13183:32;-1:-1:-1;;;;;13264:14:641;;;13261:34;;;13291:1;13288;13281:12;13261:34;13314:61;13367:7;13358:6;13347:9;13343:22;13314:61;:::i;:::-;13304:71;;13428:2;13417:9;13413:18;13400:32;13384:48;;13457:2;13447:8;13444:16;13441:36;;;13473:1;13470;13463:12;13441:36;;13496:63;13551:7;13540:8;13529:9;13525:24;13496:63;:::i;:::-;13486:73;;;12835:730;;;;;:::o;13823:321::-;13892:6;13945:2;13933:9;13924:7;13920:23;13916:32;13913:52;;;13961:1;13958;13951:12;13913:52;14001:9;13988:23;-1:-1:-1;;;;;14026:6:641;14023:30;14020:50;;;14066:1;14063;14056:12;14020:50;14089:49;14130:7;14121:6;14110:9;14106:22;14089:49;:::i;14149:383::-;14226:6;14234;14242;14295:2;14283:9;14274:7;14270:23;14266:32;14263:52;;;14311:1;14308;14301:12;14263:52;14347:9;14334:23;14324:33;;14407:2;14396:9;14392:18;14379:32;14420:31;14445:5;14420:31;:::i;:::-;14149:383;;14470:5;;-1:-1:-1;;;14522:2:641;14507:18;;;;14494:32;;14149:383::o;14726:382::-;14791:6;14799;14852:2;14840:9;14831:7;14827:23;14823:32;14820:52;;;14868:1;14865;14858:12;14820:52;14907:9;14894:23;14926:31;14951:5;14926:31;:::i;:::-;14976:5;-1:-1:-1;15033:2:641;15018:18;;15005:32;15046:30;15005:32;15046:30;:::i;15113:471::-;15210:6;15218;15271:2;15259:9;15250:7;15246:23;15242:32;15239:52;;;15287:1;15284;15277:12;15239:52;15327:9;15314:23;-1:-1:-1;;;;;15352:6:641;15349:30;15346:50;;;15392:1;15389;15382:12;15346:50;15431:93;15516:7;15507:6;15496:9;15492:22;15431:93;:::i;:::-;15543:8;;15405:119;;-1:-1:-1;15113:471:641;-1:-1:-1;;;;15113:471:641:o;15589:801::-;15749:4;15778:2;15818;15807:9;15803:18;15848:2;15837:9;15830:21;15871:6;15906;15900:13;15937:6;15929;15922:22;15975:2;15964:9;15960:18;15953:25;;16037:2;16027:6;16024:1;16020:14;16009:9;16005:30;16001:39;15987:53;;16075:2;16067:6;16063:15;16096:1;16106:255;16120:6;16117:1;16114:13;16106:255;;;16213:2;16209:7;16197:9;16189:6;16185:22;16181:36;16176:3;16169:49;16241:40;16274:6;16265;16259:13;16241:40;:::i;:::-;16231:50;-1:-1:-1;16339:12:641;;;;16304:15;;;;16142:1;16135:9;16106:255;;;-1:-1:-1;16378:6:641;;15589:801;-1:-1:-1;;;;;;;15589:801:641:o;16395:277::-;16475:6;16528:2;16516:9;16507:7;16503:23;16499:32;16496:52;;;16544:1;16541;16534:12;16496:52;16583:9;16570:23;16622:1;16615:5;16612:12;16602:40;;16638:1;16635;16628:12;16677:348;16729:8;16739:6;16793:3;16786:4;16778:6;16774:17;16770:27;16760:55;;16811:1;16808;16801:12;16760:55;-1:-1:-1;16834:20:641;;-1:-1:-1;;;;;16866:30:641;;16863:50;;;16909:1;16906;16899:12;16863:50;16946:4;16938:6;16934:17;16922:29;;16998:3;16991:4;16982:6;16974;16970:19;16966:30;16963:39;16960:59;;;17015:1;17012;17005:12;17030:788;17130:6;17138;17146;17154;17162;17215:2;17203:9;17194:7;17190:23;17186:32;17183:52;;;17231:1;17228;17221:12;17183:52;17267:9;17254:23;17244:33;;17328:2;17317:9;17313:18;17300:32;-1:-1:-1;;;;;17392:2:641;17384:6;17381:14;17378:34;;;17408:1;17405;17398:12;17378:34;17447:59;17498:7;17489:6;17478:9;17474:22;17447:59;:::i;:::-;17525:8;;-1:-1:-1;17421:85:641;-1:-1:-1;17613:2:641;17598:18;;17585:32;;-1:-1:-1;17629:16:641;;;17626:36;;;17658:1;17655;17648:12;17626:36;;17697:61;17750:7;17739:8;17728:9;17724:24;17697:61;:::i;:::-;17030:788;;;;-1:-1:-1;17030:788:641;;-1:-1:-1;17777:8:641;;17671:87;17030:788;-1:-1:-1;;;17030:788:641:o;17823:826::-;18018:2;18007:9;18000:21;18063:6;18057:13;18052:2;18041:9;18037:18;18030:41;18125:2;18117:6;18113:15;18107:22;18102:2;18091:9;18087:18;18080:50;18184:2;18176:6;18172:15;18166:22;18161:2;18150:9;18146:18;18139:50;18244:2;18236:6;18232:15;18226:22;18220:3;18209:9;18205:19;18198:51;18304:3;18296:6;18292:16;18286:23;18280:3;18269:9;18265:19;18258:52;18365:3;18357:6;18353:16;18347:23;18341:3;18330:9;18326:19;18319:52;18454:1;18450;18445:3;18441:11;18437:19;18430:3;18422:6;18418:16;18412:23;18408:49;18402:3;18391:9;18387:19;18380:78;17981:4;18505:3;18497:6;18493:16;18487:23;18529:6;18571:2;18566;18555:9;18551:18;18544:30;;18591:52;18638:3;18627:9;18623:19;18609:12;18591:52;:::i;18654:173::-;18722:20;;-1:-1:-1;;;;;18771:31:641;;18761:42;;18751:70;;18817:1;18814;18807:12;18832:1417;19027:6;19035;19043;19051;19059;19067;19075;19083;19091;19099;19152:3;19140:9;19131:7;19127:23;19123:33;19120:53;;;19169:1;19166;19159:12;19120:53;19192:29;19211:9;19192:29;:::i;:::-;19182:39;;19272:2;19261:9;19257:18;19244:32;-1:-1:-1;;;;;19336:2:641;19328:6;19325:14;19322:34;;;19352:1;19349;19342:12;19322:34;19375:49;19416:7;19407:6;19396:9;19392:22;19375:49;:::i;:::-;19365:59;;19477:2;19466:9;19462:18;19449:32;19433:48;;19506:2;19496:8;19493:16;19490:36;;;19522:1;19519;19512:12;19490:36;19545:51;19588:7;19577:8;19566:9;19562:24;19545:51;:::i;:::-;19535:61;;19649:2;19638:9;19634:18;19621:32;19605:48;;19678:2;19668:8;19665:16;19662:36;;;19694:1;19691;19684:12;19662:36;19717:51;19760:7;19749:8;19738:9;19734:24;19717:51;:::i;:::-;19707:61;;19821:3;19810:9;19806:19;19793:33;19777:49;;19851:2;19841:8;19838:16;19835:36;;;19867:1;19864;19857:12;19835:36;;19890:63;19945:7;19934:8;19923:9;19919:24;19890:63;:::i;:::-;19880:73;;;19972:39;20006:3;19995:9;19991:19;19972:39;:::i;:::-;19962:49;;20030:39;20064:3;20053:9;20049:19;20030:39;:::i;:::-;20020:49;;20088:39;20122:3;20111:9;20107:19;20088:39;:::i;:::-;20078:49;;20146:39;20180:3;20169:9;20165:19;20146:39;:::i;:::-;20136:49;;20204:39;20238:3;20227:9;20223:19;20204:39;:::i;:::-;20194:49;;18832:1417;;;;;;;;;;;;;:::o;20507:388::-;20575:6;20583;20636:2;20624:9;20615:7;20611:23;20607:32;20604:52;;;20652:1;20649;20642:12;20604:52;20691:9;20678:23;20710:31;20735:5;20710:31;:::i;:::-;20760:5;-1:-1:-1;20817:2:641;20802:18;;20789:32;20830:33;20789:32;20830:33;:::i;20900:923::-;21048:6;21056;21064;21072;21080;21088;21096;21149:3;21137:9;21128:7;21124:23;21120:33;21117:53;;;21166:1;21163;21156:12;21117:53;21202:9;21189:23;21179:33;;21262:2;21251:9;21247:18;21234:32;21275:31;21300:5;21275:31;:::i;:::-;21325:5;-1:-1:-1;21377:2:641;21362:18;;21349:32;;-1:-1:-1;21428:2:641;21413:18;;21400:32;;-1:-1:-1;21484:3:641;21469:19;;21456:33;21498;21456;21498;:::i;:::-;21550:7;-1:-1:-1;21604:3:641;21589:19;;21576:33;;-1:-1:-1;21660:3:641;21645:19;;21632:33;-1:-1:-1;;;;;21677:30:641;;21674:50;;;21720:1;21717;21710:12;21674:50;21743:74;21809:7;21800:6;21789:9;21785:22;21743:74;:::i;21828:734::-;21932:6;21940;21948;21956;21964;22017:3;22005:9;21996:7;21992:23;21988:33;21985:53;;;22034:1;22031;22024:12;21985:53;22073:9;22060:23;22092:31;22117:5;22092:31;:::i;:::-;22142:5;-1:-1:-1;22199:2:641;22184:18;;22171:32;22212:33;22171:32;22212:33;:::i;:::-;22264:7;-1:-1:-1;22318:2:641;22303:18;;22290:32;;-1:-1:-1;22369:2:641;22354:18;;22341:32;;-1:-1:-1;22424:3:641;22409:19;;22396:33;-1:-1:-1;;;;;22441:30:641;;22438:50;;;22484:1;22481;22474:12;22438:50;22507:49;22548:7;22539:6;22528:9;22524:22;22507:49;:::i;22567:127::-;22628:10;22623:3;22619:20;22616:1;22609:31;22659:4;22656:1;22649:15;22683:4;22680:1;22673:15;22699:349;22852:2;22837:18;;22885:1;22874:13;;22864:144;;22930:10;22925:3;22921:20;22918:1;22911:31;22965:4;22962:1;22955:15;22993:4;22990:1;22983:15;22864:144;23017:25;;;22699:349;:::o;23464:380::-;23543:1;23539:12;;;;23586;;;23607:61;;23661:4;23653:6;23649:17;23639:27;;23607:61;23714:2;23706:6;23703:14;23683:18;23680:38;23677:161;;;23760:10;23755:3;23751:20;23748:1;23741:31;23795:4;23792:1;23785:15;23823:4;23820:1;23813:15;23849:470;24028:3;24066:6;24060:13;24082:53;24128:6;24123:3;24116:4;24108:6;24104:17;24082:53;:::i;:::-;24198:13;;24157:16;;;;24220:57;24198:13;24157:16;24254:4;24242:17;;24220:57;:::i;:::-;24293:20;;23849:470;-1:-1:-1;;;;23849:470:641:o;24324:338::-;24526:2;24508:21;;;24565:2;24545:18;;;24538:30;-1:-1:-1;;;24599:2:641;24584:18;;24577:44;24653:2;24638:18;;24324:338::o;24667:127::-;24728:10;24723:3;24719:20;24716:1;24709:31;24759:4;24756:1;24749:15;24783:4;24780:1;24773:15;24799:128;24839:3;24870:1;24866:6;24863:1;24860:13;24857:39;;;24876:18;;:::i;:::-;-1:-1:-1;24912:9:641;;24799:128::o;24932:127::-;24993:10;24988:3;24984:20;24981:1;24974:31;25024:4;25021:1;25014:15;25048:4;25045:1;25038:15;25064:333;25165:4;25223:11;25210:25;25317:3;25313:8;25302;25286:14;25282:29;25278:44;25258:18;25254:69;25244:97;;25337:1;25334;25327:12;25244:97;25358:33;;;;;25064:333;-1:-1:-1;;25064:333:641:o;26079:516::-;26151:4;26157:6;26217:11;26204:25;26311:2;26307:7;26296:8;26280:14;26276:29;26272:43;26252:18;26248:68;26238:96;;26330:1;26327;26320:12;26238:96;26357:33;;26409:20;;;-1:-1:-1;;;;;;26441:30:641;;26438:50;;;26484:1;26481;26474:12;26438:50;26517:4;26505:17;;-1:-1:-1;26548:14:641;26544:27;;;26534:38;;26531:58;;;26585:1;26582;26575:12;26726:545;26828:2;26823:3;26820:11;26817:448;;;26864:1;26889:5;26885:2;26878:17;26934:4;26930:2;26920:19;27004:2;26992:10;26988:19;26985:1;26981:27;26975:4;26971:38;27040:4;27028:10;27025:20;27022:47;;;-1:-1:-1;27063:4:641;27022:47;27118:2;27113:3;27109:12;27106:1;27102:20;27096:4;27092:31;27082:41;;27173:82;27191:2;27184:5;27181:13;27173:82;;;27236:17;;;27217:1;27206:13;27173:82;;27447:1190;-1:-1:-1;;;;;27550:3:641;27547:27;27544:53;;;27577:18;;:::i;:::-;27606:94;27696:3;27656:38;27688:4;27682:11;27656:38;:::i;:::-;27650:4;27606:94;:::i;:::-;27726:1;27751:2;27746:3;27743:11;27768:1;27763:616;;;;28423:1;28440:3;28437:93;;;-1:-1:-1;28496:19:641;;;28483:33;28437:93;-1:-1:-1;;27404:1:641;27400:11;;;27396:24;27392:29;27382:40;27428:1;27424:11;;;27379:57;28543:78;;27736:895;;27763:616;26673:1;26666:14;;;26710:4;26697:18;;-1:-1:-1;;27799:17:641;;;27900:9;27922:229;27936:7;27933:1;27930:14;27922:229;;;28025:19;;;28012:33;27997:49;;28132:4;28117:20;;;;28085:1;28073:14;;;;27952:12;27922:229;;;27926:3;28179;28170:7;28167:16;28164:159;;;28303:1;28299:6;28293:3;28287;28284:1;28280:11;28276:21;28272:34;28268:39;28255:9;28250:3;28246:19;28233:33;28229:79;28221:6;28214:95;28164:159;;;28366:1;28360:3;28357:1;28353:11;28349:19;28343:4;28336:33;27736:895;;27447:1190;;;:::o;28642:950::-;28821:5;28808:19;28802:4;28795:33;28882:2;28875:5;28871:14;28858:28;28854:1;28848:4;28844:12;28837:50;28941:2;28934:5;28930:14;28917:28;28913:1;28907:4;28903:12;28896:50;29000:2;28993:5;28989:14;28976:28;28972:1;28966:4;28962:12;28955:50;29059:3;29052:5;29048:15;29035:29;29031:1;29025:4;29021:12;29014:51;29119:3;29112:5;29108:15;29095:29;29091:1;29085:4;29081:12;29074:51;29162:1;29156:4;29152:12;29212:3;29205:5;29201:15;29188:29;29226:33;29251:7;29226:33;:::i;:::-;29294:17;;-1:-1:-1;;;;;;29290:48:641;-1:-1:-1;;;;;29340:33:641;;;;29287:87;29268:107;;29418:60;29473:3;29462:15;;29466:5;29418:60;:::i;:::-;29487:99;29572:13;29559:11;29555:1;29549:4;29545:12;29487:99;:::i;29597:135::-;29636:3;-1:-1:-1;;29657:17:641;;29654:43;;;29677:18;;:::i;:::-;-1:-1:-1;29724:1:641;29713:13;;29597:135::o;29737:504::-;29796:5;29803:6;29863:3;29850:17;29949:2;29945:7;29934:8;29918:14;29914:29;29910:43;29890:18;29886:68;29876:96;;29968:1;29965;29958:12;29876:96;29996:33;;30100:4;30087:18;;;-1:-1:-1;30048:21:641;;-1:-1:-1;;;;;;30117:30:641;;30114:50;;;30160:1;30157;30150:12;30114:50;30210:6;30194:14;30190:27;30180:8;30176:42;30173:62;;;30231:1;30228;30221:12;30246:267;30335:6;30330:3;30323:19;30387:6;30380:5;30373:4;30368:3;30364:14;30351:43;-1:-1:-1;30439:1:641;30414:16;;;30432:4;30410:27;;;30403:38;;;;30495:2;30474:15;;;-1:-1:-1;;30470:29:641;30461:39;;;30457:50;;30246:267::o;30518:2051::-;30789:2;30841:21;;;30814:18;;;30897:22;;;30760:4;;30938:2;30956:18;;;31020:1;31016:14;;;31001:30;;30997:39;;31059:6;30760:4;;31114:1372;31130:6;31125:3;31122:15;31114:1372;;;31199:22;;;-1:-1:-1;;31195:36:641;31183:49;;31271:20;;31346:14;31342:27;;;-1:-1:-1;;31338:42:641;31314:67;;31304:95;;31395:1;31392;31385:12;31304:95;31425:31;;31513:19;;31498:35;;31556:4;31610:14;;;31597:28;31580:15;;;31573:53;31676:14;;;31663:28;31646:15;;;31639:53;31742:14;;;31729:28;31712:15;;;31705:53;31781:4;31835:14;;;31822:28;31805:15;;;31798:53;31874:4;31928:14;;;31915:28;31898:15;;;31891:53;31479:6;;31967:4;32012:14;;;31999:28;32040:33;31999:28;32040:33;:::i;:::-;-1:-1:-1;;;;;32110:33:641;32093:15;;;32086:58;32167:4;32218:54;32257:14;;;32261:5;32218:54;:::i;:::-;32184:88;;32309:2;32304;32296:6;32292:15;32285:27;32335:71;32402:2;32394:6;32390:15;32376:12;32362;32335:71;:::i;:::-;32464:12;;;;32325:81;-1:-1:-1;;;32429:15:641;;;;;-1:-1:-1;;31156:1:641;31147:11;31114:1372;;;-1:-1:-1;;;1247:13:641;;1240:21;32557:4;32542:20;;1228:34;32503:6;-1:-1:-1;32518:45:641;;-1:-1:-1;;;1177:91:641;32916:168;32956:7;33022:1;33018;33014:6;33010:14;33007:1;33004:21;32999:1;32992:9;32985:17;32981:45;32978:71;;;33029:18;;:::i;:::-;-1:-1:-1;33069:9:641;;32916:168::o;33089:127::-;33150:10;33145:3;33141:20;33138:1;33131:31;33181:4;33178:1;33171:15;33205:4;33202:1;33195:15;33221:120;33261:1;33287;33277:35;;33292:18;;:::i;:::-;-1:-1:-1;33326:9:641;;33221:120::o;33346:304::-;-1:-1:-1;;;;;33576:15:641;;;33558:34;;33628:15;;33623:2;33608:18;;33601:43;33508:2;33493:18;;33346:304::o;33655:245::-;33722:6;33775:2;33763:9;33754:7;33750:23;33746:32;33743:52;;;33791:1;33788;33781:12;33743:52;33823:9;33817:16;33842:28;33864:5;33842:28;:::i;35849:125::-;35889:4;35917:1;35914;35911:8;35908:34;;;35922:18;;:::i;:::-;-1:-1:-1;35959:9:641;;35849:125::o;35979:136::-;36018:3;36046:5;36036:39;;36055:18;;:::i;:::-;-1:-1:-1;;;36091:18:641;;35979:136::o;37730:506::-;37973:6;37962:9;37955:25;38016:2;38011;38000:9;37996:18;37989:30;37936:4;38042:62;38100:2;38089:9;38085:18;38077:6;38069;38042:62;:::i;:::-;38152:9;38144:6;38140:22;38135:2;38124:9;38120:18;38113:50;38180;38223:6;38215;38207;38180:50;:::i;:::-;38172:58;37730:506;-1:-1:-1;;;;;;;;37730:506:641:o;38855:545::-;38948:4;38954:6;39014:11;39001:25;39108:2;39104:7;39093:8;39077:14;39073:29;39069:43;39049:18;39045:68;39035:96;;39127:1;39124;39117:12;39035:96;39154:33;;39206:20;;;-1:-1:-1;;;;;;39238:30:641;;39235:50;;;39281:1;39278;39271:12;39235:50;39314:4;39302:17;;-1:-1:-1;39365:1:641;39361:14;;;39345;39341:35;39331:46;;39328:66;;;39390:1;39387;39380:12;41569:112;41601:1;41627;41617:35;;41632:18;;:::i;:::-;-1:-1:-1;41666:9:641;;41569:112::o;41686:339::-;41888:2;41870:21;;;41927:2;41907:18;;;41900:30;-1:-1:-1;;;41961:2:641;41946:18;;41939:45;42016:2;42001:18;;41686:339::o;42030:784::-;-1:-1:-1;;;42436:3:641;42429:36;42411:3;42494:6;42488:13;42510:62;42565:6;42560:2;42555:3;42551:12;42544:4;42536:6;42532:17;42510:62;:::i;:::-;-1:-1:-1;;;42631:2:641;42591:16;;;42623:11;;;42616:40;42681:13;;42703:63;42681:13;42752:2;42744:11;;42737:4;42725:17;;42703:63;:::i;:::-;42786:17;42805:2;42782:26;;42030:784;-1:-1:-1;;;;42030:784:641:o;42819:411::-;43021:2;43003:21;;;43060:2;43040:18;;;43033:30;43099:34;43094:2;43079:18;;43072:62;-1:-1:-1;;;43165:2:641;43150:18;;43143:45;43220:3;43205:19;;42819:411::o;43587:325::-;43789:2;43771:21;;;43828:1;43808:18;;;43801:29;-1:-1:-1;;;43861:2:641;43846:18;;43839:32;43903:2;43888:18;;43587:325::o;44321:404::-;44523:2;44505:21;;;44562:2;44542:18;;;44535:30;44601:34;44596:2;44581:18;;44574:62;-1:-1:-1;;;44667:2:641;44652:18;;44645:38;44715:3;44700:19;;44321:404::o;45135:465::-;45392:2;45381:9;45374:21;45355:4;45418:56;45470:2;45459:9;45455:18;45447:6;45418:56;:::i;:::-;45522:9;45514:6;45510:22;45505:2;45494:9;45490:18;45483:50;45550:44;45587:6;45579;45550:44;:::i;45605:383::-;45802:2;45791:9;45784:21;45765:4;45828:45;45869:2;45858:9;45854:18;45846:6;45828:45;:::i;:::-;45921:9;45913:6;45909:22;45904:2;45893:9;45889:18;45882:50;45949:33;45975:6;45967;45949:33;:::i;46400:274::-;46529:3;46567:6;46561:13;46583:53;46629:6;46624:3;46617:4;46609:6;46605:17;46583:53;:::i;46679:407::-;46881:2;46863:21;;;46920:2;46900:18;;;46893:30;46959:34;46954:2;46939:18;;46932:62;-1:-1:-1;;;47025:2:641;47010:18;;47003:41;47076:3;47061:19;;46679:407::o;47704:401::-;47906:2;47888:21;;;47945:2;47925:18;;;47918:30;47984:34;47979:2;47964:18;;47957:62;-1:-1:-1;;;48050:2:641;48035:18;;48028:35;48095:3;48080:19;;47704:401::o;48110:406::-;48312:2;48294:21;;;48351:2;48331:18;;;48324:30;48390:34;48385:2;48370:18;;48363:62;-1:-1:-1;;;48456:2:641;48441:18;;48434:40;48506:3;48491:19;;48110:406::o;49738:827::-;-1:-1:-1;;;;;50135:15:641;;;50117:34;;50187:15;;50182:2;50167:18;;50160:43;50097:3;50234:2;50219:18;;50212:31;;;50060:4;;50266:57;;50303:19;;50295:6;50266:57;:::i;:::-;50371:9;50363:6;50359:22;50354:2;50343:9;50339:18;50332:50;50405:44;50442:6;50434;50405:44;:::i;:::-;50391:58;;50498:9;50490:6;50486:22;50480:3;50469:9;50465:19;50458:51;50526:33;50552:6;50544;50526:33;:::i;50570:249::-;50639:6;50692:2;50680:9;50671:7;50667:23;50663:32;50660:52;;;50708:1;50705;50698:12;50660:52;50740:9;50734:16;50759:30;50783:5;50759:30;:::i;50824:179::-;50859:3;50901:1;50883:16;50880:23;50877:120;;;50947:1;50944;50941;50926:23;-1:-1:-1;50984:1:641;50978:8;50973:3;50969:18;50824:179;:::o;51008:671::-;51047:3;51089:4;51071:16;51068:26;51065:39;;;51008:671;:::o;51065:39::-;51131:2;51125:9;-1:-1:-1;;51196:16:641;51192:25;;51189:1;51125:9;51168:50;51247:4;51241:11;51271:16;-1:-1:-1;;;;;51377:2:641;51370:4;51362:6;51358:17;51355:25;51350:2;51342:6;51339:14;51336:45;51333:58;;;51384:5;;;;;51008:671;:::o;51333:58::-;51421:6;51415:4;51411:17;51400:28;;51457:3;51451:10;51484:2;51476:6;51473:14;51470:27;;;51490:5;;;;;;51008:671;:::o;51470:27::-;51574:2;51555:16;51549:4;51545:27;51541:36;51534:4;51525:6;51520:3;51516:16;51512:27;51509:69;51506:82;;;51581:5;;;;;;51008:671;:::o;51506:82::-;51597:57;51648:4;51639:6;51631;51627:19;51623:30;51617:4;51597:57;:::i;:::-;-1:-1:-1;51670:3:641;;51008:671;-1:-1:-1;;;;;51008:671:641:o;52105:404::-;52307:2;52289:21;;;52346:2;52326:18;;;52319:30;52385:34;52380:2;52365:18;;52358:62;-1:-1:-1;;;52451:2:641;52436:18;;52429:38;52499:3;52484:19;;52105:404::o;53081:561::-;-1:-1:-1;;;;;53378:15:641;;;53360:34;;53430:15;;53425:2;53410:18;;53403:43;53477:2;53462:18;;53455:34;;;53520:2;53505:18;;53498:34;;;53340:3;53563;53548:19;;53541:32;;;53303:4;;53590:46;;53616:19;;53608:6;53590:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "57bc3d78",
    "claimCondition(uint256)": "e9703d25",
    "contractType()": "cb2ef6f7",
    "contractURI()": "e8a3d485",
    "contractVersion()": "a0a8e460",
    "getActiveClaimConditionId(uint256)": "5ab063e8",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getClaimConditionById(uint256,uint256)": "d45b28d7",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getFlatPlatformFeeInfo()": "e57553da",
    "getPlatformFeeInfo()": "d45573f6",
    "getPlatformFeeType()": "f28083c3",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "getSupplyClaimedByWallet(uint256,uint256,address)": "5811ddab",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": "e1591634",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "maxTotalSupply(uint256)": "24aaffaa",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "primarySaleRecipient()": "079fe40e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "saleRecipient(uint256)": "c7337d6b",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "183718d1",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setFlatPlatformFeeInfo(address,uint256)": "7e54523c",
    "setMaxTotalSupply(uint256,uint256)": "87198cf2",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setPlatformFeeInfo(address,uint256)": "1e7ac488",
    "setPlatformFeeType(uint8)": "b6f10c79",
    "setPrimarySaleRecipient(address)": "6f4f2837",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "setSaleRecipientForToken(uint256,address)": "29c49b9b",
    "subscribeToRegistry(address)": "57fd8455",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "ea1def9c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flatFee\",\"type\":\"uint256\"}],\"name\":\"FlatPlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"platformFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"}],\"name\":\"PlatformFeeTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleRecipient\",\"type\":\"address\"}],\"name\":\"SaleRecipientForTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlatPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeType\",\"outputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_trustedForwarders\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_platformFeeBps\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeeBps\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPlatformFee.PlatformFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"}],\"name\":\"setPlatformFeeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setSaleRecipientForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscription\",\"type\":\"address\"}],\"name\":\"subscribeToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxTotalSupplyUpdated(uint256,uint256)\":{\"details\":\"Emitted when the global max supply of a token is updated.\"},\"SaleRecipientForTokenUpdated(uint256,address)\":{\"details\":\"Emitted when the sale recipient for a particular tokenId is updated.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burnBatch(address,uint256[],uint256[])\":{\"details\":\"Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)\"},\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"getActiveClaimConditionId(uint256)\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getClaimConditionById(uint256,uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getFlatPlatformFeeInfo()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getPlatformFeeInfo()\":{\"details\":\"Returns the platform fee recipient and bps.\"},\"getPlatformFeeType()\":{\"details\":\"Returns the platform fee bps and recipient.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"getSupplyClaimedByWallet(uint256,uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\":{\"details\":\"Initiliazes the contract, like a constructor.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"details\":\"The tokenId of the next NFT that will be minted / lazy minted.\"},\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC1155-setApprovalForAll}\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setMaxTotalSupply(uint256,uint256)\":{\"details\":\"Lets a module admin set a max total supply for token.\"},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setPlatformFeeInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.\",\"params\":{\"_platformFeeBps\":\"Updated platformFeeBps.\",\"_platformFeeRecipient\":\"Address to be set as new platformFeeRecipient.\"}},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"setSaleRecipientForToken(uint256,address)\":{\"details\":\"Lets a contract admin set the recipient for all primary sales.\"},\"supportsInterface(bytes4)\":{\"details\":\"See ERC 165\"},\"uri(uint256)\":{\"details\":\"Returns the uri for a given tokenId.\"},\"verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"MAX_BPS\":{\"details\":\"Max bps in the thirdweb system.\"},\"maxTotalSupply\":{\"details\":\"Mapping from token ID => maximum possible total circulating supply of tokens with that ID.\"},\"minterRole\":{\"details\":\"Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens.\"},\"saleRecipient\":{\"details\":\"Mapping from token ID => the address of the recipient of primary sales.\"},\"totalSupply\":{\"details\":\"Mapping from token ID => total circulating supply of tokens with that ID.\"},\"transferRole\":{\"details\":\"Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed.\"}},\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setFlatPlatformFeeInfo(address,uint256)\":{\"notice\":\"Lets a module admin set a flat fee on primary sales.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setPlatformFeeInfo(address,uint256)\":{\"notice\":\"Updates the platform fee recipient and bps.\"},\"setPlatformFeeType(uint8)\":{\"notice\":\"Lets a module admin set platform fee type.\"},\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/drop/DropERC1155.sol\":\"DropERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/drop/DropERC1155.sol\":{\"keccak256\":\"0xb5508d612595de8648864814bd4ab8f0cc6e1464019a076d154fc2092f32bfa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21d8c3df48b34defcd7c8b8651404f031482c84d4a760b752e61ce66ae44887d\",\"dweb:/ipfs/QmRHx9Kec9iapshjaqFmWi3RJzDysoGMgJhBHnHHppjyr4\"]},\"contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49\",\"dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U\"]},\"contracts/extension/Drop1155.sol\":{\"keccak256\":\"0xe45caeb13c768eaf73d223f677862aa732d1bfef1233af4531298ccdfda4a36f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca83844fbfee7bbb0d2ca8e86981448200bd78de3e2d95ee7b1313b54998ecf3\",\"dweb:/ipfs/QmUvbwXwyVuJRpvLa88oEH3ZbVL3qagXrNamouhmifZrPg\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"contracts/extension/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b\",\"dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8\",\"dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb\",\"dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk\"]},\"contracts/extension/PlatformFee.sol\":{\"keccak256\":\"0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80\",\"dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq\"]},\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7\",\"dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N\"]},\"contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IDrop1155.sol\":{\"keccak256\":\"0xee20b25b4c52a1b931f8258758d1b8b5e44c4b7c365b6d5ebcb3d7ef2714c703\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6234aa8e83511c56f93d2f30a61625e065c27a87df2c4fc041ca721490187a89\",\"dweb:/ipfs/QmVWJTVM7Na3ZZRTkWuG52k7PaeVpf5zoke1e3ogB4YUir\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"contracts/extension/interface/IPlatformFee.sol\":{\"keccak256\":\"0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34\",\"dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869\",\"dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF\"]},\"contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf\",\"dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8\",\"dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol\":{\"keccak256\":\"0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c\",\"dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xe9208ac0602174f0ed30fb10c6292193308424dfa375a8270027d65878d4a812\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55486f8de97b0ab0ea1310f5f671dc1fecd72b7660d07ba0f5254a6df06cdc39\",\"dweb:/ipfs/QmRAP85D5Vr8M68NDGNUuo84rLwMVmrUEE8cr9i8FZtJwx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d\",\"dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "claimConditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "resetEligibility",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimConditionsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flatFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlatPlatformFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "maxTotalSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTotalSupplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "platformFeeRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "platformFeeBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeInfoUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "feeType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PlatformFeeTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PrimarySaleRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "saleRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SaleRecipientForTokenUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "claimConditionIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimCondition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentStartId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveClaimConditionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimConditionById",
          "outputs": [
            {
              "internalType": "struct IClaimCondition.ClaimCondition",
              "name": "condition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlatPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPlatformFeeType",
          "outputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyClaimedByWallet",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supplyClaimedByWallet",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contractURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_trustedForwarders",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_platformFeeBps",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "primarySaleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saleRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "struct IClaimCondition.ClaimCondition[]",
              "name": "_conditions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxClaimableSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "metadata",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "_resetClaimEligibility",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimConditions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_flatFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlatPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTotalSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxTotalSupply"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_platformFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_platformFeeBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeInfo"
        },
        {
          "inputs": [
            {
              "internalType": "enum IPlatformFee.PlatformFeeType",
              "name": "_feeType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPlatformFeeType"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrimarySaleRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_saleRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSaleRecipientForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_subscription",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribeToRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_conditionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerToken",
              "type": "uint256"
            },
            {
              "internalType": "struct IDrop1155.AllowlistProof",
              "name": "_allowlistProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityLimitPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pricePerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOverride",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "details": "Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
          },
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
            "details": "Lets an account claim tokens."
          },
          "getActiveClaimConditionId(uint256)": {
            "details": "At any given moment, returns the uid for the active claim condition."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getClaimConditionById(uint256,uint256)": {
            "details": "Returns the claim condition at the given uid."
          },
          "getFlatPlatformFeeInfo()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getPlatformFeeInfo()": {
            "details": "Returns the platform fee recipient and bps."
          },
          "getPlatformFeeType()": {
            "details": "Returns the platform fee bps and recipient."
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "getSupplyClaimedByWallet(uint256,uint256,address)": {
            "details": "Returns the supply claimed by claimer for a given conditionId."
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)": {
            "details": "Initiliazes the contract, like a constructor."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "details": "The tokenId of the next NFT that will be minted / lazy minted."
          },
          "primarySaleRecipient()": {
            "details": "Returns primary sale recipient address."
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC1155-setApprovalForAll}"
          },
          "setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
            "details": "Lets a contract admin set claim conditions."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setMaxTotalSupply(uint256,uint256)": {
            "details": "Lets a module admin set a max total supply for token."
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setPlatformFeeInfo(address,uint256)": {
            "details": "Caller should be authorized to set platform fee info.                  See {_canSetPlatformFeeInfo}.                  Emits {PlatformFeeInfoUpdated Event}; See {_setupPlatformFeeInfo}.",
            "params": {
              "_platformFeeBps": "Updated platformFeeBps.",
              "_platformFeeRecipient": "Address to be set as new platformFeeRecipient."
            }
          },
          "setPrimarySaleRecipient(address)": {
            "details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
            "params": {
              "_saleRecipient": "Address to be set as new recipient of primary sales."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "setSaleRecipientForToken(uint256,address)": {
            "details": "Lets a contract admin set the recipient for all primary sales."
          },
          "supportsInterface(bytes4)": {
            "details": "See ERC 165"
          },
          "uri(uint256)": {
            "details": "Returns the uri for a given tokenId."
          },
          "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
            "details": "Checks a request to claim NFTs against the active claim condition's criteria."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setFlatPlatformFeeInfo(address,uint256)": {
            "notice": "Lets a module admin set a flat fee on primary sales."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setPlatformFeeInfo(address,uint256)": {
            "notice": "Updates the platform fee recipient and bps."
          },
          "setPlatformFeeType(uint8)": {
            "notice": "Lets a module admin set platform fee type."
          },
          "setPrimarySaleRecipient(address)": {
            "notice": "Updates primary sale recipient."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/drop/DropERC1155.sol": "DropERC1155"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/drop/DropERC1155.sol": {
        "keccak256": "0xb5508d612595de8648864814bd4ab8f0cc6e1464019a076d154fc2092f32bfa4",
        "urls": [
          "bzz-raw://21d8c3df48b34defcd7c8b8651404f031482c84d4a760b752e61ce66ae44887d",
          "dweb:/ipfs/QmRHx9Kec9iapshjaqFmWi3RJzDysoGMgJhBHnHHppjyr4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/DefaultOperatorFiltererUpgradeable.sol": {
        "keccak256": "0xbc4433257d90e055dbc4ae1d1e7c08e9ffd37a8ef45a5b9b81b22ae8ca603f29",
        "urls": [
          "bzz-raw://791826c7fcdeccbdfcf5812363d2e239c116bc2f3eaf710820d36f76fb847e49",
          "dweb:/ipfs/QmeSyE4Z5ZAyo9t92YWd69pmAp1riyA35JDY4SmNuLVX9U"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Drop1155.sol": {
        "keccak256": "0xe45caeb13c768eaf73d223f677862aa732d1bfef1233af4531298ccdfda4a36f",
        "urls": [
          "bzz-raw://ca83844fbfee7bbb0d2ca8e86981448200bd78de3e2d95ee7b1313b54998ecf3",
          "dweb:/ipfs/QmUvbwXwyVuJRpvLa88oEH3ZbVL3qagXrNamouhmifZrPg"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/OperatorFiltererUpgradeable.sol": {
        "keccak256": "0xfad890de90b24aeba9ae86cf09ff09b08a6517bdc290b46703bd05b7298ec638",
        "urls": [
          "bzz-raw://9261a7c5d33b1b97a4a470f8d3df7033c2da163e9a5c990746c52ea3af6b763b",
          "dweb:/ipfs/QmXuHJSNnmidTy4HfdK3SeiHni2xLVe8KaR5CdtuhHXDub"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Permissions.sol": {
        "keccak256": "0xe7e18181f2d2c8bae4afc7ee69ce1d547e7aa583182e8e0853ca33c49a28c04d",
        "urls": [
          "bzz-raw://75d5f5a9356c290e398a5dd05914b59c3d09e6fedde2da80b6f1012aedf323f8",
          "dweb:/ipfs/QmNrrf8Uyq33XBsE2NqVTW6HVX3XixFTjCG8KGbGxdEE84"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PermissionsEnumerable.sol": {
        "keccak256": "0x434a6ffc16ddc437ffb37b8fbe4c9696385252f15a617c4606b8c5e10561caf3",
        "urls": [
          "bzz-raw://1a9d4dac4bf2ae3c3c086af1956dc25e8b149b0914125e660cc0648791c247cb",
          "dweb:/ipfs/QmTMEggPdBea1JCamsShwRf3en2FgVTXNTPJ2isFtBk4Kk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PlatformFee.sol": {
        "keccak256": "0x1549722107cf053d4a7fa35f6738b3cff237712a378c7341268512104dea9341",
        "urls": [
          "bzz-raw://6da70c4ae6b60e151a5cb20c7c29a464c9a47cb61a228d5b0c8e84c5eac78c80",
          "dweb:/ipfs/QmfHrcdPGkkE9yvYqvm4sHqiKaR1FwXwWCyYM5m9Mqu3zq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/PrimarySale.sol": {
        "keccak256": "0x9ef1ad82fadf988a07f4034b92ccdb3281682693e41759a79042814d36095f42",
        "urls": [
          "bzz-raw://0d962b48453e1f50b808193135c2f14265324fa8b75fe3b405ef7836e38921f7",
          "dweb:/ipfs/QmZDLNsZQj9kNcb15nBuWRpPwDdDvJS2gtFwqEs2Lwxb1N"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimCondition.sol": {
        "keccak256": "0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6",
        "urls": [
          "bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459",
          "dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IClaimConditionMultiPhase.sol": {
        "keccak256": "0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa",
        "urls": [
          "bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125",
          "dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IDrop1155.sol": {
        "keccak256": "0xee20b25b4c52a1b931f8258758d1b8b5e44c4b7c365b6d5ebcb3d7ef2714c703",
        "urls": [
          "bzz-raw://6234aa8e83511c56f93d2f30a61625e065c27a87df2c4fc041ca721490187a89",
          "dweb:/ipfs/QmVWJTVM7Na3ZZRTkWuG52k7PaeVpf5zoke1e3ogB4YUir"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPlatformFee.sol": {
        "keccak256": "0x8c23c2a223a3b94ccce125b418e5fabfb631695d927e336512bc8dca61bbc736",
        "urls": [
          "bzz-raw://86dd8c93e75cb3a44d64c873154ee3857b604d1b07a9e52c120870172c2e9a34",
          "dweb:/ipfs/QmWXxEi7ygoRjN8yWYfVGbfhuwVg8bkLoHNzr3xMNa1VRv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IPrimarySale.sol": {
        "keccak256": "0x77c89cb8d9b781b0a08b1fa81c95a0dd5c19200b2fb0dc884c1084b931624004",
        "urls": [
          "bzz-raw://a37b042af11a08ba5518dadf72c91745d1b5f42b1c20ea5282492bfd18f53869",
          "dweb:/ipfs/QmWEYYG5VqR8MRfr2rydDV98GLKmaJtCC8G1W7MzJ9qFnF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/MerkleProof.sol": {
        "keccak256": "0xfeb51ecaba6f9c1649a143825dc3b7ca0eb9edff7787c7a54957dfd542f7ece0",
        "urls": [
          "bzz-raw://8819ab0f7546a6a0dc126d5dbf019ba015563220689f661b1da4174f7ce87bbf",
          "dweb:/ipfs/QmT6Q9YQGMJbCWhE6G4ze8dsqjMyewnErTNGgLFSAHkFU7"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0xdbc96b1264d2e2bd82cb7e697056929325e09d1641321145a8cec53b22b9567d",
        "urls": [
          "bzz-raw://7ca7ccf947d21d98878ec18e941b750cd2ae7c563e6d2a707da4f806038d67c8",
          "dweb:/ipfs/QmYVLYUPMD3b95vKrS5yjxcz2MDNNzkWJY9xc9bc9oTZdh"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol": {
        "keccak256": "0xa8ff557539dcfed5706eddde2aa929e06bb1764e71aa8c1048a78970bf3ca37d",
        "urls": [
          "bzz-raw://6be9c619be5e1c7ecf1c3d13adc5fa81ae602ca3866b739b2f43443a77f5606c",
          "dweb:/ipfs/QmTSxboNCPMfhuvaCfZhEusxZ4BNxwzZoWFys8kzD29EcA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
        "keccak256": "0xe9208ac0602174f0ed30fb10c6292193308424dfa375a8270027d65878d4a812",
        "urls": [
          "bzz-raw://55486f8de97b0ab0ea1310f5f671dc1fecd72b7660d07ba0f5254a6df06cdc39",
          "dweb:/ipfs/QmRAP85D5Vr8M68NDGNUuo84rLwMVmrUEE8cr9i8FZtJwx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe",
        "urls": [
          "bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2",
          "dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
        "keccak256": "0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448",
        "urls": [
          "bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9",
          "dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0xb8709268fac307114f6cbb5e3cee798d91cd0adfea4d337c4920f8f0b2414f15",
        "urls": [
          "bzz-raw://34975544d7bea644eee9ad6e9034b7bbbc0b165159b77f60d0c6004300ab601d",
          "dweb:/ipfs/QmUW5vLADhvVqSdBe96QFM6gzwtv9pagpaUkzXmaeQTWPQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/drop/DropERC1155.sol",
    "id": 15010,
    "exportedSymbols": {
      "AddressUpgradeable": [
        157438
      ],
      "BatchMintMetadata": [
        34496
      ],
      "ContextUpgradeable": [
        157714
      ],
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "DefaultOperatorFiltererUpgradeable": [
        34803
      ],
      "Drop1155": [
        36305
      ],
      "DropERC1155": [
        15009
      ],
      "ERC1155Upgradeable": [
        153300
      ],
      "ERC165Upgradeable": [
        158919
      ],
      "ERC2771ContextUpgradeable": [
        75765
      ],
      "IClaimCondition": [
        49527
      ],
      "IClaimConditionMultiPhase": [
        49550
      ],
      "IContractMetadata": [
        49679
      ],
      "IDrop1155": [
        49887
      ],
      "IERC1155MetadataURIUpgradeable": [
        153638
      ],
      "IERC1155ReceiverUpgradeable": [
        153341
      ],
      "IERC1155Upgradeable": [
        153463
      ],
      "IERC165": [
        31146
      ],
      "IERC165Upgradeable": [
        158931
      ],
      "IERC20": [
        31216
      ],
      "IERC2981": [
        31290
      ],
      "IERC2981Upgradeable": [
        151718
      ],
      "ILazyMint": [
        50054
      ],
      "IOwnable": [
        50418
      ],
      "IPermissions": [
        50491
      ],
      "IPermissionsEnumerable": [
        50516
      ],
      "IPlatformFee": [
        50559
      ],
      "IPrimarySale": [
        50580
      ],
      "IRoyalty": [
        50644
      ],
      "IWETH": [
        55699
      ],
      "Initializable": [
        151869
      ],
      "LazyMint": [
        37538
      ],
      "MerkleProof": [
        64593
      ],
      "MulticallUpgradeable": [
        157897
      ],
      "OperatorFiltererUpgradeable": [
        38318
      ],
      "Ownable": [
        38400
      ],
      "Permissions": [
        38747
      ],
      "PermissionsEnumerable": [
        39046
      ],
      "PlatformFee": [
        39256
      ],
      "PrimarySale": [
        39318
      ],
      "Royalty": [
        39646
      ],
      "SafeERC20": [
        78527
      ],
      "StringsUpgradeable": [
        158123
      ],
      "TWAddress": [
        65067
      ],
      "TWStrings": [
        65767
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14803:37",
    "nodes": [
      {
        "id": 14090,
        "nodeType": "PragmaDirective",
        "src": "39:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 14091,
        "nodeType": "ImportDirective",
        "src": "775:82:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 153301,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14092,
        "nodeType": "ImportDirective",
        "src": "859:76:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 157898,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14093,
        "nodeType": "ImportDirective",
        "src": "936:74:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 158124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14094,
        "nodeType": "ImportDirective",
        "src": "1011:80:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC2981Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 151719,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14095,
        "nodeType": "ImportDirective",
        "src": "1141:70:37",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "file": "../openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 75766,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14096,
        "nodeType": "ImportDirective",
        "src": "1212:40:37",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 64494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14097,
        "nodeType": "ImportDirective",
        "src": "1294:43:37",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14098,
        "nodeType": "ImportDirective",
        "src": "1338:38:37",
        "nodes": [],
        "absolutePath": "contracts/extension/PlatformFee.sol",
        "file": "../extension/PlatformFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 39257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14099,
        "nodeType": "ImportDirective",
        "src": "1377:34:37",
        "nodes": [],
        "absolutePath": "contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 39647,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14100,
        "nodeType": "ImportDirective",
        "src": "1412:38:37",
        "nodes": [],
        "absolutePath": "contracts/extension/PrimarySale.sol",
        "file": "../extension/PrimarySale.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 39319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14101,
        "nodeType": "ImportDirective",
        "src": "1451:34:37",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14102,
        "nodeType": "ImportDirective",
        "src": "1486:35:37",
        "nodes": [],
        "absolutePath": "contracts/extension/LazyMint.sol",
        "file": "../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 37539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14103,
        "nodeType": "ImportDirective",
        "src": "1522:48:37",
        "nodes": [],
        "absolutePath": "contracts/extension/PermissionsEnumerable.sol",
        "file": "../extension/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 39047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14104,
        "nodeType": "ImportDirective",
        "src": "1571:35:37",
        "nodes": [],
        "absolutePath": "contracts/extension/Drop1155.sol",
        "file": "../extension/Drop1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 36306,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14105,
        "nodeType": "ImportDirective",
        "src": "1635:61:37",
        "nodes": [],
        "absolutePath": "contracts/extension/DefaultOperatorFiltererUpgradeable.sol",
        "file": "../extension/DefaultOperatorFiltererUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15010,
        "sourceUnit": 34804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15009,
        "nodeType": "ContractDefinition",
        "src": "1698:13143:37",
        "nodes": [
          {
            "id": 14134,
            "nodeType": "UsingForDirective",
            "src": "2004:37:37",
            "nodes": [],
            "libraryName": {
              "id": 14132,
              "name": "StringsUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158123,
              "src": "2010:18:37"
            },
            "typeName": {
              "id": 14133,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2033:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 14136,
            "nodeType": "VariableDeclaration",
            "src": "2249:18:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2263:4:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14135,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2249:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14138,
            "nodeType": "VariableDeclaration",
            "src": "2294:20:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "95d89b41",
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "2308:6:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14137,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2294:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14141,
            "nodeType": "VariableDeclaration",
            "src": "2424:28:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14139,
              "nodeType": "StructuredDocumentation",
              "src": "2321:98:37",
              "text": "@dev Only transfers to or from TRANSFER_ROLE holders are valid, when transfers are restricted."
            },
            "mutability": "mutable",
            "name": "transferRole",
            "nameLocation": "2440:12:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14140,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2424:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 14144,
            "nodeType": "VariableDeclaration",
            "src": "2549:26:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14142,
              "nodeType": "StructuredDocumentation",
              "src": "2458:86:37",
              "text": "@dev Only MINTER_ROLE holders can sign off on `MintRequest`s and lazy mint tokens."
            },
            "mutability": "mutable",
            "name": "minterRole",
            "nameLocation": "2565:10:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14143,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2549:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 14148,
            "nodeType": "VariableDeclaration",
            "src": "2627:41:37",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 14145,
              "nodeType": "StructuredDocumentation",
              "src": "2582:40:37",
              "text": "@dev Max bps in the thirdweb system."
            },
            "mutability": "constant",
            "name": "MAX_BPS",
            "nameLocation": "2652:7:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14146,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2627:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 14147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2662:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "private"
          },
          {
            "id": 14153,
            "nodeType": "VariableDeclaration",
            "src": "2943:46:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14149,
              "nodeType": "StructuredDocumentation",
              "src": "2856:82:37",
              "text": "@dev Mapping from token ID => total circulating supply of tokens with that ID."
            },
            "functionSelector": "bd85b039",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2978:11:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 14152,
              "keyType": {
                "id": 14150,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2951:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2943:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 14151,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2962:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 14158,
            "nodeType": "VariableDeclaration",
            "src": "3100:49:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14154,
              "nodeType": "StructuredDocumentation",
              "src": "2996:99:37",
              "text": "@dev Mapping from token ID => maximum possible total circulating supply of tokens with that ID."
            },
            "functionSelector": "24aaffaa",
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nameLocation": "3135:14:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 14157,
              "keyType": {
                "id": 14155,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3108:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3100:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 14156,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3119:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 14163,
            "nodeType": "VariableDeclaration",
            "src": "3241:48:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 14159,
              "nodeType": "StructuredDocumentation",
              "src": "3156:80:37",
              "text": "@dev Mapping from token ID => the address of the recipient of primary sales."
            },
            "functionSelector": "c7337d6b",
            "mutability": "mutable",
            "name": "saleRecipient",
            "nameLocation": "3276:13:37",
            "scope": 15009,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 14162,
              "keyType": {
                "id": 14160,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3249:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3241:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 14161,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3260:7:37",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 14170,
            "nodeType": "EventDefinition",
            "src": "3545:69:37",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 14164,
              "nodeType": "StructuredDocumentation",
              "src": "3474:66:37",
              "text": "@dev Emitted when the global max supply of a token is updated."
            },
            "name": "MaxTotalSupplyUpdated",
            "nameLocation": "3551:21:37",
            "parameters": {
              "id": 14169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3581:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14170,
                  "src": "3573:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTotalSupply",
                  "nameLocation": "3598:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14170,
                  "src": "3590:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3572:41:37"
            }
          },
          {
            "id": 14177,
            "nodeType": "EventDefinition",
            "src": "3702:83:37",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 14171,
              "nodeType": "StructuredDocumentation",
              "src": "3620:77:37",
              "text": "@dev Emitted when the sale recipient for a particular tokenId is updated."
            },
            "name": "SaleRecipientForTokenUpdated",
            "nameLocation": "3708:28:37",
            "parameters": {
              "id": 14176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3753:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14177,
                  "src": "3737:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "saleRecipient",
                  "nameLocation": "3770:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14177,
                  "src": "3762:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3736:48:37"
            }
          },
          {
            "id": 14183,
            "nodeType": "FunctionDefinition",
            "src": "3983:28:37",
            "nodes": [],
            "body": {
              "id": 14182,
              "nodeType": "Block",
              "src": "4009:2:37",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 14180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14179,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "3997:11:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3997:11:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 14178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3994:2:37"
            },
            "returnParameters": {
              "id": 14181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4009:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14299,
            "nodeType": "FunctionDefinition",
            "src": "4076:1391:37",
            "nodes": [],
            "body": {
              "id": 14298,
              "nodeType": "Block",
              "src": "4463:1004:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14211,
                      "mutability": "mutable",
                      "name": "_transferRole",
                      "nameLocation": "4481:13:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14298,
                      "src": "4473:21:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14210,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4473:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14215,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f524f4c45",
                        "id": 14213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4507:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        },
                        "value": "TRANSFER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c",
                          "typeString": "literal_string \"TRANSFER_ROLE\""
                        }
                      ],
                      "id": 14212,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4497:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4497:26:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4473:50:37"
                },
                {
                  "assignments": [
                    14217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14217,
                      "mutability": "mutable",
                      "name": "_minterRole",
                      "nameLocation": "4541:11:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14298,
                      "src": "4533:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14216,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4533:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14221,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 14219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4565:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 14218,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4555:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:24:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4533:46:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14223,
                        "name": "_trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14195,
                        "src": "4687:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 14222,
                      "name": "__ERC2771Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75672,
                      "src": "4665:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 14224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4665:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14225,
                  "nodeType": "ExpressionStatement",
                  "src": "4665:41:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 14227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4741:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 14226,
                      "name": "__ERC1155_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152117,
                      "src": "4716:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4716:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14229,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:28:37"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14230,
                      "name": "__DefaultOperatorFilterer_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34785,
                      "src": "4754:30:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 14231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14232,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14234,
                        "name": "_contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14192,
                        "src": "4860:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 14233,
                      "name": "_setupContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34716,
                      "src": "4842:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 14235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:31:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14236,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:31:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14238,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14186,
                        "src": "4895:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14237,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "4883:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4883:26:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14240,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:26:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 14242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4943:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14241,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37988,
                      "src": "4919:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 14243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4919:29:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14244,
                  "nodeType": "ExpressionStatement",
                  "src": "4919:29:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14246,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "4970:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14247,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14186,
                        "src": "4990:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14245,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "4959:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 14248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4959:45:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14249,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:45:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14251,
                        "name": "_minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14217,
                        "src": "5025:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14252,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14186,
                        "src": "5038:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14250,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "5014:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 14253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5014:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14254,
                  "nodeType": "ExpressionStatement",
                  "src": "5014:38:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14256,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14211,
                        "src": "5073:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14257,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14186,
                        "src": "5088:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14255,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "5062:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 14258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14259,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:40:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14261,
                        "name": "_transferRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14211,
                        "src": "5123:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5146:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5138:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5138:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5138:10:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14260,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38970
                      ],
                      "referencedDeclaration": 38970,
                      "src": "5112:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 14266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14267,
                  "nodeType": "ExpressionStatement",
                  "src": "5112:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14269,
                        "name": "_platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14205,
                        "src": "5182:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14270,
                        "name": "_platformFeeBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14203,
                        "src": "5205:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 14268,
                      "name": "_setupPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39163,
                      "src": "5160:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5160:61:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14272,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:61:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14274,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14199,
                        "src": "5256:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14275,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14201,
                        "src": "5275:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 14273,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39577,
                      "src": "5231:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5231:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14277,
                  "nodeType": "ExpressionStatement",
                  "src": "5231:56:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14279,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14197,
                        "src": "5324:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14278,
                      "name": "_setupPrimarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39311,
                      "src": "5297:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5297:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14281,
                  "nodeType": "ExpressionStatement",
                  "src": "5297:42:37"
                },
                {
                  "expression": {
                    "id": 14284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14282,
                      "name": "transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14141,
                      "src": "5350:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14283,
                      "name": "_transferRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14211,
                      "src": "5365:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5350:28:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14285,
                  "nodeType": "ExpressionStatement",
                  "src": "5350:28:37"
                },
                {
                  "expression": {
                    "id": 14288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14286,
                      "name": "minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14144,
                      "src": "5388:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14287,
                      "name": "_minterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14217,
                      "src": "5401:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5388:24:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14289,
                  "nodeType": "ExpressionStatement",
                  "src": "5388:24:37"
                },
                {
                  "expression": {
                    "id": 14292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14290,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14136,
                      "src": "5422:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14291,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14188,
                      "src": "5429:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5422:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14293,
                  "nodeType": "ExpressionStatement",
                  "src": "5422:12:37"
                },
                {
                  "expression": {
                    "id": 14296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14294,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14138,
                      "src": "5444:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14295,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14190,
                      "src": "5453:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5444:16:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14297,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:16:37"
                }
              ]
            },
            "documentation": {
              "id": 14184,
              "nodeType": "StructuredDocumentation",
              "src": "4017:54:37",
              "text": "@dev Initiliazes the contract, like a constructor."
            },
            "functionSelector": "e1591634",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14208,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14207,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151789,
                  "src": "4451:11:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "4451:11:37"
              }
            ],
            "name": "initialize",
            "nameLocation": "4085:10:37",
            "parameters": {
              "id": 14206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14186,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "4113:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4105:21:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14188,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4150:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4136:19:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14190,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "4179:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4165:21:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4165:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14192,
                  "mutability": "mutable",
                  "name": "_contractURI",
                  "nameLocation": "4210:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4196:26:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4196:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14195,
                  "mutability": "mutable",
                  "name": "_trustedForwarders",
                  "nameLocation": "4249:18:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4232:35:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14193,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4232:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 14194,
                    "nodeType": "ArrayTypeName",
                    "src": "4232:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14197,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "4285:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4277:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4277:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14199,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "4317:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4309:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14201,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "4352:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4344:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 14200,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14203,
                  "mutability": "mutable",
                  "name": "_platformFeeBps",
                  "nameLocation": "4381:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4373:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 14202,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14205,
                  "mutability": "mutable",
                  "name": "_platformFeeRecipient",
                  "nameLocation": "4414:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14299,
                  "src": "4406:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4406:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4095:346:37"
            },
            "returnParameters": {
              "id": 14209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4463:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14326,
            "nodeType": "FunctionDefinition",
            "src": "5715:211:37",
            "nodes": [],
            "body": {
              "id": 14325,
              "nodeType": "Block",
              "src": "5791:135:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14309,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "5815:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14325,
                      "src": "5801:22:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 14308,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5801:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14313,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14311,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14302,
                        "src": "5838:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14310,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34443,
                      "src": "5826:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 14312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5826:21:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5801:46:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14318,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14309,
                            "src": "5888:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14319,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14302,
                                "src": "5898:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 14320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 157985,
                              "src": "5898:17:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 14321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5898:19:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 14316,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5871:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5871:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 14322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5871:47:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5864:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 14314,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5864:6:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:55:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 14307,
                  "id": 14324,
                  "nodeType": "Return",
                  "src": "5857:62:37"
                }
              ]
            },
            "baseFunctions": [
              152160
            ],
            "documentation": {
              "id": 14300,
              "nodeType": "StructuredDocumentation",
              "src": "5665:45:37",
              "text": "@dev Returns the uri for a given tokenId."
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "5724:3:37",
            "overrides": {
              "id": 14304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5758:8:37"
            },
            "parameters": {
              "id": 14303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14302,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5736:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14326,
                  "src": "5728:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5727:18:37"
            },
            "returnParameters": {
              "id": 14307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14326,
                  "src": "5776:13:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14305,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5776:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:15:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14350,
            "nodeType": "FunctionDefinition",
            "src": "5957:280:37",
            "nodes": [],
            "body": {
              "id": 14349,
              "nodeType": "Block",
              "src": "6121:116:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 14339,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14329,
                          "src": "6162:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 14337,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "6138:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DropERC1155_$15009_$",
                            "typeString": "type(contract super DropERC1155)"
                          }
                        },
                        "id": 14338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 152148,
                        "src": "6138:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 14340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6138:36:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 14346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14342,
                              "name": "IERC2981Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151718,
                              "src": "6183:19:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981Upgradeable_$151718_$",
                                "typeString": "type(contract IERC2981Upgradeable)"
                              }
                            ],
                            "id": 14341,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6178:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 14343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6178:25:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981Upgradeable_$151718",
                            "typeString": "type(contract IERC2981Upgradeable)"
                          }
                        },
                        "id": 14344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6178:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 14345,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14329,
                        "src": "6219:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6178:52:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6138:92:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14336,
                  "id": 14348,
                  "nodeType": "Return",
                  "src": "6131:99:37"
                }
              ]
            },
            "baseFunctions": [
              31145,
              152148
            ],
            "documentation": {
              "id": 14327,
              "nodeType": "StructuredDocumentation",
              "src": "5932:20:37",
              "text": "@dev See ERC 165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5966:17:37",
            "overrides": {
              "id": 14333,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14331,
                  "name": "ERC1155Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153300,
                  "src": "6065:18:37"
                },
                {
                  "id": 14332,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31146,
                  "src": "6085:7:37"
                }
              ],
              "src": "6056:37:37"
            },
            "parameters": {
              "id": 14330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14329,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "5991:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14350,
                  "src": "5984:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 14328,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5984:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5983:20:37"
            },
            "returnParameters": {
              "id": 14336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14350,
                  "src": "6111:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14334,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6110:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14361,
            "nodeType": "FunctionDefinition",
            "src": "6428:102:37",
            "nodes": [],
            "body": {
              "id": 14360,
              "nodeType": "Block",
              "src": "6484:46:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44726f7045524331313535",
                        "id": 14357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6509:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        },
                        "value": "DropERC1155"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2a5229d422ec906ca19d4f5dfbabd8ec39bc13d8fe7bcd55b85fa08a6a60ec27",
                          "typeString": "literal_string \"DropERC1155\""
                        }
                      ],
                      "id": 14356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6501:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 14355,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6501:7:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6501:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 14354,
                  "id": 14359,
                  "nodeType": "Return",
                  "src": "6494:29:37"
                }
              ]
            },
            "functionSelector": "cb2ef6f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nameLocation": "6437:12:37",
            "parameters": {
              "id": 14351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6449:2:37"
            },
            "returnParameters": {
              "id": 14354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14361,
                  "src": "6475:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14352,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6474:9:37"
            },
            "scope": 15009,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14372,
            "nodeType": "FunctionDefinition",
            "src": "6536:89:37",
            "nodes": [],
            "body": {
              "id": 14371,
              "nodeType": "Block",
              "src": "6593:32:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 14368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6616:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 14367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6610:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 14366,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6610:5:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:8:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 14365,
                  "id": 14370,
                  "nodeType": "Return",
                  "src": "6603:15:37"
                }
              ]
            },
            "functionSelector": "a0a8e460",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractVersion",
            "nameLocation": "6545:15:37",
            "parameters": {
              "id": 14362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6560:2:37"
            },
            "returnParameters": {
              "id": 14365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14372,
                  "src": "6586:5:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14363,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:7:37"
            },
            "scope": 15009,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14395,
            "nodeType": "FunctionDefinition",
            "src": "6879:230:37",
            "nodes": [],
            "body": {
              "id": 14394,
              "nodeType": "Block",
              "src": "6987:122:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14383,
                        "name": "maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14158,
                        "src": "6997:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 14385,
                      "indexExpression": {
                        "id": 14384,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14375,
                        "src": "7012:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6997:24:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14386,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14377,
                      "src": "7024:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6997:42:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14388,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:42:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14390,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14375,
                        "src": "7076:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14391,
                        "name": "_maxTotalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14377,
                        "src": "7086:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14389,
                      "name": "MaxTotalSupplyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14170,
                      "src": "7054:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 14392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7054:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14393,
                  "nodeType": "EmitStatement",
                  "src": "7049:53:37"
                }
              ]
            },
            "documentation": {
              "id": 14373,
              "nodeType": "StructuredDocumentation",
              "src": "6812:62:37",
              "text": "@dev Lets a module admin set a max total supply for token."
            },
            "functionSelector": "87198cf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14380,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38423,
                    "src": "6967:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 14381,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14379,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38436,
                  "src": "6958:8:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6958:28:37"
              }
            ],
            "name": "setMaxTotalSupply",
            "nameLocation": "6888:17:37",
            "parameters": {
              "id": 14378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14375,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6914:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14395,
                  "src": "6906:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6906:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14377,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nameLocation": "6932:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14395,
                  "src": "6924:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6924:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6905:43:37"
            },
            "returnParameters": {
              "id": 14382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6987:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14418,
            "nodeType": "FunctionDefinition",
            "src": "7191:240:37",
            "nodes": [],
            "body": {
              "id": 14417,
              "nodeType": "Block",
              "src": "7305:126:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14406,
                        "name": "saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14163,
                        "src": "7315:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 14408,
                      "indexExpression": {
                        "id": 14407,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14398,
                        "src": "7329:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7315:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14409,
                      "name": "_saleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14400,
                      "src": "7341:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7315:40:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14411,
                  "nodeType": "ExpressionStatement",
                  "src": "7315:40:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14413,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14398,
                        "src": "7399:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14414,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14400,
                        "src": "7409:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14412,
                      "name": "SaleRecipientForTokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14177,
                      "src": "7370:28:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 14415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7370:54:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14416,
                  "nodeType": "EmitStatement",
                  "src": "7365:59:37"
                }
              ]
            },
            "documentation": {
              "id": 14396,
              "nodeType": "StructuredDocumentation",
              "src": "7115:71:37",
              "text": "@dev Lets a contract admin set the recipient for all primary sales."
            },
            "functionSelector": "29c49b9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14403,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38423,
                    "src": "7285:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 14404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14402,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38436,
                  "src": "7276:8:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "7276:28:37"
              }
            ],
            "name": "setSaleRecipientForToken",
            "nameLocation": "7200:24:37",
            "parameters": {
              "id": 14401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14398,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7233:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14418,
                  "src": "7225:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7225:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14400,
                  "mutability": "mutable",
                  "name": "_saleRecipient",
                  "nameLocation": "7251:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14418,
                  "src": "7243:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7224:42:37"
            },
            "returnParameters": {
              "id": 14405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7305:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14458,
            "nodeType": "FunctionDefinition",
            "src": "7674:391:37",
            "nodes": [],
            "body": {
              "id": 14457,
              "nodeType": "Block",
              "src": "7884:181:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 14439,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14158,
                              "src": "7915:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 14441,
                            "indexExpression": {
                              "id": 14440,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14421,
                              "src": "7930:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7915:24:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7943:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7915:29:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 14444,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14153,
                                "src": "7948:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 14446,
                              "indexExpression": {
                                "id": 14445,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14421,
                                "src": "7960:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7948:21:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 14447,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14425,
                              "src": "7972:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7948:33:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 14449,
                              "name": "maxTotalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14158,
                              "src": "7985:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 14451,
                            "indexExpression": {
                              "id": 14450,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14421,
                              "src": "8000:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7985:24:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7948:61:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7915:94:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657863656564206d617820746f74616c20737570706c79",
                        "id": 14454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8023:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        },
                        "value": "exceed max total supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40dc160d0c899650bc1d2267443cabb7167aec1c3a21c13aa54b24e73829f9df",
                          "typeString": "literal_string \"exceed max total supply\""
                        }
                      ],
                      "id": 14438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7894:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7894:164:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14456,
                  "nodeType": "ExpressionStatement",
                  "src": "7894:164:37"
                }
              ]
            },
            "baseFunctions": [
              36254
            ],
            "documentation": {
              "id": 14419,
              "nodeType": "StructuredDocumentation",
              "src": "7620:49:37",
              "text": "@dev Runs before every `claim` function call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeClaim",
            "nameLocation": "7683:12:37",
            "overrides": {
              "id": 14436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7875:8:37"
            },
            "parameters": {
              "id": 14435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14421,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7713:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7705:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7705:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7731:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7731:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14425,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "7756:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7748:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7748:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7775:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7775:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7792:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7792:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7809:23:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowlistProof_$49831_calldata_ptr",
                    "typeString": "struct IDrop1155.AllowlistProof"
                  },
                  "typeName": {
                    "id": 14431,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14430,
                      "name": "AllowlistProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49831,
                      "src": "7809:14:37"
                    },
                    "referencedDeclaration": 49831,
                    "src": "7809:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowlistProof_$49831_storage_ptr",
                      "typeString": "struct IDrop1155.AllowlistProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14458,
                  "src": "7842:12:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7842:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7695:165:37"
            },
            "returnParameters": {
              "id": 14437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7884:0:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14587,
            "nodeType": "FunctionDefinition",
            "src": "8155:1236:37",
            "nodes": [],
            "body": {
              "id": 14586,
              "nodeType": "Block",
              "src": "8366:1025:37",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14473,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14469,
                      "src": "8380:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 14474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8398:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8380:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14486,
                  "nodeType": "IfStatement",
                  "src": "8376:99:37",
                  "trueBody": {
                    "id": 14485,
                    "nodeType": "Block",
                    "src": "8401:74:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 14477,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8423:3:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 14478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8423:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 14479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8436:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8423:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2156",
                              "id": 14481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8439:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              },
                              "value": "!V"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                                "typeString": "literal_string \"!V\""
                              }
                            ],
                            "id": 14476,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8415:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8415:29:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14483,
                        "nodeType": "ExpressionStatement",
                        "src": "8415:29:37"
                      },
                      {
                        "functionReturnParameters": 14472,
                        "id": 14484,
                        "nodeType": "Return",
                        "src": "8458:7:37"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    14488,
                    14490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14488,
                      "mutability": "mutable",
                      "name": "platformFeeRecipient",
                      "nameLocation": "8494:20:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8486:28:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8486:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14490,
                      "mutability": "mutable",
                      "name": "platformFeeBps",
                      "nameLocation": "8523:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8516:21:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 14489,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8516:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14493,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14491,
                      "name": "getPlatformFeeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39082,
                      "src": "8541:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$_t_uint16_$",
                        "typeString": "function () view returns (address,uint16)"
                      }
                    },
                    "id": 14492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8541:20:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint16_$",
                      "typeString": "tuple(address,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8485:76:37"
                },
                {
                  "assignments": [
                    14495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14495,
                      "mutability": "mutable",
                      "name": "_saleRecipient",
                      "nameLocation": "8580:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8572:22:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14494,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8572:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14519,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 14501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14496,
                        "name": "_primarySaleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14463,
                        "src": "8597:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8630:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8622:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8622:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8622:10:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8597:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 14517,
                      "name": "_primarySaleRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14463,
                      "src": "8752:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 14518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8597:176:37",
                    "trueExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 14509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 14502,
                                "name": "saleRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14163,
                                "src": "8648:13:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 14504,
                              "indexExpression": {
                                "id": 14503,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14461,
                                "src": "8662:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8648:23:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 14507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8683:1:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 14506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8675:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14505,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8675:7:37",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8675:10:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8648:37:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "baseExpression": {
                              "id": 14512,
                              "name": "saleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14163,
                              "src": "8713:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 14514,
                            "indexExpression": {
                              "id": 14513,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14461,
                              "src": "8727:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8713:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 14515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8648:88:37",
                          "trueExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 14510,
                              "name": "primarySaleRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39275,
                              "src": "8688:20:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 14511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8688:22:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 14516,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8647:90:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8572:201:37"
                },
                {
                  "assignments": [
                    14521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14521,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "8792:10:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8784:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8784:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14522,
                      "name": "_quantityToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14465,
                      "src": "8805:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 14523,
                      "name": "_pricePerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14469,
                      "src": "8824:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8805:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8784:54:37"
                },
                {
                  "assignments": [
                    14527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14527,
                      "mutability": "mutable",
                      "name": "platformFees",
                      "nameLocation": "8856:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8848:20:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8848:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14534,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14528,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14521,
                            "src": "8872:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 14529,
                            "name": "platformFeeBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14490,
                            "src": "8885:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8872:27:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14531,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8871:29:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 14532,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14148,
                      "src": "8903:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8871:39:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8848:62:37"
                },
                {
                  "assignments": [
                    14536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14536,
                      "mutability": "mutable",
                      "name": "validMsgValue",
                      "nameLocation": "8926:13:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 14586,
                      "src": "8921:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 14535,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8921:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14537,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8921:18:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14538,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14467,
                      "src": "8953:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 14539,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "8966:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 14540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64261,
                      "src": "8966:32:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8953:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 14557,
                    "nodeType": "Block",
                    "src": "9070:55:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 14555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14550,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14536,
                            "src": "9084:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 14551,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9100:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 14552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9100:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 14553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9113:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9100:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9084:30:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 14556,
                        "nodeType": "ExpressionStatement",
                        "src": "9084:30:37"
                      }
                    ]
                  },
                  "id": 14558,
                  "nodeType": "IfStatement",
                  "src": "8949:176:37",
                  "trueBody": {
                    "id": 14549,
                    "nodeType": "Block",
                    "src": "9000:64:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 14547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14542,
                            "name": "validMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14536,
                            "src": "9014:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 14543,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9030:3:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 14544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9030:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 14545,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14521,
                              "src": "9043:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9030:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9014:39:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 14548,
                        "nodeType": "ExpressionStatement",
                        "src": "9014:39:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14560,
                        "name": "validMsgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14536,
                        "src": "9142:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2156",
                        "id": 14561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9157:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        },
                        "value": "!V"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ab0e284d9415599667c0851e9b633cbc3046603c10b78f97a804ca375843fda",
                          "typeString": "literal_string \"!V\""
                        }
                      ],
                      "id": 14559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9134:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14563,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14567,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14467,
                        "src": "9210:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14568,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "9221:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9221:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14570,
                        "name": "platformFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14488,
                        "src": "9235:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14571,
                        "name": "platformFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14527,
                        "src": "9257:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 14564,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9173:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 14566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "9173:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 14572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9173:97:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14573,
                  "nodeType": "ExpressionStatement",
                  "src": "9173:97:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14577,
                        "name": "_currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14467,
                        "src": "9317:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14578,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "9328:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9328:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14580,
                        "name": "_saleRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14495,
                        "src": "9342:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14581,
                          "name": "totalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14521,
                          "src": "9358:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 14582,
                          "name": "platformFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14527,
                          "src": "9371:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9358:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 14574,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "9280:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 14576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64298,
                      "src": "9280:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 14584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9280:104:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14585,
                  "nodeType": "ExpressionStatement",
                  "src": "9280:104:37"
                }
              ]
            },
            "baseFunctions": [
              36288
            ],
            "documentation": {
              "id": 14459,
              "nodeType": "StructuredDocumentation",
              "src": "8071:79:37",
              "text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectPriceOnClaim",
            "nameLocation": "8164:19:37",
            "overrides": {
              "id": 14471,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8357:8:37"
            },
            "parameters": {
              "id": 14470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14461,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8201:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14587,
                  "src": "8193:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14463,
                  "mutability": "mutable",
                  "name": "_primarySaleRecipient",
                  "nameLocation": "8227:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14587,
                  "src": "8219:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8219:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14465,
                  "mutability": "mutable",
                  "name": "_quantityToClaim",
                  "nameLocation": "8266:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14587,
                  "src": "8258:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14467,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8300:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14587,
                  "src": "8292:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8292:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14469,
                  "mutability": "mutable",
                  "name": "_pricePerToken",
                  "nameLocation": "8327:14:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14587,
                  "src": "8319:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8319:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8183:164:37"
            },
            "returnParameters": {
              "id": 14472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8366:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14606,
            "nodeType": "FunctionDefinition",
            "src": "9444:205:37",
            "nodes": [],
            "body": {
              "id": 14605,
              "nodeType": "Block",
              "src": "9585:64:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14599,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14590,
                        "src": "9601:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14600,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14592,
                        "src": "9606:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14601,
                        "name": "_quantityBeingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14594,
                        "src": "9616:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 14602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9639:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 14598,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152729,
                      "src": "9595:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 14603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14604,
                  "nodeType": "ExpressionStatement",
                  "src": "9595:47:37"
                }
              ]
            },
            "baseFunctions": [
              36298
            ],
            "documentation": {
              "id": 14588,
              "nodeType": "StructuredDocumentation",
              "src": "9397:42:37",
              "text": "@dev Transfers the NFTs being claimed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokensOnClaim",
            "nameLocation": "9453:21:37",
            "overrides": {
              "id": 14596,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9576:8:37"
            },
            "parameters": {
              "id": 14595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14590,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9492:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14606,
                  "src": "9484:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9484:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14592,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9513:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14606,
                  "src": "9505:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9505:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14594,
                  "mutability": "mutable",
                  "name": "_quantityBeingClaimed",
                  "nameLocation": "9539:21:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14606,
                  "src": "9531:29:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9531:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9474:92:37"
            },
            "returnParameters": {
              "id": 14597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9585:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14620,
            "nodeType": "FunctionDefinition",
            "src": "9744:137:37",
            "nodes": [],
            "body": {
              "id": 14619,
              "nodeType": "Block",
              "src": "9816:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14614,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "9841:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14615,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "9861:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9861:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14613,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "9833:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9833:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14612,
                  "id": 14618,
                  "nodeType": "Return",
                  "src": "9826:48:37"
                }
              ]
            },
            "baseFunctions": [
              39255
            ],
            "documentation": {
              "id": 14607,
              "nodeType": "StructuredDocumentation",
              "src": "9655:84:37",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPlatformFeeInfo",
            "nameLocation": "9753:22:37",
            "overrides": {
              "id": 14609,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9792:8:37"
            },
            "parameters": {
              "id": 14608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9775:2:37"
            },
            "returnParameters": {
              "id": 14612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14620,
                  "src": "9810:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9810:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9809:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14634,
            "nodeType": "FunctionDefinition",
            "src": "9981:142:37",
            "nodes": [],
            "body": {
              "id": 14633,
              "nodeType": "Block",
              "src": "10058:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14628,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10083:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14629,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "10103:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10103:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14627,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10075:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10075:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14626,
                  "id": 14632,
                  "nodeType": "Return",
                  "src": "10068:48:37"
                }
              ]
            },
            "baseFunctions": [
              39317
            ],
            "documentation": {
              "id": 14621,
              "nodeType": "StructuredDocumentation",
              "src": "9887:89:37",
              "text": "@dev Checks whether primary sale recipient can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetPrimarySaleRecipient",
            "nameLocation": "9990:27:37",
            "overrides": {
              "id": 14623,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10034:8:37"
            },
            "parameters": {
              "id": 14622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10017:2:37"
            },
            "returnParameters": {
              "id": 14626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14634,
                  "src": "10052:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14624,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10052:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10051:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14648,
            "nodeType": "FunctionDefinition",
            "src": "10206:127:37",
            "nodes": [],
            "body": {
              "id": 14647,
              "nodeType": "Block",
              "src": "10268:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14642,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10293:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14643,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "10313:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10313:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14641,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10285:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10285:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14640,
                  "id": 14646,
                  "nodeType": "Return",
                  "src": "10278:48:37"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 14635,
              "nodeType": "StructuredDocumentation",
              "src": "10129:72:37",
              "text": "@dev Checks whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10215:12:37",
            "overrides": {
              "id": 14637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10244:8:37"
            },
            "parameters": {
              "id": 14636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10227:2:37"
            },
            "returnParameters": {
              "id": 14640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14648,
                  "src": "10262:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10262:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10261:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14662,
            "nodeType": "FunctionDefinition",
            "src": "10423:133:37",
            "nodes": [],
            "body": {
              "id": 14661,
              "nodeType": "Block",
              "src": "10491:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14656,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10516:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14657,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "10536:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10536:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14655,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10508:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10508:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14654,
                  "id": 14660,
                  "nodeType": "Return",
                  "src": "10501:48:37"
                }
              ]
            },
            "baseFunctions": [
              39645
            ],
            "documentation": {
              "id": 14649,
              "nodeType": "StructuredDocumentation",
              "src": "10339:79:37",
              "text": "@dev Checks whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10432:18:37",
            "overrides": {
              "id": 14651,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10467:8:37"
            },
            "parameters": {
              "id": 14650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10450:2:37"
            },
            "returnParameters": {
              "id": 14654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14662,
                  "src": "10485:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14652,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10485:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10484:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14676,
            "nodeType": "FunctionDefinition",
            "src": "10651:133:37",
            "nodes": [],
            "body": {
              "id": 14675,
              "nodeType": "Block",
              "src": "10719:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14670,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10744:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14671,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "10764:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10764:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14669,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10736:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10736:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14668,
                  "id": 14674,
                  "nodeType": "Return",
                  "src": "10729:48:37"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 14663,
              "nodeType": "StructuredDocumentation",
              "src": "10562:84:37",
              "text": "@dev Checks whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10660:18:37",
            "overrides": {
              "id": 14665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10695:8:37"
            },
            "parameters": {
              "id": 14664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10678:2:37"
            },
            "returnParameters": {
              "id": 14668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14676,
                  "src": "10713:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10713:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10712:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14690,
            "nodeType": "FunctionDefinition",
            "src": "10879:137:37",
            "nodes": [],
            "body": {
              "id": 14689,
              "nodeType": "Block",
              "src": "10951:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14684,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "10976:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14685,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "10996:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10996:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14683,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "10968:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10968:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14682,
                  "id": 14688,
                  "nodeType": "Return",
                  "src": "10961:48:37"
                }
              ]
            },
            "baseFunctions": [
              36304
            ],
            "documentation": {
              "id": 14677,
              "nodeType": "StructuredDocumentation",
              "src": "10790:84:37",
              "text": "@dev Checks whether platform fee info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetClaimConditions",
            "nameLocation": "10888:22:37",
            "overrides": {
              "id": 14679,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10927:8:37"
            },
            "parameters": {
              "id": 14678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10910:2:37"
            },
            "returnParameters": {
              "id": 14682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14690,
                  "src": "10945:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14680,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10945:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10944:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 14704,
            "nodeType": "FunctionDefinition",
            "src": "11108:127:37",
            "nodes": [],
            "body": {
              "id": 14703,
              "nodeType": "Block",
              "src": "11178:57:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14698,
                        "name": "minterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14144,
                        "src": "11203:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14699,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "11215:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11215:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14697,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "11195:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11195:33:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14696,
                  "id": 14702,
                  "nodeType": "Return",
                  "src": "11188:40:37"
                }
              ]
            },
            "baseFunctions": [
              37537
            ],
            "documentation": {
              "id": 14691,
              "nodeType": "StructuredDocumentation",
              "src": "11022:81:37",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "11117:12:37",
            "overrides": {
              "id": 14693,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11154:8:37"
            },
            "parameters": {
              "id": 14692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11129:2:37"
            },
            "returnParameters": {
              "id": 14696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14704,
                  "src": "11172:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11172:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11171:6:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14718,
            "nodeType": "FunctionDefinition",
            "src": "11334:144:37",
            "nodes": [],
            "body": {
              "id": 14717,
              "nodeType": "Block",
              "src": "11413:65:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14712,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38423,
                        "src": "11438:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14713,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14995
                          ],
                          "referencedDeclaration": 14995,
                          "src": "11458:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 14714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11458:12:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14711,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38454,
                      "src": "11430:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 14715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11430:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14710,
                  "id": 14716,
                  "nodeType": "Return",
                  "src": "11423:48:37"
                }
              ]
            },
            "baseFunctions": [
              37993
            ],
            "documentation": {
              "id": 14705,
              "nodeType": "StructuredDocumentation",
              "src": "11241:88:37",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "11343:26:37",
            "overrides": {
              "id": 14707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11389:8:37"
            },
            "parameters": {
              "id": 14706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11369:2:37"
            },
            "returnParameters": {
              "id": 14710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14718,
                  "src": "11407:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11407:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11406:6:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14727,
            "nodeType": "FunctionDefinition",
            "src": "11738:106:37",
            "nodes": [],
            "body": {
              "id": 14726,
              "nodeType": "Block",
              "src": "11799:45:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14724,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37472,
                    "src": "11816:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14723,
                  "id": 14725,
                  "nodeType": "Return",
                  "src": "11809:28:37"
                }
              ]
            },
            "documentation": {
              "id": 14719,
              "nodeType": "StructuredDocumentation",
              "src": "11662:71:37",
              "text": "@dev The tokenId of the next NFT that will be minted / lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "11747:17:37",
            "parameters": {
              "id": 14720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11764:2:37"
            },
            "returnParameters": {
              "id": 14723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14727,
                  "src": "11790:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11790:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11789:9:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14760,
            "nodeType": "FunctionDefinition",
            "src": "11944:343:37",
            "nodes": [],
            "body": {
              "id": 14759,
              "nodeType": "Block",
              "src": "12072:215:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 14743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14740,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14730,
                            "src": "12103:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 14741,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                14995
                              ],
                              "referencedDeclaration": 14995,
                              "src": "12114:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 14742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12114:12:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12103:23:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14745,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14730,
                              "src": "12147:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 14746,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  14995
                                ],
                                "referencedDeclaration": 14995,
                                "src": "12156:10:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 14747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12156:12:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14744,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152287,
                            "src": "12130:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 14748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12130:39:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12103:66:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642e",
                        "id": 14750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12183:44:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        },
                        "value": "ERC1155: caller is not owner nor approved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04734b189e922777d599884b7960472dc0629c731f10be0d8edb246be9142927",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved.\""
                        }
                      ],
                      "id": 14739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12082:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12082:155:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14752,
                  "nodeType": "ExpressionStatement",
                  "src": "12082:155:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14754,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14730,
                        "src": "12259:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14755,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14733,
                        "src": "12268:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14756,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14736,
                        "src": "12273:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 14753,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153068,
                      "src": "12248:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 14757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12248:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14758,
                  "nodeType": "ExpressionStatement",
                  "src": "12248:32:37"
                }
              ]
            },
            "documentation": {
              "id": 14728,
              "nodeType": "StructuredDocumentation",
              "src": "11850:89:37",
              "text": "@dev Lets a token owner burn multiple tokens they own at once (i.e. destroy for good)"
            },
            "functionSelector": "6b20c454",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnBatch",
            "nameLocation": "11953:9:37",
            "parameters": {
              "id": 14737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14730,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11980:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14760,
                  "src": "11972:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11972:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14733,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12014:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14760,
                  "src": "11997:20:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14731,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11997:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14732,
                    "nodeType": "ArrayTypeName",
                    "src": "11997:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14736,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "12044:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14760,
                  "src": "12027:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14734,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12027:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14735,
                    "nodeType": "ArrayTypeName",
                    "src": "12027:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11962:94:37"
            },
            "returnParameters": {
              "id": 14738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12072:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 14890,
            "nodeType": "FunctionDefinition",
            "src": "12357:951:37",
            "nodes": [],
            "body": {
              "id": 14889,
              "nodeType": "Block",
              "src": "12578:730:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14782,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14763,
                        "src": "12615:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14783,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14765,
                        "src": "12625:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14784,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14767,
                        "src": "12631:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14785,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14770,
                        "src": "12635:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14786,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14773,
                        "src": "12640:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14787,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14775,
                        "src": "12649:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 14779,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "12588:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$15009_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 14781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153119,
                      "src": "12588:26:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 14788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12588:66:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14789,
                  "nodeType": "ExpressionStatement",
                  "src": "12588:66:37"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 14804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12766:34:37",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 14791,
                              "name": "transferRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14141,
                              "src": "12775:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 14794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12797:1:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 14793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12789:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14792,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12789:7:37",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12789:10:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14790,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38454,
                            "src": "12767:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 14796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12767:33:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14798,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14765,
                          "src": "12804:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12820:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12812:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14799,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12812:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12812:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12804:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "12766:56:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 14810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14805,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14767,
                        "src": "12826:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12840:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12832:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14806,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12832:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12832:10:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12826:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12766:76:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14826,
                  "nodeType": "IfStatement",
                  "src": "12762:212:37",
                  "trueBody": {
                    "id": 14825,
                    "nodeType": "Block",
                    "src": "12844:130:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 14821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 14814,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14141,
                                    "src": "12874:12:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 14815,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14765,
                                    "src": "12888:4:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 14813,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "12866:7:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 14816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12866:27:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 14818,
                                    "name": "transferRole",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14141,
                                    "src": "12905:12:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 14819,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14767,
                                    "src": "12919:2:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 14817,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38454,
                                  "src": "12897:7:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 14820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12897:25:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "12866:56:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7265737472696374656420746f205452414e534645525f524f4c4520686f6c646572732e",
                              "id": 14822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12924:38:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              },
                              "value": "restricted to TRANSFER_ROLE holders."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80653bc1019aa82133f98596117119bd52c35f971b64223fbf9db2d56405322f",
                                "typeString": "literal_string \"restricted to TRANSFER_ROLE holders.\""
                              }
                            ],
                            "id": 14812,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12858:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12858:105:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14824,
                        "nodeType": "ExpressionStatement",
                        "src": "12858:105:37"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14827,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14765,
                      "src": "12988:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13004:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12996:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12996:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12996:10:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12988:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14857,
                  "nodeType": "IfStatement",
                  "src": "12984:155:37",
                  "trueBody": {
                    "id": 14856,
                    "nodeType": "Block",
                    "src": "13008:131:37",
                    "statements": [
                      {
                        "body": {
                          "id": 14854,
                          "nodeType": "Block",
                          "src": "13063:66:37",
                          "statements": [
                            {
                              "expression": {
                                "id": 14852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 14844,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14153,
                                    "src": "13081:11:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 14848,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 14845,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14770,
                                      "src": "13093:3:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 14847,
                                    "indexExpression": {
                                      "id": 14846,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14834,
                                      "src": "13097:1:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13093:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13081:19:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 14849,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14773,
                                    "src": "13104:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 14851,
                                  "indexExpression": {
                                    "id": 14850,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14834,
                                    "src": "13112:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13104:10:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13081:33:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 14853,
                              "nodeType": "ExpressionStatement",
                              "src": "13081:33:37"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14837,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14834,
                            "src": "13042:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 14838,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14770,
                              "src": "13046:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 14839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13046:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13042:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 14855,
                        "initializationExpression": {
                          "assignments": [
                            14834
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 14834,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13035:1:37",
                              "nodeType": "VariableDeclaration",
                              "scope": 14855,
                              "src": "13027:9:37",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 14833,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13027:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 14836,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 14835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13039:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13027:13:37"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 14842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13058:3:37",
                            "subExpression": {
                              "id": 14841,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14834,
                              "src": "13060:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 14843,
                          "nodeType": "ExpressionStatement",
                          "src": "13058:3:37"
                        },
                        "nodeType": "ForStatement",
                        "src": "13022:107:37"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14858,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14767,
                      "src": "13153:2:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 14861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13167:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 14860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13159:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 14859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13159:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13159:10:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13153:16:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14888,
                  "nodeType": "IfStatement",
                  "src": "13149:153:37",
                  "trueBody": {
                    "id": 14887,
                    "nodeType": "Block",
                    "src": "13171:131:37",
                    "statements": [
                      {
                        "body": {
                          "id": 14885,
                          "nodeType": "Block",
                          "src": "13226:66:37",
                          "statements": [
                            {
                              "expression": {
                                "id": 14883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 14875,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14153,
                                    "src": "13244:11:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 14879,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 14876,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14770,
                                      "src": "13256:3:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 14878,
                                    "indexExpression": {
                                      "id": 14877,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14865,
                                      "src": "13260:1:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13256:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13244:19:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 14880,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14773,
                                    "src": "13267:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 14882,
                                  "indexExpression": {
                                    "id": 14881,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14865,
                                    "src": "13275:1:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13267:10:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13244:33:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 14884,
                              "nodeType": "ExpressionStatement",
                              "src": "13244:33:37"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14868,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14865,
                            "src": "13205:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 14869,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14770,
                              "src": "13209:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 14870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13209:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13205:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 14886,
                        "initializationExpression": {
                          "assignments": [
                            14865
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 14865,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13198:1:37",
                              "nodeType": "VariableDeclaration",
                              "scope": 14886,
                              "src": "13190:9:37",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 14864,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13190:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 14867,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 14866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13202:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13190:13:37"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 14873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "13221:3:37",
                            "subExpression": {
                              "id": 14872,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14865,
                              "src": "13223:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 14874,
                          "nodeType": "ExpressionStatement",
                          "src": "13221:3:37"
                        },
                        "nodeType": "ForStatement",
                        "src": "13185:107:37"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              153119
            ],
            "documentation": {
              "id": 14761,
              "nodeType": "StructuredDocumentation",
              "src": "12293:59:37",
              "text": " @dev See {ERC1155-_beforeTokenTransfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12366:20:37",
            "overrides": {
              "id": 14777,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12569:8:37"
            },
            "parameters": {
              "id": 14776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14763,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12404:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12396:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12396:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14765,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12430:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12422:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12422:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14767,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12452:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12444:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12444:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14770,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12481:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12464:20:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14768,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12464:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14769,
                    "nodeType": "ArrayTypeName",
                    "src": "12464:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14773,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12511:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12494:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14771,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12494:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14772,
                    "nodeType": "ArrayTypeName",
                    "src": "12494:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14775,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12541:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14890,
                  "src": "12528:17:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12528:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12386:165:37"
            },
            "returnParameters": {
              "id": 14778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12578:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14910,
            "nodeType": "FunctionDefinition",
            "src": "13359:174:37",
            "nodes": [],
            "body": {
              "id": 14909,
              "nodeType": "Block",
              "src": "13473:60:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14905,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14893,
                        "src": "13507:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14906,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14895,
                        "src": "13517:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 14902,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13483:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$15009_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 14904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152269,
                      "src": "13483:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 14907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13483:43:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14908,
                  "nodeType": "ExpressionStatement",
                  "src": "13483:43:37"
                }
              ]
            },
            "baseFunctions": [
              152269
            ],
            "documentation": {
              "id": 14891,
              "nodeType": "StructuredDocumentation",
              "src": "13314:40:37",
              "text": "@dev See {ERC1155-setApprovalForAll}"
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14899,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14893,
                    "src": "13463:8:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 14900,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14898,
                  "name": "onlyAllowedOperatorApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38255,
                  "src": "13435:27:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "13435:37:37"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "13368:17:37",
            "overrides": {
              "id": 14897,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13426:8:37"
            },
            "parameters": {
              "id": 14896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14893,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13394:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14910,
                  "src": "13386:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13386:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14895,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "13409:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14910,
                  "src": "13404:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14894,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13404:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13385:33:37"
            },
            "returnParameters": {
              "id": 14901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13473:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14940,
            "nodeType": "FunctionDefinition",
            "src": "13600:274:37",
            "nodes": [],
            "body": {
              "id": 14939,
              "nodeType": "Block",
              "src": "13807:67:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14932,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14913,
                        "src": "13840:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14933,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14915,
                        "src": "13846:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14934,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14917,
                        "src": "13850:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14935,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14919,
                        "src": "13854:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 14936,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14921,
                        "src": "13862:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 14929,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "13817:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$15009_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 14931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152325,
                      "src": "13817:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 14937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13817:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14938,
                  "nodeType": "ExpressionStatement",
                  "src": "13817:50:37"
                }
              ]
            },
            "baseFunctions": [
              152325
            ],
            "documentation": {
              "id": 14911,
              "nodeType": "StructuredDocumentation",
              "src": "13539:56:37",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14926,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14913,
                    "src": "13801:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 14927,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14925,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "13781:19:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "13781:25:37"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "13609:16:37",
            "overrides": {
              "id": 14924,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14923,
                  "name": "ERC1155Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153300,
                  "src": "13761:18:37"
                }
              ],
              "src": "13752:28:37"
            },
            "parameters": {
              "id": 14922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14913,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13643:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "13635:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13635:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14915,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13665:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "13657:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13657:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14917,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13685:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "13677:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13677:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14919,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13705:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "13697:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13697:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14921,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13734:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14940,
                  "src": "13721:17:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13721:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13625:119:37"
            },
            "returnParameters": {
              "id": 14928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13807:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14972,
            "nodeType": "FunctionDefinition",
            "src": "13946:306:37",
            "nodes": [],
            "body": {
              "id": 14971,
              "nodeType": "Block",
              "src": "14178:74:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14964,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14943,
                        "src": "14216:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14965,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14945,
                        "src": "14222:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14966,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14948,
                        "src": "14226:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14967,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14951,
                        "src": "14231:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14968,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14953,
                        "src": "14240:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 14961,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "14188:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DropERC1155_$15009_$",
                          "typeString": "type(contract super DropERC1155)"
                        }
                      },
                      "id": 14963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152365,
                      "src": "14188:27:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 14969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14188:57:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14970,
                  "nodeType": "ExpressionStatement",
                  "src": "14188:57:37"
                }
              ]
            },
            "baseFunctions": [
              152365
            ],
            "documentation": {
              "id": 14941,
              "nodeType": "StructuredDocumentation",
              "src": "13880:61:37",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14958,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14943,
                    "src": "14172:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 14959,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14957,
                  "name": "onlyAllowedOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38221,
                  "src": "14152:19:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "14152:25:37"
              }
            ],
            "name": "safeBatchTransferFrom",
            "nameLocation": "13955:21:37",
            "overrides": {
              "id": 14956,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14955,
                  "name": "ERC1155Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153300,
                  "src": "14132:18:37"
                }
              ],
              "src": "14123:28:37"
            },
            "parameters": {
              "id": 14954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14943,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13994:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14972,
                  "src": "13986:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13986:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14945,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14016:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14972,
                  "src": "14008:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14008:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14948,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14045:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14972,
                  "src": "14028:20:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14946,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14028:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14947,
                    "nodeType": "ArrayTypeName",
                    "src": "14028:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14951,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14075:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14972,
                  "src": "14058:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14949,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14058:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14950,
                    "nodeType": "ArrayTypeName",
                    "src": "14058:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14953,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14105:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14972,
                  "src": "14092:17:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14952,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14092:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13976:139:37"
            },
            "returnParameters": {
              "id": 14960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14178:0:37"
            },
            "scope": 15009,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14982,
            "nodeType": "FunctionDefinition",
            "src": "14258:111:37",
            "nodes": [],
            "body": {
              "id": 14981,
              "nodeType": "Block",
              "src": "14333:36:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14978,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14995
                      ],
                      "referencedDeclaration": 14995,
                      "src": "14350:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14350:12:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14977,
                  "id": 14980,
                  "nodeType": "Return",
                  "src": "14343:19:37"
                }
              ]
            },
            "baseFunctions": [
              36234
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dropMsgSender",
            "nameLocation": "14267:14:37",
            "overrides": {
              "id": 14974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14306:8:37"
            },
            "parameters": {
              "id": 14973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14281:2:37"
            },
            "returnParameters": {
              "id": 14977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14982,
                  "src": "14324:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14324:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14323:9:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 14995,
            "nodeType": "FunctionDefinition",
            "src": "14375:231:37",
            "nodes": [],
            "body": {
              "id": 14994,
              "nodeType": "Block",
              "src": "14544:62:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 14990,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "14561:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 14991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75733,
                      "src": "14561:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14561:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14989,
                  "id": 14993,
                  "nodeType": "Return",
                  "src": "14554:45:37"
                }
              ]
            },
            "baseFunctions": [
              75733,
              157699
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "14384:10:37",
            "overrides": {
              "id": 14986,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14984,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "14460:18:37"
                },
                {
                  "id": 14985,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "14480:25:37"
                }
              ],
              "src": "14451:55:37"
            },
            "parameters": {
              "id": 14983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14394:2:37"
            },
            "returnParameters": {
              "id": 14989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14988,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14532:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 14995,
                  "src": "14524:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14524:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14523:16:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 15008,
            "nodeType": "FunctionDefinition",
            "src": "14612:227:37",
            "nodes": [],
            "body": {
              "id": 15007,
              "nodeType": "Block",
              "src": "14779:60:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 15003,
                        "name": "ERC2771ContextUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75765,
                        "src": "14796:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771ContextUpgradeable_$75765_$",
                          "typeString": "type(contract ERC2771ContextUpgradeable)"
                        }
                      },
                      "id": 15004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75760,
                      "src": "14796:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 15005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14796:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 15002,
                  "id": 15006,
                  "nodeType": "Return",
                  "src": "14789:43:37"
                }
              ]
            },
            "baseFunctions": [
              75760,
              157708
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "14621:8:37",
            "overrides": {
              "id": 14999,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14997,
                  "name": "ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157714,
                  "src": "14695:18:37"
                },
                {
                  "id": 14998,
                  "name": "ERC2771ContextUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75765,
                  "src": "14715:25:37"
                }
              ],
              "src": "14686:55:37"
            },
            "parameters": {
              "id": 14996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14629:2:37"
            },
            "returnParameters": {
              "id": 15002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15008,
                  "src": "14759:14:37",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15000,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14759:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14758:16:37"
            },
            "scope": 15009,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14106,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 151869,
              "src": "1726:13:37"
            },
            "id": 14107,
            "nodeType": "InheritanceSpecifier",
            "src": "1726:13:37"
          },
          {
            "baseName": {
              "id": 14108,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1745:16:37"
            },
            "id": 14109,
            "nodeType": "InheritanceSpecifier",
            "src": "1745:16:37"
          },
          {
            "baseName": {
              "id": 14110,
              "name": "PlatformFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39256,
              "src": "1767:11:37"
            },
            "id": 14111,
            "nodeType": "InheritanceSpecifier",
            "src": "1767:11:37"
          },
          {
            "baseName": {
              "id": 14112,
              "name": "Royalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39646,
              "src": "1784:7:37"
            },
            "id": 14113,
            "nodeType": "InheritanceSpecifier",
            "src": "1784:7:37"
          },
          {
            "baseName": {
              "id": 14114,
              "name": "PrimarySale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39318,
              "src": "1797:11:37"
            },
            "id": 14115,
            "nodeType": "InheritanceSpecifier",
            "src": "1797:11:37"
          },
          {
            "baseName": {
              "id": 14116,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1814:7:37"
            },
            "id": 14117,
            "nodeType": "InheritanceSpecifier",
            "src": "1814:7:37"
          },
          {
            "baseName": {
              "id": 14118,
              "name": "LazyMint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37538,
              "src": "1827:8:37"
            },
            "id": 14119,
            "nodeType": "InheritanceSpecifier",
            "src": "1827:8:37"
          },
          {
            "baseName": {
              "id": 14120,
              "name": "PermissionsEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39046,
              "src": "1841:21:37"
            },
            "id": 14121,
            "nodeType": "InheritanceSpecifier",
            "src": "1841:21:37"
          },
          {
            "baseName": {
              "id": 14122,
              "name": "Drop1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36305,
              "src": "1868:8:37"
            },
            "id": 14123,
            "nodeType": "InheritanceSpecifier",
            "src": "1868:8:37"
          },
          {
            "baseName": {
              "id": 14124,
              "name": "ERC2771ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75765,
              "src": "1882:25:37"
            },
            "id": 14125,
            "nodeType": "InheritanceSpecifier",
            "src": "1882:25:37"
          },
          {
            "baseName": {
              "id": 14126,
              "name": "MulticallUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 157897,
              "src": "1913:20:37"
            },
            "id": 14127,
            "nodeType": "InheritanceSpecifier",
            "src": "1913:20:37"
          },
          {
            "baseName": {
              "id": 14128,
              "name": "DefaultOperatorFiltererUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34803,
              "src": "1939:34:37"
            },
            "id": 14129,
            "nodeType": "InheritanceSpecifier",
            "src": "1939:34:37"
          },
          {
            "baseName": {
              "id": 14130,
              "name": "ERC1155Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 153300,
              "src": "1979:18:37"
            },
            "id": 14131,
            "nodeType": "InheritanceSpecifier",
            "src": "1979:18:37"
          }
        ],
        "canonicalName": "DropERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          15009,
          153300,
          153638,
          153463,
          158919,
          158931,
          34803,
          38318,
          37994,
          50395,
          157897,
          75765,
          157714,
          36305,
          49887,
          49550,
          49527,
          39046,
          38747,
          50516,
          50491,
          37538,
          34496,
          50054,
          38400,
          50418,
          39318,
          50580,
          39646,
          50644,
          31290,
          31146,
          39256,
          50559,
          34723,
          151869,
          49679
        ],
        "name": "DropERC1155",
        "nameLocation": "1707:11:37",
        "scope": 15010,
        "usedErrors": [
          38158
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 37
}