{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        },
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRatioDenominator",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDenominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewardRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTimeUnit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeUnit",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTimeUnit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokensStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setRewardRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_timeUnit",
          "type": "uint80"
        }
      ],
      "name": "setTimeUnit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "timeOfLastUpdate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "conditionIdOflastUpdate",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakersArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingTokenDecimals",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162003310380380620033108339810160408190526200003591620004d7565b8083846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009c919062000567565b60ff16846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000104919062000567565b600160025560ff166001600160a01b038316158015906200012d57506001600160a01b03841615155b6200016b5760405162461bcd60e51b815260206004820152600960248201526806164647265737320360bc1b60448201526064015b60405180910390fd5b61ffff82161580159062000182575061ffff811615155b620001bd5760405162461bcd60e51b815260206004820152600a6024820152690646563696d616c7320360b41b604482015260640162000162565b6001600160a01b039384166080529190921660a05261ffff91821660c0521660e052620001ea866200029e565b620001f7878686620002f0565b826001600160a01b0316826001600160a01b03161415620002715760405162461bcd60e51b815260206004820152602d60248201527f52657761726420546f6b656e20616e64205374616b696e6720546f6b656e206360448201526c30b713ba1031329039b0b6b29760991b606482015260840162000162565b50600880546001600160a01b0319166001600160a01b039290921691909117905550620005f19350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b806200032d5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640162000162565b6001600160501b038316620003855760405162461bcd60e51b815260206004820152601460248201527f74696d652d756e69742063616e27742062652030000000000000000000000000604482015260640162000162565b600380546001600160401b0316906001906000620003a48385620005a9565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b03199286166a0100000000000000000000026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015620004b45742600760006200047e600185620005d7565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b80516001600160a01b0381168114620004d257600080fd5b919050565b600080600080600080600060e0888a031215620004f357600080fd5b87516001600160501b03811681146200050b57600080fd5b96506200051b60208901620004ba565b955060408801519450606088015193506200053960808901620004ba565b92506200054960a08901620004ba565b91506200055960c08901620004ba565b905092959891949750929550565b6000602082840312156200057a57600080fd5b815160ff811681146200058c57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03828116848216808303821115620005ce57620005ce62000593565b01949350505050565b600082821015620005ec57620005ec62000593565b500390565b60805160a05160c05160e051612c756200069b600039600081816103c10152611ee60152600081816104680152611f1a01526000818161026c0152818161123b015281816114f8015281816115a1015281816117150152818161198801526119cc01526000818161012301528181610e8701528181610f300152818161125f0152818161153e0152818161173901528181611960015281816119f20152611fcc0152612c756000f3fe6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046125ea565b610521565b3480156101c857600080fd5b506101956101d736600461260c565b61068b565b6101956101ea366004612635565b6106bb565b3480156101fb57600080fd5b5061019561020a366004612635565b6106f2565b34801561021b57600080fd5b50610195610721565b34801561023057600080fd5b5061024461023f366004612635565b610756565b604051610251919061264e565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b50610244610780565b3480156102d357600080fd5b5061031e6102e236600461260c565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b366004612678565b61078f565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107bc565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b610195610404366004612635565b610842565b34801561041557600080fd5b50610429610424366004612728565b610871565b60405161025191906127f4565b34801561044257600080fd5b50610195610451366004612856565b610966565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a536600461260c565b610abb565b3480156104b657600080fd5b506101956104c5366004612635565b610ae8565b3480156104d657600080fd5b506102a4610b17565b3480156104eb57600080fd5b506104f4610b5f565b604051610251919061287f565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610bed565b6105455760405162461bcd60e51b815260040161018c90612892565b6003546000906007908290610565906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c10565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610bed565b6106af5760405162461bcd60e51b815260040161018c90612892565b6106b881610dc1565b50565b6002805414156106dd5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610e13565b506001600255565b6002805414156107145760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610fed565b6002805414156107435760405162461bcd60e51b815260040161018c906128f8565b6002805561074f6112bc565b6001600255565b6005818154811061076657600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610797610bed565b6107b35760405162461bcd60e51b815260040161018c90612892565b6106b8816113df565b600354600090819060079082906107de906001906001600160401b03166128d0565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661082191906128d0565b6001600160401b031681526020019081526020016000206002015490509091565b6002805414156108645760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816114b4565b6060816001600160401b0381111561088b5761088b612662565b6040519080825280602002602001820160405280156108be57816020015b60608152602001906001900390816108a95790505b50905060005b8281101561095e5761092e308585848181106108e2576108e261292f565b90506020028101906108f49190612945565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185792505050565b8282815181106109405761094061292f565b602002602001018190525080806109569061298b565b9150506108c4565b505b92915050565b61096e610bed565b61098a5760405162461bcd60e51b815260040161018c90612892565b60035460009060079082906109aa906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b909104811693820193909352600182015460608201526002909101546080820152925083161415610a5d5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610a708282606001518360800151610c10565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610ae183611883565b9050915091565b600280541415610b0a5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816118f1565b6003546000906007908290610b37906001906001600160401b03166128d0565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610b6c906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906129a6565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b505050505081565b6000610bf7610780565b6001600160a01b0316336001600160a01b031614905090565b80610c4b5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b6001600160501b038316610c985760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610cb583856129e1565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610dbb574260076000610d85600185612a0c565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e1b610780565b6001600160a01b0316336001600160a01b031614610e4b5760405162461bcd60e51b815260040161018c90612892565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e85576008546001600160a01b0316610ea7565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ed7919061264e565b602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190612a23565b600854909150610f54906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f83919061264e565b602060405180830381865afa158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612a23565b610fce9190612a0c565b90508060096000828254610fe29190612a3c565b909155505050505050565b33600090815260066020526040902060010154816110445760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156110935760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61109c33611c4d565b818114156111f557600060058054806020026020016040519081016040528092919081815260200182805480156110fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110de575b5050505050905060005b81518110156111f257336001600160a01b031682828151811061112b5761112b61292f565b60200260200101516001600160a01b031614156111e25781600183516111519190612a0c565b815181106111615761116161292f565b60200260200101516005828154811061117c5761117c61292f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806111bb576111bb612a54565b600082815260209020810160001990810180546001600160a01b03191690550190556111f2565b6111eb8161298b565b9050611106565b50505b3360009081526006602052604081206001018054849290611217908490612a0c565b9250508190555081600460008282546112309190612a0c565b9091555061128390507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b60006112c733611d1c565b336000908152600660205260409020600201546112e49190612a3c565b9050806113205760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b031617815560020155600354611364906001906001600160401b03166128d0565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556113a79082611f53565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546113ed906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611419906129a6565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050855193945061148293600093506020870192509050612551565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610aaf929190612a6a565b806114f45760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561156257507f00000000000000000000000000000000000000000000000000000000000000006115c1565b341561159e5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156115e7576115e233611c4d565b61169e565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b03421617905560035461166591906001600160401b03166128d0565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906116cd90309060040161264e565b602060405180830381865afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190612a23565b905061175d7f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161178c919061264e565b602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd9190612a23565b6117d79190612a0c565b336000908152600660205260408120600101805492935083929091906117fe908490612a3c565b9250508190555080600460008282546118179190612a3c565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b606061187c8383604051806060016040528060278152602001612c1960279139611ff0565b9392505050565b6001600160a01b0381166000908152600660205260408120600101546118c257506001600160a01b031660009081526006602052604090206002015490565b6118cb82611d1c565b6001600160a01b0383166000908152600660205260409020600201546109609190612a3c565b6118f9610780565b6001600160a01b0316336001600160a01b0316146119295760405162461bcd60e51b815260040161018c90612892565b600954811161194557806009546119409190612a0c565b611948565b60005b600955600854611984906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146119f0577f0000000000000000000000000000000000000000000000000000000000000000611a12565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611a43919061264e565b602060405180830381865afa158015611a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a849190612a23565b1015611ad25760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b81611ae057611c46565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c3a576001600160a01b038416301415611b8057604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611b5857600080fd5b505af1158015611b6c573d6000803e3d6000fd5b50505050611b7b8383836120cb565b611c46565b6001600160a01b038316301415611c2f57348214611bd65760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c1157600080fd5b505af1158015611c25573d6000803e3d6000fd5b5050505050611c46565b611b7b8383836120cb565b611c4685858585612190565b5050505050565b6000611c5882611d1c565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611c88908490612a3c565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611cd6906001906001600160401b03166128d0565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611edc576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415611df9578551611e08565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415611e315742611e40565b82604001516001600160501b03165b9050600080611e6d89604001518585611e599190612a0c565b611e639190612a8f565b86606001516121ee565b91509150600080611ea58c886080015189600001516001600160501b031686611e969190612ac4565b611ea09190612ac4565b612236565b91509150838015611eb35750815b611ebd578b611ebf565b805b9b5050505050505050600181611ed59190612a3c565b9050611d85565b50611f1184611f0c7f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b6121ee565b9450611f4090507f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b611f4a9085612ac4565b95945050505050565b600954811115611fa05760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b8060096000828254611fb29190612a0c565b9091555050600854611ad2906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b6060611ffb84612251565b6120565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b0316856040516120719190612bda565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c1828286612260565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612118576040519150601f19603f3d011682016040523d82523d6000602084013e61211d565b606091505b5050905080610dbb57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216157600080fd5b505af1158015612175573d6000803e3d6000fd5b50610dbb935050506001600160a01b03841690508585612299565b816001600160a01b0316836001600160a01b031614156121af57610dbb565b6001600160a01b0383163014156121d9576121d46001600160a01b0385168383612299565b610dbb565b610dbb6001600160a01b038516848484612301565b60008083612202575060019050600061222f565b8383028385828161221557612215612aae565b041461222857600080925092505061222f565b6001925090505b9250929050565b6000808383018481101561222857600080925092505061222f565b6001600160a01b03163b151590565b6060831561226f57508161187c565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161018c919061287f565b6040516001600160a01b0383166024820152604481018290526122fc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612339565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610dbb9085906323b872dd60e01b906084016122c5565b600061238e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661240b9092919063ffffffff16565b8051909150156122fc57808060200190518101906123ac9190612bf6565b6122fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b606061241a8484600085612422565b949350505050565b6060824710156124835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018c565b61248c85612251565b6124d85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516124f49190612bda565b60006040518083038185875af1925050503d8060008114612531576040519150601f19603f3d011682016040523d82523d6000602084013e612536565b606091505b5091509150612546828286612260565b979650505050505050565b82805461255d906129a6565b90600052602060002090601f01602090048101928261257f57600085556125c5565b82601f1061259857805160ff19168380011785556125c5565b828001600101855582156125c5579182015b828111156125c55782518255916020019190600101906125aa565b506125d19291506125d5565b5090565b5b808211156125d157600081556001016125d6565b600080604083850312156125fd57600080fd5b50508035926020909101359150565b60006020828403121561261e57600080fd5b81356001600160a01b038116811461187c57600080fd5b60006020828403121561264757600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561268a57600080fd5b81356001600160401b03808211156126a157600080fd5b818401915084601f8301126126b557600080fd5b8135818111156126c7576126c7612662565b604051601f8201601f19908116603f011681019083821181831017156126ef576126ef612662565b8160405282815287602084870101111561270857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561273b57600080fd5b82356001600160401b038082111561275257600080fd5b818501915085601f83011261276657600080fd5b81358181111561277557600080fd5b8660208260051b850101111561278a57600080fd5b60209290920196919550909350505050565b60005b838110156127b757818101518382015260200161279f565b83811115610dbb5750506000910152565b600081518084526127e081602086016020860161279c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561284957603f198886030184526128378583516127c8565b9450928501929085019060010161281b565b5092979650505050505050565b60006020828403121561286857600080fd5b81356001600160501b038116811461187c57600080fd5b60208152600061187c60208301846127c8565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156128f0576128f06128ba565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261295c57600080fd5b8301803591506001600160401b0382111561297657600080fd5b60200191503681900382131561222f57600080fd5b600060001982141561299f5761299f6128ba565b5060010190565b600181811c908216806129ba57607f821691505b602082108114156129db57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160401b03808316818516808303821115612a0357612a036128ba565b01949350505050565b600082821015612a1e57612a1e6128ba565b500390565b600060208284031215612a3557600080fd5b5051919050565b60008219821115612a4f57612a4f6128ba565b500190565b634e487b7160e01b600052603160045260246000fd5b604081526000612a7d60408301856127c8565b8281036020840152611f4a81856127c8565b6000816000190483118215151615612aa957612aa96128ba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ae157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b21578160001904821115612b0757612b076128ba565b80851615612b1457918102915b93841c9390800290612aeb565b509250929050565b600082612b3857506001610960565b81612b4557506000610960565b8160018114612b5b5760028114612b6557612b81565b6001915050610960565b60ff841115612b7657612b766128ba565b50506001821b610960565b5060208310610133831016604e8410600b8410161715612ba4575081810a610960565b612bae8383612ae6565b8060001904821115612bc257612bc26128ba565b029392505050565b600061187c61ffff841683612b29565b60008251612bec81846020870161279c565b9190910192915050565b600060208284031215612c0857600080fd5b8151801515811461187c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122029788aa75a676c66ec80ff620f683a3aa8c00fbc9f1463426733633b001ce95664736f6c634300080c0033",
    "sourceMap": "1627:5184:35:-:0;;;1908:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2192:19;2225:13;2267;-1:-1:-1;;;;;2252:38:35;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1626:565:152;;2321:12:35;-1:-1:-1;;;;;2306:37:35;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;202:1:313;307:7;:22;1626:565:152;;-1:-1:-1;;;;;1823:27:152;::::1;::::0;;::::1;::::0;:64:::1;;-1:-1:-1::0;;;;;;1854:33:152;::::1;::::0;::::1;1823:64;1815:86;;;::::0;-1:-1:-1;;;1815:86:152;;1435:2:641;1815:86:152::1;::::0;::::1;1417:21:641::0;1474:1;1454:18;;;1447:29;-1:-1:-1;;;1492:18:641;;;1485:39;1541:18;;1815:86:152::1;;;;;;;;;1919:26;::::0;::::1;::::0;;::::1;::::0;:55:::1;;-1:-1:-1::0;1949:25:152::1;::::0;::::1;::::0;::::1;1919:55;1911:78;;;::::0;-1:-1:-1;;;1911:78:152;;1772:2:641;1911:78:152::1;::::0;::::1;1754:21:641::0;1811:2;1791:18;;;1784:30;-1:-1:-1;;;1830:18:641;;;1823:40;1880:18;;1911:78:152::1;1570:334:641::0;1911:78:152::1;-1:-1:-1::0;;;;;2000:40:152;;::::1;;::::0;2050:28;;;::::1;;::::0;2088:44:::1;::::0;;::::1;;::::0;2142:42:::1;;::::0;2370:26:35::1;2382:13:::0;2370:11:::1;:26::i;:::-;2406:79;2427:9:::0;2438:21;2461:23;2406:20:::1;:79::i;:::-;2520:13;-1:-1:-1::0;;;;;2504:29:35::1;:12;-1:-1:-1::0;;;;;2504:29:35::1;;;2496:87;;;::::0;-1:-1:-1;;;2496:87:35;;2111:2:641;2496:87:35::1;::::0;::::1;2093:21:641::0;2150:2;2130:18;;;2123:30;2189:34;2169:18;;;2162:62;-1:-1:-1;;;2240:18:641;;;2233:43;2293:19;;2496:87:35::1;1909:409:641::0;2496:87:35::1;-1:-1:-1::0;2593:11:35::1;:26:::0;;-1:-1:-1;;;;;;2593:26:35::1;-1:-1:-1::0;;;;;2593:26:35;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1627:5184:35;;-1:-1:-1;;;;1627:5184:35;1421:172:132;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10271:741:152:-;10426:17;10418:41;;;;-1:-1:-1;;;10418:41:152;;2525:2:641;10418:41:152;;;2507:21:641;2564:2;2544:18;;;2537:30;-1:-1:-1;;;2583:18:641;;;2576:41;2634:18;;10418:41:152;2323:335:641;10418:41:152;-1:-1:-1;;;;;10477:14:152;;10469:47;;;;-1:-1:-1;;;10469:47:152;;2865:2:641;10469:47:152;;;2847:21:641;2904:2;2884:18;;;2877:30;2943:22;2923:18;;;2916:50;2983:18;;10469:47:152;2663:344:641;10469:47:152;10548:15;;;-1:-1:-1;;;;;10548:15:152;;;;10526:19;10573:20;10548:15;;10573:20;:::i;:::-;;;-1:-1:-1;;;;;10573:20:152;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10637:239:152;;;;;;;;-1:-1:-1;;;;;10637:239:152;;;;;10820:15;10637:239;;;;;;;;;-1:-1:-1;10637:239:152;;;;;;;;;;;;;;;;;;10604:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10604:272:152;-1:-1:-1;;;;;;;;10604:272:152;;;;;-1:-1:-1;;;;;;10604:272:152;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10604:272:152;;;;;;;;;;10891:15;;10887:119;;10979:15;10922:17;:34;10940:15;10954:1;10940:11;:15;:::i;:::-;10922:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10922:73:152;;;;;-1:-1:-1;;;;;10922:73:152;;;;;;10887:119;10408:604;10271:741;;;:::o;14:177:641:-;93:13;;-1:-1:-1;;;;;135:31:641;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:754::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;463:16;;-1:-1:-1;;;;;508:30:641;;498:41;;488:69;;553:1;550;543:12;488:69;576:5;-1:-1:-1;600:49:641;645:2;630:18;;600:49;:::i;:::-;590:59;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;756:50;801:3;790:9;786:19;756:50;:::i;:::-;746:60;;825:50;870:3;859:9;855:19;825:50;:::i;:::-;815:60;;894:50;939:3;928:9;924:19;894:50;:::i;:::-;884:60;;196:754;;;;;;;;;;:::o;955:273::-;1023:6;1076:2;1064:9;1055:7;1051:23;1047:32;1044:52;;;1092:1;1089;1082:12;1044:52;1124:9;1118:16;1174:4;1167:5;1163:16;1156:5;1153:27;1143:55;;1194:1;1191;1184:12;1143:55;1217:5;955:273;-1:-1:-1;;;955:273:641:o;3012:127::-;3073:10;3068:3;3064:20;3061:1;3054:31;3104:4;3101:1;3094:15;3128:4;3125:1;3118:15;3144:236;3183:3;-1:-1:-1;;;;;3249:10:641;;;3279;;;3309:12;;;3301:21;;3298:47;;;3325:18;;:::i;:::-;3361:13;;3144:236;-1:-1:-1;;;;3144:236:641:o;3385:125::-;3425:4;3453:1;3450;3447:8;3444:34;;;3458:18;;:::i;:::-;-1:-1:-1;3495:9:641;;3385:125::o;:::-;1627:5184:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101135760003560e01c80621b79341461019c57806313af4035146101bc57806316c621e0146101dc5780632e1a7d4d146101ef578063372500ab1461020f5780635357e9161461022457806372f702f31461025a5780638caaa2711461028e5780638da5cb5b146102b25780639168ae72146102c7578063938e3d7b1461035057806393ce53431461037057806397e1b4bc146103855780639bdcecd1146103af578063a694fc3a146103f6578063ac9650d814610409578063b218f06914610436578063b9f7a7b514610456578063c34531531461048a578063cb43b2dd146104aa578063d68124c7146104ca578063e8a3d485146104df578063f7c618c11461050157600080fd5b3661019757336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101955760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101a857600080fd5b506101956101b73660046125ea565b610521565b3480156101c857600080fd5b506101956101d736600461260c565b61068b565b6101956101ea366004612635565b6106bb565b3480156101fb57600080fd5b5061019561020a366004612635565b6106f2565b34801561021b57600080fd5b50610195610721565b34801561023057600080fd5b5061024461023f366004612635565b610756565b604051610251919061264e565b60405180910390f35b34801561026657600080fd5b506102447f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506102a460045481565b604051908152602001610251565b3480156102be57600080fd5b50610244610780565b3480156102d357600080fd5b5061031e6102e236600461260c565b6006602052600090815260409020805460018201546002909201546001600160801b03821692600160801b9092046001600160401b0316919084565b604080516001600160801b0390951685526001600160401b039093166020850152918301526060820152608001610251565b34801561035c57600080fd5b5061019561036b366004612678565b61078f565b34801561037c57600080fd5b506009546102a4565b34801561039157600080fd5b5061039a6107bc565b60408051928352602083019190915201610251565b3480156103bb57600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610251565b610195610404366004612635565b610842565b34801561041557600080fd5b50610429610424366004612728565b610871565b60405161025191906127f4565b34801561044257600080fd5b50610195610451366004612856565b610966565b34801561046257600080fd5b506103e37f000000000000000000000000000000000000000000000000000000000000000081565b34801561049657600080fd5b5061039a6104a536600461260c565b610abb565b3480156104b657600080fd5b506101956104c5366004612635565b610ae8565b3480156104d657600080fd5b506102a4610b17565b3480156104eb57600080fd5b506104f4610b5f565b604051610251919061287f565b34801561050d57600080fd5b50600854610244906001600160a01b031681565b610529610bed565b6105455760405162461bcd60e51b815260040161018c90612892565b6003546000906007908290610565906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b9004909316918301919091526001810154606083018190526002909101546080830152909150831415806105e5575080608001518214155b61062b5760405162461bcd60e51b81526020600482015260176024820152762932bbb0b932103930ba34b7903ab731b430b733b2b21760491b604482015260640161018c565b8051610638908484610c10565b60608082015160808084015160408051938452602084018890528301529181018490527feb6684a1e7c9bd2adc792fb253558f022bcbef39fb6ad31dc58cdfefdd5b5190910160405180910390a1505050565b610693610bed565b6106af5760405162461bcd60e51b815260040161018c90612892565b6106b881610dc1565b50565b6002805414156106dd5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610e13565b506001600255565b6002805414156107145760405162461bcd60e51b815260040161018c906128f8565b600280556106ea81610fed565b6002805414156107435760405162461bcd60e51b815260040161018c906128f8565b6002805561074f6112bc565b6001600255565b6005818154811061076657600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031690565b610797610bed565b6107b35760405162461bcd60e51b815260040161018c90612892565b6106b8816113df565b600354600090819060079082906107de906001906001600160401b03166128d0565b6001600160401b03168152602001908152602001600020600101549150600760006001600360009054906101000a90046001600160401b031661082191906128d0565b6001600160401b031681526020019081526020016000206002015490509091565b6002805414156108645760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816114b4565b6060816001600160401b0381111561088b5761088b612662565b6040519080825280602002602001820160405280156108be57816020015b60608152602001906001900390816108a95790505b50905060005b8281101561095e5761092e308585848181106108e2576108e261292f565b90506020028101906108f49190612945565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185792505050565b8282815181106109405761094061292f565b602002602001018190525080806109569061298b565b9150506108c4565b505b92915050565b61096e610bed565b61098a5760405162461bcd60e51b815260040161018c90612892565b60035460009060079082906109aa906001906001600160401b03166128d0565b6001600160401b031681526020808201929092526040908101600020815160a08101835281546001600160501b03808216808452600160501b8304821696840196909652600160a01b909104811693820193909352600182015460608201526002909101546080820152925083161415610a5d5760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b604482015260640161018c565b610a708282606001518360800151610c10565b8051604080516001600160501b03928316815291841660208301527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de091015b60405180910390a15050565b6001600160a01b03811660009081526006602052604081206001015490610ae183611883565b9050915091565b600280541415610b0a5760405162461bcd60e51b815260040161018c906128f8565b600280556106ea816118f1565b6003546000906007908290610b37906001906001600160401b03166128d0565b6001600160401b031681526020810191909152604001600020546001600160501b0316919050565b60008054610b6c906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906129a6565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b505050505081565b6000610bf7610780565b6001600160a01b0316336001600160a01b031614905090565b80610c4b5760405162461bcd60e51b815260206004820152600b60248201526a064697669646520627920360ac1b604482015260640161018c565b6001600160501b038316610c985760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b604482015260640161018c565b600380546001600160401b0316906001906000610cb583856129e1565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160a0810182526001600160501b03808716825242811660208084019182526000848601818152606086018a8152608087018a815289845260079094529690912094518554935191518516600160a01b02600160a01b600160f01b0319928616600160501b026001600160a01b0319909516919095161792909217919091169190911782559151600182015590516002909101558015610dbb574260076000610d85600185612a0c565b815260200190815260200160002060000160146101000a8154816001600160501b0302191690836001600160501b031602179055505b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610e1b610780565b6001600160a01b0316336001600160a01b031614610e4b5760405162461bcd60e51b815260040161018c90612892565b6008546000906001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e85576008546001600160a01b0316610ea7565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ed7919061264e565b602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190612a23565b600854909150610f54906001600160a01b03163330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f83919061264e565b602060405180830381865afa158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612a23565b610fce9190612a0c565b90508060096000828254610fe29190612a3c565b909155505050505050565b33600090815260066020526040902060010154816110445760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b604482015260640161018c565b818110156110935760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b604482015260640161018c565b61109c33611c4d565b818114156111f557600060058054806020026020016040519081016040528092919081815260200182805480156110fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110de575b5050505050905060005b81518110156111f257336001600160a01b031682828151811061112b5761112b61292f565b60200260200101516001600160a01b031614156111e25781600183516111519190612a0c565b815181106111615761116161292f565b60200260200101516005828154811061117c5761117c61292f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806111bb576111bb612a54565b600082815260209020810160001990810180546001600160a01b03191690550190556111f2565b6111eb8161298b565b9050611106565b50505b3360009081526006602052604081206001018054849290611217908490612a0c565b9250508190555081600460008282546112309190612a0c565b9091555061128390507f00000000000000000000000000000000000000000000000000000000000000003033857f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b60006112c733611d1c565b336000908152600660205260409020600201546112e49190612a3c565b9050806113205760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b604482015260640161018c565b33600090815260066020526040812080546001600160801b031916426001600160501b031617815560020155600354611364906001906001600160401b03166128d0565b33600081815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b0319909316929092179091556113a79082611f53565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546113ed906129a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611419906129a6565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050855193945061148293600093506020870192509050612551565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051610aaf929190612a6a565b806114f45760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b604482015260640161018c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561156257507f00000000000000000000000000000000000000000000000000000000000000006115c1565b341561159e5760405162461bcd60e51b815260206004820152600b60248201526a056616c7565206e6f7420360ac1b604482015260640161018c565b507f00000000000000000000000000000000000000000000000000000000000000005b33600090815260066020526040902060010154156115e7576115e233611c4d565b61169e565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155600090815260066020526040902080546001600160801b0319166001600160501b03421617905560035461166591906001600160401b03166128d0565b33600090815260066020526040902080546001600160401b0392909216600160801b02600160801b600160c01b03199092169190911790555b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906116cd90309060040161264e565b602060405180830381865afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190612a23565b905061175d7f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611ad6565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161178c919061264e565b602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd9190612a23565b6117d79190612a0c565b336000908152600660205260408120600101805492935083929091906117fe908490612a3c565b9250508190555080600460008282546118179190612a3c565b909155505060405181815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a250505050565b606061187c8383604051806060016040528060278152602001612c1960279139611ff0565b9392505050565b6001600160a01b0381166000908152600660205260408120600101546118c257506001600160a01b031660009081526006602052604090206002015490565b6118cb82611d1c565b6001600160a01b0383166000908152600660205260409020600201546109609190612a3c565b6118f9610780565b6001600160a01b0316336001600160a01b0316146119295760405162461bcd60e51b815260040161018c90612892565b600954811161194557806009546119409190612a0c565b611948565b60005b600955600854611984906001600160a01b03163033847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146119f0577f0000000000000000000000000000000000000000000000000000000000000000611a12565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600454816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611a43919061264e565b602060405180830381865afa158015611a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a849190612a23565b1015611ad25760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e6720746f6b656e2062616c616e636520726564756365642e0000604482015260640161018c565b5050565b81611ae057611c46565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c3a576001600160a01b038416301415611b8057604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611b5857600080fd5b505af1158015611b6c573d6000803e3d6000fd5b50505050611b7b8383836120cb565b611c46565b6001600160a01b038316301415611c2f57348214611bd65760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b604482015260640161018c565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c1157600080fd5b505af1158015611c25573d6000803e3d6000fd5b5050505050611c46565b611b7b8383836120cb565b611c4685858585612190565b5050505050565b6000611c5882611d1c565b6001600160a01b038316600090815260066020526040812060020180549293508392909190611c88908490612a3c565b90915550506001600160a01b038216600090815260066020526040902080546001600160801b0319166001600160501b034216179055600354611cd6906001906001600160401b03166128d0565b6001600160a01b03909216600090815260066020526040902080546001600160401b0393909316600160801b02600160801b600160c01b03199093169290921790915550565b6001600160a01b0381166000908152600660209081526040808320815160808101835281546001600160801b03811682526001600160401b03600160801b9091048116948201859052600183015493820193909352600290910154606082015260035490929116815b81811015611edc576000818152600760209081526040808320815160a08101835281546001600160501b038082168352600160501b8204811695830195909552600160a01b900490931691830191909152600181015460608301526002015460808201529084831415611df9578551611e08565b81602001516001600160501b03165b6001600160801b03169050600082604001516001600160501b031660001415611e315742611e40565b82604001516001600160501b03165b9050600080611e6d89604001518585611e599190612a0c565b611e639190612a8f565b86606001516121ee565b91509150600080611ea58c886080015189600001516001600160501b031686611e969190612ac4565b611ea09190612ac4565b612236565b91509150838015611eb35750815b611ebd578b611ebf565b805b9b5050505050505050600181611ed59190612a3c565b9050611d85565b50611f1184611f0c7f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b6121ee565b9450611f4090507f0000000000000000000000000000000000000000000000000000000000000000600a612bca565b611f4a9085612ac4565b95945050505050565b600954811115611fa05760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b604482015260640161018c565b8060096000828254611fb29190612a0c565b9091555050600854611ad2906001600160a01b03163084847f0000000000000000000000000000000000000000000000000000000000000000611ad6565b6060611ffb84612251565b6120565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b0316856040516120719190612bda565b600060405180830381855af49150503d80600081146120ac576040519150601f19603f3d011682016040523d82523d6000602084013e6120b1565b606091505b50915091506120c1828286612260565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114612118576040519150601f19603f3d011682016040523d82523d6000602084013e61211d565b606091505b5050905080610dbb57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561216157600080fd5b505af1158015612175573d6000803e3d6000fd5b50610dbb935050506001600160a01b03841690508585612299565b816001600160a01b0316836001600160a01b031614156121af57610dbb565b6001600160a01b0383163014156121d9576121d46001600160a01b0385168383612299565b610dbb565b610dbb6001600160a01b038516848484612301565b60008083612202575060019050600061222f565b8383028385828161221557612215612aae565b041461222857600080925092505061222f565b6001925090505b9250929050565b6000808383018481101561222857600080925092505061222f565b6001600160a01b03163b151590565b6060831561226f57508161187c565b82511561227f5782518084602001fd5b8160405162461bcd60e51b815260040161018c919061287f565b6040516001600160a01b0383166024820152604481018290526122fc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612339565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610dbb9085906323b872dd60e01b906084016122c5565b600061238e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661240b9092919063ffffffff16565b8051909150156122fc57808060200190518101906123ac9190612bf6565b6122fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018c565b606061241a8484600085612422565b949350505050565b6060824710156124835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018c565b61248c85612251565b6124d85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516124f49190612bda565b60006040518083038185875af1925050503d8060008114612531576040519150601f19603f3d011682016040523d82523d6000602084013e612536565b606091505b5091509150612546828286612260565b979650505050505050565b82805461255d906129a6565b90600052602060002090601f01602090048101928261257f57600085556125c5565b82601f1061259857805160ff19168380011785556125c5565b828001600101855582156125c5579182015b828111156125c55782518255916020019190600101906125aa565b506125d19291506125d5565b5090565b5b808211156125d157600081556001016125d6565b600080604083850312156125fd57600080fd5b50508035926020909101359150565b60006020828403121561261e57600080fd5b81356001600160a01b038116811461187c57600080fd5b60006020828403121561264757600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561268a57600080fd5b81356001600160401b03808211156126a157600080fd5b818401915084601f8301126126b557600080fd5b8135818111156126c7576126c7612662565b604051601f8201601f19908116603f011681019083821181831017156126ef576126ef612662565b8160405282815287602084870101111561270857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561273b57600080fd5b82356001600160401b038082111561275257600080fd5b818501915085601f83011261276657600080fd5b81358181111561277557600080fd5b8660208260051b850101111561278a57600080fd5b60209290920196919550909350505050565b60005b838110156127b757818101518382015260200161279f565b83811115610dbb5750506000910152565b600081518084526127e081602086016020860161279c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561284957603f198886030184526128378583516127c8565b9450928501929085019060010161281b565b5092979650505050505050565b60006020828403121561286857600080fd5b81356001600160501b038116811461187c57600080fd5b60208152600061187c60208301846127c8565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b03838116908316818110156128f0576128f06128ba565b039392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261295c57600080fd5b8301803591506001600160401b0382111561297657600080fd5b60200191503681900382131561222f57600080fd5b600060001982141561299f5761299f6128ba565b5060010190565b600181811c908216806129ba57607f821691505b602082108114156129db57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160401b03808316818516808303821115612a0357612a036128ba565b01949350505050565b600082821015612a1e57612a1e6128ba565b500390565b600060208284031215612a3557600080fd5b5051919050565b60008219821115612a4f57612a4f6128ba565b500190565b634e487b7160e01b600052603160045260246000fd5b604081526000612a7d60408301856127c8565b8281036020840152611f4a81856127c8565b6000816000190483118215151615612aa957612aa96128ba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ae157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612b21578160001904821115612b0757612b076128ba565b80851615612b1457918102915b93841c9390800290612aeb565b509250929050565b600082612b3857506001610960565b81612b4557506000610960565b8160018114612b5b5760028114612b6557612b81565b6001915050610960565b60ff841115612b7657612b766128ba565b50506001821b610960565b5060208310610133831016604e8410600b8410161715612ba4575081810a610960565b612bae8383612ae6565b8060001904821115612bc257612bc26128ba565b029392505050565b600061187c61ffff841683612b29565b60008251612bec81846020870161279c565b9190910192915050565b600060208284031215612c0857600080fd5b8151801515811461187c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122029788aa75a676c66ec80ff620f683a3aa8c00fbc9f1463426733633b001ce95664736f6c634300080c0033",
    "sourceMap": "1627:5184:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:10;-1:-1:-1;;;;;2769:18:35;2755:32;;2747:77;;;;-1:-1:-1;;;2747:77:35;;216:2:641;2747:77:35;;;198:21:641;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2747:77:35;;;;;;;;;1627:5184;;;;;4486:700:152;;;;;;;;;;-1:-1:-1;4486:700:152;;;;;:::i;:::-;;:::i;1133:173:132:-;;;;;;;;;;-1:-1:-1;1133:173:132;;;;;:::i;:::-;;:::i;2880:165:35:-;;;;;;:::i;:::-;;:::i;2875:92:152:-;;;;;;;;;;-1:-1:-1;2875:92:152;;;;;:::i;:::-;;:::i;3196:78::-;;;;;;;;;;;;;:::i;1286:29::-;;;;;;;;;;-1:-1:-1;1286:29:152;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:37;;;;;;;;;;;;;;;1183:34;;;;;;;;;;;;;;;;;;;1458:25:641;;;1446:2;1431:18;1183:34:152;1312:177:641;871:86:132;;;;;;;;;;;;;:::i;1407:41:152:-;;;;;;;;;;-1:-1:-1;1407:41:152;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1407:41:152;;;-1:-1:-1;;;1407:41:152;;;-1:-1:-1;;;;;1407:41:152;;;;;;;;;-1:-1:-1;;;;;1741:32:641;;;1723:51;;-1:-1:-1;;;;;1810:31:641;;;1805:2;1790:18;;1783:59;1858:18;;;1851:34;1916:2;1901:18;;1894:34;1710:3;1695:19;1407:41:152;1494:440:641;1003:188:116;;;;;;;;;;-1:-1:-1;1003:188:116;;;;;:::i;:::-;;:::i;3340:124:35:-;;;;;;;;;;-1:-1:-1;3439:18:35;;3340:124;;5832:264:152;;;;;;;;;;;;;:::i;:::-;;;;3172:25:641;;;3228:2;3213:18;;3206:34;;;;3145:18;5832:264:152;2998:248:641;955:43:152;;;;;;;;;;;;;;;;;;3425:6:641;3413:19;;;3395:38;;3383:2;3368:18;955:43:152;3251:188:641;2573:94:152;;;;;;:::i;:::-;;:::i;698:319:127:-;;;;;;;;;;-1:-1:-1;698:319:127;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3545:481:152:-;;;;;;;;;;-1:-1:-1;3545:481:152;;;;;:::i;:::-;;:::i;865:44::-;;;;;;;;;;;;;;;5461:220;;;;;;;;;;-1:-1:-1;5461:220:152;;;;;:::i;:::-;;:::i;3105:159:35:-;;;;;;;;;;-1:-1:-1;3105:159:35;;;;;:::i;:::-;;:::i;5687:139:152:-;;;;;;;;;;;;;:::i;565:34:116:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1774:26:35:-;;;;;;;;;;-1:-1:-1;1774:26:35;;;;-1:-1:-1;;;;;1774:26:35;;;4486:700:152;4584:24;:22;:24::i;:::-;4579:80;;4624:24;;-1:-1:-1;;;4624:24:152;;;;;;;:::i;4579:80::-;4723:15;;4669:33;;4705:17;;4669:33;;4723:19;;4741:1;;-1:-1:-1;;;;;4723:15:152;:19;:::i;:::-;-1:-1:-1;;;;;4705:38:152;;;;;;;;;;;;;;;-1:-1:-1;4705:38:152;4669:74;;;;;;;;;-1:-1:-1;;;;;4669:74:152;;;;;-1:-1:-1;;;4669:74:152;;;;;;;;;;;-1:-1:-1;;;4669:74:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4774:44:152;;;;:96;;;4838:9;:32;;;4822:12;:48;;4774:96;4753:166;;;;-1:-1:-1;;;4753:166:152;;6829:2:641;4753:166:152;;;6811:21:641;6868:2;6848:18;;;6841:30;-1:-1:-1;;;6887:18:641;;;6880:53;6950:18;;4753:166:152;6627:347:641;4753:166:152;4950:18;;4929:66;;4970:10;4982:12;4929:20;:66::i;:::-;5043:30;;;;;5111:32;;;;;5011:168;;;7210:25:641;;;7266:2;7251:18;;7244:34;;;7294:18;;7287:34;7337:18;;;7330:34;;;5011:168:152;;7182:19:641;5011:168:152;;;;;;;4569:617;4486:700;;:::o;1133:173:132:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:132;;;;;;;:::i;1198:70::-;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;2880:165:35:-;245:1:313;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:313;;;;;;;:::i;:::-;245:1;678:18;;2974:29:35::1;2995:7:::0;2974:20:::1;:29::i;:::-;-1:-1:-1::0;202:1:313;851:7;:22;2880:165:35:o;2875:92:152:-;245:1:313;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:313;;;;;;;:::i;:::-;245:1;678:18;;2942::152::1;2952:7:::0;2942:9:::1;:18::i;3196:78::-:0;245:1:313;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:313;;;;;;;:::i;:::-;245:1;678:18;;3252:15:152::1;:13;:15::i;:::-;202:1:313::0;851:7;:22;3196:78:152:o;1286:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1286:29:152;;-1:-1:-1;1286:29:152;:::o;871:86:132:-;944:6;;-1:-1:-1;;;;;944:6:132;;871:86::o;1003:188:116:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:116;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;5832:264:152:-;5962:15;;5879:18;;;;5944:17;;5879:18;;5962:19;;5980:1;;-1:-1:-1;;;;;5962:15:152;:19;:::i;:::-;-1:-1:-1;;;;;5944:38:152;;;;;;;;;;;;:59;;;5931:72;;6028:17;:38;6064:1;6046:15;;;;;;;;;-1:-1:-1;;;;;6046:15:152;:19;;;;:::i;:::-;-1:-1:-1;;;;;6028:38:152;;;;;;;;;;;;:61;;;6013:76;;5832:264;;:::o;2573:94::-;245:1:313;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:313;;;;;;;:::i;:::-;245:1;678:18;;2645:15:152::1;2652:7:::0;2645:6:::1;:15::i;698:319:127:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:127;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:127;;-1:-1:-1;;;922:54:127:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;;:::o;3545:481:152:-;3616:24;:22;:24::i;:::-;3611:80;;3656:24;;-1:-1:-1;;;3656:24:152;;;;;;;:::i;3611:80::-;3755:15;;3701:33;;3737:17;;3701:33;;3755:19;;3773:1;;-1:-1:-1;;;;;3755:15:152;:19;:::i;:::-;-1:-1:-1;;;;;3737:38:152;;;;;;;;;;;;;;;-1:-1:-1;3737:38:152;3701:74;;;;;;;;;-1:-1:-1;;;;;3701:74:152;;;;;;-1:-1:-1;;;3701:74:152;;;;;;;;;;;-1:-1:-1;;;3701:74:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3793:31:152;;;;3785:64;;;;-1:-1:-1;;;3785:64:152;;8735:2:641;3785:64:152;;;8717:21:641;8774:2;8754:18;;;8747:30;-1:-1:-1;;;8793:18:641;;;8786:50;8853:18;;3785:64:152;8533:344:641;3785:64:152;3860:97;3881:9;3892;:30;;;3924:9;:32;;;3860:20;:97::i;:::-;3989:18;;3973:46;;;-1:-1:-1;;;;;9109:15:641;;;9091:34;;9161:15;;;9156:2;9141:18;;9134:43;3973:46:152;;9027:18:641;3973:46:152;;;;;;;;3601:425;3545:481;:::o;5461:220::-;-1:-1:-1;;;;;5598:16:152;;5531:21;5598:16;;;:7;:16;;;;;:29;;;;5648:26;5606:7;5648:17;:26::i;:::-;5637:37;;5461:220;;;:::o;3105:159:35:-;245:1:313;548:7;;:19;;540:63;;;;-1:-1:-1;;;540:63:313;;;;;;;:::i;:::-;245:1;678:18;;3192:30:35::1;3214:7:::0;3192:21:::1;:30::i;5687:139:152:-:0;5790:15;;5731:17;;5772;;5731;;5790:19;;5808:1;;-1:-1:-1;;;;;5790:15:152;:19;:::i;:::-;-1:-1:-1;;;;;5772:38:152;;;;;;;;;;;;-1:-1:-1;5772:38:152;:47;-1:-1:-1;;;;;5772:47:152;;5687:139;-1:-1:-1;5687:139:152:o;565:34:116:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6268:125:35:-;6342:4;6379:7;:5;:7::i;:::-;-1:-1:-1;;;;;6365:21:35;:10;-1:-1:-1;;;;;6365:21:35;;6358:28;;6268:125;:::o;10271:741:152:-;10426:17;10418:41;;;;-1:-1:-1;;;10418:41:152;;9775:2:641;10418:41:152;;;9757:21:641;9814:2;9794:18;;;9787:30;-1:-1:-1;;;9833:18:641;;;9826:41;9884:18;;10418:41:152;9573:335:641;10418:41:152;-1:-1:-1;;;;;10477:14:152;;10469:47;;;;-1:-1:-1;;;10469:47:152;;10115:2:641;10469:47:152;;;10097:21:641;10154:2;10134:18;;;10127:30;-1:-1:-1;;;10173:18:641;;;10166:50;10233:18;;10469:47:152;9913:344:641;10469:47:152;10548:15;;;-1:-1:-1;;;;;10548:15:152;;;;10526:19;10573:20;10548:15;;10573:20;:::i;:::-;;;-1:-1:-1;;;;;10573:20:152;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10637:239:152;;;;;;;;-1:-1:-1;;;;;10637:239:152;;;;;10820:15;10637:239;;;;;;;;;-1:-1:-1;10637:239:152;;;;;;;;;;;;;;;;;;10604:30;;;:17;:30;;;;;;;:272;;;;;;;;;;-1:-1:-1;;;10604:272:152;-1:-1:-1;;;;;;;;10604:272:152;;;-1:-1:-1;;;10604:272:152;-1:-1:-1;;;;;;10604:272:152;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10604:272:152;;;;;;;;;;10891:15;;10887:119;;10979:15;10922:17;:34;10940:15;10954:1;10940:11;:15;:::i;:::-;10922:34;;;;;;;;;;;:47;;;:73;;;;;-1:-1:-1;;;;;10922:73:152;;;;;-1:-1:-1;;;;;10922:73:152;;;;;;10887:119;10408:604;10271:741;;;:::o;1421:172:132:-;1501:6;;;-1:-1:-1;;;;;1517:18:132;;;-1:-1:-1;;;;;;1517:18:132;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;4558:660:35:-;4654:7;:5;:7::i;:::-;-1:-1:-1;;;;;4640:21:35;:10;-1:-1:-1;;;;;4640:21:35;;4632:48;;;;-1:-1:-1;;;4632:48:35;;;;;;;:::i;:::-;4714:11;;4691:20;;-1:-1:-1;;;;;4714:11:35;397:42:277;4714:47:35;:82;;4785:11;;-1:-1:-1;;;;;4785:11:35;4714:82;;;4764:18;4714:82;4691:105;;4807:21;4838:12;-1:-1:-1;;;;;4831:30:35;;4870:4;4831:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4947:11;;4807:69;;-1:-1:-1;4886:186:35;;-1:-1:-1;;;;;4947:11:35;4972:10;5004:4;5023:7;5044:18;4886:47;:186::i;:::-;5082:20;5153:13;5112:12;-1:-1:-1;;;;;5105:30:35;;5144:4;5105:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;5082:84;;5199:12;5177:18;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4558:660:35:o;7708:1103:152:-;12706:10;7771:21;7795:26;;;:7;:26;;;;;:39;;;7852:12;7844:45;;;;-1:-1:-1;;;7844:45:152;;11157:2:641;7844:45:152;;;11139:21:641;11196:2;11176:18;;;11169:30;-1:-1:-1;;;11215:18:641;;;11208:50;11275:18;;7844:45:152;10955:344:641;7844:45:152;7924:7;7907:13;:24;;7899:65;;;;-1:-1:-1;;;7899:65:152;;11506:2:641;7899:65:152;;;11488:21:641;11545:2;11525:18;;;11518:30;-1:-1:-1;;;11564:18:641;;;11557:58;11632:18;;7899:65:152;11304:352:641;7899:65:152;7975:51;12706:10;7975:32;:51::i;:::-;8058:7;8041:13;:24;8037:404;;;8081:30;8114:12;8081:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8081:45:152;;;;;;;;;;;;;;;;;;;;;;;8145:9;8140:291;8164:13;:20;8160:1;:24;8140:291;;;12706:10;-1:-1:-1;;;;;8213:37:152;:13;8227:1;8213:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8213:37:152;;8209:208;;;8292:13;8329:1;8306:13;:20;:24;;;;:::i;:::-;8292:39;;;;;;;;:::i;:::-;;;;;;;8274:12;8287:1;8274:15;;;;;;;;:::i;:::-;;;;;;;;;:57;;;;;-1:-1:-1;;;;;8274:57:152;;;;;-1:-1:-1;;;;;8274:57:152;;;;;;8353:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8353:18:152;;;;;-1:-1:-1;;;;;;8353:18:152;;;;;;8393:5;;8209:208;8186:3;;;:::i;:::-;;;8140:291;;;;8067:374;8037:404;12706:10;8450:26;;;;:7;:26;;;;;:39;;:50;;8493:7;;8450:26;:50;;8493:7;;8450:50;:::i;:::-;;;;;;;;8533:7;8510:19;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;8551:194:152;;-1:-1:-1;8612:12:152;8646:4;12706:10;8696:7;8717:18;8551:47;:194::i;:::-;8761:43;;1458:25:641;;;12706:10:152;;8761:43;;1446:2:641;1431:18;8761:43:152;;;;;;;7761:1050;7708:1103;:::o;8888:533::-;8940:15;9004:36;12706:10;9004:17;:36::i;:::-;12706:10;8958:26;;;;:7;:26;;;;;:43;;;:82;;;;:::i;:::-;8940:100;-1:-1:-1;9059:12:152;9051:35;;;;-1:-1:-1;;;9051:35:152;;11995:2:641;9051:35:152;;;11977:21:641;12034:2;12014:18;;;12007:30;-1:-1:-1;;;12053:18:641;;;12046:40;12103:18;;9051:35:152;11793:334:641;9051:35:152;12706:10;9097:26;;;;:7;:26;;;;;:69;;-1:-1:-1;;;;;;9097:69:152;9150:15;-1:-1:-1;;;;;9097:69:152;;;;9176:43;;:47;9286:15;;:19;;-1:-1:-1;;;;;;;9286:15:152;:19;:::i;:::-;12706:10;9233:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;9233:72:152;;;;-1:-1:-1;;;9233:72:152;-1:-1:-1;;;;;;;;9233:72:152;;;;;;;;;;9316:40;;9348:7;9316:12;:40::i;:::-;9372:42;;1458:25:641;;;12706:10:152;;9372:42;;1446:2:641;1431:18;9372:42:152;;;;;;;8930:491;8888:533::o;1273:185:116:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:18:116;;1339:35;;-1:-1:-1;1384:18:116;;:11;;-1:-1:-1;1384:18:116;;;;-1:-1:-1;1384:18:116;-1:-1:-1;1384:18:116;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;6347:1296:152:-;6415:12;6407:41;;;;-1:-1:-1;;;6407:41:152;;12720:2:641;6407:41:152;;;12702:21:641;12759:2;12739:18;;;12732:30;-1:-1:-1;;;12778:18:641;;;12771:46;12834:18;;6407:41:152;12518:340:641;6407:41:152;6459:21;6494:12;-1:-1:-1;;;;;6494:48:152;397:42:277;6494:48:152;6490:224;;;-1:-1:-1;6574:18:152;6490:224;;;6631:9;:14;6623:38;;;;-1:-1:-1;;;6623:38:152;;13065:2:641;6623:38:152;;;13047:21:641;13104:2;13084:18;;;13077:30;-1:-1:-1;;;13123:18:641;;;13116:41;13174:18;;6623:38:152;12863:335:641;6623:38:152;-1:-1:-1;6691:12:152;6490:224;12706:10;6770:1;6728:26;;;:7;:26;;;;;:39;;;:43;6724:361;;6787:51;12706:10;7975:32;:51::i;6787:::-;6724:361;;;6869:12;:36;;;;;;;;;;;;;-1:-1:-1;;;;;;6869:36:152;12706:10;6869:36;;;;;;-1:-1:-1;6919:26:152;;;:7;6869:36;6919:26;;;;:69;;-1:-1:-1;;;;;;6919:69:152;-1:-1:-1;;;;;6972:15:152;6919:69;;;;7055:15;;:19;;6869:36;-1:-1:-1;;;;;7055:15:152;:19;:::i;:::-;12706:10;7002:26;;;;:7;:26;;;;;:72;;-1:-1:-1;;;;;7002:72:152;;;;-1:-1:-1;;;7002:72:152;-1:-1:-1;;;;;;;;7002:72:152;;;;;;;;;6724:361;7119:46;;-1:-1:-1;;;7119:46:152;;7095:21;;-1:-1:-1;;;;;7119:31:152;;;;;:46;;7159:4;;7119:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7095:70;-1:-1:-1;7175:194:152;7236:12;12706:10;7301:4;7320:7;7341:18;7175:47;:194::i;:::-;7379:20;7451:13;7409;-1:-1:-1;;;;;7402:31:152;;7442:4;7402:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;:::i;:::-;12706:10;7475:26;;;;:7;:26;;;;;:39;;:55;;7379:85;;-1:-1:-1;7379:85:152;;7475:39;;:26;:55;;7379:85;;7475:55;:::i;:::-;;;;;;;;7563:12;7540:19;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;7591:45:152;;1458:25:641;;;12706:10:152;;7591:45;;1446:2:641;1431:18;7591:45:152;;;;;;;6397:1246;;;6347:1296;:::o;6538:198:281:-;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:281:o;9475:322:152:-;-1:-1:-1;;;;;9582:16:152;;9550;9582;;;:7;:16;;;;;:29;;;9578:213;;-1:-1:-1;;;;;;9643:16:152;;;;;:7;:16;;;;;:33;;;;9475:322::o;9578:213::-;9754:26;9772:7;9754:17;:26::i;:::-;-1:-1:-1;;;;;9718:16:152;;;;;;:7;:16;;;;;:33;;;:62;;;;:::i;5307:866:35:-;5404:7;:5;:7::i;:::-;-1:-1:-1;;;;;5390:21:35;:10;-1:-1:-1;;;;;5390:21:35;;5382:48;;;;-1:-1:-1;;;5382:48:35;;;;;;;:::i;:::-;5531:18;;5521:7;:28;:63;;5577:7;5556:18;;:28;;;;:::i;:::-;5521:63;;;5552:1;5521:63;5500:18;:84;5656:11;;5595:186;;-1:-1:-1;;;;;5656:11:35;5689:4;5708:10;5732:7;5753:18;5595:47;:186::i;:::-;5902:21;5926:12;-1:-1:-1;;;;;5926:48:35;397:42:277;5926:48:35;:84;;5998:12;5926:84;;;5977:18;5926:84;5902:108;;6091:19;;6048:13;-1:-1:-1;;;;;6041:31:35;;6081:4;6041:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;6020:146;;;;-1:-1:-1;;;6020:146:35;;13405:2:641;6020:146:35;;;13387:21:641;13444:2;13424:18;;;13417:30;13483:32;13463:18;;;13456:60;13533:18;;6020:146:35;13203:354:641;6020:146:35;5372:801;5307:866;:::o;968:1021:277:-;1167:12;1163:49;;1195:7;;1163:49;-1:-1:-1;;;;;1226:25:277;;397:42;1226:25;1222:761;;;-1:-1:-1;;;;;1271:22:277;;1288:4;1271:22;1267:626;;;1401:44;;-1:-1:-1;;;1401:44:277;;;;;1458:25:641;;;-1:-1:-1;;;;;1401:35:277;;;;;1431:18:641;;1401:44:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:69;1498:3;1503:7;1512:19;1463:34;:69::i;:::-;1222:761;;1267:626;-1:-1:-1;;;;;1557:20:277;;1572:4;1557:20;1553:340;;;1665:9;1654:7;:20;1646:52;;;;-1:-1:-1;;;1646:52:277;;13764:2:641;1646:52:277;;;13746:21:641;13803:2;13783:18;;;13776:30;-1:-1:-1;;;13822:18:641;;;13815:49;13881:18;;1646:52:277;13562:343:641;1646:52:277;1722:19;-1:-1:-1;;;;;1716:34:277;;1759:7;1716:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:761;;1553:340;1809:69;1844:3;1849:7;1858:19;1809:34;:69::i;1222:761::-;1923:49;1941:9;1952:5;1959:3;1964:7;1923:17;:49::i;:::-;968:1021;;;;;:::o;9896:332:152:-;9982:15;10000:26;10018:7;10000:17;:26::i;:::-;-1:-1:-1;;;;;10036:16:152;;;;;;:7;:16;;;;;:33;;:44;;9982;;-1:-1:-1;9982:44:152;;10036:33;;:16;:44;;9982;;10036;:::i;:::-;;;;-1:-1:-1;;;;;;;10090:16:152;;;;;;:7;:16;;;;;:59;;-1:-1:-1;;;;;;10090:59:152;-1:-1:-1;;;;;10133:15:152;10090:59;;;;10202:15;;:19;;10090:59;;-1:-1:-1;;;;;10202:15:152;:19;:::i;:::-;-1:-1:-1;;;;;10159:16:152;;;;;;;:7;:16;;;;;:62;;-1:-1:-1;;;;;10159:62:152;;;;-1:-1:-1;;;10159:62:152;-1:-1:-1;;;;;;;;10159:62:152;;;;;;;;;;-1:-1:-1;9896:332:152:o;11063:1257::-;-1:-1:-1;;;;;11189:16:152;;11138;11189;;;:7;:16;;;;;;;;11166:39;;;;;;;;;-1:-1:-1;;;;;11166:39:152;;;;-1:-1:-1;;;;;;;;11166:39:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11312:15;;11166:39;;;11312:15;11166:39;11338:851;11379:16;11375:1;:20;11338:851;;;11419:33;11455:20;;;:17;:20;;;;;;;;11419:56;;;;;;;;;-1:-1:-1;;;;;11419:56:152;;;;;-1:-1:-1;;;11419:56:152;;;;;;;;;;;-1:-1:-1;;;11419:56:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;11510:23;;;;:76;;11563:23;;11510:76;;;11536:9;:24;;;-1:-1:-1;;;;;11510:76:152;;-1:-1:-1;;;;;11490:96:152;;;11600:15;11618:9;:22;;;-1:-1:-1;;;;;11618:27:152;11644:1;11618:27;;:70;;11673:15;11618:70;;;11648:9;:22;;;-1:-1:-1;;;;;11618:70:152;;11600:88;;11704:22;11728;11754:138;11811:6;:19;;;11798:9;11788:7;:19;;;;:::i;:::-;11787:43;;;;:::i;:::-;11848:9;:30;;;11754:15;:138::i;:::-;11703:189;;;;11907:18;11927;11949:145;11982:8;12048:9;:32;;;12026:9;:18;;;-1:-1:-1;;;;;12009:35:152;:14;:35;;;;:::i;:::-;12008:72;;;;:::i;:::-;11949:15;:145::i;:::-;11906:188;;;;12120:17;:34;;;;;12141:13;12120:34;:58;;12170:8;12120:58;;;12157:10;12120:58;12109:69;;11405:784;;;;;;;11402:1;11397:6;;;;;:::i;:::-;;;11338:851;;;-1:-1:-1;12214:50:152;12230:8;12240:23;12244:19;12240:2;:23;:::i;:::-;12214:15;:50::i;:::-;12199:65;-1:-1:-1;12288:24:152;;-1:-1:-1;12292:20:152;12288:2;:24;:::i;:::-;12275:38;;;;:::i;:::-;;11063:1257;-1:-1:-1;;;;;11063:1257:152:o;3891:401:35:-;4004:18;;3992:8;:30;;3984:67;;;;-1:-1:-1;;;3984:67:35;;16025:2:641;3984:67:35;;;16007:21:641;16064:2;16044:18;;;16037:30;-1:-1:-1;;;16083:18:641;;;16076:54;16147:18;;3984:67:35;15823:348:641;3984:67:35;4083:8;4061:18;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4162:11:35;;4101:184;;-1:-1:-1;;;;;4162:11:35;4195:4;4214:7;4235:8;4257:18;4101:47;:184::i;6922:387:281:-;7063:12;7095:18;7106:6;7095:10;:18::i;:::-;7087:69;;;;-1:-1:-1;;;7087:69:281;;16378:2:641;7087:69:281;;;16360:21:641;16417:2;16397:18;;;16390:30;16456:34;16436:18;;;16429:62;-1:-1:-1;;;16507:18:641;;;16500:36;16553:19;;7087:69:281;16176:402:641;7087:69:281;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:281;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:281:o;2905:469:277:-;3157:12;3175:2;-1:-1:-1;;;;;3175:7:277;3191:5;3175:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:46;;;3217:7;3212:156;;3246:19;-1:-1:-1;;;;;3240:34:277;;3283:5;3240:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3306:51:277;;-1:-1:-1;;;;;;;;3306:40:277;;;-1:-1:-1;3347:2:277;3351:5;3306:40;:51::i;2062:396::-;2223:3;-1:-1:-1;;;;;2214:12:277;:5;-1:-1:-1;;;;;2214:12:277;;2210:49;;;2242:7;;2210:49;-1:-1:-1;;;;;2273:22:277;;2290:4;2273:22;2269:183;;;2311:44;-1:-1:-1;;;;;2311:30:277;;2342:3;2347:7;2311:30;:44::i;:::-;2269:183;;;2386:55;-1:-1:-1;;;;;2386:34:277;;2421:5;2428:3;2433:7;2386:34;:55::i;1339:493:336:-;1400:4;;1683:6;1679:28;;-1:-1:-1;1699:4:336;;-1:-1:-1;1705:1:336;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:336;-1:-1:-1;1339:493:336;;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;1137:320:281;-1:-1:-1;;;;;1427:19:281;;:23;;;1137:320::o;7529:692::-;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:281;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:281;;;;;;;;:::i;729:205:321:-;868:58;;-1:-1:-1;;;;;17264:32:641;;868:58:321;;;17246:51:641;17313:18;;;17306:34;;;841:86:321;;861:5;;-1:-1:-1;;;891:23:321;17219:18:641;;868:58:321;;;;-1:-1:-1;;868:58:321;;;;;;;;;;;;;;-1:-1:-1;;;;;868:58:321;-1:-1:-1;;;;;;868:58:321;;;;;;;;;;841:19;:86::i;:::-;729:205;;;:::o;940:241::-;1105:68;;-1:-1:-1;;;;;17609:15:641;;;1105:68:321;;;17591:34:641;17661:15;;17641:18;;;17634:43;17693:18;;;17686:34;;;1078:96:321;;1098:5;;-1:-1:-1;;;1128:27:321;17526:18:641;;1105:68:321;17351:375:641;3235:706:321;3654:23;3680:69;3708:4;3680:69;;;;;;;;;;;;;;;;;3688:5;-1:-1:-1;;;;;3680:27:321;;;:69;;;;;:::i;:::-;3763:17;;3654:95;;-1:-1:-1;3763:21:321;3759:176;;3858:10;3847:30;;;;;;;;;;;;:::i;:::-;3839:85;;;;-1:-1:-1;;;3839:85:321;;18215:2:641;3839:85:321;;;18197:21:641;18254:2;18234:18;;;18227:30;18293:34;18273:18;;;18266:62;-1:-1:-1;;;18344:18:641;;;18337:40;18394:19;;3839:85:321;18013:406:641;3827:223:281;3960:12;3991:52;4013:6;4021:4;4027:1;4030:12;3991:21;:52::i;:::-;3984:59;3827:223;-1:-1:-1;;;;3827:223:281:o;4914:501::-;5079:12;5136:5;5111:21;:30;;5103:81;;;;-1:-1:-1;;;5103:81:281;;18626:2:641;5103:81:281;;;18608:21:641;18665:2;18645:18;;;18638:30;18704:34;18684:18;;;18677:62;-1:-1:-1;;;18755:18:641;;;18748:36;18801:19;;5103:81:281;18424:402:641;5103:81:281;5202:18;5213:6;5202:10;:18::i;:::-;5194:60;;;;-1:-1:-1;;;5194:60:281;;19033:2:641;5194:60:281;;;19015:21:641;19072:2;19052:18;;;19045:30;19111:31;19091:18;;;19084:59;19160:18;;5194:60:281;18831:353:641;5194:60:281;5266:12;5280:23;5307:6;-1:-1:-1;;;;;5307:11:281;5327:5;5335:4;5307:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5265:75;;;;5357:51;5374:7;5383:10;5395:12;5357:16;:51::i;:::-;5350:58;4914:501;-1:-1:-1;;;;;;;4914:501:281:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;375:248:641;443:6;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;-1:-1:-1;;543:23:641;;;613:2;598:18;;;585:32;;-1:-1:-1;375:248:641:o;628:286::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;782:23;;-1:-1:-1;;;;;834:31:641;;824:42;;814:70;;880:1;877;870:12;919:180;978:6;1031:2;1019:9;1010:7;1006:23;1002:32;999:52;;;1047:1;1044;1037:12;999:52;-1:-1:-1;1070:23:641;;919:180;-1:-1:-1;919:180:641:o;1104:203::-;-1:-1:-1;;;;;1268:32:641;;;;1250:51;;1238:2;1223:18;;1104:203::o;1939:127::-;2000:10;1995:3;1991:20;1988:1;1981:31;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2071:922;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;-1:-1:-1;;;;;2319:2:641;2311:6;2308:14;2305:34;;;2335:1;2332;2325:12;2305:34;2373:6;2362:9;2358:22;2348:32;;2418:7;2411:4;2407:2;2403:13;2399:27;2389:55;;2440:1;2437;2430:12;2389:55;2476:2;2463:16;2498:2;2494;2491:10;2488:36;;;2504:18;;:::i;:::-;2579:2;2573:9;2547:2;2633:13;;-1:-1:-1;;2629:22:641;;;2653:2;2625:31;2621:40;2609:53;;;2677:18;;;2697:22;;;2674:46;2671:72;;;2723:18;;:::i;:::-;2763:10;2759:2;2752:22;2798:2;2790:6;2783:18;2838:7;2833:2;2828;2824;2820:11;2816:20;2813:33;2810:53;;;2859:1;2856;2849:12;2810:53;2915:2;2910;2906;2902:11;2897:2;2889:6;2885:15;2872:46;2960:1;2938:15;;;2955:2;2934:24;2927:35;;;;-1:-1:-1;2942:6:641;2071:922;-1:-1:-1;;;;;2071:922:641:o;3444:626::-;3541:6;3549;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3658:9;3645:23;-1:-1:-1;;;;;3728:2:641;3720:6;3717:14;3714:34;;;3744:1;3741;3734:12;3714:34;3782:6;3771:9;3767:22;3757:32;;3827:7;3820:4;3816:2;3812:13;3808:27;3798:55;;3849:1;3846;3839:12;3798:55;3889:2;3876:16;3915:2;3907:6;3904:14;3901:34;;;3931:1;3928;3921:12;3901:34;3984:7;3979:2;3969:6;3966:1;3962:14;3958:2;3954:23;3950:32;3947:45;3944:65;;;4005:1;4002;3995:12;3944:65;4036:2;4028:11;;;;;4058:6;;-1:-1:-1;3444:626:641;;-1:-1:-1;;;;3444:626:641:o;4075:258::-;4147:1;4157:113;4171:6;4168:1;4165:13;4157:113;;;4247:11;;;4241:18;4228:11;;;4221:39;4193:2;4186:10;4157:113;;;4288:6;4285:1;4282:13;4279:48;;;-1:-1:-1;;4323:1:641;4305:16;;4298:27;4075:258::o;4338:257::-;4379:3;4417:5;4411:12;4444:6;4439:3;4432:19;4460:63;4516:6;4509:4;4504:3;4500:14;4493:4;4486:5;4482:16;4460:63;:::i;:::-;4577:2;4556:15;-1:-1:-1;;4552:29:641;4543:39;;;;4584:4;4539:50;;4338:257;-1:-1:-1;;4338:257:641:o;4600:800::-;4760:4;4789:2;4829;4818:9;4814:18;4859:2;4848:9;4841:21;4882:6;4917;4911:13;4948:6;4940;4933:22;4986:2;4975:9;4971:18;4964:25;;5048:2;5038:6;5035:1;5031:14;5020:9;5016:30;5012:39;4998:53;;5086:2;5078:6;5074:15;5107:1;5117:254;5131:6;5128:1;5125:13;5117:254;;;5224:2;5220:7;5208:9;5200:6;5196:22;5192:36;5187:3;5180:49;5252:39;5284:6;5275;5269:13;5252:39;:::i;:::-;5242:49;-1:-1:-1;5349:12:641;;;;5314:15;;;;5153:1;5146:9;5117:254;;;-1:-1:-1;5388:6:641;;4600:800;-1:-1:-1;;;;;;;4600:800:641:o;5405:284::-;5463:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:52;;;5532:1;5529;5522:12;5484:52;5558:23;;-1:-1:-1;;;;;5610:30:641;;5600:41;;5590:69;;5655:1;5652;5645:12;5694:219;5843:2;5832:9;5825:21;5806:4;5863:44;5903:2;5892:9;5888:18;5880:6;5863:44;:::i;5918:338::-;6120:2;6102:21;;;6159:2;6139:18;;;6132:30;-1:-1:-1;;;6193:2:641;6178:18;;6171:44;6247:2;6232:18;;5918:338::o;6261:127::-;6322:10;6317:3;6313:20;6310:1;6303:31;6353:4;6350:1;6343:15;6377:4;6374:1;6367:15;6393:229;6432:4;-1:-1:-1;;;;;6529:10:641;;;;6499;;6551:12;;;6548:38;;;6566:18;;:::i;:::-;6603:13;;6393:229;-1:-1:-1;;;6393:229:641:o;7375:355::-;7577:2;7559:21;;;7616:2;7596:18;;;7589:30;7655:33;7650:2;7635:18;;7628:61;7721:2;7706:18;;7375:355::o;7735:127::-;7796:10;7791:3;7787:20;7784:1;7777:31;7827:4;7824:1;7817:15;7851:4;7848:1;7841:15;7867:521;7944:4;7950:6;8010:11;7997:25;8104:2;8100:7;8089:8;8073:14;8069:29;8065:43;8045:18;8041:68;8031:96;;8123:1;8120;8113:12;8031:96;8150:33;;8202:20;;;-1:-1:-1;;;;;;8234:30:641;;8231:50;;;8277:1;8274;8267:12;8231:50;8310:4;8298:17;;-1:-1:-1;8341:14:641;8337:27;;;8327:38;;8324:58;;;8378:1;8375;8368:12;8393:135;8432:3;-1:-1:-1;;8453:17:641;;8450:43;;;8473:18;;:::i;:::-;-1:-1:-1;8520:1:641;8509:13;;8393:135::o;9188:380::-;9267:1;9263:12;;;;9310;;;9331:61;;9385:4;9377:6;9373:17;9363:27;;9331:61;9438:2;9430:6;9427:14;9407:18;9404:38;9401:161;;;9484:10;9479:3;9475:20;9472:1;9465:31;9519:4;9516:1;9509:15;9547:4;9544:1;9537:15;9401:161;;9188:380;;;:::o;10262:236::-;10301:3;-1:-1:-1;;;;;10374:2:641;10371:1;10367:10;10404:2;10401:1;10397:10;10435:3;10431:2;10427:12;10422:3;10419:21;10416:47;;;10443:18;;:::i;:::-;10479:13;;10262:236;-1:-1:-1;;;;10262:236:641:o;10503:125::-;10543:4;10571:1;10568;10565:8;10562:34;;;10576:18;;:::i;:::-;-1:-1:-1;10613:9:641;;10503:125::o;10633:184::-;10703:6;10756:2;10744:9;10735:7;10731:23;10727:32;10724:52;;;10772:1;10769;10762:12;10724:52;-1:-1:-1;10795:16:641;;10633:184;-1:-1:-1;10633:184:641:o;10822:128::-;10862:3;10893:1;10889:6;10886:1;10883:13;10880:39;;;10899:18;;:::i;:::-;-1:-1:-1;10935:9:641;;10822:128::o;11661:127::-;11722:10;11717:3;11713:20;11710:1;11703:31;11753:4;11750:1;11743:15;11777:4;11774:1;11767:15;12132:381;12329:2;12318:9;12311:21;12292:4;12355:44;12395:2;12384:9;12380:18;12372:6;12355:44;:::i;:::-;12447:9;12439:6;12435:22;12430:2;12419:9;12415:18;12408:50;12475:32;12500:6;12492;12475:32;:::i;13910:168::-;13950:7;14016:1;14012;14008:6;14004:14;14001:1;13998:21;13993:1;13986:9;13979:17;13975:45;13972:71;;;14023:18;;:::i;:::-;-1:-1:-1;14063:9:641;;13910:168::o;14083:127::-;14144:10;14139:3;14135:20;14132:1;14125:31;14175:4;14172:1;14165:15;14199:4;14196:1;14189:15;14215:217;14255:1;14281;14271:132;;14325:10;14320:3;14316:20;14313:1;14306:31;14360:4;14357:1;14350:15;14388:4;14385:1;14378:15;14271:132;-1:-1:-1;14417:9:641;;14215:217::o;14437:422::-;14526:1;14569:5;14526:1;14583:270;14604:7;14594:8;14591:21;14583:270;;;14663:4;14659:1;14655:6;14651:17;14645:4;14642:27;14639:53;;;14672:18;;:::i;:::-;14722:7;14712:8;14708:22;14705:55;;;14742:16;;;;14705:55;14821:22;;;;14781:15;;;;14583:270;;;14587:3;14437:422;;;;;:::o;14864:806::-;14913:5;14943:8;14933:80;;-1:-1:-1;14984:1:641;14998:5;;14933:80;15032:4;15022:76;;-1:-1:-1;15069:1:641;15083:5;;15022:76;15114:4;15132:1;15127:59;;;;15200:1;15195:130;;;;15107:218;;15127:59;15157:1;15148:10;;15171:5;;;15195:130;15232:3;15222:8;15219:17;15216:43;;;15239:18;;:::i;:::-;-1:-1:-1;;15295:1:641;15281:16;;15310:5;;15107:218;;15409:2;15399:8;15396:16;15390:3;15384:4;15381:13;15377:36;15371:2;15361:8;15358:16;15353:2;15347:4;15344:12;15340:35;15337:77;15334:159;;;-1:-1:-1;15446:19:641;;;15478:5;;15334:159;15525:34;15550:8;15544:4;15525:34;:::i;:::-;15595:6;15591:1;15587:6;15583:19;15574:7;15571:32;15568:58;;;15606:18;;:::i;:::-;15644:20;;14864:806;-1:-1:-1;;;14864:806:641:o;15675:143::-;15734:5;15763:49;15804:6;15794:8;15790:21;15784:4;15763:49;:::i;16583:274::-;16712:3;16750:6;16744:13;16766:53;16812:6;16807:3;16800:4;16792:6;16788:17;16766:53;:::i;:::-;16835:16;;;;;16583:274;-1:-1:-1;;16583:274:641:o;17731:277::-;17798:6;17851:2;17839:9;17830:7;17826:23;17822:32;17819:52;;;17867:1;17864;17857:12;17819:52;17899:9;17893:16;17952:5;17945:13;17938:21;17931:5;17928:32;17918:60;;17974:1;17971;17964:12",
    "linkReferences": {},
    "immutableReferences": {
      "44494": [
        {
          "start": 291,
          "length": 32
        },
        {
          "start": 3719,
          "length": 32
        },
        {
          "start": 3888,
          "length": 32
        },
        {
          "start": 4703,
          "length": 32
        },
        {
          "start": 5438,
          "length": 32
        },
        {
          "start": 5945,
          "length": 32
        },
        {
          "start": 6496,
          "length": 32
        },
        {
          "start": 6642,
          "length": 32
        },
        {
          "start": 8140,
          "length": 32
        }
      ],
      "44497": [
        {
          "start": 620,
          "length": 32
        },
        {
          "start": 4667,
          "length": 32
        },
        {
          "start": 5368,
          "length": 32
        },
        {
          "start": 5537,
          "length": 32
        },
        {
          "start": 5909,
          "length": 32
        },
        {
          "start": 6536,
          "length": 32
        },
        {
          "start": 6604,
          "length": 32
        }
      ],
      "44500": [
        {
          "start": 1128,
          "length": 32
        },
        {
          "start": 7962,
          "length": 32
        }
      ],
      "44503": [
        {
          "start": 961,
          "length": 32
        },
        {
          "start": 7910,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "claimRewards()": "372500ab",
    "contractURI()": "e8a3d485",
    "depositRewardTokens(uint256)": "16c621e0",
    "getRewardRatio()": "97e1b4bc",
    "getRewardTokenBalance()": "93ce5343",
    "getStakeInfo(address)": "c3453153",
    "getTimeUnit()": "d68124c7",
    "multicall(bytes[])": "ac9650d8",
    "owner()": "8da5cb5b",
    "rewardToken()": "f7c618c1",
    "rewardTokenDecimals()": "9bdcecd1",
    "setContractURI(string)": "938e3d7b",
    "setOwner(address)": "13af4035",
    "setRewardRatio(uint256,uint256)": "001b7934",
    "setTimeUnit(uint80)": "b218f069",
    "stake(uint256)": "a694fc3a",
    "stakers(address)": "9168ae72",
    "stakersArray(uint256)": "5357e916",
    "stakingToken()": "72f702f3",
    "stakingTokenBalance()": "8caaa271",
    "stakingTokenDecimals()": "b9f7a7b5",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawRewardTokens(uint256)": "cb43b2dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"},{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatioDenominator\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDenominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDenominator\",\"type\":\"uint256\"}],\"name\":\"UpdatedRewardRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimeUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeUnit\",\"type\":\"uint256\"}],\"name\":\"UpdatedTimeUnit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setRewardRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_timeUnit\",\"type\":\"uint80\"}],\"name\":\"setTimeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"conditionIdOflastUpdate\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenDecimals\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic.\"},\"depositRewardTokens(uint256)\":{\"details\":\"Admin deposits reward tokens.\"},\"getStakeInfo(address)\":{\"params\":{\"_staker\":\"Address for which to calculated rewards.\"},\"returns\":{\"_rewards\":\"       Available reward amount.\",\"_tokensStaked\":\"  Amount of tokens staked.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRewardRatio(uint256,uint256)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_denominator\":\"Reward ratio denominator.\",\"_numerator\":\"Reward ratio numerator.\"}},\"setTimeUnit(uint80)\":{\"details\":\"Only admin/authorized-account can call it.\",\"params\":{\"_timeUnit\":\"New time unit.\"}},\"stake(uint256)\":{\"details\":\"See {_stake}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to stake.\"}},\"withdraw(uint256)\":{\"details\":\"See {_withdraw}. Override that to implement custom logic.\",\"params\":{\"_amount\":\"Amount to withdraw.\"}},\"withdrawRewardTokens(uint256)\":{\"details\":\"Admin can withdraw excess reward tokens.\"}},\"stateVariables\":{\"rewardToken\":{\"details\":\"ERC20 Reward Token address. See {_mintRewards} below.\"},\"rewardTokenBalance\":{\"details\":\"Total amount of reward tokens in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards()\":{\"notice\":\"Claim accumulated rewards.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getRewardTokenBalance()\":{\"notice\":\"View total rewards available in the staking contract.\"},\"getStakeInfo(address)\":{\"notice\":\"View amount staked and rewards for a user.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRewardRatio(uint256,uint256)\":{\"notice\":\"Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked.\"},\"setTimeUnit(uint80)\":{\"notice\":\"Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc.\"},\"stake(uint256)\":{\"notice\":\"Stake ERC20 Tokens.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw staked ERC20 tokens.\"}},\"notice\":\"note: This contract is provided as a base contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Staking20Base.sol\":\"Staking20Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/base/Staking20Base.sol\":{\"keccak256\":\"0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a\",\"dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT\"]},\"contracts/eip/interface/IERC20.sol\":{\"keccak256\":\"0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592\",\"dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA\"]},\"contracts/eip/interface/IERC20Metadata.sol\":{\"keccak256\":\"0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65\",\"dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1\"]},\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"contracts/extension/Staking20.sol\":{\"keccak256\":\"0xdadbca762a3fa27524b58f869ff42a75ef13354536c9d166e80da8168cf1643c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://746f5640a21d6fcd08f09d0ac4410bc22abfafabb0e0d6001d5de92b578145cb\",\"dweb:/ipfs/QmXG8zrEmSVRtkhxwKTsJsRfKxZnjnUrmrqA5XMKnb7R2c\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"contracts/extension/interface/IStaking20.sol\":{\"keccak256\":\"0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852\",\"dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1\",\"dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU\"]},\"contracts/lib/CurrencyTransferLib.sol\":{\"keccak256\":\"0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a\",\"dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5\"]},\"contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"contracts/openzeppelin-presets/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790\",\"dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4\"]},\"contracts/openzeppelin-presets/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            },
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioNumerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewardRatioDenominator",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenWrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumerator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldDenominator",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDenominator",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedRewardRatio",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldTimeUnit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTimeUnit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedTimeUnit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokensStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeUnit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_timeUnit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_denominator",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint80",
              "name": "_timeUnit",
              "type": "uint80"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimeUnit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "timeOfLastUpdate",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "conditionIdOflastUpdate",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimedRewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakersArray",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingTokenDecimals",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewardTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards()": {
            "details": "See {_claimRewards}. Override that to implement custom logic.             See {_calculateRewards} for reward-calculation logic."
          },
          "depositRewardTokens(uint256)": {
            "details": "Admin deposits reward tokens."
          },
          "getStakeInfo(address)": {
            "params": {
              "_staker": "Address for which to calculated rewards."
            },
            "returns": {
              "_rewards": "       Available reward amount.",
              "_tokensStaked": "  Amount of tokens staked."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRewardRatio(uint256,uint256)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_denominator": "Reward ratio denominator.",
              "_numerator": "Reward ratio numerator."
            }
          },
          "setTimeUnit(uint80)": {
            "details": "Only admin/authorized-account can call it.",
            "params": {
              "_timeUnit": "New time unit."
            }
          },
          "stake(uint256)": {
            "details": "See {_stake}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to stake."
            }
          },
          "withdraw(uint256)": {
            "details": "See {_withdraw}. Override that to implement custom logic.",
            "params": {
              "_amount": "Amount to withdraw."
            }
          },
          "withdrawRewardTokens(uint256)": {
            "details": "Admin can withdraw excess reward tokens."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards()": {
            "notice": "Claim accumulated rewards."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getRewardTokenBalance()": {
            "notice": "View total rewards available in the staking contract."
          },
          "getStakeInfo(address)": {
            "notice": "View amount staked and rewards for a user."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRewardRatio(uint256,uint256)": {
            "notice": "Set rewards per unit of time.           Interpreted as (numerator/denominator) rewards per second/per day/etc based on time-unit.           For e.g., ratio of 1/20 would mean 1 reward token for every 20 tokens staked."
          },
          "setTimeUnit(uint80)": {
            "notice": "Set time unit. Set as a number of seconds.           Could be specified as -- x * 1 hours, x * 1 days, etc."
          },
          "stake(uint256)": {
            "notice": "Stake ERC20 Tokens."
          },
          "withdraw(uint256)": {
            "notice": "Withdraw staked ERC20 tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/chainlink/",
        "@ds-test/=lib/ds-test/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/",
        "ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/",
        "contracts/=contracts/",
        "ds-test/=lib/ds-test/src/",
        "dynamic-contracts/=lib/dynamic-contracts/src/",
        "erc4626-tests/=lib/chainlink/contracts/foundry-lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        "erc721a/=lib/ERC721A/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/Staking20Base.sol": "Staking20Base"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/Staking20Base.sol": {
        "keccak256": "0xfae7e16ca6383b8d5259a5a09f0ba86e17597b5f9ef7d849dec1fc07a86b987b",
        "urls": [
          "bzz-raw://967a603fe1218b1c7e2c787fa4a16d19f9b24e584b9a77c6045316173f0ea62a",
          "dweb:/ipfs/QmUe4yajq8J4HEAvxoxHF4kfrkb9muzkPRa5sTNrtcuAnT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20.sol": {
        "keccak256": "0x5bdd9dd97ba7d9d7c9a2953db287e4d9d7fa93a27a96bc2e72a8da4919b6f7ff",
        "urls": [
          "bzz-raw://45527c265ee5de6bbb3ecfc052e7b1175531a82c2ac16172020aee855f7dd592",
          "dweb:/ipfs/QmVZthqbG916qUQSwv1LE8bB58ZGQ1VfQbLbbRV5urfEYA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/eip/interface/IERC20Metadata.sol": {
        "keccak256": "0xc2500d7a12573fc6f9714d806bec722ad4110a68e6dd14b69903042421001734",
        "urls": [
          "bzz-raw://02423735619f14f3a13fae0ad6e407385565f159ad956c8bd1c14b3605a73a65",
          "dweb:/ipfs/QmYfYWh5wGidaQ7qDbC8oSuQ3gsnd3moJbWZ8yBzMnrYz1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/Staking20.sol": {
        "keccak256": "0xdadbca762a3fa27524b58f869ff42a75ef13354536c9d166e80da8168cf1643c",
        "urls": [
          "bzz-raw://746f5640a21d6fcd08f09d0ac4410bc22abfafabb0e0d6001d5de92b578145cb",
          "dweb:/ipfs/QmXG8zrEmSVRtkhxwKTsJsRfKxZnjnUrmrqA5XMKnb7R2c"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "contracts/extension/interface/IStaking20.sol": {
        "keccak256": "0xb7abd61f05ee0607bae639fd4f5f947aa78e067e3201af4d18e58069cba69828",
        "urls": [
          "bzz-raw://063d9a39c5c7078fe3d4f5b7908333d5d36e0c1b59433b1d8332871ec9da0852",
          "dweb:/ipfs/QmRTunZrRtDaV2YH54TT49dScAKhcwL2QdmGNv9bhYF7iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x5c1df76e8c1d9b5c069e4c0e35c3ad3316530c382fe3ddc6c21584f5e56f0a7b",
        "urls": [
          "bzz-raw://1ff3429e0845d3266dd65ce097e194008511940a6f9fe651578b19737d37f2b1",
          "dweb:/ipfs/QmdnrZ7hr7BezqyhrmKTzTovbTjQYT5EcDYfvRYxxYFVeU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/CurrencyTransferLib.sol": {
        "keccak256": "0x4b0dc7c0ca9e463b2efbf3e8177a40bab333f5669ab368cad98534678a81cbc3",
        "urls": [
          "bzz-raw://1d5e91c28bb509afcbb3da66bbbf03465de5b168937b604f1cab63397472388a",
          "dweb:/ipfs/QmTqs9U5eWAQzJxVwD9pMQAtjXxK59cvJ4xzYMUnfVCsp5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "contracts/openzeppelin-presets/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x293d8d7a3502950df5b9d6d36fcad85ca758f06dd946cdc8645cac1aa56686c4",
        "urls": [
          "bzz-raw://3cd805dbdcf6b7cebcd47201badbd7f7464e49eec51c4e0627b899ece1b04790",
          "dweb:/ipfs/QmRP3JYK4wzDaRrk9so6m433TuqHW9axAXLLnQAjCp2Gs4"
        ],
        "license": "MIT"
      },
      "contracts/openzeppelin-presets/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/Staking20Base.sol",
    "id": 13736,
    "exportedSymbols": {
      "ContractMetadata": [
        34723
      ],
      "CurrencyTransferLib": [
        64493
      ],
      "IContractMetadata": [
        49679
      ],
      "IERC20": [
        31216
      ],
      "IERC20Metadata": [
        31235
      ],
      "IMulticall": [
        50168
      ],
      "IOwnable": [
        50418
      ],
      "IStaking20": [
        51361
      ],
      "IWETH": [
        55699
      ],
      "Multicall": [
        37872
      ],
      "Ownable": [
        38400
      ],
      "ReentrancyGuard": [
        76642
      ],
      "SafeERC20": [
        78527
      ],
      "SafeMath": [
        80850
      ],
      "Staking20": [
        45415
      ],
      "Staking20Base": [
        13735
      ],
      "TWAddress": [
        65067
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6773:35",
    "nodes": [
      {
        "id": 13397,
        "nodeType": "PragmaDirective",
        "src": "39:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 13398,
        "nodeType": "ImportDirective",
        "src": "86:43:35",
        "nodes": [],
        "absolutePath": "contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 34724,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13399,
        "nodeType": "ImportDirective",
        "src": "130:36:35",
        "nodes": [],
        "absolutePath": "contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 37873,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13400,
        "nodeType": "ImportDirective",
        "src": "167:34:35",
        "nodes": [],
        "absolutePath": "contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 38401,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13401,
        "nodeType": "ImportDirective",
        "src": "202:36:35",
        "nodes": [],
        "absolutePath": "contracts/extension/Staking20.sol",
        "file": "../extension/Staking20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 45416,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13402,
        "nodeType": "ImportDirective",
        "src": "240:37:35",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20.sol",
        "file": "../eip/interface/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 31217,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13403,
        "nodeType": "ImportDirective",
        "src": "278:45:35",
        "nodes": [],
        "absolutePath": "contracts/eip/interface/IERC20Metadata.sol",
        "file": "../eip/interface/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 31236,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13405,
        "nodeType": "ImportDirective",
        "src": "325:69:35",
        "nodes": [],
        "absolutePath": "contracts/lib/CurrencyTransferLib.sol",
        "file": "../lib/CurrencyTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13736,
        "sourceUnit": 64494,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13404,
              "name": "CurrencyTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64493,
              "src": "334:19:35",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                "typeString": "type(library CurrencyTransferLib)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13735,
        "nodeType": "ContractDefinition",
        "src": "1627:5184:35",
        "nodes": [
          {
            "id": 13417,
            "nodeType": "VariableDeclaration",
            "src": "1774:26:35",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 13415,
              "nodeType": "StructuredDocumentation",
              "src": "1707:62:35",
              "text": "@dev ERC20 Reward Token address. See {_mintRewards} below."
            },
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1789:11:35",
            "scope": 13735,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1774:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13420,
            "nodeType": "VariableDeclaration",
            "src": "1867:34:35",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 13418,
              "nodeType": "StructuredDocumentation",
              "src": "1807:55:35",
              "text": "@dev Total amount of reward tokens in the contract."
            },
            "mutability": "mutable",
            "name": "rewardTokenBalance",
            "nameLocation": "1883:18:35",
            "scope": 13735,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13419,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13473,
            "nodeType": "FunctionDefinition",
            "src": "1908:718:35",
            "nodes": [],
            "body": {
              "id": 13472,
              "nodeType": "Block",
              "src": "2360:266:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13452,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13424,
                        "src": "2382:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13451,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38393,
                      "src": "2370:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:26:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13454,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:26:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13456,
                        "name": "_timeUnit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13422,
                        "src": "2427:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "id": 13457,
                        "name": "_rewardRatioNumerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13426,
                        "src": "2438:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13458,
                        "name": "_rewardRatioDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13428,
                        "src": "2461:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13455,
                      "name": "_setStakingCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45255,
                      "src": "2406:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint80_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint80,uint256,uint256)"
                      }
                    },
                    "id": 13459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:79:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13460,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:79:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13462,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13432,
                          "src": "2504:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 13463,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13430,
                          "src": "2520:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2504:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420546f6b656e20616e64205374616b696e6720546f6b656e2063616e27742062652073616d652e",
                        "id": 13465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:47:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        },
                        "value": "Reward Token and Staking Token can't be same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e17add4d2cc0d52c03c959bc4a348eb0f9d1b38e50ee9eec58635f407746c04d",
                          "typeString": "literal_string \"Reward Token and Staking Token can't be same.\""
                        }
                      ],
                      "id": 13461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2496:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:87:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13467,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:87:35"
                },
                {
                  "expression": {
                    "id": 13470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13468,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13417,
                      "src": "2593:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13469,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13432,
                      "src": "2607:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2593:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13471,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:26:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13437,
                    "name": "_nativeTokenWrapper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13434,
                    "src": "2192:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 13438,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13430,
                    "src": "2225:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13440,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13430,
                            "src": "2267:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13439,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31235,
                          "src": "2252:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$31235_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 13441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2252:29:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$31235",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 13442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31234,
                      "src": "2252:38:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 13443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:40:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13445,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13432,
                            "src": "2321:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13444,
                          "name": "IERC20Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31235,
                          "src": "2306:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$31235_$",
                            "typeString": "type(contract IERC20Metadata)"
                          }
                        },
                        "id": 13446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2306:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$31235",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "id": 13447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31234,
                      "src": "2306:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 13448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:39:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 13449,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13436,
                  "name": "Staking20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45415,
                  "src": "2169:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2169:186:35"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13422,
                  "mutability": "mutable",
                  "name": "_timeUnit",
                  "nameLocation": "1936:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "1929:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 13421,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13424,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1963:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "1955:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13426,
                  "mutability": "mutable",
                  "name": "_rewardRatioNumerator",
                  "nameLocation": "1994:21:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "1986:29:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13428,
                  "mutability": "mutable",
                  "name": "_rewardRatioDenominator",
                  "nameLocation": "2033:23:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "2025:31:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13430,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2074:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "2066:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13432,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2105:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "2097:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13434,
                  "mutability": "mutable",
                  "name": "_nativeTokenWrapper",
                  "nameLocation": "2135:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13473,
                  "src": "2127:27:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:241:35"
            },
            "returnParameters": {
              "id": 13450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:35"
            },
            "scope": 13735,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13486,
            "nodeType": "FunctionDefinition",
            "src": "2702:129:35",
            "nodes": [],
            "body": {
              "id": 13485,
              "nodeType": "Block",
              "src": "2737:94:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2755:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2755:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 13480,
                          "name": "nativeTokenWrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44494,
                          "src": "2769:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2755:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e",
                        "id": 13482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:34:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        },
                        "value": "caller not native token wrapper."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff6f4088a14dc9fb6c418ac7dfb6aa2cb5091cf5954b1f93aeb20616b356a54",
                          "typeString": "literal_string \"caller not native token wrapper.\""
                        }
                      ],
                      "id": 13477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2747:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:77:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13484,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:77:35"
                }
              ]
            },
            "documentation": {
              "id": 13474,
              "nodeType": "StructuredDocumentation",
              "src": "2632:65:35",
              "text": "@dev Lets the contract receive ether to unwrap native tokens."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2709:2:35"
            },
            "returnParameters": {
              "id": 13476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:0:35"
            },
            "scope": 13735,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 13499,
            "nodeType": "FunctionDefinition",
            "src": "2880:165:35",
            "nodes": [],
            "body": {
              "id": 13498,
              "nodeType": "Block",
              "src": "2964:81:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13495,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13489,
                        "src": "2995:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13494,
                      "name": "_depositRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13626,
                      "src": "2974:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13497,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:29:35"
                }
              ]
            },
            "documentation": {
              "id": 13487,
              "nodeType": "StructuredDocumentation",
              "src": "2837:38:35",
              "text": "@dev Admin deposits reward tokens."
            },
            "functionSelector": "16c621e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13491,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76641,
                  "src": "2951:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2951:12:35"
              }
            ],
            "name": "depositRewardTokens",
            "nameLocation": "2889:19:35",
            "parameters": {
              "id": 13490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13489,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2917:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13499,
                  "src": "2909:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2908:17:35"
            },
            "returnParameters": {
              "id": 13493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:0:35"
            },
            "scope": 13735,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 13512,
            "nodeType": "FunctionDefinition",
            "src": "3105:159:35",
            "nodes": [],
            "body": {
              "id": 13511,
              "nodeType": "Block",
              "src": "3182:82:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13508,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13502,
                        "src": "3214:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13507,
                      "name": "_withdrawRewardTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13692,
                      "src": "3192:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:30:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13510,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:30:35"
                }
              ]
            },
            "documentation": {
              "id": 13500,
              "nodeType": "StructuredDocumentation",
              "src": "3051:49:35",
              "text": "@dev Admin can withdraw excess reward tokens."
            },
            "functionSelector": "cb43b2dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13505,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13504,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76641,
                  "src": "3169:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "3169:12:35"
              }
            ],
            "name": "withdrawRewardTokens",
            "nameLocation": "3114:20:35",
            "parameters": {
              "id": 13503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13502,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3143:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13512,
                  "src": "3135:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:17:35"
            },
            "returnParameters": {
              "id": 13506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:35"
            },
            "scope": 13735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 13522,
            "nodeType": "FunctionDefinition",
            "src": "3340:124:35",
            "nodes": [],
            "body": {
              "id": 13521,
              "nodeType": "Block",
              "src": "3422:42:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13519,
                    "name": "rewardTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13420,
                    "src": "3439:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13518,
                  "id": 13520,
                  "nodeType": "Return",
                  "src": "3432:25:35"
                }
              ]
            },
            "baseFunctions": [
              45400
            ],
            "documentation": {
              "id": 13513,
              "nodeType": "StructuredDocumentation",
              "src": "3270:65:35",
              "text": "@notice View total rewards available in the staking contract."
            },
            "functionSelector": "93ce5343",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardTokenBalance",
            "nameLocation": "3349:21:35",
            "overrides": {
              "id": 13515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3395:8:35"
            },
            "parameters": {
              "id": 13514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:2:35"
            },
            "returnParameters": {
              "id": 13518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13522,
                  "src": "3413:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:9:35"
            },
            "scope": 13735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 13556,
            "nodeType": "FunctionDefinition",
            "src": "3891:401:35",
            "nodes": [],
            "body": {
              "id": 13555,
              "nodeType": "Block",
              "src": "3974:318:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13532,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13527,
                          "src": "3992:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 13533,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13420,
                          "src": "4004:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3992:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682072657761726420746f6b656e73",
                        "id": 13535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4024:26:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        },
                        "value": "Not enough reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9f034c0209f69095b9daea6fa2bfb48319f16f6cf36946d2a2348944ff59120",
                          "typeString": "literal_string \"Not enough reward tokens\""
                        }
                      ],
                      "id": 13531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3984:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3984:67:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13537,
                  "nodeType": "ExpressionStatement",
                  "src": "3984:67:35"
                },
                {
                  "expression": {
                    "id": 13540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13538,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "4061:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 13539,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13527,
                      "src": "4083:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4061:30:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13541,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13545,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13417,
                        "src": "4162:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13548,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4195:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 13547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4187:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13546,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4187:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4187:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13550,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13525,
                        "src": "4214:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13551,
                        "name": "_rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13527,
                        "src": "4235:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13552,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44494,
                        "src": "4257:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13542,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4101:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 13544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64384,
                      "src": "4101:47:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 13553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:184:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13554,
                  "nodeType": "ExpressionStatement",
                  "src": "4101:184:35"
                }
              ]
            },
            "baseFunctions": [
              45408
            ],
            "documentation": {
              "id": 13523,
              "nodeType": "StructuredDocumentation",
              "src": "3647:239:35",
              "text": "  @dev    Mint ERC20 rewards to the staker. Override for custom logic.\n  @param _staker    Address for which to calculated rewards.\n  @param _rewards   Amount of tokens to be given out as reward."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintRewards",
            "nameLocation": "3900:12:35",
            "overrides": {
              "id": 13529,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:35"
            },
            "parameters": {
              "id": 13528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13525,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3921:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13556,
                  "src": "3913:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13527,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nameLocation": "3938:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13556,
                  "src": "3930:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:35:35"
            },
            "returnParameters": {
              "id": 13530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3974:0:35"
            },
            "scope": 13735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13626,
            "nodeType": "FunctionDefinition",
            "src": "4558:660:35",
            "nodes": [],
            "body": {
              "id": 13625,
              "nodeType": "Block",
              "src": "4622:596:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4640:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4640:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13565,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38352,
                            "src": "4654:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 13566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4654:7:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4640:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 13568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4663:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 13562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4632:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:48:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13570,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:48:35"
                },
                {
                  "assignments": [
                    13572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13572,
                      "mutability": "mutable",
                      "name": "_rewardToken",
                      "nameLocation": "4699:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 13625,
                      "src": "4691:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13571,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13580,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 13576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 13573,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13417,
                        "src": "4714:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 13574,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64493,
                          "src": "4729:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 13575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64261,
                        "src": "4729:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4714:47:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 13578,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13417,
                      "src": "4785:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4714:82:35",
                    "trueExpression": {
                      "id": 13577,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44494,
                      "src": "4764:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4691:105:35"
                },
                {
                  "assignments": [
                    13582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13582,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4815:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 13625,
                      "src": "4807:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4807:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13592,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13589,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4870:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 13588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4862:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4862:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4862:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13584,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13572,
                            "src": "4838:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13583,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31216,
                          "src": "4831:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 13585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4831:20:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31216",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31161,
                      "src": "4831:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:45:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4807:69:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13596,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13417,
                        "src": "4947:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4972:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4972:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13601,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5004:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 13600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4996:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13599,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4996:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4996:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13603,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13559,
                        "src": "5023:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13604,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44494,
                        "src": "5044:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13593,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "4886:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 13595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64384,
                      "src": "4886:47:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 13605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:186:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13606,
                  "nodeType": "ExpressionStatement",
                  "src": "4886:186:35"
                },
                {
                  "assignments": [
                    13608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13608,
                      "mutability": "mutable",
                      "name": "actualAmount",
                      "nameLocation": "5090:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 13625,
                      "src": "5082:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5082:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13620,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 13615,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5144:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Staking20Base_$13735",
                                "typeString": "contract Staking20Base"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Staking20Base_$13735",
                                "typeString": "contract Staking20Base"
                              }
                            ],
                            "id": 13614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5136:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13613,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5136:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5136:13:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 13610,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13572,
                              "src": "5112:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13609,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31216,
                            "src": "5105:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 13611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5105:20:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$31216",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 13612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31161,
                        "src": "5105:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 13617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5105:45:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 13618,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13582,
                      "src": "5153:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5105:61:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5082:84:35"
                },
                {
                  "expression": {
                    "id": 13623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13621,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "5177:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13622,
                      "name": "actualAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13608,
                      "src": "5199:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5177:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13624,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:34:35"
                }
              ]
            },
            "documentation": {
              "id": 13557,
              "nodeType": "StructuredDocumentation",
              "src": "4486:67:35",
              "text": "@dev Admin deposits reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositRewardTokens",
            "nameLocation": "4567:20:35",
            "parameters": {
              "id": 13560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13559,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4596:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13626,
                  "src": "4588:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4587:17:35"
            },
            "returnParameters": {
              "id": 13561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4622:0:35"
            },
            "scope": 13735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13692,
            "nodeType": "FunctionDefinition",
            "src": "5307:866:35",
            "nodes": [],
            "body": {
              "id": 13691,
              "nodeType": "Block",
              "src": "5372:801:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13633,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5390:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5390:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13635,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38352,
                            "src": "5404:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 13636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5404:7:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5390:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 13638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5413:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 13632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5382:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5382:48:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13640,
                  "nodeType": "ExpressionStatement",
                  "src": "5382:48:35"
                },
                {
                  "expression": {
                    "id": 13650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13641,
                      "name": "rewardTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "5500:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13642,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13629,
                          "src": "5521:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 13643,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13420,
                          "src": "5531:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5521:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13646,
                          "name": "rewardTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13420,
                          "src": "5556:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 13647,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13629,
                          "src": "5577:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5556:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 13649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5521:63:35",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 13645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5552:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5500:84:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13651,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:84:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13655,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13417,
                        "src": "5656:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13658,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5689:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking20Base_$13735",
                              "typeString": "contract Staking20Base"
                            }
                          ],
                          "id": 13657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5681:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5681:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5681:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5708:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5708:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13662,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13629,
                        "src": "5732:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13663,
                        "name": "nativeTokenWrapper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44494,
                        "src": "5753:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13652,
                        "name": "CurrencyTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64493,
                        "src": "5595:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                          "typeString": "type(library CurrencyTransferLib)"
                        }
                      },
                      "id": 13654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCurrencyWithWrapper",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64384,
                      "src": "5595:47:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,uint256,address)"
                      }
                    },
                    "id": 13664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5595:186:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13665,
                  "nodeType": "ExpressionStatement",
                  "src": "5595:186:35"
                },
                {
                  "assignments": [
                    13667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13667,
                      "mutability": "mutable",
                      "name": "_stakingToken",
                      "nameLocation": "5910:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 13691,
                      "src": "5902:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13666,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5902:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13675,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 13671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 13668,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44497,
                        "src": "5926:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 13669,
                          "name": "CurrencyTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64493,
                          "src": "5942:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyTransferLib_$64493_$",
                            "typeString": "type(library CurrencyTransferLib)"
                          }
                        },
                        "id": 13670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64261,
                        "src": "5942:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5926:48:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 13673,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44497,
                      "src": "5998:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5926:84:35",
                    "trueExpression": {
                      "id": 13672,
                      "name": "nativeTokenWrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44494,
                      "src": "5977:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5902:108:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13683,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6081:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staking20Base_$13735",
                                    "typeString": "contract Staking20Base"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Staking20Base_$13735",
                                    "typeString": "contract Staking20Base"
                                  }
                                ],
                                "id": 13682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6073:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13681,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6073:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6073:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 13678,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13667,
                                  "src": "6048:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 13677,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31216,
                                "src": "6041:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$31216_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 13679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6041:21:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$31216",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 13680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31161,
                            "src": "6041:31:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 13685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6041:46:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 13686,
                          "name": "stakingTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44509,
                          "src": "6091:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6041:69:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6720746f6b656e2062616c616e636520726564756365642e",
                        "id": 13688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6124:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        },
                        "value": "Staking token balance reduced."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d8abe09a27ba91bde5120f467ce94c1760c9d13c295338fa77006f5ceaa9372",
                          "typeString": "literal_string \"Staking token balance reduced.\""
                        }
                      ],
                      "id": 13676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6020:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13690,
                  "nodeType": "ExpressionStatement",
                  "src": "6020:146:35"
                }
              ]
            },
            "documentation": {
              "id": 13627,
              "nodeType": "StructuredDocumentation",
              "src": "5224:78:35",
              "text": "@dev Admin can withdraw excess reward tokens -- override for custom logic."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawRewardTokens",
            "nameLocation": "5316:21:35",
            "parameters": {
              "id": 13630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13629,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5346:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 13692,
                  "src": "5338:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:17:35"
            },
            "returnParameters": {
              "id": 13631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5372:0:35"
            },
            "scope": 13735,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13706,
            "nodeType": "FunctionDefinition",
            "src": "6268:125:35",
            "nodes": [],
            "body": {
              "id": 13705,
              "nodeType": "Block",
              "src": "6348:45:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13699,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6365:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6365:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 13701,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "6379:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 13702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6379:7:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6365:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13698,
                  "id": 13704,
                  "nodeType": "Return",
                  "src": "6358:28:35"
                }
              ]
            },
            "baseFunctions": [
              45414
            ],
            "documentation": {
              "id": 13693,
              "nodeType": "StructuredDocumentation",
              "src": "6179:84:35",
              "text": "@dev Returns whether staking restrictions can be set in given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetStakeConditions",
            "nameLocation": "6277:22:35",
            "overrides": {
              "id": 13695,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6324:8:35"
            },
            "parameters": {
              "id": 13694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6299:2:35"
            },
            "returnParameters": {
              "id": 13698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13706,
                  "src": "6342:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6342:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6341:6:35"
            },
            "scope": 13735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13720,
            "nodeType": "FunctionDefinition",
            "src": "6489:121:35",
            "nodes": [],
            "body": {
              "id": 13719,
              "nodeType": "Block",
              "src": "6565:45:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13713,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6582:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6582:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 13715,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "6596:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 13716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6596:7:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6582:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13712,
                  "id": 13718,
                  "nodeType": "Return",
                  "src": "6575:28:35"
                }
              ]
            },
            "baseFunctions": [
              34722
            ],
            "documentation": {
              "id": 13707,
              "nodeType": "StructuredDocumentation",
              "src": "6399:85:35",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "6498:18:35",
            "overrides": {
              "id": 13709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6541:8:35"
            },
            "parameters": {
              "id": 13708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6516:2:35"
            },
            "returnParameters": {
              "id": 13712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13720,
                  "src": "6559:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6558:6:35"
            },
            "scope": 13735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 13734,
            "nodeType": "FunctionDefinition",
            "src": "6694:115:35",
            "nodes": [],
            "body": {
              "id": 13733,
              "nodeType": "Block",
              "src": "6764:45:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13727,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6781:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6781:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 13729,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "6795:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 13730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6795:7:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6781:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13726,
                  "id": 13732,
                  "nodeType": "Return",
                  "src": "6774:28:35"
                }
              ]
            },
            "baseFunctions": [
              38399
            ],
            "documentation": {
              "id": 13721,
              "nodeType": "StructuredDocumentation",
              "src": "6616:73:35",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "6703:12:35",
            "overrides": {
              "id": 13723,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6740:8:35"
            },
            "parameters": {
              "id": 13722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6715:2:35"
            },
            "returnParameters": {
              "id": 13726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13734,
                  "src": "6758:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6758:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6757:6:35"
            },
            "scope": 13735,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13407,
              "name": "ContractMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34723,
              "src": "1653:16:35"
            },
            "id": 13408,
            "nodeType": "InheritanceSpecifier",
            "src": "1653:16:35"
          },
          {
            "baseName": {
              "id": 13409,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "1671:9:35"
            },
            "id": 13410,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:9:35"
          },
          {
            "baseName": {
              "id": 13411,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38400,
              "src": "1682:7:35"
            },
            "id": 13412,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:7:35"
          },
          {
            "baseName": {
              "id": 13413,
              "name": "Staking20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45415,
              "src": "1691:9:35"
            },
            "id": 13414,
            "nodeType": "InheritanceSpecifier",
            "src": "1691:9:35"
          }
        ],
        "canonicalName": "Staking20Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13406,
          "nodeType": "StructuredDocumentation",
          "src": "1299:56:35",
          "text": "note: This contract is provided as a base contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13735,
          45415,
          51361,
          76642,
          38400,
          50418,
          37872,
          50168,
          34723,
          49679
        ],
        "name": "Staking20Base",
        "nameLocation": "1636:13:35",
        "scope": 13736,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 35
}